function _mergeNamespaces(o,e){for(var s=0;s<e.length;s++){const i=e[s];if(typeof i!="string"&&!Array.isArray(i)){for(const a in i)if(a!=="default"&&!(a in o)){const d=Object.getOwnPropertyDescriptor(i,a);d&&Object.defineProperty(o,a,d.get?d:{enumerable:!0,get:()=>i[a]})}}}return Object.freeze(Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const d of a)if(d.type==="childList")for(const h of d.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function s(a){const d={};return a.integrity&&(d.integrity=a.integrity),a.referrerPolicy&&(d.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?d.credentials="include":a.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function i(a){if(a.ep)return;a.ep=!0;const d=s(a);fetch(a.href,d)}})();var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(o){return o&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o}function getAugmentedNamespace(o){if(o.__esModule)return o;var e=o.default;if(typeof e=="function"){var s=function i(){return this instanceof i?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};s.prototype=e.prototype}else s={};return Object.defineProperty(s,"__esModule",{value:!0}),Object.keys(o).forEach(function(i){var a=Object.getOwnPropertyDescriptor(o,i);Object.defineProperty(s,i,a.get?a:{enumerable:!0,get:function(){return o[i]}})}),s}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l$1=Symbol.for("react.element"),n$1=Symbol.for("react.portal"),p$3=Symbol.for("react.fragment"),q$1=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v$1=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z$1=Symbol.iterator;function A$1(o){return o===null||typeof o!="object"?null:(o=z$1&&o[z$1]||o["@@iterator"],typeof o=="function"?o:null)}var B$1={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C$1=Object.assign,D$1={};function E$1(o,e,s){this.props=o,this.context=e,this.refs=D$1,this.updater=s||B$1}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(o,e){if(typeof o!="object"&&typeof o!="function"&&o!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,o,e,"setState")};E$1.prototype.forceUpdate=function(o){this.updater.enqueueForceUpdate(this,o,"forceUpdate")};function F(){}F.prototype=E$1.prototype;function G$1(o,e,s){this.props=o,this.context=e,this.refs=D$1,this.updater=s||B$1}var H$1=G$1.prototype=new F;H$1.constructor=G$1;C$1(H$1,E$1.prototype);H$1.isPureReactComponent=!0;var I$1=Array.isArray,J=Object.prototype.hasOwnProperty,K$1={current:null},L$1={key:!0,ref:!0,__self:!0,__source:!0};function M$1(o,e,s){var i,a={},d=null,h=null;if(e!=null)for(i in e.ref!==void 0&&(h=e.ref),e.key!==void 0&&(d=""+e.key),e)J.call(e,i)&&!L$1.hasOwnProperty(i)&&(a[i]=e[i]);var b=arguments.length-2;if(b===1)a.children=s;else if(1<b){for(var _=Array(b),j=0;j<b;j++)_[j]=arguments[j+2];a.children=_}if(o&&o.defaultProps)for(i in b=o.defaultProps,b)a[i]===void 0&&(a[i]=b[i]);return{$$typeof:l$1,type:o,key:d,ref:h,props:a,_owner:K$1.current}}function N$1(o,e){return{$$typeof:l$1,type:o.type,key:e,ref:o.ref,props:o.props,_owner:o._owner}}function O$1(o){return typeof o=="object"&&o!==null&&o.$$typeof===l$1}function escape(o){var e={"=":"=0",":":"=2"};return"$"+o.replace(/[=:]/g,function(s){return e[s]})}var P$1=/\/+/g;function Q$1(o,e){return typeof o=="object"&&o!==null&&o.key!=null?escape(""+o.key):e.toString(36)}function R$1(o,e,s,i,a){var d=typeof o;(d==="undefined"||d==="boolean")&&(o=null);var h=!1;if(o===null)h=!0;else switch(d){case"string":case"number":h=!0;break;case"object":switch(o.$$typeof){case l$1:case n$1:h=!0}}if(h)return h=o,a=a(h),o=i===""?"."+Q$1(h,0):i,I$1(a)?(s="",o!=null&&(s=o.replace(P$1,"$&/")+"/"),R$1(a,e,s,"",function(j){return j})):a!=null&&(O$1(a)&&(a=N$1(a,s+(!a.key||h&&h.key===a.key?"":(""+a.key).replace(P$1,"$&/")+"/")+o)),e.push(a)),1;if(h=0,i=i===""?".":i+":",I$1(o))for(var b=0;b<o.length;b++){d=o[b];var _=i+Q$1(d,b);h+=R$1(d,e,s,_,a)}else if(_=A$1(o),typeof _=="function")for(o=_.call(o),b=0;!(d=o.next()).done;)d=d.value,_=i+Q$1(d,b++),h+=R$1(d,e,s,_,a);else if(d==="object")throw e=String(o),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return h}function S$1(o,e,s){if(o==null)return o;var i=[],a=0;return R$1(o,i,"","",function(d){return e.call(s,d,a++)}),i}function T$1(o){if(o._status===-1){var e=o._result;e=e(),e.then(function(s){(o._status===0||o._status===-1)&&(o._status=1,o._result=s)},function(s){(o._status===0||o._status===-1)&&(o._status=2,o._result=s)}),o._status===-1&&(o._status=0,o._result=e)}if(o._status===1)return o._result.default;throw o._result}var U$1={current:null},V$1={transition:null},W$1={ReactCurrentDispatcher:U$1,ReactCurrentBatchConfig:V$1,ReactCurrentOwner:K$1};react_production_min.Children={map:S$1,forEach:function(o,e,s){S$1(o,function(){e.apply(this,arguments)},s)},count:function(o){var e=0;return S$1(o,function(){e++}),e},toArray:function(o){return S$1(o,function(e){return e})||[]},only:function(o){if(!O$1(o))throw Error("React.Children.only expected to receive a single React element child.");return o}};react_production_min.Component=E$1;react_production_min.Fragment=p$3;react_production_min.Profiler=r;react_production_min.PureComponent=G$1;react_production_min.StrictMode=q$1;react_production_min.Suspense=w;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$1;react_production_min.cloneElement=function(o,e,s){if(o==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+o+".");var i=C$1({},o.props),a=o.key,d=o.ref,h=o._owner;if(e!=null){if(e.ref!==void 0&&(d=e.ref,h=K$1.current),e.key!==void 0&&(a=""+e.key),o.type&&o.type.defaultProps)var b=o.type.defaultProps;for(_ in e)J.call(e,_)&&!L$1.hasOwnProperty(_)&&(i[_]=e[_]===void 0&&b!==void 0?b[_]:e[_])}var _=arguments.length-2;if(_===1)i.children=s;else if(1<_){b=Array(_);for(var j=0;j<_;j++)b[j]=arguments[j+2];i.children=b}return{$$typeof:l$1,type:o.type,key:a,ref:d,props:i,_owner:h}};react_production_min.createContext=function(o){return o={$$typeof:u,_currentValue:o,_currentValue2:o,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},o.Provider={$$typeof:t,_context:o},o.Consumer=o};react_production_min.createElement=M$1;react_production_min.createFactory=function(o){var e=M$1.bind(null,o);return e.type=o,e};react_production_min.createRef=function(){return{current:null}};react_production_min.forwardRef=function(o){return{$$typeof:v$1,render:o}};react_production_min.isValidElement=O$1;react_production_min.lazy=function(o){return{$$typeof:y,_payload:{_status:-1,_result:o},_init:T$1}};react_production_min.memo=function(o,e){return{$$typeof:x,type:o,compare:e===void 0?null:e}};react_production_min.startTransition=function(o){var e=V$1.transition;V$1.transition={};try{o()}finally{V$1.transition=e}};react_production_min.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};react_production_min.useCallback=function(o,e){return U$1.current.useCallback(o,e)};react_production_min.useContext=function(o){return U$1.current.useContext(o)};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(o){return U$1.current.useDeferredValue(o)};react_production_min.useEffect=function(o,e){return U$1.current.useEffect(o,e)};react_production_min.useId=function(){return U$1.current.useId()};react_production_min.useImperativeHandle=function(o,e,s){return U$1.current.useImperativeHandle(o,e,s)};react_production_min.useInsertionEffect=function(o,e){return U$1.current.useInsertionEffect(o,e)};react_production_min.useLayoutEffect=function(o,e){return U$1.current.useLayoutEffect(o,e)};react_production_min.useMemo=function(o,e){return U$1.current.useMemo(o,e)};react_production_min.useReducer=function(o,e,s){return U$1.current.useReducer(o,e,s)};react_production_min.useRef=function(o){return U$1.current.useRef(o)};react_production_min.useState=function(o){return U$1.current.useState(o)};react_production_min.useSyncExternalStore=function(o,e,s){return U$1.current.useSyncExternalStore(o,e,s)};react_production_min.useTransition=function(){return U$1.current.useTransition()};react_production_min.version="18.2.0";react.exports=react_production_min;var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=reactExports,k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m$1=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$2={key:!0,ref:!0,__self:!0,__source:!0};function q(o,e,s){var i,a={},d=null,h=null;s!==void 0&&(d=""+s),e.key!==void 0&&(d=""+e.key),e.ref!==void 0&&(h=e.ref);for(i in e)m$1.call(e,i)&&!p$2.hasOwnProperty(i)&&(a[i]=e[i]);if(o&&o.defaultProps)for(i in e=o.defaultProps,e)a[i]===void 0&&(a[i]=e[i]);return{$$typeof:k,type:o,key:d,ref:h,props:a,_owner:n.current}}reactJsxRuntime_production_min.Fragment=l;reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;jsxRuntime.exports=reactJsxRuntime_production_min;var jsxRuntimeExports=jsxRuntime.exports,client={},reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(o){function e(vt,Tt){var Et=vt.length;vt.push(Tt);e:for(;0<Et;){var Ct=Et-1>>>1,kt=vt[Ct];if(0<a(kt,Tt))vt[Ct]=Tt,vt[Et]=kt,Et=Ct;else break e}}function s(vt){return vt.length===0?null:vt[0]}function i(vt){if(vt.length===0)return null;var Tt=vt[0],Et=vt.pop();if(Et!==Tt){vt[0]=Et;e:for(var Ct=0,kt=vt.length,Dt=kt>>>1;Ct<Dt;){var Rt=2*(Ct+1)-1,Ot=vt[Rt],zt=Rt+1,Bt=vt[zt];if(0>a(Ot,Et))zt<kt&&0>a(Bt,Ot)?(vt[Ct]=Bt,vt[zt]=Et,Ct=zt):(vt[Ct]=Ot,vt[Rt]=Et,Ct=Rt);else if(zt<kt&&0>a(Bt,Et))vt[Ct]=Bt,vt[zt]=Et,Ct=zt;else break e}}return Tt}function a(vt,Tt){var Et=vt.sortIndex-Tt.sortIndex;return Et!==0?Et:vt.id-Tt.id}if(typeof performance=="object"&&typeof performance.now=="function"){var d=performance;o.unstable_now=function(){return d.now()}}else{var h=Date,b=h.now();o.unstable_now=function(){return h.now()-b}}var _=[],j=[],_e=1,g=null,c=3,$=!1,et=!1,tt=!1,nt=typeof setTimeout=="function"?setTimeout:null,rt=typeof clearTimeout=="function"?clearTimeout:null,ot=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function st(vt){for(var Tt=s(j);Tt!==null;){if(Tt.callback===null)i(j);else if(Tt.startTime<=vt)i(j),Tt.sortIndex=Tt.expirationTime,e(_,Tt);else break;Tt=s(j)}}function it(vt){if(tt=!1,st(vt),!et)if(s(_)!==null)et=!0,mt(at);else{var Tt=s(j);Tt!==null&&bt(it,Tt.startTime-vt)}}function at(vt,Tt){et=!1,tt&&(tt=!1,rt(ct),ct=-1),$=!0;var Et=c;try{for(st(Tt),g=s(_);g!==null&&(!(g.expirationTime>Tt)||vt&&!yt());){var Ct=g.callback;if(typeof Ct=="function"){g.callback=null,c=g.priorityLevel;var kt=Ct(g.expirationTime<=Tt);Tt=o.unstable_now(),typeof kt=="function"?g.callback=kt:g===s(_)&&i(_),st(Tt)}else i(_);g=s(_)}if(g!==null)var Dt=!0;else{var Rt=s(j);Rt!==null&&bt(it,Rt.startTime-Tt),Dt=!1}return Dt}finally{g=null,c=Et,$=!1}}var lt=!1,ut=null,ct=-1,pt=5,ht=-1;function yt(){return!(o.unstable_now()-ht<pt)}function xt(){if(ut!==null){var vt=o.unstable_now();ht=vt;var Tt=!0;try{Tt=ut(!0,vt)}finally{Tt?ft():(lt=!1,ut=null)}}else lt=!1}var ft;if(typeof ot=="function")ft=function(){ot(xt)};else if(typeof MessageChannel<"u"){var wt=new MessageChannel,dt=wt.port2;wt.port1.onmessage=xt,ft=function(){dt.postMessage(null)}}else ft=function(){nt(xt,0)};function mt(vt){ut=vt,lt||(lt=!0,ft())}function bt(vt,Tt){ct=nt(function(){vt(o.unstable_now())},Tt)}o.unstable_IdlePriority=5,o.unstable_ImmediatePriority=1,o.unstable_LowPriority=4,o.unstable_NormalPriority=3,o.unstable_Profiling=null,o.unstable_UserBlockingPriority=2,o.unstable_cancelCallback=function(vt){vt.callback=null},o.unstable_continueExecution=function(){et||$||(et=!0,mt(at))},o.unstable_forceFrameRate=function(vt){0>vt||125<vt?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):pt=0<vt?Math.floor(1e3/vt):5},o.unstable_getCurrentPriorityLevel=function(){return c},o.unstable_getFirstCallbackNode=function(){return s(_)},o.unstable_next=function(vt){switch(c){case 1:case 2:case 3:var Tt=3;break;default:Tt=c}var Et=c;c=Tt;try{return vt()}finally{c=Et}},o.unstable_pauseExecution=function(){},o.unstable_requestPaint=function(){},o.unstable_runWithPriority=function(vt,Tt){switch(vt){case 1:case 2:case 3:case 4:case 5:break;default:vt=3}var Et=c;c=vt;try{return Tt()}finally{c=Et}},o.unstable_scheduleCallback=function(vt,Tt,Et){var Ct=o.unstable_now();switch(typeof Et=="object"&&Et!==null?(Et=Et.delay,Et=typeof Et=="number"&&0<Et?Ct+Et:Ct):Et=Ct,vt){case 1:var kt=-1;break;case 2:kt=250;break;case 5:kt=1073741823;break;case 4:kt=1e4;break;default:kt=5e3}return kt=Et+kt,vt={id:_e++,callback:Tt,priorityLevel:vt,startTime:Et,expirationTime:kt,sortIndex:-1},Et>Ct?(vt.sortIndex=Et,e(j,vt),s(_)===null&&vt===s(j)&&(tt?(rt(ct),ct=-1):tt=!0,bt(it,Et-Ct))):(vt.sortIndex=kt,e(_,vt),et||$||(et=!0,mt(at))),vt},o.unstable_shouldYield=yt,o.unstable_wrapCallback=function(vt){var Tt=c;return function(){var Et=c;c=Tt;try{return vt.apply(this,arguments)}finally{c=Et}}}})(scheduler_production_min);scheduler.exports=scheduler_production_min;var schedulerExports=scheduler.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aa=reactExports,ca=schedulerExports;function p$1(o){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+o,s=1;s<arguments.length;s++)e+="&args[]="+encodeURIComponent(arguments[s]);return"Minified React error #"+o+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(o,e){ha(o,e),ha(o+"Capture",e)}function ha(o,e){for(ea[o]=e,o=0;o<e.length;o++)da.add(e[o])}var ia=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function oa(o){return ja.call(ma,o)?!0:ja.call(la,o)?!1:ka.test(o)?ma[o]=!0:(la[o]=!0,!1)}function pa(o,e,s,i){if(s!==null&&s.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return i?!1:s!==null?!s.acceptsBooleans:(o=o.toLowerCase().slice(0,5),o!=="data-"&&o!=="aria-");default:return!1}}function qa(o,e,s,i){if(e===null||typeof e>"u"||pa(o,e,s,i))return!0;if(i)return!1;if(s!==null)switch(s.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function v(o,e,s,i,a,d,h){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=i,this.attributeNamespace=a,this.mustUseProperty=s,this.propertyName=o,this.type=e,this.sanitizeURL=d,this.removeEmptyString=h}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(o){z[o]=new v(o,0,!1,o,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(o){var e=o[0];z[e]=new v(e,1,!1,o[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(o){z[o]=new v(o,2,!1,o.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(o){z[o]=new v(o,2,!1,o,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(o){z[o]=new v(o,3,!1,o.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(o){z[o]=new v(o,3,!0,o,null,!1,!1)});["capture","download"].forEach(function(o){z[o]=new v(o,4,!1,o,null,!1,!1)});["cols","rows","size","span"].forEach(function(o){z[o]=new v(o,6,!1,o,null,!1,!1)});["rowSpan","start"].forEach(function(o){z[o]=new v(o,5,!1,o.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(o){return o[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(o){var e=o.replace(ra,sa);z[e]=new v(e,1,!1,o,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(o){var e=o.replace(ra,sa);z[e]=new v(e,1,!1,o,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(o){var e=o.replace(ra,sa);z[e]=new v(e,1,!1,o,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(o){z[o]=new v(o,1,!1,o.toLowerCase(),null,!1,!1)});z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(o){z[o]=new v(o,1,!1,o.toLowerCase(),null,!0,!0)});function ta(o,e,s,i){var a=z.hasOwnProperty(e)?z[e]:null;(a!==null?a.type!==0:i||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(qa(e,s,a,i)&&(s=null),i||a===null?oa(e)&&(s===null?o.removeAttribute(e):o.setAttribute(e,""+s)):a.mustUseProperty?o[a.propertyName]=s===null?a.type===3?!1:"":s:(e=a.attributeName,i=a.attributeNamespace,s===null?o.removeAttribute(e):(a=a.type,s=a===3||a===4&&s===!0?"":""+s,i?o.setAttributeNS(i,e,s):o.setAttribute(e,s))))}var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy"),Ia=Symbol.for("react.offscreen"),Ja=Symbol.iterator;function Ka(o){return o===null||typeof o!="object"?null:(o=Ja&&o[Ja]||o["@@iterator"],typeof o=="function"?o:null)}var A=Object.assign,La;function Ma(o){if(La===void 0)try{throw Error()}catch(s){var e=s.stack.trim().match(/\n( *(at )?)/);La=e&&e[1]||""}return`
`+La+o}var Na=!1;function Oa(o,e){if(!o||Na)return"";Na=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(j){var i=j}Reflect.construct(o,[],e)}else{try{e.call()}catch(j){i=j}o.call(e.prototype)}else{try{throw Error()}catch(j){i=j}o()}}catch(j){if(j&&i&&typeof j.stack=="string"){for(var a=j.stack.split(`
`),d=i.stack.split(`
`),h=a.length-1,b=d.length-1;1<=h&&0<=b&&a[h]!==d[b];)b--;for(;1<=h&&0<=b;h--,b--)if(a[h]!==d[b]){if(h!==1||b!==1)do if(h--,b--,0>b||a[h]!==d[b]){var _=`
`+a[h].replace(" at new "," at ");return o.displayName&&_.includes("<anonymous>")&&(_=_.replace("<anonymous>",o.displayName)),_}while(1<=h&&0<=b);break}}}finally{Na=!1,Error.prepareStackTrace=s}return(o=o?o.displayName||o.name:"")?Ma(o):""}function Pa(o){switch(o.tag){case 5:return Ma(o.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return o=Oa(o.type,!1),o;case 11:return o=Oa(o.type.render,!1),o;case 1:return o=Oa(o.type,!0),o;default:return""}}function Qa(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case Ca:return(o.displayName||"Context")+".Consumer";case Ba:return(o._context.displayName||"Context")+".Provider";case Da:var e=o.render;return o=o.displayName,o||(o=e.displayName||e.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case Ga:return e=o.displayName||null,e!==null?e:Qa(o.type)||"Memo";case Ha:e=o._payload,o=o._init;try{return Qa(o(e))}catch{}}return null}function Ra(o){var e=o.type;switch(o.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=e.render,o=o.displayName||o.name||"",e.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(e);case 8:return e===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Sa(o){switch(typeof o){case"boolean":case"number":case"string":case"undefined":return o;case"object":return o;default:return""}}function Ta(o){var e=o.type;return(o=o.nodeName)&&o.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function Ua(o){var e=Ta(o)?"checked":"value",s=Object.getOwnPropertyDescriptor(o.constructor.prototype,e),i=""+o[e];if(!o.hasOwnProperty(e)&&typeof s<"u"&&typeof s.get=="function"&&typeof s.set=="function"){var a=s.get,d=s.set;return Object.defineProperty(o,e,{configurable:!0,get:function(){return a.call(this)},set:function(h){i=""+h,d.call(this,h)}}),Object.defineProperty(o,e,{enumerable:s.enumerable}),{getValue:function(){return i},setValue:function(h){i=""+h},stopTracking:function(){o._valueTracker=null,delete o[e]}}}}function Va(o){o._valueTracker||(o._valueTracker=Ua(o))}function Wa(o){if(!o)return!1;var e=o._valueTracker;if(!e)return!0;var s=e.getValue(),i="";return o&&(i=Ta(o)?o.checked?"true":"false":o.value),o=i,o!==s?(e.setValue(o),!0):!1}function Xa(o){if(o=o||(typeof document<"u"?document:void 0),typeof o>"u")return null;try{return o.activeElement||o.body}catch{return o.body}}function Ya(o,e){var s=e.checked;return A({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:s??o._wrapperState.initialChecked})}function Za(o,e){var s=e.defaultValue==null?"":e.defaultValue,i=e.checked!=null?e.checked:e.defaultChecked;s=Sa(e.value!=null?e.value:s),o._wrapperState={initialChecked:i,initialValue:s,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function ab(o,e){e=e.checked,e!=null&&ta(o,"checked",e,!1)}function bb(o,e){ab(o,e);var s=Sa(e.value),i=e.type;if(s!=null)i==="number"?(s===0&&o.value===""||o.value!=s)&&(o.value=""+s):o.value!==""+s&&(o.value=""+s);else if(i==="submit"||i==="reset"){o.removeAttribute("value");return}e.hasOwnProperty("value")?cb(o,e.type,s):e.hasOwnProperty("defaultValue")&&cb(o,e.type,Sa(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(o.defaultChecked=!!e.defaultChecked)}function db(o,e,s){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var i=e.type;if(!(i!=="submit"&&i!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+o._wrapperState.initialValue,s||e===o.value||(o.value=e),o.defaultValue=e}s=o.name,s!==""&&(o.name=""),o.defaultChecked=!!o._wrapperState.initialChecked,s!==""&&(o.name=s)}function cb(o,e,s){(e!=="number"||Xa(o.ownerDocument)!==o)&&(s==null?o.defaultValue=""+o._wrapperState.initialValue:o.defaultValue!==""+s&&(o.defaultValue=""+s))}var eb=Array.isArray;function fb(o,e,s,i){if(o=o.options,e){e={};for(var a=0;a<s.length;a++)e["$"+s[a]]=!0;for(s=0;s<o.length;s++)a=e.hasOwnProperty("$"+o[s].value),o[s].selected!==a&&(o[s].selected=a),a&&i&&(o[s].defaultSelected=!0)}else{for(s=""+Sa(s),e=null,a=0;a<o.length;a++){if(o[a].value===s){o[a].selected=!0,i&&(o[a].defaultSelected=!0);return}e!==null||o[a].disabled||(e=o[a])}e!==null&&(e.selected=!0)}}function gb(o,e){if(e.dangerouslySetInnerHTML!=null)throw Error(p$1(91));return A({},e,{value:void 0,defaultValue:void 0,children:""+o._wrapperState.initialValue})}function hb(o,e){var s=e.value;if(s==null){if(s=e.children,e=e.defaultValue,s!=null){if(e!=null)throw Error(p$1(92));if(eb(s)){if(1<s.length)throw Error(p$1(93));s=s[0]}e=s}e==null&&(e=""),s=e}o._wrapperState={initialValue:Sa(s)}}function ib(o,e){var s=Sa(e.value),i=Sa(e.defaultValue);s!=null&&(s=""+s,s!==o.value&&(o.value=s),e.defaultValue==null&&o.defaultValue!==s&&(o.defaultValue=s)),i!=null&&(o.defaultValue=""+i)}function jb(o){var e=o.textContent;e===o._wrapperState.initialValue&&e!==""&&e!==null&&(o.value=e)}function kb(o){switch(o){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(o,e){return o==null||o==="http://www.w3.org/1999/xhtml"?kb(e):o==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":o}var mb,nb=function(o){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,s,i,a){MSApp.execUnsafeLocalFunction(function(){return o(e,s,i,a)})}:o}(function(o,e){if(o.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in o)o.innerHTML=e;else{for(mb=mb||document.createElement("div"),mb.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=mb.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;e.firstChild;)o.appendChild(e.firstChild)}});function ob(o,e){if(e){var s=o.firstChild;if(s&&s===o.lastChild&&s.nodeType===3){s.nodeValue=e;return}}o.textContent=e}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(o){qb.forEach(function(e){e=e+o.charAt(0).toUpperCase()+o.substring(1),pb[e]=pb[o]})});function rb(o,e,s){return e==null||typeof e=="boolean"||e===""?"":s||typeof e!="number"||e===0||pb.hasOwnProperty(o)&&pb[o]?(""+e).trim():e+"px"}function sb(o,e){o=o.style;for(var s in e)if(e.hasOwnProperty(s)){var i=s.indexOf("--")===0,a=rb(s,e[s],i);s==="float"&&(s="cssFloat"),i?o.setProperty(s,a):o[s]=a}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(o,e){if(e){if(tb[o]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(p$1(137,o));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(p$1(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(p$1(61))}if(e.style!=null&&typeof e.style!="object")throw Error(p$1(62))}}function vb(o,e){if(o.indexOf("-")===-1)return typeof e.is=="string";switch(o){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(o){return o=o.target||o.srcElement||window,o.correspondingUseElement&&(o=o.correspondingUseElement),o.nodeType===3?o.parentNode:o}var yb=null,zb=null,Ab=null;function Bb(o){if(o=Cb(o)){if(typeof yb!="function")throw Error(p$1(280));var e=o.stateNode;e&&(e=Db(e),yb(o.stateNode,o.type,e))}}function Eb(o){zb?Ab?Ab.push(o):Ab=[o]:zb=o}function Fb(){if(zb){var o=zb,e=Ab;if(Ab=zb=null,Bb(o),e)for(o=0;o<e.length;o++)Bb(e[o])}}function Gb(o,e){return o(e)}function Hb(){}var Ib=!1;function Jb(o,e,s){if(Ib)return o(e,s);Ib=!0;try{return Gb(o,e,s)}finally{Ib=!1,(zb!==null||Ab!==null)&&(Hb(),Fb())}}function Kb(o,e){var s=o.stateNode;if(s===null)return null;var i=Db(s);if(i===null)return null;s=i[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(o=o.type,i=!(o==="button"||o==="input"||o==="select"||o==="textarea")),o=!i;break e;default:o=!1}if(o)return null;if(s&&typeof s!="function")throw Error(p$1(231,e,typeof s));return s}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch{Lb=!1}function Nb(o,e,s,i,a,d,h,b,_){var j=Array.prototype.slice.call(arguments,3);try{e.apply(s,j)}catch(_e){this.onError(_e)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(o){Ob=!0,Pb=o}};function Tb(o,e,s,i,a,d,h,b,_){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Ub(o,e,s,i,a,d,h,b,_){if(Tb.apply(this,arguments),Ob){if(Ob){var j=Pb;Ob=!1,Pb=null}else throw Error(p$1(198));Qb||(Qb=!0,Rb=j)}}function Vb(o){var e=o,s=o;if(o.alternate)for(;e.return;)e=e.return;else{o=e;do e=o,e.flags&4098&&(s=e.return),o=e.return;while(o)}return e.tag===3?s:null}function Wb(o){if(o.tag===13){var e=o.memoizedState;if(e===null&&(o=o.alternate,o!==null&&(e=o.memoizedState)),e!==null)return e.dehydrated}return null}function Xb(o){if(Vb(o)!==o)throw Error(p$1(188))}function Yb(o){var e=o.alternate;if(!e){if(e=Vb(o),e===null)throw Error(p$1(188));return e!==o?null:o}for(var s=o,i=e;;){var a=s.return;if(a===null)break;var d=a.alternate;if(d===null){if(i=a.return,i!==null){s=i;continue}break}if(a.child===d.child){for(d=a.child;d;){if(d===s)return Xb(a),o;if(d===i)return Xb(a),e;d=d.sibling}throw Error(p$1(188))}if(s.return!==i.return)s=a,i=d;else{for(var h=!1,b=a.child;b;){if(b===s){h=!0,s=a,i=d;break}if(b===i){h=!0,i=a,s=d;break}b=b.sibling}if(!h){for(b=d.child;b;){if(b===s){h=!0,s=d,i=a;break}if(b===i){h=!0,i=d,s=a;break}b=b.sibling}if(!h)throw Error(p$1(189))}}if(s.alternate!==i)throw Error(p$1(190))}if(s.tag!==3)throw Error(p$1(188));return s.stateNode.current===s?o:e}function Zb(o){return o=Yb(o),o!==null?$b(o):null}function $b(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var e=$b(o);if(e!==null)return e;o=o.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(o){if(lc&&typeof lc.onCommitFiberRoot=="function")try{lc.onCommitFiberRoot(kc,o,void 0,(o.current.flags&128)===128)}catch{}}var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(o){return o>>>=0,o===0?32:31-(pc(o)/qc|0)|0}var rc=64,sc=4194304;function tc(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function uc(o,e){var s=o.pendingLanes;if(s===0)return 0;var i=0,a=o.suspendedLanes,d=o.pingedLanes,h=s&268435455;if(h!==0){var b=h&~a;b!==0?i=tc(b):(d&=h,d!==0&&(i=tc(d)))}else h=s&~a,h!==0?i=tc(h):d!==0&&(i=tc(d));if(i===0)return 0;if(e!==0&&e!==i&&!(e&a)&&(a=i&-i,d=e&-e,a>=d||a===16&&(d&4194240)!==0))return e;if(i&4&&(i|=s&16),e=o.entangledLanes,e!==0)for(o=o.entanglements,e&=i;0<e;)s=31-oc(e),a=1<<s,i|=o[s],e&=~a;return i}function vc(o,e){switch(o){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wc(o,e){for(var s=o.suspendedLanes,i=o.pingedLanes,a=o.expirationTimes,d=o.pendingLanes;0<d;){var h=31-oc(d),b=1<<h,_=a[h];_===-1?(!(b&s)||b&i)&&(a[h]=vc(b,e)):_<=e&&(o.expiredLanes|=b),d&=~b}}function xc(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function yc(){var o=rc;return rc<<=1,!(rc&4194240)&&(rc=64),o}function zc(o){for(var e=[],s=0;31>s;s++)e.push(o);return e}function Ac(o,e,s){o.pendingLanes|=e,e!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,e=31-oc(e),o[e]=s}function Bc(o,e){var s=o.pendingLanes&~e;o.pendingLanes=e,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=e,o.mutableReadLanes&=e,o.entangledLanes&=e,e=o.entanglements;var i=o.eventTimes;for(o=o.expirationTimes;0<s;){var a=31-oc(s),d=1<<a;e[a]=0,i[a]=-1,o[a]=-1,s&=~d}}function Cc(o,e){var s=o.entangledLanes|=e;for(o=o.entanglements;s;){var i=31-oc(s),a=1<<i;a&e|o[i]&e&&(o[i]|=e),s&=~a}}var C=0;function Dc(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(o,e){switch(o){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(e.pointerId)}}function Tc(o,e,s,i,a,d){return o===null||o.nativeEvent!==d?(o={blockedOn:e,domEventName:s,eventSystemFlags:i,nativeEvent:d,targetContainers:[a]},e!==null&&(e=Cb(e),e!==null&&Fc(e)),o):(o.eventSystemFlags|=i,e=o.targetContainers,a!==null&&e.indexOf(a)===-1&&e.push(a),o)}function Uc(o,e,s,i,a){switch(e){case"focusin":return Lc=Tc(Lc,o,e,s,i,a),!0;case"dragenter":return Mc=Tc(Mc,o,e,s,i,a),!0;case"mouseover":return Nc=Tc(Nc,o,e,s,i,a),!0;case"pointerover":var d=a.pointerId;return Oc.set(d,Tc(Oc.get(d)||null,o,e,s,i,a)),!0;case"gotpointercapture":return d=a.pointerId,Pc.set(d,Tc(Pc.get(d)||null,o,e,s,i,a)),!0}return!1}function Vc(o){var e=Wc(o.target);if(e!==null){var s=Vb(e);if(s!==null){if(e=s.tag,e===13){if(e=Wb(s),e!==null){o.blockedOn=e,Ic(o.priority,function(){Gc(s)});return}}else if(e===3&&s.stateNode.current.memoizedState.isDehydrated){o.blockedOn=s.tag===3?s.stateNode.containerInfo:null;return}}}o.blockedOn=null}function Xc(o){if(o.blockedOn!==null)return!1;for(var e=o.targetContainers;0<e.length;){var s=Yc(o.domEventName,o.eventSystemFlags,e[0],o.nativeEvent);if(s===null){s=o.nativeEvent;var i=new s.constructor(s.type,s);wb=i,s.target.dispatchEvent(i),wb=null}else return e=Cb(s),e!==null&&Fc(e),o.blockedOn=s,!1;e.shift()}return!0}function Zc(o,e,s){Xc(o)&&s.delete(e)}function $c(){Jc=!1,Lc!==null&&Xc(Lc)&&(Lc=null),Mc!==null&&Xc(Mc)&&(Mc=null),Nc!==null&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(o,e){o.blockedOn===e&&(o.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(o){function e(a){return ad(a,o)}if(0<Kc.length){ad(Kc[0],o);for(var s=1;s<Kc.length;s++){var i=Kc[s];i.blockedOn===o&&(i.blockedOn=null)}}for(Lc!==null&&ad(Lc,o),Mc!==null&&ad(Mc,o),Nc!==null&&ad(Nc,o),Oc.forEach(e),Pc.forEach(e),s=0;s<Qc.length;s++)i=Qc[s],i.blockedOn===o&&(i.blockedOn=null);for(;0<Qc.length&&(s=Qc[0],s.blockedOn===null);)Vc(s),s.blockedOn===null&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(o,e,s,i){var a=C,d=cd.transition;cd.transition=null;try{C=1,fd(o,e,s,i)}finally{C=a,cd.transition=d}}function gd(o,e,s,i){var a=C,d=cd.transition;cd.transition=null;try{C=4,fd(o,e,s,i)}finally{C=a,cd.transition=d}}function fd(o,e,s,i){if(dd){var a=Yc(o,e,s,i);if(a===null)hd(o,e,i,id,s),Sc(o,i);else if(Uc(a,o,e,s,i))i.stopPropagation();else if(Sc(o,i),e&4&&-1<Rc.indexOf(o)){for(;a!==null;){var d=Cb(a);if(d!==null&&Ec(d),d=Yc(o,e,s,i),d===null&&hd(o,e,i,id,s),d===a)break;a=d}a!==null&&i.stopPropagation()}else hd(o,e,i,null,s)}}var id=null;function Yc(o,e,s,i){if(id=null,o=xb(i),o=Wc(o),o!==null)if(e=Vb(o),e===null)o=null;else if(s=e.tag,s===13){if(o=Wb(e),o!==null)return o;o=null}else if(s===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;o=null}else e!==o&&(o=null);return id=o,null}function jd(o){switch(o){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var o,e=ld,s=e.length,i,a="value"in kd?kd.value:kd.textContent,d=a.length;for(o=0;o<s&&e[o]===a[o];o++);var h=s-o;for(i=1;i<=h&&e[s-i]===a[d-i];i++);return md=a.slice(o,1<i?1-i:void 0)}function od(o){var e=o.keyCode;return"charCode"in o?(o=o.charCode,o===0&&e===13&&(o=13)):o=e,o===10&&(o=13),32<=o||o===13?o:0}function pd(){return!0}function qd(){return!1}function rd(o){function e(s,i,a,d,h){this._reactName=s,this._targetInst=a,this.type=i,this.nativeEvent=d,this.target=h,this.currentTarget=null;for(var b in o)o.hasOwnProperty(b)&&(s=o[b],this[b]=s?s(d):d[b]);return this.isDefaultPrevented=(d.defaultPrevented!=null?d.defaultPrevented:d.returnValue===!1)?pd:qd,this.isPropagationStopped=qd,this}return A(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var s=this.nativeEvent;s&&(s.preventDefault?s.preventDefault():typeof s.returnValue!="unknown"&&(s.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var s=this.nativeEvent;s&&(s.stopPropagation?s.stopPropagation():typeof s.cancelBubble!="unknown"&&(s.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),e}var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(o){return o.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(o){return o.relatedTarget===void 0?o.fromElement===o.srcElement?o.toElement:o.fromElement:o.relatedTarget},movementX:function(o){return"movementX"in o?o.movementX:(o!==yd&&(yd&&o.type==="mousemove"?(wd=o.screenX-yd.screenX,xd=o.screenY-yd.screenY):xd=wd=0,yd=o),wd)},movementY:function(o){return"movementY"in o?o.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(o){return"clipboardData"in o?o.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(o){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(o):(o=Od[o])?!!e[o]:!1}function zd(){return Pd}var Qd=A({},ud,{key:function(o){if(o.key){var e=Md[o.key]||o.key;if(e!=="Unidentified")return e}return o.type==="keypress"?(o=od(o),o===13?"Enter":String.fromCharCode(o)):o.type==="keydown"||o.type==="keyup"?Nd[o.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(o){return o.type==="keypress"?od(o):0},keyCode:function(o){return o.type==="keydown"||o.type==="keyup"?o.keyCode:0},which:function(o){return o.type==="keypress"?od(o):o.type==="keydown"||o.type==="keyup"?o.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(o){return"deltaX"in o?o.deltaX:"wheelDeltaX"in o?-o.wheelDeltaX:0},deltaY:function(o){return"deltaY"in o?o.deltaY:"wheelDeltaY"in o?-o.wheelDeltaY:"wheelDelta"in o?-o.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=" ",fe=!1;function ge(o,e){switch(o){case"keyup":return $d.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he(o){return o=o.detail,typeof o=="object"&&"data"in o?o.data:null}var ie=!1;function je(o,e){switch(o){case"compositionend":return he(e);case"keypress":return e.which!==32?null:(fe=!0,ee);case"textInput":return o=e.data,o===ee&&fe?null:o;default:return null}}function ke(o,e){if(ie)return o==="compositionend"||!ae&&ge(o,e)?(o=nd(),md=ld=kd=null,ie=!1,o):null;switch(o){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return de&&e.locale!=="ko"?null:e.data;default:return null}}var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(o){var e=o&&o.nodeName&&o.nodeName.toLowerCase();return e==="input"?!!le[o.type]:e==="textarea"}function ne(o,e,s,i){Eb(i),e=oe(e,"onChange"),0<e.length&&(s=new td("onChange","change",null,s,i),o.push({event:s,listeners:e}))}var pe=null,qe=null;function re(o){se(o,0)}function te(o){var e=ue(o);if(Wa(e))return o}function ve(o,e){if(o==="change")return e}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye=typeof ze.oninput=="function"}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(o){if(o.propertyName==="value"&&te(qe)){var e=[];ne(e,qe,o,xb(o)),Jb(re,e)}}function Ce(o,e,s){o==="focusin"?(Ae(),pe=e,qe=s,pe.attachEvent("onpropertychange",Be)):o==="focusout"&&Ae()}function De(o){if(o==="selectionchange"||o==="keyup"||o==="keydown")return te(qe)}function Ee(o,e){if(o==="click")return te(e)}function Fe(o,e){if(o==="input"||o==="change")return te(e)}function Ge(o,e){return o===e&&(o!==0||1/o===1/e)||o!==o&&e!==e}var He=typeof Object.is=="function"?Object.is:Ge;function Ie(o,e){if(He(o,e))return!0;if(typeof o!="object"||o===null||typeof e!="object"||e===null)return!1;var s=Object.keys(o),i=Object.keys(e);if(s.length!==i.length)return!1;for(i=0;i<s.length;i++){var a=s[i];if(!ja.call(e,a)||!He(o[a],e[a]))return!1}return!0}function Je(o){for(;o&&o.firstChild;)o=o.firstChild;return o}function Ke(o,e){var s=Je(o);o=0;for(var i;s;){if(s.nodeType===3){if(i=o+s.textContent.length,o<=e&&i>=e)return{node:s,offset:e-o};o=i}e:{for(;s;){if(s.nextSibling){s=s.nextSibling;break e}s=s.parentNode}s=void 0}s=Je(s)}}function Le(o,e){return o&&e?o===e?!0:o&&o.nodeType===3?!1:e&&e.nodeType===3?Le(o,e.parentNode):"contains"in o?o.contains(e):o.compareDocumentPosition?!!(o.compareDocumentPosition(e)&16):!1:!1}function Me(){for(var o=window,e=Xa();e instanceof o.HTMLIFrameElement;){try{var s=typeof e.contentWindow.location.href=="string"}catch{s=!1}if(s)o=e.contentWindow;else break;e=Xa(o.document)}return e}function Ne(o){var e=o&&o.nodeName&&o.nodeName.toLowerCase();return e&&(e==="input"&&(o.type==="text"||o.type==="search"||o.type==="tel"||o.type==="url"||o.type==="password")||e==="textarea"||o.contentEditable==="true")}function Oe(o){var e=Me(),s=o.focusedElem,i=o.selectionRange;if(e!==s&&s&&s.ownerDocument&&Le(s.ownerDocument.documentElement,s)){if(i!==null&&Ne(s)){if(e=i.start,o=i.end,o===void 0&&(o=e),"selectionStart"in s)s.selectionStart=e,s.selectionEnd=Math.min(o,s.value.length);else if(o=(e=s.ownerDocument||document)&&e.defaultView||window,o.getSelection){o=o.getSelection();var a=s.textContent.length,d=Math.min(i.start,a);i=i.end===void 0?d:Math.min(i.end,a),!o.extend&&d>i&&(a=i,i=d,d=a),a=Ke(s,d);var h=Ke(s,i);a&&h&&(o.rangeCount!==1||o.anchorNode!==a.node||o.anchorOffset!==a.offset||o.focusNode!==h.node||o.focusOffset!==h.offset)&&(e=e.createRange(),e.setStart(a.node,a.offset),o.removeAllRanges(),d>i?(o.addRange(e),o.extend(h.node,h.offset)):(e.setEnd(h.node,h.offset),o.addRange(e)))}}for(e=[],o=s;o=o.parentNode;)o.nodeType===1&&e.push({element:o,left:o.scrollLeft,top:o.scrollTop});for(typeof s.focus=="function"&&s.focus(),s=0;s<e.length;s++)o=e[s],o.element.scrollLeft=o.left,o.element.scrollTop=o.top}}var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;function Ue(o,e,s){var i=s.window===s?s.document:s.nodeType===9?s:s.ownerDocument;Te||Qe==null||Qe!==Xa(i)||(i=Qe,"selectionStart"in i&&Ne(i)?i={start:i.selectionStart,end:i.selectionEnd}:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection(),i={anchorNode:i.anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset}),Se&&Ie(Se,i)||(Se=i,i=oe(Re,"onSelect"),0<i.length&&(e=new td("onSelect","select",null,e,s),o.push({event:e,listeners:i}),e.target=Qe)))}function Ve(o,e){var s={};return s[o.toLowerCase()]=e.toLowerCase(),s["Webkit"+o]="webkit"+e,s["Moz"+o]="moz"+e,s}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(o){if(Xe[o])return Xe[o];if(!We[o])return o;var e=We[o],s;for(s in e)if(e.hasOwnProperty(s)&&s in Ye)return Xe[o]=e[s];return o}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(o,e){df.set(o,e),fa(e,[o])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(o,e,s){var i=o.type||"unknown-event";o.currentTarget=s,Ub(i,e,void 0,o),o.currentTarget=null}function se(o,e){e=(e&4)!==0;for(var s=0;s<o.length;s++){var i=o[s],a=i.event;i=i.listeners;e:{var d=void 0;if(e)for(var h=i.length-1;0<=h;h--){var b=i[h],_=b.instance,j=b.currentTarget;if(b=b.listener,_!==d&&a.isPropagationStopped())break e;nf(a,b,j),d=_}else for(h=0;h<i.length;h++){if(b=i[h],_=b.instance,j=b.currentTarget,b=b.listener,_!==d&&a.isPropagationStopped())break e;nf(a,b,j),d=_}}}if(Qb)throw o=Rb,Qb=!1,Rb=null,o}function D(o,e){var s=e[of];s===void 0&&(s=e[of]=new Set);var i=o+"__bubble";s.has(i)||(pf(e,o,2,!1),s.add(i))}function qf(o,e,s){var i=0;e&&(i|=4),pf(s,o,i,e)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(o){if(!o[rf]){o[rf]=!0,da.forEach(function(s){s!=="selectionchange"&&(mf.has(s)||qf(s,!1,o),qf(s,!0,o))});var e=o.nodeType===9?o:o.ownerDocument;e===null||e[rf]||(e[rf]=!0,qf("selectionchange",!1,e))}}function pf(o,e,s,i){switch(jd(e)){case 1:var a=ed;break;case 4:a=gd;break;default:a=fd}s=a.bind(null,e,s,o),a=void 0,!Lb||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(a=!0),i?a!==void 0?o.addEventListener(e,s,{capture:!0,passive:a}):o.addEventListener(e,s,!0):a!==void 0?o.addEventListener(e,s,{passive:a}):o.addEventListener(e,s,!1)}function hd(o,e,s,i,a){var d=i;if(!(e&1)&&!(e&2)&&i!==null)e:for(;;){if(i===null)return;var h=i.tag;if(h===3||h===4){var b=i.stateNode.containerInfo;if(b===a||b.nodeType===8&&b.parentNode===a)break;if(h===4)for(h=i.return;h!==null;){var _=h.tag;if((_===3||_===4)&&(_=h.stateNode.containerInfo,_===a||_.nodeType===8&&_.parentNode===a))return;h=h.return}for(;b!==null;){if(h=Wc(b),h===null)return;if(_=h.tag,_===5||_===6){i=d=h;continue e}b=b.parentNode}}i=i.return}Jb(function(){var j=d,_e=xb(s),g=[];e:{var c=df.get(o);if(c!==void 0){var $=td,et=o;switch(o){case"keypress":if(od(s)===0)break e;case"keydown":case"keyup":$=Rd;break;case"focusin":et="focus",$=Fd;break;case"focusout":et="blur",$=Fd;break;case"beforeblur":case"afterblur":$=Fd;break;case"click":if(s.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":$=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":$=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":$=Vd;break;case $e:case af:case bf:$=Hd;break;case cf:$=Xd;break;case"scroll":$=vd;break;case"wheel":$=Zd;break;case"copy":case"cut":case"paste":$=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":$=Td}var tt=(e&4)!==0,nt=!tt&&o==="scroll",rt=tt?c!==null?c+"Capture":null:c;tt=[];for(var ot=j,st;ot!==null;){st=ot;var it=st.stateNode;if(st.tag===5&&it!==null&&(st=it,rt!==null&&(it=Kb(ot,rt),it!=null&&tt.push(tf(ot,it,st)))),nt)break;ot=ot.return}0<tt.length&&(c=new $(c,et,null,s,_e),g.push({event:c,listeners:tt}))}}if(!(e&7)){e:{if(c=o==="mouseover"||o==="pointerover",$=o==="mouseout"||o==="pointerout",c&&s!==wb&&(et=s.relatedTarget||s.fromElement)&&(Wc(et)||et[uf]))break e;if(($||c)&&(c=_e.window===_e?_e:(c=_e.ownerDocument)?c.defaultView||c.parentWindow:window,$?(et=s.relatedTarget||s.toElement,$=j,et=et?Wc(et):null,et!==null&&(nt=Vb(et),et!==nt||et.tag!==5&&et.tag!==6)&&(et=null)):($=null,et=j),$!==et)){if(tt=Bd,it="onMouseLeave",rt="onMouseEnter",ot="mouse",(o==="pointerout"||o==="pointerover")&&(tt=Td,it="onPointerLeave",rt="onPointerEnter",ot="pointer"),nt=$==null?c:ue($),st=et==null?c:ue(et),c=new tt(it,ot+"leave",$,s,_e),c.target=nt,c.relatedTarget=st,it=null,Wc(_e)===j&&(tt=new tt(rt,ot+"enter",et,s,_e),tt.target=st,tt.relatedTarget=nt,it=tt),nt=it,$&&et)t:{for(tt=$,rt=et,ot=0,st=tt;st;st=vf(st))ot++;for(st=0,it=rt;it;it=vf(it))st++;for(;0<ot-st;)tt=vf(tt),ot--;for(;0<st-ot;)rt=vf(rt),st--;for(;ot--;){if(tt===rt||rt!==null&&tt===rt.alternate)break t;tt=vf(tt),rt=vf(rt)}tt=null}else tt=null;$!==null&&wf(g,c,$,tt,!1),et!==null&&nt!==null&&wf(g,nt,et,tt,!0)}}e:{if(c=j?ue(j):window,$=c.nodeName&&c.nodeName.toLowerCase(),$==="select"||$==="input"&&c.type==="file")var at=ve;else if(me(c))if(we)at=Fe;else{at=De;var lt=Ce}else($=c.nodeName)&&$.toLowerCase()==="input"&&(c.type==="checkbox"||c.type==="radio")&&(at=Ee);if(at&&(at=at(o,j))){ne(g,at,s,_e);break e}lt&&lt(o,c,j),o==="focusout"&&(lt=c._wrapperState)&&lt.controlled&&c.type==="number"&&cb(c,"number",c.value)}switch(lt=j?ue(j):window,o){case"focusin":(me(lt)||lt.contentEditable==="true")&&(Qe=lt,Re=j,Se=null);break;case"focusout":Se=Re=Qe=null;break;case"mousedown":Te=!0;break;case"contextmenu":case"mouseup":case"dragend":Te=!1,Ue(g,s,_e);break;case"selectionchange":if(Pe)break;case"keydown":case"keyup":Ue(g,s,_e)}var ut;if(ae)e:{switch(o){case"compositionstart":var ct="onCompositionStart";break e;case"compositionend":ct="onCompositionEnd";break e;case"compositionupdate":ct="onCompositionUpdate";break e}ct=void 0}else ie?ge(o,s)&&(ct="onCompositionEnd"):o==="keydown"&&s.keyCode===229&&(ct="onCompositionStart");ct&&(de&&s.locale!=="ko"&&(ie||ct!=="onCompositionStart"?ct==="onCompositionEnd"&&ie&&(ut=nd()):(kd=_e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),lt=oe(j,ct),0<lt.length&&(ct=new Ld(ct,o,null,s,_e),g.push({event:ct,listeners:lt}),ut?ct.data=ut:(ut=he(s),ut!==null&&(ct.data=ut)))),(ut=ce?je(o,s):ke(o,s))&&(j=oe(j,"onBeforeInput"),0<j.length&&(_e=new Ld("onBeforeInput","beforeinput",null,s,_e),g.push({event:_e,listeners:j}),_e.data=ut))}se(g,e)})}function tf(o,e,s){return{instance:o,listener:e,currentTarget:s}}function oe(o,e){for(var s=e+"Capture",i=[];o!==null;){var a=o,d=a.stateNode;a.tag===5&&d!==null&&(a=d,d=Kb(o,s),d!=null&&i.unshift(tf(o,d,a)),d=Kb(o,e),d!=null&&i.push(tf(o,d,a))),o=o.return}return i}function vf(o){if(o===null)return null;do o=o.return;while(o&&o.tag!==5);return o||null}function wf(o,e,s,i,a){for(var d=e._reactName,h=[];s!==null&&s!==i;){var b=s,_=b.alternate,j=b.stateNode;if(_!==null&&_===i)break;b.tag===5&&j!==null&&(b=j,a?(_=Kb(s,d),_!=null&&h.unshift(tf(s,_,b))):a||(_=Kb(s,d),_!=null&&h.push(tf(s,_,b)))),s=s.return}h.length!==0&&o.push({event:e,listeners:h})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(o){return(typeof o=="string"?o:""+o).replace(xf,`
`).replace(yf,"")}function Af(o,e,s){if(e=zf(e),zf(o)!==e&&s)throw Error(p$1(425))}function Bf(){}var Cf=null,Df=null;function Ef(o,e){return o==="textarea"||o==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Ff=typeof setTimeout=="function"?setTimeout:void 0,Gf=typeof clearTimeout=="function"?clearTimeout:void 0,Hf=typeof Promise=="function"?Promise:void 0,Jf=typeof queueMicrotask=="function"?queueMicrotask:typeof Hf<"u"?function(o){return Hf.resolve(null).then(o).catch(If)}:Ff;function If(o){setTimeout(function(){throw o})}function Kf(o,e){var s=e,i=0;do{var a=s.nextSibling;if(o.removeChild(s),a&&a.nodeType===8)if(s=a.data,s==="/$"){if(i===0){o.removeChild(a),bd(e);return}i--}else s!=="$"&&s!=="$?"&&s!=="$!"||i++;s=a}while(s);bd(e)}function Lf(o){for(;o!=null;o=o.nextSibling){var e=o.nodeType;if(e===1||e===3)break;if(e===8){if(e=o.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return o}function Mf(o){o=o.previousSibling;for(var e=0;o;){if(o.nodeType===8){var s=o.data;if(s==="$"||s==="$!"||s==="$?"){if(e===0)return o;e--}else s==="/$"&&e++}o=o.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(o){var e=o[Of];if(e)return e;for(var s=o.parentNode;s;){if(e=s[uf]||s[Of]){if(s=e.alternate,e.child!==null||s!==null&&s.child!==null)for(o=Mf(o);o!==null;){if(s=o[Of])return s;o=Mf(o)}return e}o=s,s=o.parentNode}return null}function Cb(o){return o=o[Of]||o[uf],!o||o.tag!==5&&o.tag!==6&&o.tag!==13&&o.tag!==3?null:o}function ue(o){if(o.tag===5||o.tag===6)return o.stateNode;throw Error(p$1(33))}function Db(o){return o[Pf]||null}var Sf=[],Tf=-1;function Uf(o){return{current:o}}function E(o){0>Tf||(o.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(o,e){Tf++,Sf[Tf]=o.current,o.current=e}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(o,e){var s=o.type.contextTypes;if(!s)return Vf;var i=o.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===e)return i.__reactInternalMemoizedMaskedChildContext;var a={},d;for(d in s)a[d]=e[d];return i&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=e,o.__reactInternalMemoizedMaskedChildContext=a),a}function Zf(o){return o=o.childContextTypes,o!=null}function $f(){E(Wf),E(H)}function ag(o,e,s){if(H.current!==Vf)throw Error(p$1(168));G(H,e),G(Wf,s)}function bg(o,e,s){var i=o.stateNode;if(e=e.childContextTypes,typeof i.getChildContext!="function")return s;i=i.getChildContext();for(var a in i)if(!(a in e))throw Error(p$1(108,Ra(o)||"Unknown",a));return A({},s,i)}function cg(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||Vf,Xf=H.current,G(H,o),G(Wf,Wf.current),!0}function dg(o,e,s){var i=o.stateNode;if(!i)throw Error(p$1(169));s?(o=bg(o,e,Xf),i.__reactInternalMemoizedMergedChildContext=o,E(Wf),E(H),G(H,o)):E(Wf),G(Wf,s)}var eg=null,fg=!1,gg=!1;function hg(o){eg===null?eg=[o]:eg.push(o)}function ig(o){fg=!0,hg(o)}function jg(){if(!gg&&eg!==null){gg=!0;var o=0,e=C;try{var s=eg;for(C=1;o<s.length;o++){var i=s[o];do i=i(!0);while(i!==null)}eg=null,fg=!1}catch(a){throw eg!==null&&(eg=eg.slice(o+1)),ac(fc,jg),a}finally{C=e,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(o,e){kg[lg++]=ng,kg[lg++]=mg,mg=o,ng=e}function ug(o,e,s){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=o;var i=rg;o=sg;var a=32-oc(i)-1;i&=~(1<<a),s+=1;var d=32-oc(e)+a;if(30<d){var h=a-a%5;d=(i&(1<<h)-1).toString(32),i>>=h,a-=h,rg=1<<32-oc(e)+a|s<<a|i,sg=d+o}else rg=1<<d|s<<a|i,sg=o}function vg(o){o.return!==null&&(tg(o,1),ug(o,1,0))}function wg(o){for(;o===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;o===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;function Ag(o,e){var s=Bg(5,null,null,0);s.elementType="DELETED",s.stateNode=e,s.return=o,e=o.deletions,e===null?(o.deletions=[s],o.flags|=16):e.push(s)}function Cg(o,e){switch(o.tag){case 5:var s=o.type;return e=e.nodeType!==1||s.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(o.stateNode=e,xg=o,yg=Lf(e.firstChild),!0):!1;case 6:return e=o.pendingProps===""||e.nodeType!==3?null:e,e!==null?(o.stateNode=e,xg=o,yg=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(s=qg!==null?{id:rg,overflow:sg}:null,o.memoizedState={dehydrated:e,treeContext:s,retryLane:1073741824},s=Bg(18,null,null,0),s.stateNode=e,s.return=o,o.child=s,xg=o,yg=null,!0):!1;default:return!1}}function Dg(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Eg(o){if(I){var e=yg;if(e){var s=e;if(!Cg(o,e)){if(Dg(o))throw Error(p$1(418));e=Lf(s.nextSibling);var i=xg;e&&Cg(o,e)?Ag(i,s):(o.flags=o.flags&-4097|2,I=!1,xg=o)}}else{if(Dg(o))throw Error(p$1(418));o.flags=o.flags&-4097|2,I=!1,xg=o}}}function Fg(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;xg=o}function Gg(o){if(o!==xg)return!1;if(!I)return Fg(o),I=!0,!1;var e;if((e=o.tag!==3)&&!(e=o.tag!==5)&&(e=o.type,e=e!=="head"&&e!=="body"&&!Ef(o.type,o.memoizedProps)),e&&(e=yg)){if(Dg(o))throw Hg(),Error(p$1(418));for(;e;)Ag(o,e),e=Lf(e.nextSibling)}if(Fg(o),o.tag===13){if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(p$1(317));e:{for(o=o.nextSibling,e=0;o;){if(o.nodeType===8){var s=o.data;if(s==="/$"){if(e===0){yg=Lf(o.nextSibling);break e}e--}else s!=="$"&&s!=="$!"&&s!=="$?"||e++}o=o.nextSibling}yg=null}}else yg=xg?Lf(o.stateNode.nextSibling):null;return!0}function Hg(){for(var o=yg;o;)o=Lf(o.nextSibling)}function Ig(){yg=xg=null,I=!1}function Jg(o){zg===null?zg=[o]:zg.push(o)}var Kg=ua.ReactCurrentBatchConfig;function Lg(o,e){if(o&&o.defaultProps){e=A({},e),o=o.defaultProps;for(var s in o)e[s]===void 0&&(e[s]=o[s]);return e}return e}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(o){var e=Mg.current;E(Mg),o._currentValue=e}function Sg(o,e,s){for(;o!==null;){var i=o.alternate;if((o.childLanes&e)!==e?(o.childLanes|=e,i!==null&&(i.childLanes|=e)):i!==null&&(i.childLanes&e)!==e&&(i.childLanes|=e),o===s)break;o=o.return}}function Tg(o,e){Ng=o,Pg=Og=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&e&&(Ug=!0),o.firstContext=null)}function Vg(o){var e=o._currentValue;if(Pg!==o)if(o={context:o,memoizedValue:e,next:null},Og===null){if(Ng===null)throw Error(p$1(308));Og=o,Ng.dependencies={lanes:0,firstContext:o}}else Og=Og.next=o;return e}var Wg=null;function Xg(o){Wg===null?Wg=[o]:Wg.push(o)}function Yg(o,e,s,i){var a=e.interleaved;return a===null?(s.next=s,Xg(e)):(s.next=a.next,a.next=s),e.interleaved=s,Zg(o,i)}function Zg(o,e){o.lanes|=e;var s=o.alternate;for(s!==null&&(s.lanes|=e),s=o,o=o.return;o!==null;)o.childLanes|=e,s=o.alternate,s!==null&&(s.childLanes|=e),s=o,o=o.return;return s.tag===3?s.stateNode:null}var $g=!1;function ah(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function bh(o,e){o=o.updateQueue,e.updateQueue===o&&(e.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function ch(o,e){return{eventTime:o,lane:e,tag:0,payload:null,callback:null,next:null}}function dh(o,e,s){var i=o.updateQueue;if(i===null)return null;if(i=i.shared,K&2){var a=i.pending;return a===null?e.next=e:(e.next=a.next,a.next=e),i.pending=e,Zg(o,s)}return a=i.interleaved,a===null?(e.next=e,Xg(i)):(e.next=a.next,a.next=e),i.interleaved=e,Zg(o,s)}function eh(o,e,s){if(e=e.updateQueue,e!==null&&(e=e.shared,(s&4194240)!==0)){var i=e.lanes;i&=o.pendingLanes,s|=i,e.lanes=s,Cc(o,s)}}function fh(o,e){var s=o.updateQueue,i=o.alternate;if(i!==null&&(i=i.updateQueue,s===i)){var a=null,d=null;if(s=s.firstBaseUpdate,s!==null){do{var h={eventTime:s.eventTime,lane:s.lane,tag:s.tag,payload:s.payload,callback:s.callback,next:null};d===null?a=d=h:d=d.next=h,s=s.next}while(s!==null);d===null?a=d=e:d=d.next=e}else a=d=e;s={baseState:i.baseState,firstBaseUpdate:a,lastBaseUpdate:d,shared:i.shared,effects:i.effects},o.updateQueue=s;return}o=s.lastBaseUpdate,o===null?s.firstBaseUpdate=e:o.next=e,s.lastBaseUpdate=e}function gh(o,e,s,i){var a=o.updateQueue;$g=!1;var d=a.firstBaseUpdate,h=a.lastBaseUpdate,b=a.shared.pending;if(b!==null){a.shared.pending=null;var _=b,j=_.next;_.next=null,h===null?d=j:h.next=j,h=_;var _e=o.alternate;_e!==null&&(_e=_e.updateQueue,b=_e.lastBaseUpdate,b!==h&&(b===null?_e.firstBaseUpdate=j:b.next=j,_e.lastBaseUpdate=_))}if(d!==null){var g=a.baseState;h=0,_e=j=_=null,b=d;do{var c=b.lane,$=b.eventTime;if((i&c)===c){_e!==null&&(_e=_e.next={eventTime:$,lane:0,tag:b.tag,payload:b.payload,callback:b.callback,next:null});e:{var et=o,tt=b;switch(c=e,$=s,tt.tag){case 1:if(et=tt.payload,typeof et=="function"){g=et.call($,g,c);break e}g=et;break e;case 3:et.flags=et.flags&-65537|128;case 0:if(et=tt.payload,c=typeof et=="function"?et.call($,g,c):et,c==null)break e;g=A({},g,c);break e;case 2:$g=!0}}b.callback!==null&&b.lane!==0&&(o.flags|=64,c=a.effects,c===null?a.effects=[b]:c.push(b))}else $={eventTime:$,lane:c,tag:b.tag,payload:b.payload,callback:b.callback,next:null},_e===null?(j=_e=$,_=g):_e=_e.next=$,h|=c;if(b=b.next,b===null){if(b=a.shared.pending,b===null)break;c=b,b=c.next,c.next=null,a.lastBaseUpdate=c,a.shared.pending=null}}while(!0);if(_e===null&&(_=g),a.baseState=_,a.firstBaseUpdate=j,a.lastBaseUpdate=_e,e=a.shared.interleaved,e!==null){a=e;do h|=a.lane,a=a.next;while(a!==e)}else d===null&&(a.shared.lanes=0);hh|=h,o.lanes=h,o.memoizedState=g}}function ih(o,e,s){if(o=e.effects,e.effects=null,o!==null)for(e=0;e<o.length;e++){var i=o[e],a=i.callback;if(a!==null){if(i.callback=null,i=s,typeof a!="function")throw Error(p$1(191,a));a.call(i)}}}var jh=new aa.Component().refs;function kh(o,e,s,i){e=o.memoizedState,s=s(i,e),s=s==null?e:A({},e,s),o.memoizedState=s,o.lanes===0&&(o.updateQueue.baseState=s)}var nh={isMounted:function(o){return(o=o._reactInternals)?Vb(o)===o:!1},enqueueSetState:function(o,e,s){o=o._reactInternals;var i=L(),a=lh(o),d=ch(i,a);d.payload=e,s!=null&&(d.callback=s),e=dh(o,d,a),e!==null&&(mh(e,o,a,i),eh(e,o,a))},enqueueReplaceState:function(o,e,s){o=o._reactInternals;var i=L(),a=lh(o),d=ch(i,a);d.tag=1,d.payload=e,s!=null&&(d.callback=s),e=dh(o,d,a),e!==null&&(mh(e,o,a,i),eh(e,o,a))},enqueueForceUpdate:function(o,e){o=o._reactInternals;var s=L(),i=lh(o),a=ch(s,i);a.tag=2,e!=null&&(a.callback=e),e=dh(o,a,i),e!==null&&(mh(e,o,i,s),eh(e,o,i))}};function oh(o,e,s,i,a,d,h){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(i,d,h):e.prototype&&e.prototype.isPureReactComponent?!Ie(s,i)||!Ie(a,d):!0}function ph(o,e,s){var i=!1,a=Vf,d=e.contextType;return typeof d=="object"&&d!==null?d=Vg(d):(a=Zf(e)?Xf:H.current,i=e.contextTypes,d=(i=i!=null)?Yf(o,a):Vf),e=new e(s,d),o.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=nh,o.stateNode=e,e._reactInternals=o,i&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=d),e}function qh(o,e,s,i){o=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(s,i),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(s,i),e.state!==o&&nh.enqueueReplaceState(e,e.state,null)}function rh(o,e,s,i){var a=o.stateNode;a.props=s,a.state=o.memoizedState,a.refs=jh,ah(o);var d=e.contextType;typeof d=="object"&&d!==null?a.context=Vg(d):(d=Zf(e)?Xf:H.current,a.context=Yf(o,d)),a.state=o.memoizedState,d=e.getDerivedStateFromProps,typeof d=="function"&&(kh(o,e,d,s),a.state=o.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof a.getSnapshotBeforeUpdate=="function"||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(e=a.state,typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount(),e!==a.state&&nh.enqueueReplaceState(a,a.state,null),gh(o,s,a,i),a.state=o.memoizedState),typeof a.componentDidMount=="function"&&(o.flags|=4194308)}function sh(o,e,s){if(o=s.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(s._owner){if(s=s._owner,s){if(s.tag!==1)throw Error(p$1(309));var i=s.stateNode}if(!i)throw Error(p$1(147,o));var a=i,d=""+o;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===d?e.ref:(e=function(h){var b=a.refs;b===jh&&(b=a.refs={}),h===null?delete b[d]:b[d]=h},e._stringRef=d,e)}if(typeof o!="string")throw Error(p$1(284));if(!s._owner)throw Error(p$1(290,o))}return o}function th(o,e){throw o=Object.prototype.toString.call(e),Error(p$1(31,o==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":o))}function uh(o){var e=o._init;return e(o._payload)}function vh(o){function e(rt,ot){if(o){var st=rt.deletions;st===null?(rt.deletions=[ot],rt.flags|=16):st.push(ot)}}function s(rt,ot){if(!o)return null;for(;ot!==null;)e(rt,ot),ot=ot.sibling;return null}function i(rt,ot){for(rt=new Map;ot!==null;)ot.key!==null?rt.set(ot.key,ot):rt.set(ot.index,ot),ot=ot.sibling;return rt}function a(rt,ot){return rt=wh(rt,ot),rt.index=0,rt.sibling=null,rt}function d(rt,ot,st){return rt.index=st,o?(st=rt.alternate,st!==null?(st=st.index,st<ot?(rt.flags|=2,ot):st):(rt.flags|=2,ot)):(rt.flags|=1048576,ot)}function h(rt){return o&&rt.alternate===null&&(rt.flags|=2),rt}function b(rt,ot,st,it){return ot===null||ot.tag!==6?(ot=xh(st,rt.mode,it),ot.return=rt,ot):(ot=a(ot,st),ot.return=rt,ot)}function _(rt,ot,st,it){var at=st.type;return at===ya?_e(rt,ot,st.props.children,it,st.key):ot!==null&&(ot.elementType===at||typeof at=="object"&&at!==null&&at.$$typeof===Ha&&uh(at)===ot.type)?(it=a(ot,st.props),it.ref=sh(rt,ot,st),it.return=rt,it):(it=yh(st.type,st.key,st.props,null,rt.mode,it),it.ref=sh(rt,ot,st),it.return=rt,it)}function j(rt,ot,st,it){return ot===null||ot.tag!==4||ot.stateNode.containerInfo!==st.containerInfo||ot.stateNode.implementation!==st.implementation?(ot=zh(st,rt.mode,it),ot.return=rt,ot):(ot=a(ot,st.children||[]),ot.return=rt,ot)}function _e(rt,ot,st,it,at){return ot===null||ot.tag!==7?(ot=Ah(st,rt.mode,it,at),ot.return=rt,ot):(ot=a(ot,st),ot.return=rt,ot)}function g(rt,ot,st){if(typeof ot=="string"&&ot!==""||typeof ot=="number")return ot=xh(""+ot,rt.mode,st),ot.return=rt,ot;if(typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case va:return st=yh(ot.type,ot.key,ot.props,null,rt.mode,st),st.ref=sh(rt,null,ot),st.return=rt,st;case wa:return ot=zh(ot,rt.mode,st),ot.return=rt,ot;case Ha:var it=ot._init;return g(rt,it(ot._payload),st)}if(eb(ot)||Ka(ot))return ot=Ah(ot,rt.mode,st,null),ot.return=rt,ot;th(rt,ot)}return null}function c(rt,ot,st,it){var at=ot!==null?ot.key:null;if(typeof st=="string"&&st!==""||typeof st=="number")return at!==null?null:b(rt,ot,""+st,it);if(typeof st=="object"&&st!==null){switch(st.$$typeof){case va:return st.key===at?_(rt,ot,st,it):null;case wa:return st.key===at?j(rt,ot,st,it):null;case Ha:return at=st._init,c(rt,ot,at(st._payload),it)}if(eb(st)||Ka(st))return at!==null?null:_e(rt,ot,st,it,null);th(rt,st)}return null}function $(rt,ot,st,it,at){if(typeof it=="string"&&it!==""||typeof it=="number")return rt=rt.get(st)||null,b(ot,rt,""+it,at);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case va:return rt=rt.get(it.key===null?st:it.key)||null,_(ot,rt,it,at);case wa:return rt=rt.get(it.key===null?st:it.key)||null,j(ot,rt,it,at);case Ha:var lt=it._init;return $(rt,ot,st,lt(it._payload),at)}if(eb(it)||Ka(it))return rt=rt.get(st)||null,_e(ot,rt,it,at,null);th(ot,it)}return null}function et(rt,ot,st,it){for(var at=null,lt=null,ut=ot,ct=ot=0,pt=null;ut!==null&&ct<st.length;ct++){ut.index>ct?(pt=ut,ut=null):pt=ut.sibling;var ht=c(rt,ut,st[ct],it);if(ht===null){ut===null&&(ut=pt);break}o&&ut&&ht.alternate===null&&e(rt,ut),ot=d(ht,ot,ct),lt===null?at=ht:lt.sibling=ht,lt=ht,ut=pt}if(ct===st.length)return s(rt,ut),I&&tg(rt,ct),at;if(ut===null){for(;ct<st.length;ct++)ut=g(rt,st[ct],it),ut!==null&&(ot=d(ut,ot,ct),lt===null?at=ut:lt.sibling=ut,lt=ut);return I&&tg(rt,ct),at}for(ut=i(rt,ut);ct<st.length;ct++)pt=$(ut,rt,ct,st[ct],it),pt!==null&&(o&&pt.alternate!==null&&ut.delete(pt.key===null?ct:pt.key),ot=d(pt,ot,ct),lt===null?at=pt:lt.sibling=pt,lt=pt);return o&&ut.forEach(function(yt){return e(rt,yt)}),I&&tg(rt,ct),at}function tt(rt,ot,st,it){var at=Ka(st);if(typeof at!="function")throw Error(p$1(150));if(st=at.call(st),st==null)throw Error(p$1(151));for(var lt=at=null,ut=ot,ct=ot=0,pt=null,ht=st.next();ut!==null&&!ht.done;ct++,ht=st.next()){ut.index>ct?(pt=ut,ut=null):pt=ut.sibling;var yt=c(rt,ut,ht.value,it);if(yt===null){ut===null&&(ut=pt);break}o&&ut&&yt.alternate===null&&e(rt,ut),ot=d(yt,ot,ct),lt===null?at=yt:lt.sibling=yt,lt=yt,ut=pt}if(ht.done)return s(rt,ut),I&&tg(rt,ct),at;if(ut===null){for(;!ht.done;ct++,ht=st.next())ht=g(rt,ht.value,it),ht!==null&&(ot=d(ht,ot,ct),lt===null?at=ht:lt.sibling=ht,lt=ht);return I&&tg(rt,ct),at}for(ut=i(rt,ut);!ht.done;ct++,ht=st.next())ht=$(ut,rt,ct,ht.value,it),ht!==null&&(o&&ht.alternate!==null&&ut.delete(ht.key===null?ct:ht.key),ot=d(ht,ot,ct),lt===null?at=ht:lt.sibling=ht,lt=ht);return o&&ut.forEach(function(xt){return e(rt,xt)}),I&&tg(rt,ct),at}function nt(rt,ot,st,it){if(typeof st=="object"&&st!==null&&st.type===ya&&st.key===null&&(st=st.props.children),typeof st=="object"&&st!==null){switch(st.$$typeof){case va:e:{for(var at=st.key,lt=ot;lt!==null;){if(lt.key===at){if(at=st.type,at===ya){if(lt.tag===7){s(rt,lt.sibling),ot=a(lt,st.props.children),ot.return=rt,rt=ot;break e}}else if(lt.elementType===at||typeof at=="object"&&at!==null&&at.$$typeof===Ha&&uh(at)===lt.type){s(rt,lt.sibling),ot=a(lt,st.props),ot.ref=sh(rt,lt,st),ot.return=rt,rt=ot;break e}s(rt,lt);break}else e(rt,lt);lt=lt.sibling}st.type===ya?(ot=Ah(st.props.children,rt.mode,it,st.key),ot.return=rt,rt=ot):(it=yh(st.type,st.key,st.props,null,rt.mode,it),it.ref=sh(rt,ot,st),it.return=rt,rt=it)}return h(rt);case wa:e:{for(lt=st.key;ot!==null;){if(ot.key===lt)if(ot.tag===4&&ot.stateNode.containerInfo===st.containerInfo&&ot.stateNode.implementation===st.implementation){s(rt,ot.sibling),ot=a(ot,st.children||[]),ot.return=rt,rt=ot;break e}else{s(rt,ot);break}else e(rt,ot);ot=ot.sibling}ot=zh(st,rt.mode,it),ot.return=rt,rt=ot}return h(rt);case Ha:return lt=st._init,nt(rt,ot,lt(st._payload),it)}if(eb(st))return et(rt,ot,st,it);if(Ka(st))return tt(rt,ot,st,it);th(rt,st)}return typeof st=="string"&&st!==""||typeof st=="number"?(st=""+st,ot!==null&&ot.tag===6?(s(rt,ot.sibling),ot=a(ot,st),ot.return=rt,rt=ot):(s(rt,ot),ot=xh(st,rt.mode,it),ot.return=rt,rt=ot),h(rt)):s(rt,ot)}return nt}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(o){if(o===Dh)throw Error(p$1(174));return o}function Ih(o,e){switch(G(Gh,e),G(Fh,o),G(Eh,Dh),o=e.nodeType,o){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:lb(null,"");break;default:o=o===8?e.parentNode:e,e=o.namespaceURI||null,o=o.tagName,e=lb(e,o)}E(Eh),G(Eh,e)}function Jh(){E(Eh),E(Fh),E(Gh)}function Kh(o){Hh(Gh.current);var e=Hh(Eh.current),s=lb(e,o.type);e!==s&&(G(Fh,o),G(Eh,s))}function Lh(o){Fh.current===o&&(E(Eh),E(Fh))}var M=Uf(0);function Mh(o){for(var e=o;e!==null;){if(e.tag===13){var s=e.memoizedState;if(s!==null&&(s=s.dehydrated,s===null||s.data==="$?"||s.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===o)break;for(;e.sibling===null;){if(e.return===null||e.return===o)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Nh=[];function Oh(){for(var o=0;o<Nh.length;o++)Nh[o]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p$1(321))}function Wh(o,e){if(e===null)return!1;for(var s=0;s<e.length&&s<o.length;s++)if(!He(o[s],e[s]))return!1;return!0}function Xh(o,e,s,i,a,d){if(Rh=d,N=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Ph.current=o===null||o.memoizedState===null?Yh:Zh,o=s(i,a),Th){d=0;do{if(Th=!1,Uh=0,25<=d)throw Error(p$1(301));d+=1,P=O=null,e.updateQueue=null,Ph.current=$h,o=s(i,a)}while(Th)}if(Ph.current=ai,e=O!==null&&O.next!==null,Rh=0,P=O=N=null,Sh=!1,e)throw Error(p$1(300));return o}function bi(){var o=Uh!==0;return Uh=0,o}function ci(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return P===null?N.memoizedState=P=o:P=P.next=o,P}function di(){if(O===null){var o=N.alternate;o=o!==null?o.memoizedState:null}else o=O.next;var e=P===null?N.memoizedState:P.next;if(e!==null)P=e,O=o;else{if(o===null)throw Error(p$1(310));O=o,o={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null},P===null?N.memoizedState=P=o:P=P.next=o}return P}function ei(o,e){return typeof e=="function"?e(o):e}function fi(o){var e=di(),s=e.queue;if(s===null)throw Error(p$1(311));s.lastRenderedReducer=o;var i=O,a=i.baseQueue,d=s.pending;if(d!==null){if(a!==null){var h=a.next;a.next=d.next,d.next=h}i.baseQueue=a=d,s.pending=null}if(a!==null){d=a.next,i=i.baseState;var b=h=null,_=null,j=d;do{var _e=j.lane;if((Rh&_e)===_e)_!==null&&(_=_.next={lane:0,action:j.action,hasEagerState:j.hasEagerState,eagerState:j.eagerState,next:null}),i=j.hasEagerState?j.eagerState:o(i,j.action);else{var g={lane:_e,action:j.action,hasEagerState:j.hasEagerState,eagerState:j.eagerState,next:null};_===null?(b=_=g,h=i):_=_.next=g,N.lanes|=_e,hh|=_e}j=j.next}while(j!==null&&j!==d);_===null?h=i:_.next=b,He(i,e.memoizedState)||(Ug=!0),e.memoizedState=i,e.baseState=h,e.baseQueue=_,s.lastRenderedState=i}if(o=s.interleaved,o!==null){a=o;do d=a.lane,N.lanes|=d,hh|=d,a=a.next;while(a!==o)}else a===null&&(s.lanes=0);return[e.memoizedState,s.dispatch]}function gi(o){var e=di(),s=e.queue;if(s===null)throw Error(p$1(311));s.lastRenderedReducer=o;var i=s.dispatch,a=s.pending,d=e.memoizedState;if(a!==null){s.pending=null;var h=a=a.next;do d=o(d,h.action),h=h.next;while(h!==a);He(d,e.memoizedState)||(Ug=!0),e.memoizedState=d,e.baseQueue===null&&(e.baseState=d),s.lastRenderedState=d}return[d,i]}function hi(){}function ii(o,e){var s=N,i=di(),a=e(),d=!He(i.memoizedState,a);if(d&&(i.memoizedState=a,Ug=!0),i=i.queue,ji(ki.bind(null,s,i,o),[o]),i.getSnapshot!==e||d||P!==null&&P.memoizedState.tag&1){if(s.flags|=2048,li(9,mi.bind(null,s,i,a,e),void 0,null),R===null)throw Error(p$1(349));Rh&30||ni(s,e,a)}return a}function ni(o,e,s){o.flags|=16384,o={getSnapshot:e,value:s},e=N.updateQueue,e===null?(e={lastEffect:null,stores:null},N.updateQueue=e,e.stores=[o]):(s=e.stores,s===null?e.stores=[o]:s.push(o))}function mi(o,e,s,i){e.value=s,e.getSnapshot=i,oi(e)&&pi(o)}function ki(o,e,s){return s(function(){oi(e)&&pi(o)})}function oi(o){var e=o.getSnapshot;o=o.value;try{var s=e();return!He(o,s)}catch{return!0}}function pi(o){var e=Zg(o,1);e!==null&&mh(e,o,1,-1)}function qi(o){var e=ci();return typeof o=="function"&&(o=o()),e.memoizedState=e.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:o},e.queue=o,o=o.dispatch=ri.bind(null,N,o),[e.memoizedState,o]}function li(o,e,s,i){return o={tag:o,create:e,destroy:s,deps:i,next:null},e=N.updateQueue,e===null?(e={lastEffect:null,stores:null},N.updateQueue=e,e.lastEffect=o.next=o):(s=e.lastEffect,s===null?e.lastEffect=o.next=o:(i=s.next,s.next=o,o.next=i,e.lastEffect=o)),o}function si(){return di().memoizedState}function ti(o,e,s,i){var a=ci();N.flags|=o,a.memoizedState=li(1|e,s,void 0,i===void 0?null:i)}function ui(o,e,s,i){var a=di();i=i===void 0?null:i;var d=void 0;if(O!==null){var h=O.memoizedState;if(d=h.destroy,i!==null&&Wh(i,h.deps)){a.memoizedState=li(e,s,d,i);return}}N.flags|=o,a.memoizedState=li(1|e,s,d,i)}function vi(o,e){return ti(8390656,8,o,e)}function ji(o,e){return ui(2048,8,o,e)}function wi(o,e){return ui(4,2,o,e)}function xi(o,e){return ui(4,4,o,e)}function yi(o,e){if(typeof e=="function")return o=o(),e(o),function(){e(null)};if(e!=null)return o=o(),e.current=o,function(){e.current=null}}function zi(o,e,s){return s=s!=null?s.concat([o]):null,ui(4,4,yi.bind(null,e,o),s)}function Ai(){}function Bi(o,e){var s=di();e=e===void 0?null:e;var i=s.memoizedState;return i!==null&&e!==null&&Wh(e,i[1])?i[0]:(s.memoizedState=[o,e],o)}function Ci(o,e){var s=di();e=e===void 0?null:e;var i=s.memoizedState;return i!==null&&e!==null&&Wh(e,i[1])?i[0]:(o=o(),s.memoizedState=[o,e],o)}function Di(o,e,s){return Rh&21?(He(s,e)||(s=yc(),N.lanes|=s,hh|=s,o.baseState=!0),e):(o.baseState&&(o.baseState=!1,Ug=!0),o.memoizedState=s)}function Ei(o,e){var s=C;C=s!==0&&4>s?s:4,o(!0);var i=Qh.transition;Qh.transition={};try{o(!1),e()}finally{C=s,Qh.transition=i}}function Fi(){return di().memoizedState}function Gi(o,e,s){var i=lh(o);if(s={lane:i,action:s,hasEagerState:!1,eagerState:null,next:null},Hi(o))Ii(e,s);else if(s=Yg(o,e,s,i),s!==null){var a=L();mh(s,o,i,a),Ji(s,e,i)}}function ri(o,e,s){var i=lh(o),a={lane:i,action:s,hasEagerState:!1,eagerState:null,next:null};if(Hi(o))Ii(e,a);else{var d=o.alternate;if(o.lanes===0&&(d===null||d.lanes===0)&&(d=e.lastRenderedReducer,d!==null))try{var h=e.lastRenderedState,b=d(h,s);if(a.hasEagerState=!0,a.eagerState=b,He(b,h)){var _=e.interleaved;_===null?(a.next=a,Xg(e)):(a.next=_.next,_.next=a),e.interleaved=a;return}}catch{}finally{}s=Yg(o,e,a,i),s!==null&&(a=L(),mh(s,o,i,a),Ji(s,e,i))}}function Hi(o){var e=o.alternate;return o===N||e!==null&&e===N}function Ii(o,e){Th=Sh=!0;var s=o.pending;s===null?e.next=e:(e.next=s.next,s.next=e),o.pending=e}function Ji(o,e,s){if(s&4194240){var i=e.lanes;i&=o.pendingLanes,s|=i,e.lanes=s,Cc(o,s)}}var ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(o,e){return ci().memoizedState=[o,e===void 0?null:e],o},useContext:Vg,useEffect:vi,useImperativeHandle:function(o,e,s){return s=s!=null?s.concat([o]):null,ti(4194308,4,yi.bind(null,e,o),s)},useLayoutEffect:function(o,e){return ti(4194308,4,o,e)},useInsertionEffect:function(o,e){return ti(4,2,o,e)},useMemo:function(o,e){var s=ci();return e=e===void 0?null:e,o=o(),s.memoizedState=[o,e],o},useReducer:function(o,e,s){var i=ci();return e=s!==void 0?s(e):e,i.memoizedState=i.baseState=e,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:e},i.queue=o,o=o.dispatch=Gi.bind(null,N,o),[i.memoizedState,o]},useRef:function(o){var e=ci();return o={current:o},e.memoizedState=o},useState:qi,useDebugValue:Ai,useDeferredValue:function(o){return ci().memoizedState=o},useTransition:function(){var o=qi(!1),e=o[0];return o=Ei.bind(null,o[1]),ci().memoizedState=o,[e,o]},useMutableSource:function(){},useSyncExternalStore:function(o,e,s){var i=N,a=ci();if(I){if(s===void 0)throw Error(p$1(407));s=s()}else{if(s=e(),R===null)throw Error(p$1(349));Rh&30||ni(i,e,s)}a.memoizedState=s;var d={value:s,getSnapshot:e};return a.queue=d,vi(ki.bind(null,i,d,o),[o]),i.flags|=2048,li(9,mi.bind(null,i,d,s,e),void 0,null),s},useId:function(){var o=ci(),e=R.identifierPrefix;if(I){var s=sg,i=rg;s=(i&~(1<<32-oc(i)-1)).toString(32)+s,e=":"+e+"R"+s,s=Uh++,0<s&&(e+="H"+s.toString(32)),e+=":"}else s=Vh++,e=":"+e+"r"+s.toString(32)+":";return o.memoizedState=e},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},useDebugValue:Ai,useDeferredValue:function(o){var e=di();return Di(e,O.memoizedState,o)},useTransition:function(){var o=fi(ei)[0],e=di().memoizedState;return[o,e]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(o){var e=di();return O===null?e.memoizedState=o:Di(e,O.memoizedState,o)},useTransition:function(){var o=gi(ei)[0],e=di().memoizedState;return[o,e]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(o,e){try{var s="",i=e;do s+=Pa(i),i=i.return;while(i);var a=s}catch(d){a=`
Error generating stack: `+d.message+`
`+d.stack}return{value:o,source:e,stack:a,digest:null}}function Li(o,e,s){return{value:o,source:null,stack:s??null,digest:e??null}}function Mi(o,e){try{console.error(e.value)}catch(s){setTimeout(function(){throw s})}}var Ni=typeof WeakMap=="function"?WeakMap:Map;function Oi(o,e,s){s=ch(-1,s),s.tag=3,s.payload={element:null};var i=e.value;return s.callback=function(){Pi||(Pi=!0,Qi=i),Mi(o,e)},s}function Ri(o,e,s){s=ch(-1,s),s.tag=3;var i=o.type.getDerivedStateFromError;if(typeof i=="function"){var a=e.value;s.payload=function(){return i(a)},s.callback=function(){Mi(o,e)}}var d=o.stateNode;return d!==null&&typeof d.componentDidCatch=="function"&&(s.callback=function(){Mi(o,e),typeof i!="function"&&(Si===null?Si=new Set([this]):Si.add(this));var h=e.stack;this.componentDidCatch(e.value,{componentStack:h!==null?h:""})}),s}function Ti(o,e,s){var i=o.pingCache;if(i===null){i=o.pingCache=new Ni;var a=new Set;i.set(e,a)}else a=i.get(e),a===void 0&&(a=new Set,i.set(e,a));a.has(s)||(a.add(s),o=Ui.bind(null,o,e,s),e.then(o,o))}function Vi(o){do{var e;if((e=o.tag===13)&&(e=o.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return o;o=o.return}while(o!==null);return null}function Wi(o,e,s,i,a){return o.mode&1?(o.flags|=65536,o.lanes=a,o):(o===e?o.flags|=65536:(o.flags|=128,s.flags|=131072,s.flags&=-52805,s.tag===1&&(s.alternate===null?s.tag=17:(e=ch(-1,1),e.tag=2,dh(s,e,1))),s.lanes|=1),o)}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(o,e,s,i){e.child=o===null?Ch(e,null,s,i):Bh(e,o.child,s,i)}function Zi(o,e,s,i,a){s=s.render;var d=e.ref;return Tg(e,a),i=Xh(o,e,s,i,d,a),s=bi(),o!==null&&!Ug?(e.updateQueue=o.updateQueue,e.flags&=-2053,o.lanes&=~a,$i(o,e,a)):(I&&s&&vg(e),e.flags|=1,Yi(o,e,i,a),e.child)}function aj(o,e,s,i,a){if(o===null){var d=s.type;return typeof d=="function"&&!bj(d)&&d.defaultProps===void 0&&s.compare===null&&s.defaultProps===void 0?(e.tag=15,e.type=d,cj(o,e,d,i,a)):(o=yh(s.type,null,i,e,e.mode,a),o.ref=e.ref,o.return=e,e.child=o)}if(d=o.child,!(o.lanes&a)){var h=d.memoizedProps;if(s=s.compare,s=s!==null?s:Ie,s(h,i)&&o.ref===e.ref)return $i(o,e,a)}return e.flags|=1,o=wh(d,i),o.ref=e.ref,o.return=e,e.child=o}function cj(o,e,s,i,a){if(o!==null){var d=o.memoizedProps;if(Ie(d,i)&&o.ref===e.ref)if(Ug=!1,e.pendingProps=i=d,(o.lanes&a)!==0)o.flags&131072&&(Ug=!0);else return e.lanes=o.lanes,$i(o,e,a)}return dj(o,e,s,i,a)}function ej(o,e,s){var i=e.pendingProps,a=i.children,d=o!==null?o.memoizedState:null;if(i.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=s;else{if(!(s&1073741824))return o=d!==null?d.baseLanes|s:s,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:o,cachePool:null,transitions:null},e.updateQueue=null,G(fj,gj),gj|=o,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=d!==null?d.baseLanes:s,G(fj,gj),gj|=i}else d!==null?(i=d.baseLanes|s,e.memoizedState=null):i=s,G(fj,gj),gj|=i;return Yi(o,e,a,s),e.child}function hj(o,e){var s=e.ref;(o===null&&s!==null||o!==null&&o.ref!==s)&&(e.flags|=512,e.flags|=2097152)}function dj(o,e,s,i,a){var d=Zf(s)?Xf:H.current;return d=Yf(e,d),Tg(e,a),s=Xh(o,e,s,i,d,a),i=bi(),o!==null&&!Ug?(e.updateQueue=o.updateQueue,e.flags&=-2053,o.lanes&=~a,$i(o,e,a)):(I&&i&&vg(e),e.flags|=1,Yi(o,e,s,a),e.child)}function ij(o,e,s,i,a){if(Zf(s)){var d=!0;cg(e)}else d=!1;if(Tg(e,a),e.stateNode===null)jj(o,e),ph(e,s,i),rh(e,s,i,a),i=!0;else if(o===null){var h=e.stateNode,b=e.memoizedProps;h.props=b;var _=h.context,j=s.contextType;typeof j=="object"&&j!==null?j=Vg(j):(j=Zf(s)?Xf:H.current,j=Yf(e,j));var _e=s.getDerivedStateFromProps,g=typeof _e=="function"||typeof h.getSnapshotBeforeUpdate=="function";g||typeof h.UNSAFE_componentWillReceiveProps!="function"&&typeof h.componentWillReceiveProps!="function"||(b!==i||_!==j)&&qh(e,h,i,j),$g=!1;var c=e.memoizedState;h.state=c,gh(e,i,h,a),_=e.memoizedState,b!==i||c!==_||Wf.current||$g?(typeof _e=="function"&&(kh(e,s,_e,i),_=e.memoizedState),(b=$g||oh(e,s,b,i,c,_,j))?(g||typeof h.UNSAFE_componentWillMount!="function"&&typeof h.componentWillMount!="function"||(typeof h.componentWillMount=="function"&&h.componentWillMount(),typeof h.UNSAFE_componentWillMount=="function"&&h.UNSAFE_componentWillMount()),typeof h.componentDidMount=="function"&&(e.flags|=4194308)):(typeof h.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=i,e.memoizedState=_),h.props=i,h.state=_,h.context=j,i=b):(typeof h.componentDidMount=="function"&&(e.flags|=4194308),i=!1)}else{h=e.stateNode,bh(o,e),b=e.memoizedProps,j=e.type===e.elementType?b:Lg(e.type,b),h.props=j,g=e.pendingProps,c=h.context,_=s.contextType,typeof _=="object"&&_!==null?_=Vg(_):(_=Zf(s)?Xf:H.current,_=Yf(e,_));var $=s.getDerivedStateFromProps;(_e=typeof $=="function"||typeof h.getSnapshotBeforeUpdate=="function")||typeof h.UNSAFE_componentWillReceiveProps!="function"&&typeof h.componentWillReceiveProps!="function"||(b!==g||c!==_)&&qh(e,h,i,_),$g=!1,c=e.memoizedState,h.state=c,gh(e,i,h,a);var et=e.memoizedState;b!==g||c!==et||Wf.current||$g?(typeof $=="function"&&(kh(e,s,$,i),et=e.memoizedState),(j=$g||oh(e,s,j,i,c,et,_)||!1)?(_e||typeof h.UNSAFE_componentWillUpdate!="function"&&typeof h.componentWillUpdate!="function"||(typeof h.componentWillUpdate=="function"&&h.componentWillUpdate(i,et,_),typeof h.UNSAFE_componentWillUpdate=="function"&&h.UNSAFE_componentWillUpdate(i,et,_)),typeof h.componentDidUpdate=="function"&&(e.flags|=4),typeof h.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof h.componentDidUpdate!="function"||b===o.memoizedProps&&c===o.memoizedState||(e.flags|=4),typeof h.getSnapshotBeforeUpdate!="function"||b===o.memoizedProps&&c===o.memoizedState||(e.flags|=1024),e.memoizedProps=i,e.memoizedState=et),h.props=i,h.state=et,h.context=_,i=j):(typeof h.componentDidUpdate!="function"||b===o.memoizedProps&&c===o.memoizedState||(e.flags|=4),typeof h.getSnapshotBeforeUpdate!="function"||b===o.memoizedProps&&c===o.memoizedState||(e.flags|=1024),i=!1)}return kj(o,e,s,i,d,a)}function kj(o,e,s,i,a,d){hj(o,e);var h=(e.flags&128)!==0;if(!i&&!h)return a&&dg(e,s,!1),$i(o,e,d);i=e.stateNode,Xi.current=e;var b=h&&typeof s.getDerivedStateFromError!="function"?null:i.render();return e.flags|=1,o!==null&&h?(e.child=Bh(e,o.child,null,d),e.child=Bh(e,null,b,d)):Yi(o,e,b,d),e.memoizedState=i.state,a&&dg(e,s,!0),e.child}function lj(o){var e=o.stateNode;e.pendingContext?ag(o,e.pendingContext,e.pendingContext!==e.context):e.context&&ag(o,e.context,!1),Ih(o,e.containerInfo)}function mj(o,e,s,i,a){return Ig(),Jg(a),e.flags|=256,Yi(o,e,s,i),e.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(o){return{baseLanes:o,cachePool:null,transitions:null}}function pj(o,e,s){var i=e.pendingProps,a=M.current,d=!1,h=(e.flags&128)!==0,b;if((b=h)||(b=o!==null&&o.memoizedState===null?!1:(a&2)!==0),b?(d=!0,e.flags&=-129):(o===null||o.memoizedState!==null)&&(a|=1),G(M,a&1),o===null)return Eg(e),o=e.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(e.mode&1?o.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(h=i.children,o=i.fallback,d?(i=e.mode,d=e.child,h={mode:"hidden",children:h},!(i&1)&&d!==null?(d.childLanes=0,d.pendingProps=h):d=qj(h,i,0,null),o=Ah(o,i,s,null),d.return=e,o.return=e,d.sibling=o,e.child=d,e.child.memoizedState=oj(s),e.memoizedState=nj,o):rj(e,h));if(a=o.memoizedState,a!==null&&(b=a.dehydrated,b!==null))return sj(o,e,h,i,b,a,s);if(d){d=i.fallback,h=e.mode,a=o.child,b=a.sibling;var _={mode:"hidden",children:i.children};return!(h&1)&&e.child!==a?(i=e.child,i.childLanes=0,i.pendingProps=_,e.deletions=null):(i=wh(a,_),i.subtreeFlags=a.subtreeFlags&14680064),b!==null?d=wh(b,d):(d=Ah(d,h,s,null),d.flags|=2),d.return=e,i.return=e,i.sibling=d,e.child=i,i=d,d=e.child,h=o.child.memoizedState,h=h===null?oj(s):{baseLanes:h.baseLanes|s,cachePool:null,transitions:h.transitions},d.memoizedState=h,d.childLanes=o.childLanes&~s,e.memoizedState=nj,i}return d=o.child,o=d.sibling,i=wh(d,{mode:"visible",children:i.children}),!(e.mode&1)&&(i.lanes=s),i.return=e,i.sibling=null,o!==null&&(s=e.deletions,s===null?(e.deletions=[o],e.flags|=16):s.push(o)),e.child=i,e.memoizedState=null,i}function rj(o,e){return e=qj({mode:"visible",children:e},o.mode,0,null),e.return=o,o.child=e}function tj(o,e,s,i){return i!==null&&Jg(i),Bh(e,o.child,null,s),o=rj(e,e.pendingProps.children),o.flags|=2,e.memoizedState=null,o}function sj(o,e,s,i,a,d,h){if(s)return e.flags&256?(e.flags&=-257,i=Li(Error(p$1(422))),tj(o,e,h,i)):e.memoizedState!==null?(e.child=o.child,e.flags|=128,null):(d=i.fallback,a=e.mode,i=qj({mode:"visible",children:i.children},a,0,null),d=Ah(d,a,h,null),d.flags|=2,i.return=e,d.return=e,i.sibling=d,e.child=i,e.mode&1&&Bh(e,o.child,null,h),e.child.memoizedState=oj(h),e.memoizedState=nj,d);if(!(e.mode&1))return tj(o,e,h,null);if(a.data==="$!"){if(i=a.nextSibling&&a.nextSibling.dataset,i)var b=i.dgst;return i=b,d=Error(p$1(419)),i=Li(d,i,void 0),tj(o,e,h,i)}if(b=(h&o.childLanes)!==0,Ug||b){if(i=R,i!==null){switch(h&-h){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}a=a&(i.suspendedLanes|h)?0:a,a!==0&&a!==d.retryLane&&(d.retryLane=a,Zg(o,a),mh(i,o,a,-1))}return uj(),i=Li(Error(p$1(421))),tj(o,e,h,i)}return a.data==="$?"?(e.flags|=128,e.child=o.child,e=vj.bind(null,o),a._reactRetry=e,null):(o=d.treeContext,yg=Lf(a.nextSibling),xg=e,I=!0,zg=null,o!==null&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=o.id,sg=o.overflow,qg=e),e=rj(e,i.children),e.flags|=4096,e)}function wj(o,e,s){o.lanes|=e;var i=o.alternate;i!==null&&(i.lanes|=e),Sg(o.return,e,s)}function xj(o,e,s,i,a){var d=o.memoizedState;d===null?o.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:i,tail:s,tailMode:a}:(d.isBackwards=e,d.rendering=null,d.renderingStartTime=0,d.last=i,d.tail=s,d.tailMode=a)}function yj(o,e,s){var i=e.pendingProps,a=i.revealOrder,d=i.tail;if(Yi(o,e,i.children,s),i=M.current,i&2)i=i&1|2,e.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=e.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&wj(o,s,e);else if(o.tag===19)wj(o,s,e);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===e)break e;for(;o.sibling===null;){if(o.return===null||o.return===e)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}i&=1}if(G(M,i),!(e.mode&1))e.memoizedState=null;else switch(a){case"forwards":for(s=e.child,a=null;s!==null;)o=s.alternate,o!==null&&Mh(o)===null&&(a=s),s=s.sibling;s=a,s===null?(a=e.child,e.child=null):(a=s.sibling,s.sibling=null),xj(e,!1,a,s,d);break;case"backwards":for(s=null,a=e.child,e.child=null;a!==null;){if(o=a.alternate,o!==null&&Mh(o)===null){e.child=a;break}o=a.sibling,a.sibling=s,s=a,a=o}xj(e,!0,s,null,d);break;case"together":xj(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function jj(o,e){!(e.mode&1)&&o!==null&&(o.alternate=null,e.alternate=null,e.flags|=2)}function $i(o,e,s){if(o!==null&&(e.dependencies=o.dependencies),hh|=e.lanes,!(s&e.childLanes))return null;if(o!==null&&e.child!==o.child)throw Error(p$1(153));if(e.child!==null){for(o=e.child,s=wh(o,o.pendingProps),e.child=s,s.return=e;o.sibling!==null;)o=o.sibling,s=s.sibling=wh(o,o.pendingProps),s.return=e;s.sibling=null}return e.child}function zj(o,e,s){switch(e.tag){case 3:lj(e),Ig();break;case 5:Kh(e);break;case 1:Zf(e.type)&&cg(e);break;case 4:Ih(e,e.stateNode.containerInfo);break;case 10:var i=e.type._context,a=e.memoizedProps.value;G(Mg,i._currentValue),i._currentValue=a;break;case 13:if(i=e.memoizedState,i!==null)return i.dehydrated!==null?(G(M,M.current&1),e.flags|=128,null):s&e.child.childLanes?pj(o,e,s):(G(M,M.current&1),o=$i(o,e,s),o!==null?o.sibling:null);G(M,M.current&1);break;case 19:if(i=(s&e.childLanes)!==0,o.flags&128){if(i)return yj(o,e,s);e.flags|=128}if(a=e.memoizedState,a!==null&&(a.rendering=null,a.tail=null,a.lastEffect=null),G(M,M.current),i)break;return null;case 22:case 23:return e.lanes=0,ej(o,e,s)}return $i(o,e,s)}var Aj,Bj,Cj,Dj;Aj=function(o,e){for(var s=e.child;s!==null;){if(s.tag===5||s.tag===6)o.appendChild(s.stateNode);else if(s.tag!==4&&s.child!==null){s.child.return=s,s=s.child;continue}if(s===e)break;for(;s.sibling===null;){if(s.return===null||s.return===e)return;s=s.return}s.sibling.return=s.return,s=s.sibling}};Bj=function(){};Cj=function(o,e,s,i){var a=o.memoizedProps;if(a!==i){o=e.stateNode,Hh(Eh.current);var d=null;switch(s){case"input":a=Ya(o,a),i=Ya(o,i),d=[];break;case"select":a=A({},a,{value:void 0}),i=A({},i,{value:void 0}),d=[];break;case"textarea":a=gb(o,a),i=gb(o,i),d=[];break;default:typeof a.onClick!="function"&&typeof i.onClick=="function"&&(o.onclick=Bf)}ub(s,i);var h;s=null;for(j in a)if(!i.hasOwnProperty(j)&&a.hasOwnProperty(j)&&a[j]!=null)if(j==="style"){var b=a[j];for(h in b)b.hasOwnProperty(h)&&(s||(s={}),s[h]="")}else j!=="dangerouslySetInnerHTML"&&j!=="children"&&j!=="suppressContentEditableWarning"&&j!=="suppressHydrationWarning"&&j!=="autoFocus"&&(ea.hasOwnProperty(j)?d||(d=[]):(d=d||[]).push(j,null));for(j in i){var _=i[j];if(b=a!=null?a[j]:void 0,i.hasOwnProperty(j)&&_!==b&&(_!=null||b!=null))if(j==="style")if(b){for(h in b)!b.hasOwnProperty(h)||_&&_.hasOwnProperty(h)||(s||(s={}),s[h]="");for(h in _)_.hasOwnProperty(h)&&b[h]!==_[h]&&(s||(s={}),s[h]=_[h])}else s||(d||(d=[]),d.push(j,s)),s=_;else j==="dangerouslySetInnerHTML"?(_=_?_.__html:void 0,b=b?b.__html:void 0,_!=null&&b!==_&&(d=d||[]).push(j,_)):j==="children"?typeof _!="string"&&typeof _!="number"||(d=d||[]).push(j,""+_):j!=="suppressContentEditableWarning"&&j!=="suppressHydrationWarning"&&(ea.hasOwnProperty(j)?(_!=null&&j==="onScroll"&&D("scroll",o),d||b===_||(d=[])):(d=d||[]).push(j,_))}s&&(d=d||[]).push("style",s);var j=d;(e.updateQueue=j)&&(e.flags|=4)}};Dj=function(o,e,s,i){s!==i&&(e.flags|=4)};function Ej(o,e){if(!I)switch(o.tailMode){case"hidden":e=o.tail;for(var s=null;e!==null;)e.alternate!==null&&(s=e),e=e.sibling;s===null?o.tail=null:s.sibling=null;break;case"collapsed":s=o.tail;for(var i=null;s!==null;)s.alternate!==null&&(i=s),s=s.sibling;i===null?e||o.tail===null?o.tail=null:o.tail.sibling=null:i.sibling=null}}function S(o){var e=o.alternate!==null&&o.alternate.child===o.child,s=0,i=0;if(e)for(var a=o.child;a!==null;)s|=a.lanes|a.childLanes,i|=a.subtreeFlags&14680064,i|=a.flags&14680064,a.return=o,a=a.sibling;else for(a=o.child;a!==null;)s|=a.lanes|a.childLanes,i|=a.subtreeFlags,i|=a.flags,a.return=o,a=a.sibling;return o.subtreeFlags|=i,o.childLanes=s,e}function Fj(o,e,s){var i=e.pendingProps;switch(wg(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(e),null;case 1:return Zf(e.type)&&$f(),S(e),null;case 3:return i=e.stateNode,Jh(),E(Wf),E(H),Oh(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(o===null||o.child===null)&&(Gg(e)?e.flags|=4:o===null||o.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,zg!==null&&(Gj(zg),zg=null))),Bj(o,e),S(e),null;case 5:Lh(e);var a=Hh(Gh.current);if(s=e.type,o!==null&&e.stateNode!=null)Cj(o,e,s,i,a),o.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!i){if(e.stateNode===null)throw Error(p$1(166));return S(e),null}if(o=Hh(Eh.current),Gg(e)){i=e.stateNode,s=e.type;var d=e.memoizedProps;switch(i[Of]=e,i[Pf]=d,o=(e.mode&1)!==0,s){case"dialog":D("cancel",i),D("close",i);break;case"iframe":case"object":case"embed":D("load",i);break;case"video":case"audio":for(a=0;a<lf.length;a++)D(lf[a],i);break;case"source":D("error",i);break;case"img":case"image":case"link":D("error",i),D("load",i);break;case"details":D("toggle",i);break;case"input":Za(i,d),D("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!d.multiple},D("invalid",i);break;case"textarea":hb(i,d),D("invalid",i)}ub(s,d),a=null;for(var h in d)if(d.hasOwnProperty(h)){var b=d[h];h==="children"?typeof b=="string"?i.textContent!==b&&(d.suppressHydrationWarning!==!0&&Af(i.textContent,b,o),a=["children",b]):typeof b=="number"&&i.textContent!==""+b&&(d.suppressHydrationWarning!==!0&&Af(i.textContent,b,o),a=["children",""+b]):ea.hasOwnProperty(h)&&b!=null&&h==="onScroll"&&D("scroll",i)}switch(s){case"input":Va(i),db(i,d,!0);break;case"textarea":Va(i),jb(i);break;case"select":case"option":break;default:typeof d.onClick=="function"&&(i.onclick=Bf)}i=a,e.updateQueue=i,i!==null&&(e.flags|=4)}else{h=a.nodeType===9?a:a.ownerDocument,o==="http://www.w3.org/1999/xhtml"&&(o=kb(s)),o==="http://www.w3.org/1999/xhtml"?s==="script"?(o=h.createElement("div"),o.innerHTML="<script><\/script>",o=o.removeChild(o.firstChild)):typeof i.is=="string"?o=h.createElement(s,{is:i.is}):(o=h.createElement(s),s==="select"&&(h=o,i.multiple?h.multiple=!0:i.size&&(h.size=i.size))):o=h.createElementNS(o,s),o[Of]=e,o[Pf]=i,Aj(o,e,!1,!1),e.stateNode=o;e:{switch(h=vb(s,i),s){case"dialog":D("cancel",o),D("close",o),a=i;break;case"iframe":case"object":case"embed":D("load",o),a=i;break;case"video":case"audio":for(a=0;a<lf.length;a++)D(lf[a],o);a=i;break;case"source":D("error",o),a=i;break;case"img":case"image":case"link":D("error",o),D("load",o),a=i;break;case"details":D("toggle",o),a=i;break;case"input":Za(o,i),a=Ya(o,i),D("invalid",o);break;case"option":a=i;break;case"select":o._wrapperState={wasMultiple:!!i.multiple},a=A({},i,{value:void 0}),D("invalid",o);break;case"textarea":hb(o,i),a=gb(o,i),D("invalid",o);break;default:a=i}ub(s,a),b=a;for(d in b)if(b.hasOwnProperty(d)){var _=b[d];d==="style"?sb(o,_):d==="dangerouslySetInnerHTML"?(_=_?_.__html:void 0,_!=null&&nb(o,_)):d==="children"?typeof _=="string"?(s!=="textarea"||_!=="")&&ob(o,_):typeof _=="number"&&ob(o,""+_):d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&d!=="autoFocus"&&(ea.hasOwnProperty(d)?_!=null&&d==="onScroll"&&D("scroll",o):_!=null&&ta(o,d,_,h))}switch(s){case"input":Va(o),db(o,i,!1);break;case"textarea":Va(o),jb(o);break;case"option":i.value!=null&&o.setAttribute("value",""+Sa(i.value));break;case"select":o.multiple=!!i.multiple,d=i.value,d!=null?fb(o,!!i.multiple,d,!1):i.defaultValue!=null&&fb(o,!!i.multiple,i.defaultValue,!0);break;default:typeof a.onClick=="function"&&(o.onclick=Bf)}switch(s){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return S(e),null;case 6:if(o&&e.stateNode!=null)Dj(o,e,o.memoizedProps,i);else{if(typeof i!="string"&&e.stateNode===null)throw Error(p$1(166));if(s=Hh(Gh.current),Hh(Eh.current),Gg(e)){if(i=e.stateNode,s=e.memoizedProps,i[Of]=e,(d=i.nodeValue!==s)&&(o=xg,o!==null))switch(o.tag){case 3:Af(i.nodeValue,s,(o.mode&1)!==0);break;case 5:o.memoizedProps.suppressHydrationWarning!==!0&&Af(i.nodeValue,s,(o.mode&1)!==0)}d&&(e.flags|=4)}else i=(s.nodeType===9?s:s.ownerDocument).createTextNode(i),i[Of]=e,e.stateNode=i}return S(e),null;case 13:if(E(M),i=e.memoizedState,o===null||o.memoizedState!==null&&o.memoizedState.dehydrated!==null){if(I&&yg!==null&&e.mode&1&&!(e.flags&128))Hg(),Ig(),e.flags|=98560,d=!1;else if(d=Gg(e),i!==null&&i.dehydrated!==null){if(o===null){if(!d)throw Error(p$1(318));if(d=e.memoizedState,d=d!==null?d.dehydrated:null,!d)throw Error(p$1(317));d[Of]=e}else Ig(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;S(e),d=!1}else zg!==null&&(Gj(zg),zg=null),d=!0;if(!d)return e.flags&65536?e:null}return e.flags&128?(e.lanes=s,e):(i=i!==null,i!==(o!==null&&o.memoizedState!==null)&&i&&(e.child.flags|=8192,e.mode&1&&(o===null||M.current&1?T===0&&(T=3):uj())),e.updateQueue!==null&&(e.flags|=4),S(e),null);case 4:return Jh(),Bj(o,e),o===null&&sf(e.stateNode.containerInfo),S(e),null;case 10:return Rg(e.type._context),S(e),null;case 17:return Zf(e.type)&&$f(),S(e),null;case 19:if(E(M),d=e.memoizedState,d===null)return S(e),null;if(i=(e.flags&128)!==0,h=d.rendering,h===null)if(i)Ej(d,!1);else{if(T!==0||o!==null&&o.flags&128)for(o=e.child;o!==null;){if(h=Mh(o),h!==null){for(e.flags|=128,Ej(d,!1),i=h.updateQueue,i!==null&&(e.updateQueue=i,e.flags|=4),e.subtreeFlags=0,i=s,s=e.child;s!==null;)d=s,o=i,d.flags&=14680066,h=d.alternate,h===null?(d.childLanes=0,d.lanes=o,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=h.childLanes,d.lanes=h.lanes,d.child=h.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=h.memoizedProps,d.memoizedState=h.memoizedState,d.updateQueue=h.updateQueue,d.type=h.type,o=h.dependencies,d.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),s=s.sibling;return G(M,M.current&1|2),e.child}o=o.sibling}d.tail!==null&&B()>Hj&&(e.flags|=128,i=!0,Ej(d,!1),e.lanes=4194304)}else{if(!i)if(o=Mh(h),o!==null){if(e.flags|=128,i=!0,s=o.updateQueue,s!==null&&(e.updateQueue=s,e.flags|=4),Ej(d,!0),d.tail===null&&d.tailMode==="hidden"&&!h.alternate&&!I)return S(e),null}else 2*B()-d.renderingStartTime>Hj&&s!==1073741824&&(e.flags|=128,i=!0,Ej(d,!1),e.lanes=4194304);d.isBackwards?(h.sibling=e.child,e.child=h):(s=d.last,s!==null?s.sibling=h:e.child=h,d.last=h)}return d.tail!==null?(e=d.tail,d.rendering=e,d.tail=e.sibling,d.renderingStartTime=B(),e.sibling=null,s=M.current,G(M,i?s&1|2:s&1),e):(S(e),null);case 22:case 23:return Ij(),i=e.memoizedState!==null,o!==null&&o.memoizedState!==null!==i&&(e.flags|=8192),i&&e.mode&1?gj&1073741824&&(S(e),e.subtreeFlags&6&&(e.flags|=8192)):S(e),null;case 24:return null;case 25:return null}throw Error(p$1(156,e.tag))}function Jj(o,e){switch(wg(e),e.tag){case 1:return Zf(e.type)&&$f(),o=e.flags,o&65536?(e.flags=o&-65537|128,e):null;case 3:return Jh(),E(Wf),E(H),Oh(),o=e.flags,o&65536&&!(o&128)?(e.flags=o&-65537|128,e):null;case 5:return Lh(e),null;case 13:if(E(M),o=e.memoizedState,o!==null&&o.dehydrated!==null){if(e.alternate===null)throw Error(p$1(340));Ig()}return o=e.flags,o&65536?(e.flags=o&-65537|128,e):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(e.type._context),null;case 22:case 23:return Ij(),null;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=typeof WeakSet=="function"?WeakSet:Set,V=null;function Mj(o,e){var s=o.ref;if(s!==null)if(typeof s=="function")try{s(null)}catch(i){W(o,e,i)}else s.current=null}function Nj(o,e,s){try{s()}catch(i){W(o,e,i)}}var Oj=!1;function Pj(o,e){if(Cf=dd,o=Me(),Ne(o)){if("selectionStart"in o)var s={start:o.selectionStart,end:o.selectionEnd};else e:{s=(s=o.ownerDocument)&&s.defaultView||window;var i=s.getSelection&&s.getSelection();if(i&&i.rangeCount!==0){s=i.anchorNode;var a=i.anchorOffset,d=i.focusNode;i=i.focusOffset;try{s.nodeType,d.nodeType}catch{s=null;break e}var h=0,b=-1,_=-1,j=0,_e=0,g=o,c=null;t:for(;;){for(var $;g!==s||a!==0&&g.nodeType!==3||(b=h+a),g!==d||i!==0&&g.nodeType!==3||(_=h+i),g.nodeType===3&&(h+=g.nodeValue.length),($=g.firstChild)!==null;)c=g,g=$;for(;;){if(g===o)break t;if(c===s&&++j===a&&(b=h),c===d&&++_e===i&&(_=h),($=g.nextSibling)!==null)break;g=c,c=g.parentNode}g=$}s=b===-1||_===-1?null:{start:b,end:_}}else s=null}s=s||{start:0,end:0}}else s=null;for(Df={focusedElem:o,selectionRange:s},dd=!1,V=e;V!==null;)if(e=V,o=e.child,(e.subtreeFlags&1028)!==0&&o!==null)o.return=e,V=o;else for(;V!==null;){e=V;try{var et=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(et!==null){var tt=et.memoizedProps,nt=et.memoizedState,rt=e.stateNode,ot=rt.getSnapshotBeforeUpdate(e.elementType===e.type?tt:Lg(e.type,tt),nt);rt.__reactInternalSnapshotBeforeUpdate=ot}break;case 3:var st=e.stateNode.containerInfo;st.nodeType===1?st.textContent="":st.nodeType===9&&st.documentElement&&st.removeChild(st.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p$1(163))}}catch(it){W(e,e.return,it)}if(o=e.sibling,o!==null){o.return=e.return,V=o;break}V=e.return}return et=Oj,Oj=!1,et}function Qj(o,e,s){var i=e.updateQueue;if(i=i!==null?i.lastEffect:null,i!==null){var a=i=i.next;do{if((a.tag&o)===o){var d=a.destroy;a.destroy=void 0,d!==void 0&&Nj(e,s,d)}a=a.next}while(a!==i)}}function Rj(o,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var s=e=e.next;do{if((s.tag&o)===o){var i=s.create;s.destroy=i()}s=s.next}while(s!==e)}}function Sj(o){var e=o.ref;if(e!==null){var s=o.stateNode;switch(o.tag){case 5:o=s;break;default:o=s}typeof e=="function"?e(o):e.current=o}}function Tj(o){var e=o.alternate;e!==null&&(o.alternate=null,Tj(e)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(e=o.stateNode,e!==null&&(delete e[Of],delete e[Pf],delete e[of],delete e[Qf],delete e[Rf])),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Uj(o){return o.tag===5||o.tag===3||o.tag===4}function Vj(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Uj(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Wj(o,e,s){var i=o.tag;if(i===5||i===6)o=o.stateNode,e?s.nodeType===8?s.parentNode.insertBefore(o,e):s.insertBefore(o,e):(s.nodeType===8?(e=s.parentNode,e.insertBefore(o,s)):(e=s,e.appendChild(o)),s=s._reactRootContainer,s!=null||e.onclick!==null||(e.onclick=Bf));else if(i!==4&&(o=o.child,o!==null))for(Wj(o,e,s),o=o.sibling;o!==null;)Wj(o,e,s),o=o.sibling}function Xj(o,e,s){var i=o.tag;if(i===5||i===6)o=o.stateNode,e?s.insertBefore(o,e):s.appendChild(o);else if(i!==4&&(o=o.child,o!==null))for(Xj(o,e,s),o=o.sibling;o!==null;)Xj(o,e,s),o=o.sibling}var X=null,Yj=!1;function Zj(o,e,s){for(s=s.child;s!==null;)ak(o,e,s),s=s.sibling}function ak(o,e,s){if(lc&&typeof lc.onCommitFiberUnmount=="function")try{lc.onCommitFiberUnmount(kc,s)}catch{}switch(s.tag){case 5:U||Mj(s,e);case 6:var i=X,a=Yj;X=null,Zj(o,e,s),X=i,Yj=a,X!==null&&(Yj?(o=X,s=s.stateNode,o.nodeType===8?o.parentNode.removeChild(s):o.removeChild(s)):X.removeChild(s.stateNode));break;case 18:X!==null&&(Yj?(o=X,s=s.stateNode,o.nodeType===8?Kf(o.parentNode,s):o.nodeType===1&&Kf(o,s),bd(o)):Kf(X,s.stateNode));break;case 4:i=X,a=Yj,X=s.stateNode.containerInfo,Yj=!0,Zj(o,e,s),X=i,Yj=a;break;case 0:case 11:case 14:case 15:if(!U&&(i=s.updateQueue,i!==null&&(i=i.lastEffect,i!==null))){a=i=i.next;do{var d=a,h=d.destroy;d=d.tag,h!==void 0&&(d&2||d&4)&&Nj(s,e,h),a=a.next}while(a!==i)}Zj(o,e,s);break;case 1:if(!U&&(Mj(s,e),i=s.stateNode,typeof i.componentWillUnmount=="function"))try{i.props=s.memoizedProps,i.state=s.memoizedState,i.componentWillUnmount()}catch(b){W(s,e,b)}Zj(o,e,s);break;case 21:Zj(o,e,s);break;case 22:s.mode&1?(U=(i=U)||s.memoizedState!==null,Zj(o,e,s),U=i):Zj(o,e,s);break;default:Zj(o,e,s)}}function bk(o){var e=o.updateQueue;if(e!==null){o.updateQueue=null;var s=o.stateNode;s===null&&(s=o.stateNode=new Lj),e.forEach(function(i){var a=ck.bind(null,o,i);s.has(i)||(s.add(i),i.then(a,a))})}}function dk(o,e){var s=e.deletions;if(s!==null)for(var i=0;i<s.length;i++){var a=s[i];try{var d=o,h=e,b=h;e:for(;b!==null;){switch(b.tag){case 5:X=b.stateNode,Yj=!1;break e;case 3:X=b.stateNode.containerInfo,Yj=!0;break e;case 4:X=b.stateNode.containerInfo,Yj=!0;break e}b=b.return}if(X===null)throw Error(p$1(160));ak(d,h,a),X=null,Yj=!1;var _=a.alternate;_!==null&&(_.return=null),a.return=null}catch(j){W(a,e,j)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)ek(e,o),e=e.sibling}function ek(o,e){var s=o.alternate,i=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:if(dk(e,o),fk(o),i&4){try{Qj(3,o,o.return),Rj(3,o)}catch(tt){W(o,o.return,tt)}try{Qj(5,o,o.return)}catch(tt){W(o,o.return,tt)}}break;case 1:dk(e,o),fk(o),i&512&&s!==null&&Mj(s,s.return);break;case 5:if(dk(e,o),fk(o),i&512&&s!==null&&Mj(s,s.return),o.flags&32){var a=o.stateNode;try{ob(a,"")}catch(tt){W(o,o.return,tt)}}if(i&4&&(a=o.stateNode,a!=null)){var d=o.memoizedProps,h=s!==null?s.memoizedProps:d,b=o.type,_=o.updateQueue;if(o.updateQueue=null,_!==null)try{b==="input"&&d.type==="radio"&&d.name!=null&&ab(a,d),vb(b,h);var j=vb(b,d);for(h=0;h<_.length;h+=2){var _e=_[h],g=_[h+1];_e==="style"?sb(a,g):_e==="dangerouslySetInnerHTML"?nb(a,g):_e==="children"?ob(a,g):ta(a,_e,g,j)}switch(b){case"input":bb(a,d);break;case"textarea":ib(a,d);break;case"select":var c=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!d.multiple;var $=d.value;$!=null?fb(a,!!d.multiple,$,!1):c!==!!d.multiple&&(d.defaultValue!=null?fb(a,!!d.multiple,d.defaultValue,!0):fb(a,!!d.multiple,d.multiple?[]:"",!1))}a[Pf]=d}catch(tt){W(o,o.return,tt)}}break;case 6:if(dk(e,o),fk(o),i&4){if(o.stateNode===null)throw Error(p$1(162));a=o.stateNode,d=o.memoizedProps;try{a.nodeValue=d}catch(tt){W(o,o.return,tt)}}break;case 3:if(dk(e,o),fk(o),i&4&&s!==null&&s.memoizedState.isDehydrated)try{bd(e.containerInfo)}catch(tt){W(o,o.return,tt)}break;case 4:dk(e,o),fk(o);break;case 13:dk(e,o),fk(o),a=o.child,a.flags&8192&&(d=a.memoizedState!==null,a.stateNode.isHidden=d,!d||a.alternate!==null&&a.alternate.memoizedState!==null||(gk=B())),i&4&&bk(o);break;case 22:if(_e=s!==null&&s.memoizedState!==null,o.mode&1?(U=(j=U)||_e,dk(e,o),U=j):dk(e,o),fk(o),i&8192){if(j=o.memoizedState!==null,(o.stateNode.isHidden=j)&&!_e&&o.mode&1)for(V=o,_e=o.child;_e!==null;){for(g=V=_e;V!==null;){switch(c=V,$=c.child,c.tag){case 0:case 11:case 14:case 15:Qj(4,c,c.return);break;case 1:Mj(c,c.return);var et=c.stateNode;if(typeof et.componentWillUnmount=="function"){i=c,s=c.return;try{e=i,et.props=e.memoizedProps,et.state=e.memoizedState,et.componentWillUnmount()}catch(tt){W(i,s,tt)}}break;case 5:Mj(c,c.return);break;case 22:if(c.memoizedState!==null){hk(g);continue}}$!==null?($.return=c,V=$):hk(g)}_e=_e.sibling}e:for(_e=null,g=o;;){if(g.tag===5){if(_e===null){_e=g;try{a=g.stateNode,j?(d=a.style,typeof d.setProperty=="function"?d.setProperty("display","none","important"):d.display="none"):(b=g.stateNode,_=g.memoizedProps.style,h=_!=null&&_.hasOwnProperty("display")?_.display:null,b.style.display=rb("display",h))}catch(tt){W(o,o.return,tt)}}}else if(g.tag===6){if(_e===null)try{g.stateNode.nodeValue=j?"":g.memoizedProps}catch(tt){W(o,o.return,tt)}}else if((g.tag!==22&&g.tag!==23||g.memoizedState===null||g===o)&&g.child!==null){g.child.return=g,g=g.child;continue}if(g===o)break e;for(;g.sibling===null;){if(g.return===null||g.return===o)break e;_e===g&&(_e=null),g=g.return}_e===g&&(_e=null),g.sibling.return=g.return,g=g.sibling}}break;case 19:dk(e,o),fk(o),i&4&&bk(o);break;case 21:break;default:dk(e,o),fk(o)}}function fk(o){var e=o.flags;if(e&2){try{e:{for(var s=o.return;s!==null;){if(Uj(s)){var i=s;break e}s=s.return}throw Error(p$1(160))}switch(i.tag){case 5:var a=i.stateNode;i.flags&32&&(ob(a,""),i.flags&=-33);var d=Vj(o);Xj(o,d,a);break;case 3:case 4:var h=i.stateNode.containerInfo,b=Vj(o);Wj(o,b,h);break;default:throw Error(p$1(161))}}catch(_){W(o,o.return,_)}o.flags&=-3}e&4096&&(o.flags&=-4097)}function ik(o,e,s){V=o,jk(o)}function jk(o,e,s){for(var i=(o.mode&1)!==0;V!==null;){var a=V,d=a.child;if(a.tag===22&&i){var h=a.memoizedState!==null||Kj;if(!h){var b=a.alternate,_=b!==null&&b.memoizedState!==null||U;b=Kj;var j=U;if(Kj=h,(U=_)&&!j)for(V=a;V!==null;)h=V,_=h.child,h.tag===22&&h.memoizedState!==null?kk(a):_!==null?(_.return=h,V=_):kk(a);for(;d!==null;)V=d,jk(d),d=d.sibling;V=a,Kj=b,U=j}lk(o)}else a.subtreeFlags&8772&&d!==null?(d.return=a,V=d):lk(o)}}function lk(o){for(;V!==null;){var e=V;if(e.flags&8772){var s=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:U||Rj(5,e);break;case 1:var i=e.stateNode;if(e.flags&4&&!U)if(s===null)i.componentDidMount();else{var a=e.elementType===e.type?s.memoizedProps:Lg(e.type,s.memoizedProps);i.componentDidUpdate(a,s.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var d=e.updateQueue;d!==null&&ih(e,d,i);break;case 3:var h=e.updateQueue;if(h!==null){if(s=null,e.child!==null)switch(e.child.tag){case 5:s=e.child.stateNode;break;case 1:s=e.child.stateNode}ih(e,h,s)}break;case 5:var b=e.stateNode;if(s===null&&e.flags&4){s=b;var _=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":_.autoFocus&&s.focus();break;case"img":_.src&&(s.src=_.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var j=e.alternate;if(j!==null){var _e=j.memoizedState;if(_e!==null){var g=_e.dehydrated;g!==null&&bd(g)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(p$1(163))}U||e.flags&512&&Sj(e)}catch(c){W(e,e.return,c)}}if(e===o){V=null;break}if(s=e.sibling,s!==null){s.return=e.return,V=s;break}V=e.return}}function hk(o){for(;V!==null;){var e=V;if(e===o){V=null;break}var s=e.sibling;if(s!==null){s.return=e.return,V=s;break}V=e.return}}function kk(o){for(;V!==null;){var e=V;try{switch(e.tag){case 0:case 11:case 15:var s=e.return;try{Rj(4,e)}catch(_){W(e,s,_)}break;case 1:var i=e.stateNode;if(typeof i.componentDidMount=="function"){var a=e.return;try{i.componentDidMount()}catch(_){W(e,a,_)}}var d=e.return;try{Sj(e)}catch(_){W(e,d,_)}break;case 5:var h=e.return;try{Sj(e)}catch(_){W(e,h,_)}}}catch(_){W(e,e.return,_)}if(e===o){V=null;break}var b=e.sibling;if(b!==null){b.return=e.return,V=b;break}V=e.return}}var mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=1/0,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return K&6?B():Bk!==-1?Bk:Bk=B()}function lh(o){return o.mode&1?K&2&&Z!==0?Z&-Z:Kg.transition!==null?(Ck===0&&(Ck=yc()),Ck):(o=C,o!==0||(o=window.event,o=o===void 0?16:jd(o.type)),o):1}function mh(o,e,s,i){if(50<zk)throw zk=0,Ak=null,Error(p$1(185));Ac(o,s,i),(!(K&2)||o!==R)&&(o===R&&(!(K&2)&&(rk|=s),T===4&&Dk(o,Z)),Ek(o,i),s===1&&K===0&&!(e.mode&1)&&(Hj=B()+500,fg&&jg()))}function Ek(o,e){var s=o.callbackNode;wc(o,e);var i=uc(o,o===R?Z:0);if(i===0)s!==null&&bc(s),o.callbackNode=null,o.callbackPriority=0;else if(e=i&-i,o.callbackPriority!==e){if(s!=null&&bc(s),e===1)o.tag===0?ig(Fk.bind(null,o)):hg(Fk.bind(null,o)),Jf(function(){!(K&6)&&jg()}),s=null;else{switch(Dc(i)){case 1:s=fc;break;case 4:s=gc;break;case 16:s=hc;break;case 536870912:s=jc;break;default:s=hc}s=Gk(s,Hk.bind(null,o))}o.callbackPriority=e,o.callbackNode=s}}function Hk(o,e){if(Bk=-1,Ck=0,K&6)throw Error(p$1(327));var s=o.callbackNode;if(Ik()&&o.callbackNode!==s)return null;var i=uc(o,o===R?Z:0);if(i===0)return null;if(i&30||i&o.expiredLanes||e)e=Jk(o,i);else{e=i;var a=K;K|=2;var d=Kk();(R!==o||Z!==e)&&(vk=null,Hj=B()+500,Lk(o,e));do try{Mk();break}catch(b){Nk(o,b)}while(!0);Qg(),nk.current=d,K=a,Y!==null?e=0:(R=null,Z=0,e=T)}if(e!==0){if(e===2&&(a=xc(o),a!==0&&(i=a,e=Ok(o,a))),e===1)throw s=qk,Lk(o,0),Dk(o,i),Ek(o,B()),s;if(e===6)Dk(o,i);else{if(a=o.current.alternate,!(i&30)&&!Pk(a)&&(e=Jk(o,i),e===2&&(d=xc(o),d!==0&&(i=d,e=Ok(o,d))),e===1))throw s=qk,Lk(o,0),Dk(o,i),Ek(o,B()),s;switch(o.finishedWork=a,o.finishedLanes=i,e){case 0:case 1:throw Error(p$1(345));case 2:Qk(o,uk,vk);break;case 3:if(Dk(o,i),(i&130023424)===i&&(e=gk+500-B(),10<e)){if(uc(o,0)!==0)break;if(a=o.suspendedLanes,(a&i)!==i){L(),o.pingedLanes|=o.suspendedLanes&a;break}o.timeoutHandle=Ff(Qk.bind(null,o,uk,vk),e);break}Qk(o,uk,vk);break;case 4:if(Dk(o,i),(i&4194240)===i)break;for(e=o.eventTimes,a=-1;0<i;){var h=31-oc(i);d=1<<h,h=e[h],h>a&&(a=h),i&=~d}if(i=a,i=B()-i,i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*mk(i/1960))-i,10<i){o.timeoutHandle=Ff(Qk.bind(null,o,uk,vk),i);break}Qk(o,uk,vk);break;case 5:Qk(o,uk,vk);break;default:throw Error(p$1(329))}}}return Ek(o,B()),o.callbackNode===s?Hk.bind(null,o):null}function Ok(o,e){var s=tk;return o.current.memoizedState.isDehydrated&&(Lk(o,e).flags|=256),o=Jk(o,e),o!==2&&(e=uk,uk=s,e!==null&&Gj(e)),o}function Gj(o){uk===null?uk=o:uk.push.apply(uk,o)}function Pk(o){for(var e=o;;){if(e.flags&16384){var s=e.updateQueue;if(s!==null&&(s=s.stores,s!==null))for(var i=0;i<s.length;i++){var a=s[i],d=a.getSnapshot;a=a.value;try{if(!He(d(),a))return!1}catch{return!1}}}if(s=e.child,e.subtreeFlags&16384&&s!==null)s.return=e,e=s;else{if(e===o)break;for(;e.sibling===null;){if(e.return===null||e.return===o)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function Dk(o,e){for(e&=~sk,e&=~rk,o.suspendedLanes|=e,o.pingedLanes&=~e,o=o.expirationTimes;0<e;){var s=31-oc(e),i=1<<s;o[s]=-1,e&=~i}}function Fk(o){if(K&6)throw Error(p$1(327));Ik();var e=uc(o,0);if(!(e&1))return Ek(o,B()),null;var s=Jk(o,e);if(o.tag!==0&&s===2){var i=xc(o);i!==0&&(e=i,s=Ok(o,i))}if(s===1)throw s=qk,Lk(o,0),Dk(o,e),Ek(o,B()),s;if(s===6)throw Error(p$1(345));return o.finishedWork=o.current.alternate,o.finishedLanes=e,Qk(o,uk,vk),Ek(o,B()),null}function Rk(o,e){var s=K;K|=1;try{return o(e)}finally{K=s,K===0&&(Hj=B()+500,fg&&jg())}}function Sk(o){xk!==null&&xk.tag===0&&!(K&6)&&Ik();var e=K;K|=1;var s=pk.transition,i=C;try{if(pk.transition=null,C=1,o)return o()}finally{C=i,pk.transition=s,K=e,!(K&6)&&jg()}}function Ij(){gj=fj.current,E(fj)}function Lk(o,e){o.finishedWork=null,o.finishedLanes=0;var s=o.timeoutHandle;if(s!==-1&&(o.timeoutHandle=-1,Gf(s)),Y!==null)for(s=Y.return;s!==null;){var i=s;switch(wg(i),i.tag){case 1:i=i.type.childContextTypes,i!=null&&$f();break;case 3:Jh(),E(Wf),E(H),Oh();break;case 5:Lh(i);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(i.type._context);break;case 22:case 23:Ij()}s=s.return}if(R=o,Y=o=wh(o.current,null),Z=gj=e,T=0,qk=null,sk=rk=hh=0,uk=tk=null,Wg!==null){for(e=0;e<Wg.length;e++)if(s=Wg[e],i=s.interleaved,i!==null){s.interleaved=null;var a=i.next,d=s.pending;if(d!==null){var h=d.next;d.next=a,i.next=h}s.pending=i}Wg=null}return o}function Nk(o,e){do{var s=Y;try{if(Qg(),Ph.current=ai,Sh){for(var i=N.memoizedState;i!==null;){var a=i.queue;a!==null&&(a.pending=null),i=i.next}Sh=!1}if(Rh=0,P=O=N=null,Th=!1,Uh=0,ok.current=null,s===null||s.return===null){T=1,qk=e,Y=null;break}e:{var d=o,h=s.return,b=s,_=e;if(e=Z,b.flags|=32768,_!==null&&typeof _=="object"&&typeof _.then=="function"){var j=_,_e=b,g=_e.tag;if(!(_e.mode&1)&&(g===0||g===11||g===15)){var c=_e.alternate;c?(_e.updateQueue=c.updateQueue,_e.memoizedState=c.memoizedState,_e.lanes=c.lanes):(_e.updateQueue=null,_e.memoizedState=null)}var $=Vi(h);if($!==null){$.flags&=-257,Wi($,h,b,d,e),$.mode&1&&Ti(d,j,e),e=$,_=j;var et=e.updateQueue;if(et===null){var tt=new Set;tt.add(_),e.updateQueue=tt}else et.add(_);break e}else{if(!(e&1)){Ti(d,j,e),uj();break e}_=Error(p$1(426))}}else if(I&&b.mode&1){var nt=Vi(h);if(nt!==null){!(nt.flags&65536)&&(nt.flags|=256),Wi(nt,h,b,d,e),Jg(Ki(_,b));break e}}d=_=Ki(_,b),T!==4&&(T=2),tk===null?tk=[d]:tk.push(d),d=h;do{switch(d.tag){case 3:d.flags|=65536,e&=-e,d.lanes|=e;var rt=Oi(d,_,e);fh(d,rt);break e;case 1:b=_;var ot=d.type,st=d.stateNode;if(!(d.flags&128)&&(typeof ot.getDerivedStateFromError=="function"||st!==null&&typeof st.componentDidCatch=="function"&&(Si===null||!Si.has(st)))){d.flags|=65536,e&=-e,d.lanes|=e;var it=Ri(d,b,e);fh(d,it);break e}}d=d.return}while(d!==null)}Tk(s)}catch(at){e=at,Y===s&&s!==null&&(Y=s=s.return);continue}break}while(!0)}function Kk(){var o=nk.current;return nk.current=ai,o===null?ai:o}function uj(){(T===0||T===3||T===2)&&(T=4),R===null||!(hh&268435455)&&!(rk&268435455)||Dk(R,Z)}function Jk(o,e){var s=K;K|=2;var i=Kk();(R!==o||Z!==e)&&(vk=null,Lk(o,e));do try{Uk();break}catch(a){Nk(o,a)}while(!0);if(Qg(),K=s,nk.current=i,Y!==null)throw Error(p$1(261));return R=null,Z=0,T}function Uk(){for(;Y!==null;)Vk(Y)}function Mk(){for(;Y!==null&&!cc();)Vk(Y)}function Vk(o){var e=Wk(o.alternate,o,gj);o.memoizedProps=o.pendingProps,e===null?Tk(o):Y=e,ok.current=null}function Tk(o){var e=o;do{var s=e.alternate;if(o=e.return,e.flags&32768){if(s=Jj(s,e),s!==null){s.flags&=32767,Y=s;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{T=6,Y=null;return}}else if(s=Fj(s,e,gj),s!==null){Y=s;return}if(e=e.sibling,e!==null){Y=e;return}Y=e=o}while(e!==null);T===0&&(T=5)}function Qk(o,e,s){var i=C,a=pk.transition;try{pk.transition=null,C=1,Xk(o,e,s,i)}finally{pk.transition=a,C=i}return null}function Xk(o,e,s,i){do Ik();while(xk!==null);if(K&6)throw Error(p$1(327));s=o.finishedWork;var a=o.finishedLanes;if(s===null)return null;if(o.finishedWork=null,o.finishedLanes=0,s===o.current)throw Error(p$1(177));o.callbackNode=null,o.callbackPriority=0;var d=s.lanes|s.childLanes;if(Bc(o,d),o===R&&(Y=R=null,Z=0),!(s.subtreeFlags&2064)&&!(s.flags&2064)||wk||(wk=!0,Gk(hc,function(){return Ik(),null})),d=(s.flags&15990)!==0,s.subtreeFlags&15990||d){d=pk.transition,pk.transition=null;var h=C;C=1;var b=K;K|=4,ok.current=null,Pj(o,s),ek(s,o),Oe(Df),dd=!!Cf,Df=Cf=null,o.current=s,ik(s),dc(),K=b,C=h,pk.transition=d}else o.current=s;if(wk&&(wk=!1,xk=o,yk=a),d=o.pendingLanes,d===0&&(Si=null),mc(s.stateNode),Ek(o,B()),e!==null)for(i=o.onRecoverableError,s=0;s<e.length;s++)a=e[s],i(a.value,{componentStack:a.stack,digest:a.digest});if(Pi)throw Pi=!1,o=Qi,Qi=null,o;return yk&1&&o.tag!==0&&Ik(),d=o.pendingLanes,d&1?o===Ak?zk++:(zk=0,Ak=o):zk=0,jg(),null}function Ik(){if(xk!==null){var o=Dc(yk),e=pk.transition,s=C;try{if(pk.transition=null,C=16>o?16:o,xk===null)var i=!1;else{if(o=xk,xk=null,yk=0,K&6)throw Error(p$1(331));var a=K;for(K|=4,V=o.current;V!==null;){var d=V,h=d.child;if(V.flags&16){var b=d.deletions;if(b!==null){for(var _=0;_<b.length;_++){var j=b[_];for(V=j;V!==null;){var _e=V;switch(_e.tag){case 0:case 11:case 15:Qj(8,_e,d)}var g=_e.child;if(g!==null)g.return=_e,V=g;else for(;V!==null;){_e=V;var c=_e.sibling,$=_e.return;if(Tj(_e),_e===j){V=null;break}if(c!==null){c.return=$,V=c;break}V=$}}}var et=d.alternate;if(et!==null){var tt=et.child;if(tt!==null){et.child=null;do{var nt=tt.sibling;tt.sibling=null,tt=nt}while(tt!==null)}}V=d}}if(d.subtreeFlags&2064&&h!==null)h.return=d,V=h;else e:for(;V!==null;){if(d=V,d.flags&2048)switch(d.tag){case 0:case 11:case 15:Qj(9,d,d.return)}var rt=d.sibling;if(rt!==null){rt.return=d.return,V=rt;break e}V=d.return}}var ot=o.current;for(V=ot;V!==null;){h=V;var st=h.child;if(h.subtreeFlags&2064&&st!==null)st.return=h,V=st;else e:for(h=ot;V!==null;){if(b=V,b.flags&2048)try{switch(b.tag){case 0:case 11:case 15:Rj(9,b)}}catch(at){W(b,b.return,at)}if(b===h){V=null;break e}var it=b.sibling;if(it!==null){it.return=b.return,V=it;break e}V=b.return}}if(K=a,jg(),lc&&typeof lc.onPostCommitFiberRoot=="function")try{lc.onPostCommitFiberRoot(kc,o)}catch{}i=!0}return i}finally{C=s,pk.transition=e}}return!1}function Yk(o,e,s){e=Ki(s,e),e=Oi(o,e,1),o=dh(o,e,1),e=L(),o!==null&&(Ac(o,1,e),Ek(o,e))}function W(o,e,s){if(o.tag===3)Yk(o,o,s);else for(;e!==null;){if(e.tag===3){Yk(e,o,s);break}else if(e.tag===1){var i=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof i.componentDidCatch=="function"&&(Si===null||!Si.has(i))){o=Ki(s,o),o=Ri(e,o,1),e=dh(e,o,1),o=L(),e!==null&&(Ac(e,1,o),Ek(e,o));break}}e=e.return}}function Ui(o,e,s){var i=o.pingCache;i!==null&&i.delete(e),e=L(),o.pingedLanes|=o.suspendedLanes&s,R===o&&(Z&s)===s&&(T===4||T===3&&(Z&130023424)===Z&&500>B()-gk?Lk(o,0):sk|=s),Ek(o,e)}function Zk(o,e){e===0&&(o.mode&1?(e=sc,sc<<=1,!(sc&130023424)&&(sc=4194304)):e=1);var s=L();o=Zg(o,e),o!==null&&(Ac(o,e,s),Ek(o,s))}function vj(o){var e=o.memoizedState,s=0;e!==null&&(s=e.retryLane),Zk(o,s)}function ck(o,e){var s=0;switch(o.tag){case 13:var i=o.stateNode,a=o.memoizedState;a!==null&&(s=a.retryLane);break;case 19:i=o.stateNode;break;default:throw Error(p$1(314))}i!==null&&i.delete(e),Zk(o,s)}var Wk;Wk=function(o,e,s){if(o!==null)if(o.memoizedProps!==e.pendingProps||Wf.current)Ug=!0;else{if(!(o.lanes&s)&&!(e.flags&128))return Ug=!1,zj(o,e,s);Ug=!!(o.flags&131072)}else Ug=!1,I&&e.flags&1048576&&ug(e,ng,e.index);switch(e.lanes=0,e.tag){case 2:var i=e.type;jj(o,e),o=e.pendingProps;var a=Yf(e,H.current);Tg(e,s),a=Xh(null,e,i,o,a,s);var d=bi();return e.flags|=1,typeof a=="object"&&a!==null&&typeof a.render=="function"&&a.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Zf(i)?(d=!0,cg(e)):d=!1,e.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,ah(e),a.updater=nh,e.stateNode=a,a._reactInternals=e,rh(e,i,o,s),e=kj(null,e,i,!0,d,s)):(e.tag=0,I&&d&&vg(e),Yi(null,e,a,s),e=e.child),e;case 16:i=e.elementType;e:{switch(jj(o,e),o=e.pendingProps,a=i._init,i=a(i._payload),e.type=i,a=e.tag=$k(i),o=Lg(i,o),a){case 0:e=dj(null,e,i,o,s);break e;case 1:e=ij(null,e,i,o,s);break e;case 11:e=Zi(null,e,i,o,s);break e;case 14:e=aj(null,e,i,Lg(i.type,o),s);break e}throw Error(p$1(306,i,""))}return e;case 0:return i=e.type,a=e.pendingProps,a=e.elementType===i?a:Lg(i,a),dj(o,e,i,a,s);case 1:return i=e.type,a=e.pendingProps,a=e.elementType===i?a:Lg(i,a),ij(o,e,i,a,s);case 3:e:{if(lj(e),o===null)throw Error(p$1(387));i=e.pendingProps,d=e.memoizedState,a=d.element,bh(o,e),gh(e,i,null,s);var h=e.memoizedState;if(i=h.element,d.isDehydrated)if(d={element:i,isDehydrated:!1,cache:h.cache,pendingSuspenseBoundaries:h.pendingSuspenseBoundaries,transitions:h.transitions},e.updateQueue.baseState=d,e.memoizedState=d,e.flags&256){a=Ki(Error(p$1(423)),e),e=mj(o,e,i,s,a);break e}else if(i!==a){a=Ki(Error(p$1(424)),e),e=mj(o,e,i,s,a);break e}else for(yg=Lf(e.stateNode.containerInfo.firstChild),xg=e,I=!0,zg=null,s=Ch(e,null,i,s),e.child=s;s;)s.flags=s.flags&-3|4096,s=s.sibling;else{if(Ig(),i===a){e=$i(o,e,s);break e}Yi(o,e,i,s)}e=e.child}return e;case 5:return Kh(e),o===null&&Eg(e),i=e.type,a=e.pendingProps,d=o!==null?o.memoizedProps:null,h=a.children,Ef(i,a)?h=null:d!==null&&Ef(i,d)&&(e.flags|=32),hj(o,e),Yi(o,e,h,s),e.child;case 6:return o===null&&Eg(e),null;case 13:return pj(o,e,s);case 4:return Ih(e,e.stateNode.containerInfo),i=e.pendingProps,o===null?e.child=Bh(e,null,i,s):Yi(o,e,i,s),e.child;case 11:return i=e.type,a=e.pendingProps,a=e.elementType===i?a:Lg(i,a),Zi(o,e,i,a,s);case 7:return Yi(o,e,e.pendingProps,s),e.child;case 8:return Yi(o,e,e.pendingProps.children,s),e.child;case 12:return Yi(o,e,e.pendingProps.children,s),e.child;case 10:e:{if(i=e.type._context,a=e.pendingProps,d=e.memoizedProps,h=a.value,G(Mg,i._currentValue),i._currentValue=h,d!==null)if(He(d.value,h)){if(d.children===a.children&&!Wf.current){e=$i(o,e,s);break e}}else for(d=e.child,d!==null&&(d.return=e);d!==null;){var b=d.dependencies;if(b!==null){h=d.child;for(var _=b.firstContext;_!==null;){if(_.context===i){if(d.tag===1){_=ch(-1,s&-s),_.tag=2;var j=d.updateQueue;if(j!==null){j=j.shared;var _e=j.pending;_e===null?_.next=_:(_.next=_e.next,_e.next=_),j.pending=_}}d.lanes|=s,_=d.alternate,_!==null&&(_.lanes|=s),Sg(d.return,s,e),b.lanes|=s;break}_=_.next}}else if(d.tag===10)h=d.type===e.type?null:d.child;else if(d.tag===18){if(h=d.return,h===null)throw Error(p$1(341));h.lanes|=s,b=h.alternate,b!==null&&(b.lanes|=s),Sg(h,s,e),h=d.sibling}else h=d.child;if(h!==null)h.return=d;else for(h=d;h!==null;){if(h===e){h=null;break}if(d=h.sibling,d!==null){d.return=h.return,h=d;break}h=h.return}d=h}Yi(o,e,a.children,s),e=e.child}return e;case 9:return a=e.type,i=e.pendingProps.children,Tg(e,s),a=Vg(a),i=i(a),e.flags|=1,Yi(o,e,i,s),e.child;case 14:return i=e.type,a=Lg(i,e.pendingProps),a=Lg(i.type,a),aj(o,e,i,a,s);case 15:return cj(o,e,e.type,e.pendingProps,s);case 17:return i=e.type,a=e.pendingProps,a=e.elementType===i?a:Lg(i,a),jj(o,e),e.tag=1,Zf(i)?(o=!0,cg(e)):o=!1,Tg(e,s),ph(e,i,a),rh(e,i,a,s),kj(null,e,i,!0,o,s);case 19:return yj(o,e,s);case 22:return ej(o,e,s)}throw Error(p$1(156,e.tag))};function Gk(o,e){return ac(o,e)}function al(o,e,s,i){this.tag=o,this.key=s,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(o,e,s,i){return new al(o,e,s,i)}function bj(o){return o=o.prototype,!(!o||!o.isReactComponent)}function $k(o){if(typeof o=="function")return bj(o)?1:0;if(o!=null){if(o=o.$$typeof,o===Da)return 11;if(o===Ga)return 14}return 2}function wh(o,e){var s=o.alternate;return s===null?(s=Bg(o.tag,e,o.key,o.mode),s.elementType=o.elementType,s.type=o.type,s.stateNode=o.stateNode,s.alternate=o,o.alternate=s):(s.pendingProps=e,s.type=o.type,s.flags=0,s.subtreeFlags=0,s.deletions=null),s.flags=o.flags&14680064,s.childLanes=o.childLanes,s.lanes=o.lanes,s.child=o.child,s.memoizedProps=o.memoizedProps,s.memoizedState=o.memoizedState,s.updateQueue=o.updateQueue,e=o.dependencies,s.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},s.sibling=o.sibling,s.index=o.index,s.ref=o.ref,s}function yh(o,e,s,i,a,d){var h=2;if(i=o,typeof o=="function")bj(o)&&(h=1);else if(typeof o=="string")h=5;else e:switch(o){case ya:return Ah(s.children,a,d,e);case za:h=8,a|=8;break;case Aa:return o=Bg(12,s,e,a|2),o.elementType=Aa,o.lanes=d,o;case Ea:return o=Bg(13,s,e,a),o.elementType=Ea,o.lanes=d,o;case Fa:return o=Bg(19,s,e,a),o.elementType=Fa,o.lanes=d,o;case Ia:return qj(s,a,d,e);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case Ba:h=10;break e;case Ca:h=9;break e;case Da:h=11;break e;case Ga:h=14;break e;case Ha:h=16,i=null;break e}throw Error(p$1(130,o==null?o:typeof o,""))}return e=Bg(h,s,e,a),e.elementType=o,e.type=i,e.lanes=d,e}function Ah(o,e,s,i){return o=Bg(7,o,i,e),o.lanes=s,o}function qj(o,e,s,i){return o=Bg(22,o,i,e),o.elementType=Ia,o.lanes=s,o.stateNode={isHidden:!1},o}function xh(o,e,s){return o=Bg(6,o,null,e),o.lanes=s,o}function zh(o,e,s){return e=Bg(4,o.children!==null?o.children:[],o.key,e),e.lanes=s,e.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},e}function bl(o,e,s,i,a){this.tag=e,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=i,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function cl(o,e,s,i,a,d,h,b,_){return o=new bl(o,e,s,b,_),e===1?(e=1,d===!0&&(e|=8)):e=0,d=Bg(3,null,null,e),o.current=d,d.stateNode=o,d.memoizedState={element:i,isDehydrated:s,cache:null,transitions:null,pendingSuspenseBoundaries:null},ah(d),o}function dl(o,e,s){var i=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wa,key:i==null?null:""+i,children:o,containerInfo:e,implementation:s}}function el(o){if(!o)return Vf;o=o._reactInternals;e:{if(Vb(o)!==o||o.tag!==1)throw Error(p$1(170));var e=o;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(Zf(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(p$1(171))}if(o.tag===1){var s=o.type;if(Zf(s))return bg(o,s,e)}return e}function fl(o,e,s,i,a,d,h,b,_){return o=cl(s,i,!0,o,a,d,h,b,_),o.context=el(null),s=o.current,i=L(),a=lh(s),d=ch(i,a),d.callback=e??null,dh(s,d,a),o.current.lanes=a,Ac(o,a,i),Ek(o,i),o}function gl(o,e,s,i){var a=e.current,d=L(),h=lh(a);return s=el(s),e.context===null?e.context=s:e.pendingContext=s,e=ch(d,h),e.payload={element:o},i=i===void 0?null:i,i!==null&&(e.callback=i),o=dh(a,e,h),o!==null&&(mh(o,a,h,d),eh(o,a,h)),h}function hl(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return o.child.stateNode;default:return o.child.stateNode}}function il(o,e){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var s=o.retryLane;o.retryLane=s!==0&&s<e?s:e}}function jl(o,e){il(o,e),(o=o.alternate)&&il(o,e)}function kl(){return null}var ll=typeof reportError=="function"?reportError:function(o){console.error(o)};function ml(o){this._internalRoot=o}nl.prototype.render=ml.prototype.render=function(o){var e=this._internalRoot;if(e===null)throw Error(p$1(409));gl(o,e,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var o=this._internalRoot;if(o!==null){this._internalRoot=null;var e=o.containerInfo;Sk(function(){gl(null,o,null,null)}),e[uf]=null}};function nl(o){this._internalRoot=o}nl.prototype.unstable_scheduleHydration=function(o){if(o){var e=Hc();o={blockedOn:null,target:o,priority:e};for(var s=0;s<Qc.length&&e!==0&&e<Qc[s].priority;s++);Qc.splice(s,0,o),s===0&&Vc(o)}};function ol(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11)}function pl(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11&&(o.nodeType!==8||o.nodeValue!==" react-mount-point-unstable "))}function ql(){}function rl(o,e,s,i,a){if(a){if(typeof i=="function"){var d=i;i=function(){var j=hl(h);d.call(j)}}var h=fl(e,i,o,0,null,!1,!1,"",ql);return o._reactRootContainer=h,o[uf]=h.current,sf(o.nodeType===8?o.parentNode:o),Sk(),h}for(;a=o.lastChild;)o.removeChild(a);if(typeof i=="function"){var b=i;i=function(){var j=hl(_);b.call(j)}}var _=cl(o,0,!1,null,null,!1,!1,"",ql);return o._reactRootContainer=_,o[uf]=_.current,sf(o.nodeType===8?o.parentNode:o),Sk(function(){gl(e,_,s,i)}),_}function sl(o,e,s,i,a){var d=s._reactRootContainer;if(d){var h=d;if(typeof a=="function"){var b=a;a=function(){var _=hl(h);b.call(_)}}gl(e,h,o,a)}else h=rl(s,e,o,a,i);return hl(h)}Ec=function(o){switch(o.tag){case 3:var e=o.stateNode;if(e.current.memoizedState.isDehydrated){var s=tc(e.pendingLanes);s!==0&&(Cc(e,s|1),Ek(e,B()),!(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var i=Zg(o,1);if(i!==null){var a=L();mh(i,o,1,a)}}),jl(o,1)}};Fc=function(o){if(o.tag===13){var e=Zg(o,134217728);if(e!==null){var s=L();mh(e,o,134217728,s)}jl(o,134217728)}};Gc=function(o){if(o.tag===13){var e=lh(o),s=Zg(o,e);if(s!==null){var i=L();mh(s,o,e,i)}jl(o,e)}};Hc=function(){return C};Ic=function(o,e){var s=C;try{return C=o,e()}finally{C=s}};yb=function(o,e,s){switch(e){case"input":if(bb(o,s),e=s.name,s.type==="radio"&&e!=null){for(s=o;s.parentNode;)s=s.parentNode;for(s=s.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<s.length;e++){var i=s[e];if(i!==o&&i.form===o.form){var a=Db(i);if(!a)throw Error(p$1(90));Wa(i),bb(i,a)}}}break;case"textarea":ib(o,s);break;case"select":e=s.value,e!=null&&fb(o,!!s.multiple,e,!1)}};Gb=Rk;Hb=Sk;var tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(o){return o=Zb(o),o===null?null:o.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||kl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch{}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;reactDom_production_min.createPortal=function(o,e){var s=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!ol(e))throw Error(p$1(200));return dl(o,e,null,s)};reactDom_production_min.createRoot=function(o,e){if(!ol(o))throw Error(p$1(299));var s=!1,i="",a=ll;return e!=null&&(e.unstable_strictMode===!0&&(s=!0),e.identifierPrefix!==void 0&&(i=e.identifierPrefix),e.onRecoverableError!==void 0&&(a=e.onRecoverableError)),e=cl(o,1,!1,null,null,s,!1,i,a),o[uf]=e.current,sf(o.nodeType===8?o.parentNode:o),new ml(e)};reactDom_production_min.findDOMNode=function(o){if(o==null)return null;if(o.nodeType===1)return o;var e=o._reactInternals;if(e===void 0)throw typeof o.render=="function"?Error(p$1(188)):(o=Object.keys(o).join(","),Error(p$1(268,o)));return o=Zb(e),o=o===null?null:o.stateNode,o};reactDom_production_min.flushSync=function(o){return Sk(o)};reactDom_production_min.hydrate=function(o,e,s){if(!pl(e))throw Error(p$1(200));return sl(null,o,e,!0,s)};reactDom_production_min.hydrateRoot=function(o,e,s){if(!ol(o))throw Error(p$1(405));var i=s!=null&&s.hydratedSources||null,a=!1,d="",h=ll;if(s!=null&&(s.unstable_strictMode===!0&&(a=!0),s.identifierPrefix!==void 0&&(d=s.identifierPrefix),s.onRecoverableError!==void 0&&(h=s.onRecoverableError)),e=fl(e,null,o,1,s??null,a,!1,d,h),o[uf]=e.current,sf(o),i)for(o=0;o<i.length;o++)s=i[o],a=s._getVersion,a=a(s._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[s,a]:e.mutableSourceEagerHydrationData.push(s,a);return new nl(e)};reactDom_production_min.render=function(o,e,s){if(!pl(e))throw Error(p$1(200));return sl(null,o,e,!1,s)};reactDom_production_min.unmountComponentAtNode=function(o){if(!pl(o))throw Error(p$1(40));return o._reactRootContainer?(Sk(function(){sl(null,null,o,!1,function(){o._reactRootContainer=null,o[uf]=null})}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Rk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(o,e,s,i){if(!pl(s))throw Error(p$1(200));if(o==null||o._reactInternals===void 0)throw Error(p$1(38));return sl(o,e,s,!1,i)};reactDom_production_min.version="18.2.0-next-9e3b772b8-20220608";function checkDCE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(o){console.error(o)}}checkDCE(),reactDom.exports=reactDom_production_min;var reactDomExports=reactDom.exports,m=reactDomExports;client.createRoot=m.createRoot,client.hydrateRoot=m.hydrateRoot;var ort_min={exports:{}};/*!
* ONNX Runtime Web v1.16.3
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT License.
*/(function(module,exports){(function(o,e){module.exports=e()})(self,()=>(()=>{var __webpack_modules__={5716:(o,e,s)=>{e.R=void 0;const i=s(6027),a=s(1723);e.R=new class{async init(){}async createSessionHandler(d,h){const b=new i.Session(h);return await b.loadModel(d),new a.OnnxjsSessionHandler(b)}}},2818:(o,e,s)=>{e.c8=e.rX=void 0;const i=s(2235),a=s(5381),d=s(9544),h=s(6640);e.rX=()=>{if((typeof i.env.wasm.initTimeout!="number"||i.env.wasm.initTimeout<0)&&(i.env.wasm.initTimeout=0),typeof i.env.wasm.simd!="boolean"&&(i.env.wasm.simd=!0),typeof i.env.wasm.proxy!="boolean"&&(i.env.wasm.proxy=!1),typeof i.env.wasm.numThreads!="number"||!Number.isInteger(i.env.wasm.numThreads)||i.env.wasm.numThreads<=0){const b=typeof navigator>"u"?(0,a.cpus)().length:navigator.hardwareConcurrency;i.env.wasm.numThreads=Math.min(4,Math.ceil((b||1)/2))}},e.c8=new class{async init(){(0,e.rX)(),await(0,d.initializeWebAssemblyInstance)()}async createSessionHandler(b,_){const j=new h.OnnxruntimeWebAssemblySessionHandler;return await j.loadModel(b,_),Promise.resolve(j)}}},1057:function(o,e,s){var i=this&&this.__createBinding||(Object.create?function(b,_,j,_e){_e===void 0&&(_e=j);var g=Object.getOwnPropertyDescriptor(_,j);g&&!("get"in g?!_.__esModule:g.writable||g.configurable)||(g={enumerable:!0,get:function(){return _[j]}}),Object.defineProperty(b,_e,g)}:function(b,_,j,_e){_e===void 0&&(_e=j),b[_e]=_[j]}),a=this&&this.__exportStar||function(b,_){for(var j in b)j==="default"||Object.prototype.hasOwnProperty.call(_,j)||i(_,b,j)};Object.defineProperty(e,"__esModule",{value:!0}),a(s(2235),e);const d=s(2235),h=s(8408);{const b=s(5716).R;(0,d.registerBackend)("webgl",b,-10)}{const b=s(2818).c8;(0,d.registerBackend)("cpu",b,10),(0,d.registerBackend)("wasm",b,10),(0,d.registerBackend)("xnnpack",b,9),(0,d.registerBackend)("webnn",b,9)}d.env.versions.web=h.version},4910:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createAttributeWithCacheKey=void 0;class s{constructor(a){Object.assign(this,a)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(a=>`${this[a]}`).join(";")),this._cacheKey}}e.createAttributeWithCacheKey=i=>new s(i)},6874:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Attribute=void 0;const i=s(5127),a=s(2446),d=s(9240),h=s(7273);var b=i.onnxruntime.experimental.fbs;class _{constructor(_e){if(this._attributes=new Map,_e!=null){for(const g of _e)g instanceof a.onnx.AttributeProto?this._attributes.set(g.name,[_.getValue(g),_.getType(g)]):g instanceof b.Attribute&&this._attributes.set(g.name(),[_.getValue(g),_.getType(g)]);if(this._attributes.size<_e.length)throw new Error("duplicated attribute names")}}set(_e,g,c){this._attributes.set(_e,[c,g])}delete(_e){this._attributes.delete(_e)}getFloat(_e,g){return this.get(_e,"float",g)}getInt(_e,g){return this.get(_e,"int",g)}getString(_e,g){return this.get(_e,"string",g)}getTensor(_e,g){return this.get(_e,"tensor",g)}getFloats(_e,g){return this.get(_e,"floats",g)}getInts(_e,g){return this.get(_e,"ints",g)}getStrings(_e,g){return this.get(_e,"strings",g)}getTensors(_e,g){return this.get(_e,"tensors",g)}get(_e,g,c){const $=this._attributes.get(_e);if($===void 0){if(c!==void 0)return c;throw new Error(`required attribute not found: ${_e}`)}if($[1]!==g)throw new Error(`type mismatch: expected ${g} but got ${$[1]}`);return $[0]}static getType(_e){const g=_e instanceof a.onnx.AttributeProto?_e.type:_e.type();switch(g){case a.onnx.AttributeProto.AttributeType.FLOAT:return"float";case a.onnx.AttributeProto.AttributeType.INT:return"int";case a.onnx.AttributeProto.AttributeType.STRING:return"string";case a.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case a.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case a.onnx.AttributeProto.AttributeType.INTS:return"ints";case a.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case a.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${a.onnx.AttributeProto.AttributeType[g]}`)}}static getValue(_e){const g=_e instanceof a.onnx.AttributeProto?_e.type:_e.type();if(g===a.onnx.AttributeProto.AttributeType.GRAPH||g===a.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");const c=this.getValueNoCheck(_e);if(g===a.onnx.AttributeProto.AttributeType.INT&&h.LongUtil.isLong(c))return h.LongUtil.longToNumber(c);if(g===a.onnx.AttributeProto.AttributeType.INTS){const $=c,et=new Array($.length);for(let tt=0;tt<$.length;tt++){const nt=$[tt];et[tt]=h.LongUtil.longToNumber(nt)}return et}if(g===a.onnx.AttributeProto.AttributeType.TENSOR)return _e instanceof a.onnx.AttributeProto?d.Tensor.fromProto(c):d.Tensor.fromOrtTensor(c);if(g===a.onnx.AttributeProto.AttributeType.TENSORS){if(_e instanceof a.onnx.AttributeProto)return c.map($=>d.Tensor.fromProto($));if(_e instanceof b.Attribute)return c.map($=>d.Tensor.fromOrtTensor($))}if(g===a.onnx.AttributeProto.AttributeType.STRING&&_e instanceof a.onnx.AttributeProto){const $=c;return(0,h.decodeUtf8String)($)}return g===a.onnx.AttributeProto.AttributeType.STRINGS&&_e instanceof a.onnx.AttributeProto?c.map(h.decodeUtf8String):c}static getValueNoCheck(_e){return _e instanceof a.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(_e):this.getValueNoCheckFromOrtFormat(_e)}static getValueNoCheckFromOnnxFormat(_e){switch(_e.type){case a.onnx.AttributeProto.AttributeType.FLOAT:return _e.f;case a.onnx.AttributeProto.AttributeType.INT:return _e.i;case a.onnx.AttributeProto.AttributeType.STRING:return _e.s;case a.onnx.AttributeProto.AttributeType.TENSOR:return _e.t;case a.onnx.AttributeProto.AttributeType.GRAPH:return _e.g;case a.onnx.AttributeProto.AttributeType.FLOATS:return _e.floats;case a.onnx.AttributeProto.AttributeType.INTS:return _e.ints;case a.onnx.AttributeProto.AttributeType.STRINGS:return _e.strings;case a.onnx.AttributeProto.AttributeType.TENSORS:return _e.tensors;case a.onnx.AttributeProto.AttributeType.GRAPHS:return _e.graphs;default:throw new Error(`unsupported attribute type: ${a.onnx.AttributeProto.AttributeType[_e.type]}`)}}static getValueNoCheckFromOrtFormat(_e){switch(_e.type()){case b.AttributeType.FLOAT:return _e.f();case b.AttributeType.INT:return _e.i();case b.AttributeType.STRING:return _e.s();case b.AttributeType.TENSOR:return _e.t();case b.AttributeType.GRAPH:return _e.g();case b.AttributeType.FLOATS:return _e.floatsArray();case b.AttributeType.INTS:{const g=[];for(let c=0;c<_e.intsLength();c++)g.push(_e.ints(c));return g}case b.AttributeType.STRINGS:{const g=[];for(let c=0;c<_e.stringsLength();c++)g.push(_e.strings(c));return g}case b.AttributeType.TENSORS:{const g=[];for(let c=0;c<_e.tensorsLength();c++)g.push(_e.tensors(c));return g}default:throw new Error(`unsupported attribute type: ${b.AttributeType[_e.type()]}`)}}}e.Attribute=_},1975:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.resolveBackend=e.backend=void 0;const i=s(4418),a=new Map;async function d(h){const b=e.backend;if(b[h]!==void 0&&function(_){const j=_;return"initialize"in j&&typeof j.initialize=="function"&&"createSessionHandler"in j&&typeof j.createSessionHandler=="function"&&"dispose"in j&&typeof j.dispose=="function"}(b[h])){const _=b[h];let j=_.initialize();if(typeof j=="object"&&"then"in j&&(j=await j),j)return a.set(h,_),_}}e.backend={webgl:new i.WebGLBackend},e.resolveBackend=async function h(b){if(!b)return h(["webgl"]);{const _=typeof b=="string"?[b]:b;for(const j of _){const _e=a.get(j);if(_e)return _e;const g=await d(j);if(g)return g}}throw new Error("no available backend to use")}},4418:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLBackend=void 0;const i=s(2235),a=s(1315),d=s(2171),h=s(3389);e.WebGLBackend=class{get contextId(){return i.env.webgl.contextId}set contextId(b){i.env.webgl.contextId=b}get matmulMaxBatchSize(){return i.env.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(b){i.env.webgl.matmulMaxBatchSize=b}get textureCacheMode(){return i.env.webgl.textureCacheMode}set textureCacheMode(b){i.env.webgl.textureCacheMode=b}get pack(){return i.env.webgl.pack}set pack(b){i.env.webgl.pack=b}get async(){return i.env.webgl.async}set async(b){i.env.webgl.async=b}initialize(){try{return this.glContext=(0,h.createWebGLContext)(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),a.Logger.setWithEnv(i.env),a.Logger.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(b){return a.Logger.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${b}`),!1}}createSessionHandler(b){return new d.WebGLSessionHandler(this,b)}dispose(){this.glContext.dispose()}}},6859:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CoordsGlslLib=void 0;const i=s(7273),a=s(1997),d=s(6757),h=s(7618),b=s(432);class _ extends a.GlslLib{constructor(_e){super(_e)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.offsetToCoords()),this.coordsToOffset()),this.toVec()),this.valueFrom()),this.getCommonUtilFuncs()),this.getInputsSamplingSnippets()),this.getOutputSamplingSnippet())}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new a.GlslLibRoutine(`
      vec2 offsetToCoords(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){return{coordsToOffset:new a.GlslLibRoutine(`
      int coordsToOffset(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){const _e=this.context.outputTextureLayout;return _e.isPacked?this.getPackedOutputSamplingSnippet(_e):this.getUnpackedOutputSamplingSnippet(_e)}getPackedOutputSamplingSnippet(_e){const g=_e.unpackedShape,c=[_e.width,_e.height],$={},et="getOutputCoords";switch(g.length){case 0:$[et]=this.getOutputScalarCoords();break;case 1:$[et]=this.getOutputPacked1DCoords(g,c);break;case 2:$[et]=this.getOutputPacked2DCoords(g,c);break;case 3:$[et]=this.getOutputPacked3DCoords(g,c);break;default:$[et]=this.getOutputPackedNDCoords(g,c)}const tt=`
      void setOutput(vec4 val) {
        ${(0,d.getGlsl)(this.context.glContext.version).output} = val;
      }
    `;return $.floatTextureSetRGBA=new a.GlslLibRoutine(tt),$}getUnpackedOutputSamplingSnippet(_e){const g=_e.unpackedShape,c=[_e.width,_e.height],$={},et="getOutputCoords";switch(g.length){case 0:$[et]=this.getOutputScalarCoords();break;case 1:$[et]=this.getOutputUnpacked1DCoords(g,c);break;case 2:$[et]=this.getOutputUnpacked2DCoords(g,c);break;case 3:$[et]=this.getOutputUnpacked3DCoords(g,c);break;case 4:$[et]=this.getOutputUnpacked4DCoords(g,c);break;case 5:$[et]=this.getOutputUnpacked5DCoords(g,c);break;case 6:$[et]=this.getOutputUnpacked6DCoords(g,c);break;default:throw new Error(`Unsupported output dimensionality: ${g.length}`)}const tt=`
        void setOutput(float val) {
          ${(0,d.getGlsl)(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `;return $.floatTextureSetR=new a.GlslLibRoutine(tt),$}getOutputScalarCoords(){return new a.GlslLibRoutine(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(_e,g){const c=g;let $="";return c[0]===1?($=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${c[1]}.0);
          }
        `,new a.GlslLibRoutine($)):c[1]===1?($=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${c[0]}.0);
          }
        `,new a.GlslLibRoutine($)):($=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${c[0]}, ${c[1]}));
          return 2 * (resTexRC.y * ${c[0]} + resTexRC.x);
        }
      `,new a.GlslLibRoutine($))}getOutputPacked2DCoords(_e,g){let c="";if(i.ArrayUtil.arraysEqual(_e,g))return c=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${g[0]}, ${g[1]}));
        }
      `,new a.GlslLibRoutine(c);const $=g,et=Math.ceil(_e[1]/2);return c=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${$[0]}, ${$[1]}));

          int index = resTexRC.y * ${$[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${et}) * 2;
          int c = 2 * (index / ${et});

          return ivec2(r, c);
        }
      `,new a.GlslLibRoutine(c)}getOutputPacked3DCoords(_e,g){const c=[g[0],g[1]],$=Math.ceil(_e[2]/2),et=$*Math.ceil(_e[1]/2),tt=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${c[0]}, ${c[1]}));
          int index = resTexRC.y * ${c[0]} + resTexRC.x;

          int b = index / ${et};
          index -= b * ${et};

          // reverse r and c order for packed texture
          int r = imod(index, ${$}) * 2;
          int c = 2 * (index / ${$});

          return ivec3(b, r, c);
        }
      `;return new a.GlslLibRoutine(tt)}getOutputPackedNDCoords(_e,g){const c=[g[0],g[1]],$=Math.ceil(_e[_e.length-1]/2),et=$*Math.ceil(_e[_e.length-2]/2);let tt=et,nt="",rt="b, r, c";for(let st=2;st<_e.length-1;st++)tt*=_e[_e.length-st-1],nt=`
      int b${st} = index / ${tt};
      index -= b${st} * ${tt};
    `+nt,rt=`b${st}, `+rt;const ot=`
      ivec${_e.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${c[0]}, ${c[1]}));
        int index = resTexRC.y * ${c[0]} + resTexRC.x;

        ${nt}

        int b = index / ${et};
        index -= b * ${et};

        // reverse r and c order for packed texture
        int r = imod(index, ${$}) * 2;
        int c = 2 * (index / ${$});

        return ivec${_e.length}(${rt});
      }
    `;return new a.GlslLibRoutine(ot)}getOutputUnpacked1DCoords(_e,g){const c=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${g[0]}, ${g[1]}));
          return resTexRC.y * ${g[0]} + resTexRC.x;
        }
      `;return new a.GlslLibRoutine(c)}getOutputUnpacked2DCoords(_e,g){const c=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${g[0]}, ${g[1]}));
          int index = resTexRC.y * ${g[0]} + resTexRC.x;
          int r = index / ${_e[1]};
          int c = index - r * ${_e[1]};
          return ivec2(r, c);
        }
      `;return new a.GlslLibRoutine(c)}getOutputUnpacked3DCoords(_e,g){let c="";const $=_e.length;let et=null;$<2&&(et=[]),et=new Array($-1),et[$-2]=_e[$-1];for(let rt=$-3;rt>=0;--rt)et[rt]=et[rt+1]*_e[rt+1];const tt=["r","c","d"],nt=et.map((rt,ot)=>`int ${tt[ot]} = index / ${rt}; ${ot===et.length-1?`int ${tt[ot+1]} = index - ${tt[ot]} * ${rt}`:`index -= ${tt[ot]} * ${rt}`};`).join("");return c=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${g[0]}, ${g[1]}));
          int index = resTexRC.y * ${g[0]} + resTexRC.x;
          ${nt}
          return ivec3(r, c, d);
        }
      `,new a.GlslLibRoutine(c)}getOutputUnpacked4DCoords(_e,g){let c="";const $=_e.length;let et=null;$<2&&(et=[]),et=new Array($-1),et[$-2]=_e[$-1];for(let rt=$-3;rt>=0;--rt)et[rt]=et[rt+1]*_e[rt+1];const tt=["r","c","d","d2"],nt=et.map((rt,ot)=>`int ${tt[ot]} = index / ${rt}; ${ot===et.length-1?`int ${tt[ot+1]} = index - ${tt[ot]} * ${rt}`:`index -= ${tt[ot]} * ${rt}`};`).join("");return c=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${g[0]}, ${g[1]}));
          int index = resTexRC.y * ${g[0]} + resTexRC.x;
          ${nt}
          return ivec4(r, c, d, d2);
        }
      `,new a.GlslLibRoutine(c)}getOutputUnpacked5DCoords(_e,g){let c="";const $=_e.length;let et=null;$<2&&(et=[]),et=new Array($-1),et[$-2]=_e[$-1];for(let rt=$-3;rt>=0;--rt)et[rt]=et[rt+1]*_e[rt+1];const tt=["r","c","d","d2","d3"],nt=et.map((rt,ot)=>`int ${tt[ot]} = index / ${rt}; ${ot===et.length-1?`int ${tt[ot+1]} = index - ${tt[ot]} * ${rt}`:`index -= ${tt[ot]} * ${rt}`};`).join("");return c=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${g[0]}, ${g[1]}));
          int index = resTexRC.y * ${g[0]} + resTexRC.x;
          ${nt}
          return ivec5(r, c, d, d2, d3);
        }
      `,new a.GlslLibRoutine(c)}getOutputUnpacked6DCoords(_e,g){let c="";const $=_e.length;let et=null;$<2&&(et=[]),et=new Array($-1),et[$-2]=_e[$-1];for(let rt=$-3;rt>=0;--rt)et[rt]=et[rt+1]*_e[rt+1];const tt=["r","c","d","d2","d3","d4"],nt=et.map((rt,ot)=>`int ${tt[ot]} = index / ${rt}; ${ot===et.length-1?`int ${tt[ot+1]} = index - ${tt[ot]} * ${rt}`:`index -= ${tt[ot]} * ${rt}`};`).join("");return c=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${g[0]}, ${g[1]}));
         int index = resTexRC.y * ${g[0]} + resTexRC.x;
         ${nt}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new a.GlslLibRoutine(c)}getCommonUtilFuncs(){const _e={};let g="uvFromFlat";_e[g]=new a.GlslLibRoutine(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),g="packedUVfrom1D",_e[g]=new a.GlslLibRoutine(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),g="packedUVfrom2D",_e[g]=new a.GlslLibRoutine(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),g="packedUVfrom3D",_e[g]=new a.GlslLibRoutine(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),g="sampleTexture";const c=(0,d.getGlsl)(this.context.glContext.version);return _e[g]=new a.GlslLibRoutine(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${c.texture2D}(textureSampler, uv).r;
        }`),_e}getInputsSamplingSnippets(){const _e={},g=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((c,$)=>{const et=this.context.inputTextureLayouts[$],tt=(0,b.generateShaderFuncNameFromInputSamplerName)(c);et.isPacked?_e[tt]=this.getPackedSamplerFromInput(tt,c,et):_e[tt]=this.getUnpackedSamplerFromInput(tt,c,et);const nt=(0,b.generateShaderFuncNameFromInputSamplerNameAtOutCoords)(c);et.unpackedShape.length<=g.unpackedShape.length&&(et.isPacked?_e[nt]=this.getPackedSamplerAtOutputCoords(nt,et,g,c):_e[nt]=this.getUnpackedSamplerAtOutputCoords(nt,et,g,c))}),_e}getPackedSamplerAtOutputCoords(_e,g,c,$){const et=g.unpackedShape,tt=c.unpackedShape,nt=$,rt=(0,b.generateShaderFuncNameFromInputSamplerName)(nt),ot=et.length,st=tt.length,it=i.BroadcastUtil.getBroadcastDims(et,tt),at=(0,b.getCoordsDataType)(st),lt=st-ot;let ut;const ct=(0,b.getGlChannels)();ut=ot===0?"":st<2&&it.length>=1?"coords = 0;":it.map(wt=>`coords.${ct[wt+lt]} = 0;`).join(`
`);let pt="";pt=st<2&&ot>0?"coords":et.map((wt,dt)=>`coords.${ct[dt+lt]}`).join(", ");let ht="return outputValue;";const yt=i.ShapeUtil.size(et)===1,xt=i.ShapeUtil.size(tt)===1;if(ot!==1||yt||xt){if(yt&&!xt)ht=st===1?`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:`
          return vec4(outputValue.x);
        `;else if(it.length){const wt=ot-2,dt=ot-1;it.indexOf(wt)>-1&&it.indexOf(dt)>-1?ht="return vec4(outputValue.x);":it.indexOf(wt)>-1?ht="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":it.indexOf(dt)>-1&&(ht="return vec4(outputValue.xx, outputValue.zz);")}}else ht=`
        return vec4(outputValue.xy, outputValue.xy);
      `;const ft=`
      vec4 ${_e}() {
        ${at} coords = getOutputCoords();
        
        int lastDim = coords.${ct[st-1]};
        coords.${ct[st-1]} = coords.${ct[st-2]};
        coords.${ct[st-2]} = lastDim;
      
        ${ut}
        vec4 outputValue = ${rt}(${pt});
        ${ht}
      }
    `;return new a.GlslLibRoutine(ft,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(_e,g,c,$){const et=[c.width,c.height],tt=[g.width,g.height],nt=g.unpackedShape.length,rt=c.unpackedShape.length,ot=g.unpackedShape,st=c.unpackedShape,it=(0,b.generateShaderFuncNameFromInputSamplerName)($);if(nt===rt&&i.ArrayUtil.arraysEqual(tt,et)){const xt=`
          float ${_e}() {
            return sampleTexture(${$}, TexCoords);
          }
        `;return new a.GlslLibRoutine(xt,["coordinates.sampleTexture"])}const at=(0,b.getCoordsDataType)(rt),lt=i.BroadcastUtil.getBroadcastDims(ot,st),ut=rt-nt;let ct;const pt=(0,b.getGlChannels)();ct=nt===0?"":rt<2&&lt.length>=1?"coords = 0;":lt.map(xt=>`coords.${pt[xt+ut]} = 0;`).join(`
`);let ht="";ht=rt<2&&nt>0?"coords":g.unpackedShape.map((xt,ft)=>`coords.${pt[ft+ut]}`).join(", ");const yt=`
        float ${_e}() {
          ${at} coords = getOutputCoords();
          ${ct}
          return ${it}(${ht});
        }
      `;return new a.GlslLibRoutine(yt,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(_e,g,c){switch(c.unpackedShape.length){case 0:return this.getPackedSamplerScalar(_e,g);case 1:return this.getPackedSampler1D(_e,g,c);case 2:return this.getPackedSampler2D(_e,g,c);case 3:return this.getPackedSampler3D(_e,g,c);default:return this.getPackedSamplerND(_e,g,c)}}getUnpackedSamplerFromInput(_e,g,c){const $=c.unpackedShape;switch($.length){case 0:return this.getUnpackedSamplerScalar(_e,g,c);case 1:return this.getUnpackedSampler1D(_e,g,c);case 2:return this.getUnpackedSampler2D(_e,g,c);case 3:return this.getUnpackedSampler3D(_e,g,c);case 4:return this.getUnpackedSampler4D(_e,g,c);case 5:return this.getUnpackedSampler5D(_e,g,c);case 6:return this.getUnpackedSampler6D(_e,g,c);default:throw new Error(`Unsupported dimension ${$.length}-D`)}}getPackedSamplerScalar(_e,g){const c=`
          vec4 ${_e}() {
            return ${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${g}, halfCR);
          }
        `;return new a.GlslLibRoutine(c)}getPackedSampler1D(_e,g,c){const $=[c.width,c.height],et=[$[1],$[0]],tt=(0,d.getGlsl)(this.context.glContext.version),nt=`vec4 ${_e}(int index) {
      vec2 uv = packedUVfrom1D(
      ${et[0]}, ${et[1]}, index);
      return ${tt.texture2D}(${g}, uv);
    }`;return new a.GlslLibRoutine(nt,["coordinates.packedUVfrom1D"])}getPackedSampler2D(_e,g,c){const $=c.unpackedShape,et=[c.width,c.height],tt=(0,d.getGlsl)(this.context.glContext.version),nt=et[0],rt=et[1];if(et!=null&&i.ArrayUtil.arraysEqual($,et)){const at=`vec4 ${_e}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${rt}.0, ${nt}.0);
        return ${tt.texture2D}(${g}, uv);
      }`;return new a.GlslLibRoutine(at)}const ot=et,st=Math.ceil($[1]/2),it=`vec4 ${_e}(int row, int col) {
      vec2 uv = packedUVfrom2D(${ot[1]}, ${ot[0]}, ${st}, row, col);
      return ${tt.texture2D}(${g}, uv);
    }`;return new a.GlslLibRoutine(it,["coordinates.packedUVfrom2D"])}getPackedSampler3D(_e,g,c){const $=c.unpackedShape,et=[c.width,c.height],tt=[et[0],et[1]],nt=(0,d.getGlsl)(this.context.glContext.version);if($[0]===1){const at=$.slice(1),lt=[1,2],ut=(0,b.squeezeInputShape)($,at),ct=["b","row","col"],pt=JSON.parse(JSON.stringify(c));pt.unpackedShape=ut;const ht=this.getPackedSamplerFromInput(_e,g,pt),yt=`${ht.routineBody}
      vec4 ${_e}(int b, int row, int col) {
        return ${_e}(${(0,b.getSqueezedParams)(ct,lt)});
      } `;return new a.GlslLibRoutine(yt,ht.dependencies)}const rt=tt[0],ot=tt[1],st=Math.ceil($[2]/2),it=`vec4 ${_e}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${ot}, ${rt}, ${st*Math.ceil($[1]/2)}, ${st}, b, row, col);
      return ${nt.texture2D}(${g}, uv);}`;return new a.GlslLibRoutine(it,["coordinates.packedUVfrom3D"])}getPackedSamplerND(_e,g,c){const $=c.unpackedShape,et=$.length,tt=[c.width,c.height],nt=(0,d.getGlsl)(this.context.glContext.version),rt=[tt[0],tt[1]],ot=rt[1],st=rt[0],it=Math.ceil($[et-1]/2);let at=it*Math.ceil($[et-2]/2),lt="int b, int row, int col",ut=`b * ${at} + (row / 2) * ${it} + (col / 2)`;for(let pt=2;pt<et-1;pt++)lt=`int b${pt}, `+lt,at*=$[et-pt-1],ut=`b${pt} * ${at} + `+ut;const ct=`vec4 ${_e}(${lt}) {
      int index = ${ut};
      int texR = index / ${st};
      int texC = index - texR * ${st};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${st}, ${ot});
      return ${nt.texture2D}(${g}, uv);
    }`;return new a.GlslLibRoutine(ct)}getUnpackedSamplerScalar(_e,g,c){const[$,et]=[c.width,c.height];if($===1&&et===1){const nt=`
          float ${_e}() {
            return sampleTexture(${g}, halfCR);
          }
        `;return new a.GlslLibRoutine(nt,["coordinates.sampleTexture"])}const tt=`
        float ${_e}() {
          int offset_${g} = coordsToOffset(TexCoords, ${$}, ${et});
          vec2 uv = uvFromFlat(${$}, ${et}, offset_${g});
          return sampleTexture(${g}, uv);
        }
      `;return new a.GlslLibRoutine(tt,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(_e,g,c){const $=c.width,et=c.height;if(et===1&&$===1){const nt=`
        float ${_e}(int index) {
          return sampleTexture(${g}, halfCR);
        }
      `;return new a.GlslLibRoutine(nt,["coordinates.sampleTexture"])}if(et===1){const nt=`
          float ${_e}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${$}.0, 0.5);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(nt,["coordinates.sampleTexture"])}if($===1){const nt=`
          float ${_e}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${et}.0);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(nt,["coordinates.sampleTexture"])}const tt=`
        float ${_e}(int index) {
          vec2 uv = uvFromFlat(${$}, ${et}, index);
          return sampleTexture(${g}, uv);
        }
      `;return new a.GlslLibRoutine(tt,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(_e,g,c){const $=c.unpackedShape,et=[c.height,c.width];if(et!=null&&i.ArrayUtil.arraysEqual($,et)){const at=`
          float ${_e}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${et[1]}.0, ${et[0]}.0);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(at,["coordinates.sampleTexture"])}const{newShape:tt,keptDims:nt}=(0,h.squeezeShape)($),rt=tt;if(rt.length<$.length){const at=(0,b.squeezeInputShape)($,rt),lt=JSON.parse(JSON.stringify(c));lt.unpackedShape=at;const ut=["col","row"],ct=`
          ${this.getUnpackedSamplerFromInput(_e,g,lt).routineBody}
          float ${_e}(int row, int col) {
            return ${_e}(${(0,b.getSqueezedParams)(ut,nt)});
          }
        `;return new a.GlslLibRoutine(ct,["coordinates.sampleTexture"])}const ot=et[1],st=et[0];if(st===1){const at=`
          float ${_e}(int row, int col) {
            int offset_${g} = coordsToOffset(TexCoords, ${ot}, ${st});
            float index = dot(vec3(row, col, offset_${g}), vec3(${$[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${ot}.0);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(at,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(ot===1){const at=`
          float ${_e}(int row, int col) {
            int offset_${g} = coordsToOffset(TexCoords, ${ot}, ${st});
            float index = dot(vec3(row, col, offset_${g}), vec3(${$[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${st}.0, 0.5);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(at,["coordinates.sampleTexture","coordinates.coordsToOffset"])}const it=`
        float ${_e}(int row, int col) {
          int index = col * ${$[1]} + row;
          vec2 uv = uvFromFlat(${ot}, ${st}, index);
          return sampleTexture(${g}, uv);
        }
      `;return new a.GlslLibRoutine(it,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(_e,g,c){const $=c.unpackedShape,et=$[1]*$[2],tt=$[2],{newShape:nt,keptDims:rt}=(0,h.squeezeShape)($),ot=nt;if(ot.length<$.length){const it=(0,b.squeezeInputShape)($,ot),at=["batch","col","row"],lt=JSON.parse(JSON.stringify(c));lt.unpackedShape=it;const ut=this.getUnpackedSamplerFromInput(_e,g,lt),ct=rt.reverse(),pt=`
          ${ut.routineBody}
          float ${_e}(int batch, int row, int col) {
            return ${_e}(${(0,b.getSqueezedParams)(at,ct)});
          }
        `;return new a.GlslLibRoutine(pt,ut.dependencies)}const st=`
          float ${_e}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${et} + col * ${tt} + row;
            vec2 uv = uvFromFlat(${c.width}, ${c.height}, index);
            return sampleTexture(${g}, uv);
          }
      `;return new a.GlslLibRoutine(st,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(_e,g,c){const $=c.unpackedShape,et=$[3],tt=$[2]*et,nt=`
        float ${_e}(int row, int col, int depth, int depth2) {
          int index = row * ${$[1]*tt} + col * ${tt} +
              depth2 * ${et} + depth;
          vec2 uv = uvFromFlat(${c.width}, ${c.height}, index);
          return sampleTexture(${g}, uv);
        }
      `;return new a.GlslLibRoutine(nt,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(_e,g,c){const $=c.unpackedShape,et=$[4],tt=$[3]*et,nt=$[2]*tt,rt=$[1]*nt,{newShape:ot,keptDims:st}=(0,h.squeezeShape)($);if(ot.length<$.length){const at=(0,b.squeezeInputShape)($,ot),lt=["row","col","depth","depth2","depth3"],ut=JSON.parse(JSON.stringify(c));ut.unpackedShape=at;const ct=`
          ${this.getUnpackedSamplerFromInput(_e,g,ut).routineBody}
          float ${_e}(int row, int col, int depth, int depth2, int depth3) {
            return ${_e}(${(0,b.getSqueezedParams)(lt,st)});
          }
        `;return new a.GlslLibRoutine(ct,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const it=`
        float ${_e}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${rt} + col * ${nt} + depth * ${tt} +
          depth3 * ${et} + depth2;
          vec2 uv = uvFromFlat(${c.width}, ${c.height}, index);
          return sampleTexture(${g}, uv);
        }
      `;return new a.GlslLibRoutine(it,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(_e,g,c){const $=c.unpackedShape,et=$[5],tt=$[4]*et,nt=$[3]*tt,rt=$[2]*nt,ot=$[1]*rt,{newShape:st,keptDims:it}=(0,h.squeezeShape)($);if(st.length<$.length){const lt=(0,b.squeezeInputShape)($,st),ut=["row","col","depth","depth2","depth3","depth4"],ct=JSON.parse(JSON.stringify(c));ct.unpackedShape=lt;const pt=`
            ${this.getUnpackedSamplerFromInput(_e,g,ct).routineBody}
            float ${_e}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${_e}(${(0,b.getSqueezedParams)(ut,it)});
            }
          `;return new a.GlslLibRoutine(pt,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const at=`
          float ${_e}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${ot} + col * ${rt} + depth * ${nt} +
            depth2 * ${tt} + depth3 * ${et} + depth4;
            vec2 uv = uvFromFlat(${c.width}, ${c.height}, index);
            return sampleTexture(${g}, uv);
          }
        `;return new a.GlslLibRoutine(at,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){const _e=this.context.outputTextureLayout,g=_e.shape.length,c=_e.strides,$=_e.width,et=_e.height,tt=[];for(let rt=0;rt<g-1;++rt)tt.push(`
        c[${rt}] = offset / ${c[rt]};`),tt.push(`
        offset -= c[${rt}] * ${c[rt]};`);tt.push(`
        c[${g-1}] = offset;`);const nt=`
      void toVec(vec2 texCoords, out int c[${g}]) {
        int offset = coordsToOffset(texCoords, ${$}, ${et});
        ${tt.join("")}
      }
      void toVec(int offset, out int c[${g}]) {
        ${tt.join("")}
      }
    `;return{toVec:new a.GlslLibRoutine(nt,["coordinates.coordsToOffset"])}}valueFrom(){const _e={};return this.context.programInfo.inputNames.forEach((g,c)=>{const $=this.context.inputTextureLayouts[c],et=($.unpackedShape.length>0?$.unpackedShape:$.shape).length;let tt=`_${g}`;_e[tt]=new a.GlslLibRoutine(this.getValueFromSingle(g,et,$.width,$.height,!1),[`shapeUtils.indicesToOffset${tt}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),tt+="_T",_e[tt]=new a.GlslLibRoutine(this.getValueFromSingle(g,et,$.width,$.height,!0),[`shapeUtils.indicesToOffset${tt}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),_e}getValueFromSingle(_e,g,c,$,et){let tt=`_${_e}`;return et&&(tt+="_T"),`
        float ${tt}(int m[${g}]) {
          int offset = indicesToOffset${tt}(m);
          vec2 coords = offsetToCoords(offset, ${c}, ${$});
          float value = getColorAsFloat(${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${_e}, coords));
          return value;
        }
        `}getPackedValueFrom(_e,g,c,$,et){let tt=`_${_e}_Pack`;return et&&(tt+="_T"),`
        vec4 ${tt}(int m[${g}]) {
          int offset = indicesToOffset_${_e}(m);
          vec2 coords = offsetToCoords(offset, ${c}, ${$});
          return ${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${_e}, coords);
        }
        `}}e.CoordsGlslLib=_},1997:(o,e)=>{var s;Object.defineProperty(e,"__esModule",{value:!0}),e.TopologicalSortGlslRoutines=e.GlslLibRoutineNode=e.GlslLibRoutine=e.GlslLib=e.GlslContext=e.FunctionType=void 0,(s=e.FunctionType||(e.FunctionType={}))[s.ValueBased=0]="ValueBased",s[s.Positional=1]="Positional",e.GlslContext=class{constructor(i,a,d,h){this.glContext=i,this.programInfo=a,this.inputTextureLayouts=d,this.outputTextureLayout=h}},e.GlslLib=class{constructor(i){this.context=i}},e.GlslLibRoutine=class{constructor(i,a){this.routineBody=i,this.dependencies=a}},e.GlslLibRoutineNode=class{constructor(i,a,d){this.name=i,this.dependencies=d||[],a&&(this.routineBody=a)}addDependency(i){i&&this.dependencies.push(i)}},e.TopologicalSortGlslRoutines=class{static returnOrderedNodes(i){if(!i||i.length===0)return[];if(i.length===1)return i;const a=new Set,d=new Set,h=new Array;return this.createOrderedNodes(i,a,d,h),h}static createOrderedNodes(i,a,d,h){for(let b=0;b<i.length;++b)this.dfsTraverse(i[b],a,d,h)}static dfsTraverse(i,a,d,h){if(!i||d.has(i.name))return;if(a.has(i.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");a.add(i.name);const b=i.dependencies;if(b&&b.length>0)for(let _=0;_<b.length;++_)this.dfsTraverse(b[_],a,d,h);h.push(i),d.add(i.name),a.delete(i.name)}}},1371:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EncodingGlslLib=void 0;const i=s(1997);class a extends i.GlslLib{constructor(h){super(h)}getFunctions(){return Object.assign(Object.assign({},this.encodeFloat32()),this.decodeFloat32())}getCustomTypes(){return{}}encodeFloat32(){return{encode:new i.GlslLibRoutine(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new i.GlslLibRoutine(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){const h=a.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new i.GlslLibRoutine(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${h}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){const h=a.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new i.GlslLibRoutine(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${h}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){const h=new ArrayBuffer(4),b=new Uint32Array(h),_=new Uint8Array(h);if(b[0]=3735928559,_[0]===239)return!0;if(_[0]===222)return!1;throw new Error("unknown endianness")}}e.EncodingGlslLib=a},2691:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FragColorGlslLib=void 0;const i=s(1997),a=s(6757);class d extends i.GlslLib{constructor(b){super(b)}getFunctions(){return Object.assign(Object.assign({},this.setFragColor()),this.getColorAsFloat())}getCustomTypes(){return{}}setFragColor(){const b=(0,a.getGlsl)(this.context.glContext.version);return{setFragColor:new i.GlslLibRoutine(`
        void setFragColor(float value) {
            ${b.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new i.GlslLibRoutine(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}e.FragColorGlslLib=d},3878:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.replaceInlines=void 0;const s=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;e.replaceInlines=function(i){const a={};let d;for(;(d=s.exec(i))!==null;){const h=d[3].split(",").map(b=>{const _=b.trim().split(" ");return _&&_.length===2?{type:_[0],name:_[1]}:null}).filter(b=>b!==null);a[d[2]]={params:h,body:d[4]}}for(const h in a){const b="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;".replace("__FUNC__",h),_=new RegExp(b,"gm");for(;(d=_.exec(i))!==null;){const j=d[1],_e=d[2],g=d[3].split(","),c=j?`${j} ${_e};`:"";let $=a[h].body,et="";a[h].params.forEach((nt,rt)=>{nt&&(et+=`${nt.type} ${nt.name} = ${g[rt]};
`)}),$=`${et}
 ${$}`,$=$.replace("return",`${_e} = `);const tt=`
      ${c}
      {
        ${$}
      }
      `;i=i.replace(d[0],tt)}}return i.replace(s,"")}},8897:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GlslPreprocessor=void 0;const i=s(1997),a=s(3878),d=s(1248),h=s(6757);e.GlslPreprocessor=class{constructor(b,_,j,_e){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new i.GlslContext(b,_,j,_e),Object.keys(d.glslRegistry).forEach(c=>{const $=new d.glslRegistry[c](this.context);this.libs[c]=$});const g=this.glslLibRoutineDependencyGraph;for(const c in this.libs){const $=this.libs[c].getFunctions();for(const et in $){const tt=c+"."+et;let nt;g[tt]?(nt=g[tt],nt.routineBody=$[et].routineBody):(nt=new i.GlslLibRoutineNode(tt,$[et].routineBody),g[tt]=nt);const rt=$[et].dependencies;if(rt)for(let ot=0;ot<rt.length;++ot)if(g[rt[ot]])nt.addDependency(g[rt[ot]]);else{const st=new i.GlslLibRoutineNode(rt[ot]);g[rt[ot]]=st,nt.addDependency(st)}}}}preprocess(){const b=this.context.programInfo;let _=b.shaderSource;return this.context.programInfo.hasMain||(_=`${_}
      ${(0,h.getDefaultFragShaderMain)(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),_=(0,a.replaceInlines)(_),`${(0,h.getFragShaderPreamble)(this.context.glContext.version)}
    ${this.getUniforms(b.inputNames,b.variables)}
    ${this.getImports(_)}
    ${_}`}getImports(b){const _=this.selectGlslLibRoutinesToBeIncluded(b);if(_.length===0)return"";let j="";for(let _e=0;_e<_.length;++_e){if(!_[_e].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${_[_e].name}`);j+=_[_e].routineBody+`
`}return j}selectGlslLibRoutinesToBeIncluded(b){const _=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(j=>{const _e=j.split(".")[1];b.indexOf(_e)!==-1&&_.push(this.glslLibRoutineDependencyGraph[j])}),i.TopologicalSortGlslRoutines.returnOrderedNodes(_)}getUniforms(b,_){const j=[];if(b)for(const _e of b)j.push(`uniform sampler2D ${_e};`);if(_)for(const _e of _)j.push(`uniform ${_e.type} ${_e.name}${_e.arrayLength?`[${_e.arrayLength}]`:""};`);return j.join(`
`)}}},1248:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.glslRegistry=void 0;const i=s(6859),a=s(1371),d=s(2691),h=s(9183),b=s(9314);e.glslRegistry={encoding:a.EncodingGlslLib,fragcolor:d.FragColorGlslLib,vec:b.VecGlslLib,shapeUtils:h.ShapeUtilsGlslLib,coordinates:i.CoordsGlslLib}},9183:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ShapeUtilsGlslLib=void 0;const i=s(1997);class a extends i.GlslLib{constructor(h){super(h)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.bcastIndex()),this.bcastMatmulIndex()),this.offsetToIndices()),this.indicesToOffset()),this.incrementIndices())}getCustomTypes(){return{}}bcastIndex(){const h=this.context.outputTextureLayout.shape.length,b={};return this.context.programInfo.inputNames.forEach((_,j)=>{const _e=this.context.inputTextureLayouts[j].unpackedShape;if(_e.length<=h){const g=_e.length,c=h-g,$=`bcastIndices_${_}`;let et="";for(let nt=0;nt<g;++nt)et+=`
          realIndices[${nt}] = int( mod(float(bcastedIndices[${c+nt}]), ${_e[nt]}.0) );
          `;const tt=`
        void ${$} (int bcastedIndices[${h}], out int realIndices[${g}]) {
          ${et}
        }
        `;b[$]=new i.GlslLibRoutine(tt)}}),b}bcastMatmulIndex(){const h=this.context.outputTextureLayout.shape.length,b={};return this.context.programInfo.inputNames.forEach((_,j)=>{const _e=this.context.inputTextureLayouts[j].shape;if(!(_e.length<2||_e.length>h)){const g=_e.length,c=h-g,$=`bcastMatmulIndices_${_}`;let et="";for(let nt=0;nt<g-2;++nt)et+=`
          realIndices[${nt}] = int( mod(float(bcastedIndices[${c+nt}]), ${_e[nt]}.0) );
          `;const tt=`
        void ${$}(int bcastedIndices[${h}], out int realIndices[${g}]) {
          ${et}
          realIndices[${g-1}] = bcastedIndices[${h-1}];
          realIndices[${g-2}] = bcastedIndices[${h-2}];
        }
        `;b[$]=new i.GlslLibRoutine(tt)}}),b}indicesToOffset(){const h={};return this.context.programInfo.inputNames.forEach((b,_)=>{const j=this.context.inputTextureLayouts[_].shape,_e=this.context.inputTextureLayouts[_].strides,g=j.length;let c=`indicesToOffset_${b}`;h[c]=new i.GlslLibRoutine(a.indexToOffsetSingle(c,g,_e)),c=`indicesToOffset_${b}_T`,h[c]=new i.GlslLibRoutine(a.indexToOffsetSingle(c,g,_e.slice().reverse()))}),h}static indexToOffsetSingle(h,b,_){let j="";for(let _e=b-1;_e>=0;--_e)j+=`
        offset += indices[${_e}] * ${_[_e]};
        `;return`
      int ${h}(int indices[${b}]) {
        int offset = 0;
        ${j}
        return offset;
      }
      `}offsetToIndices(){const h={};return this.context.programInfo.inputNames.forEach((b,_)=>{const j=this.context.inputTextureLayouts[_].shape,_e=this.context.inputTextureLayouts[_].strides,g=j.length;let c=`offsetToIndices_${b}`;h[c]=new i.GlslLibRoutine(a.offsetToIndicesSingle(c,g,_e)),c=`offsetToIndices_${b}_T`,h[c]=new i.GlslLibRoutine(a.offsetToIndicesSingle(c,g,_e.slice().reverse()))}),h}static offsetToIndicesSingle(h,b,_){const j=[];for(let _e=0;_e<b-1;++_e)j.push(`
      indices[${_e}] = offset / ${_[_e]};`),j.push(`
        offset -= indices[${_e}] * ${_[_e]};`);return j.push(`
      indices[${b-1}] = offset;`),`
      void ${h}(int offset, out int indices[${b}]) {
        ${j.join("")}
      }
      `}incrementIndices(){const h={};return this.context.programInfo.inputNames.forEach((b,_)=>{const j=this.context.inputTextureLayouts[_].shape,_e=j.length,g=`incrementIndices_${b}`;let c="";for(let et=0;et<_e;++et)c+=`
        shape[${et}] = ${j[et]};`;const $=`
        void ${g}(int axis, out int indices[${_e}]) {
          int shape[${_e}];
          ${c};
          for(int i = ${_e} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;h[g]=new i.GlslLibRoutine($)}),h}}e.ShapeUtilsGlslLib=a},6757:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getDefaultFragShaderMain=e.getFragShaderPreamble=e.getVertexShaderSource=e.getGlsl=void 0;const s={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},i={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"};function a(d){return d===1?s:i}e.getGlsl=a,e.getVertexShaderSource=function(d){const h=a(d);return`${h.version}
      precision highp float;
      ${h.attribute} vec3 position;
      ${h.attribute} vec2 textureCoord;

      ${h.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`},e.getFragShaderPreamble=function(d){const h=a(d);return`${h.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${h.varyingFrag} vec2 TexCoords;
    ${h.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `},e.getDefaultFragShaderMain=function(d,h){return`
  void main() {
    int indices[${h}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${a(d).output} = result;
  }
  `}},9314:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.VecGlslLib=void 0;const i=s(1997);class a extends i.GlslLib{constructor(h){super(h)}getCustomTypes(){return{}}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign({},this.binaryVecFunctions()),this.copyVec()),this.setVecItem()),this.getVecItem())}binaryVecFunctions(){const h=this.context.outputTextureLayout.shape.length,b={add:"+=",sub:"-=",mul:"*=",div:"/="},_={};for(const j in b){const _e=`${j}Vec`;let g="";for(let $=0;$<h;++$)g+=`
          dest[${$}] ${b[j]} src[${$}];
          `;const c=`
        void ${_e}(int src[${h}], out int dest[${h}]) {
          ${g}
        }
        `;_[_e]=new i.GlslLibRoutine(c)}return _}copyVec(){const h=this.context.outputTextureLayout.shape.length;let b="";for(let j=0;j<h;++j)b+=`
        dest[${j}] = src[${j}];
        `;const _=`
      void copyVec(int src[${h}], out int dest[${h}]) {
        ${b}
      }
      `;return{copyVec:new i.GlslLibRoutine(_)}}setVecItem(){const h=this.context.outputTextureLayout.shape.length;let b=`
        if(index < 0)
            index =${h} + index;
        if (index == 0)
            m[0] = value;
        `;for(let j=1;j<h-1;++j)b+=`
        else if (index == ${j})
            m[${j}] = value;
            `;b+=`
        else
            m[${h-1}] = value;
        `;const _=`
      void setVecItem(out int m[${h}], int index, int value) {
        ${b}
      }
        `;return{setVecItem:new i.GlslLibRoutine(_)}}getVecItem(){const h=this.context.outputTextureLayout.shape.length;let b=`
        if(index < 0)
            index = ${h} + index;
        if (index == 0)
            return m[0];
      `;for(let j=1;j<h-1;++j)b+=`
        else if (index == ${j})
            return m[${j}];
      `;b+=`
        else
            return m[${h-1}];
        `;const _=`
      int getVecItem(int m[${h}], int index) {
        ${b}
      }
    `;return{getVecItem:new i.GlslLibRoutine(_)}}}e.VecGlslLib=a},7860:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLInferenceHandler=void 0;const i=s(1315),a=s(9240),d=s(7273),h=s(9),b=s(7379),_=s(2488),j=s(540),_e=s(3314),g=s(5639);e.WebGLInferenceHandler=class{constructor(c){this.session=c,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(c,$){return(0,_e.calculateTextureWidthAndHeight)(this.session.layoutStrategy,c,$)}executeProgram(c,$){if($.length<c.inputNames.length)throw new Error(`Input size mustn't be less than ${c.inputNames.length}.`);if(c.inputNames.length!==c.inputTypes.length)throw new Error("input names size does not match input types");const et=[];for(let it=0;it<c.inputNames.length;++it)et[it]=this.getOrCreateTextureData($[it],c.inputTypes[it]);const tt=((it,at)=>{const lt=at.map(ct=>`${ct.unpackedShape.join(",")};${ct.width}x${ct.height}`).join("_");let ut=it.name;return it.cacheHint&&(ut+="["+it.cacheHint+"]"),ut+=":"+lt,ut})(c,et);let nt=this.session.programManager.getArtifact(tt);const rt=nt?nt.programInfo:typeof c.get=="function"?c.get():c,ot=(0,_e.createTextureLayoutFromTextureType)(this.session.layoutStrategy,rt.output.dims,rt.output.textureType),st=this.createTextureData(ot,rt.output.type);return nt||(nt=this.session.programManager.build(rt,et,st),this.session.programManager.setArtifact(tt,nt)),this.runProgram(nt,et,st),st}run(c,$){return this.executeProgram(c,$).tensor}runProgram(c,$,et){for(let tt=0;tt<$.length;++tt)if(!!$[tt].isPacked!=(c.programInfo.inputTypes[tt]===g.TextureType.packed))throw new Error(`input[${tt}] property packed inconsistent`);if(!!et.isPacked!=(c.programInfo.output.textureType===g.TextureType.packed))throw new Error("output property packed inconsistent");this.session.programManager.run(c,$,et)}getOrCreateTextureData(c,$){let et=this.getTextureData(c.dataId,$===g.TextureType.packed);if(!et&&(et=this.getTextureData(c.dataId,$!==g.TextureType.packed),et))return $===g.TextureType.packed?this.pack(et):this.unpack(et);if(!et){const tt=(0,_e.createTextureLayoutFromTextureType)(this.session.layoutStrategy,c.dims,$);if($===g.TextureType.packedLastDimension){const ot=c.dims;if(ot.length===4){const st=[ot[0],Math.ceil(ot[1]*ot[2]*ot[3]/4)],it=(0,_e.createTextureLayoutFromTextureType)(this.session.layoutStrategy,st,$);let at=c.numberData;if(ot[1]*ot[2]*ot[3]%4!=0){const lt=ot[0],ut=ot[1]*ot[2]*ot[3],ct=Math.ceil(ut*1/4)*4;at=new Float32Array(lt*ct);for(let pt=0;pt<lt;++pt){const ht=pt*ut,yt=pt*ct+pt%1*ut;at.set(c.numberData.subarray(ht,ht+ut),yt)}}return this.createTextureData(it,c.type,at,c,1)}}if($===g.TextureType.packed){const nt=(0,_e.createTextureLayoutFromShape)(this.session.layoutStrategy,c.dims,1,[],{reverseWH:!0}),rt=this.createTextureData(nt,c.type,c.numberData,c,1);et=this.pack(rt)}else et=this.createTextureData(tt,c.type,c.numberData,c,1)}return et}createTextureDataFromLayoutBindTensor(c,$,et,tt){return this.createTextureData(c,$,et,tt,1)}createTextureData(c,$,et,tt,nt){i.Logger.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(c)}]`);const rt=this.session.textureManager.createTextureFromLayout($,c,et,nt);return this.createTextureDataFromTexture(c,$,rt,tt)}reshapeUnpacked(c,$){const et=this.getOrCreateTextureData(c,g.TextureType.unpacked),tt={channels:et.channels,height:et.height,width:et.width,shape:$.length!==0?$:[1],strides:d.ShapeUtil.computeStrides($),unpackedShape:$};return this.createTextureDataFromTexture(tt,c.type,et.texture).tensor}reshapePacked(c,$){const et=this.getOrCreateTextureData(c,g.TextureType.packed);if((0,b.isReshapeCheap)(c.dims,$)){const st={channels:et.channels,height:et.height,width:et.width,shape:$.length!==0?$:[1],strides:d.ShapeUtil.computeStrides($),unpackedShape:$,isPacked:!0};return this.createTextureDataFromTexture(st,c.type,et.texture).tensor}const tt=(0,b.processDims3D)(c.dims),nt=(0,b.processDims3D)($),rt=this.reshapePacked(c,tt),ot=this.run((0,b.createPackedReshape3DProgramInfoLoader)(this,rt,nt),[rt]);return this.reshapePacked(ot,$)}cast(c,$){const et=this.getOrCreateTextureData(c,g.TextureType.unpacked);return this.createTextureDataFromTexture(et,$,et.texture).tensor}createTextureDataFromTexture(c,$,et,tt,nt){const rt=Object.assign(Object.assign({},c),{tensor:tt||new a.Tensor(c.unpackedShape,$,ot=>this.readTexture(rt),async ot=>this.readTextureAsync(rt),void 0,nt),texture:et});return this.setTextureData(rt.tensor.dataId,rt,c.isPacked),rt}getTextureData(c,$=!1){return this.session.isInitializer(c)?this.session.getTextureData(c,$):$?this.packedTextureDataCache.get(c):this.unpackedTextureDataCache.get(c)}setTextureData(c,$,et=!1){this.session.isInitializer(c)?this.session.setTextureData(c,$,et):(et?this.packedTextureDataCache:this.unpackedTextureDataCache).set(c,$)}isTextureLayoutCached(c,$=!1){return!!this.getTextureData(c.dataId,$)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(c=>this.session.textureManager.releaseTexture(c)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(c=>this.session.textureManager.releaseTexture(c)),this.unpackedTextureDataCache=new Map}readTexture(c){return c.isPacked?this.readTexture(this.unpack(c)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(c,c.tensor.type,c.channels):this.session.textureManager.readUint8TextureAsFloat((0,_.encodeAsUint8)(this,c))}async readTextureAsync(c){return c.isPacked?this.readTextureAsync(this.unpack(c)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(c,c.tensor.type,c.channels):this.session.textureManager.readUint8TextureAsFloat((0,_.encodeAsUint8)(this,c))}pack(c){return this.executeProgram((0,h.createPackProgramInfoLoader)(this,c.tensor),[c.tensor])}unpack(c){return this.executeProgram((0,j.createUnpackProgramInfoLoader)(this,c.tensor),[c.tensor])}}},4110:function(o,e,s){var i=this&&this.__createBinding||(Object.create?function(Et,Ct,kt,Dt){Dt===void 0&&(Dt=kt);var Rt=Object.getOwnPropertyDescriptor(Ct,kt);Rt&&!("get"in Rt?!Ct.__esModule:Rt.writable||Rt.configurable)||(Rt={enumerable:!0,get:function(){return Ct[kt]}}),Object.defineProperty(Et,Dt,Rt)}:function(Et,Ct,kt,Dt){Dt===void 0&&(Dt=kt),Et[Dt]=Ct[kt]}),a=this&&this.__setModuleDefault||(Object.create?function(Et,Ct){Object.defineProperty(Et,"default",{enumerable:!0,value:Ct})}:function(Et,Ct){Et.default=Ct}),d=this&&this.__importStar||function(Et){if(Et&&Et.__esModule)return Et;var Ct={};if(Et!=null)for(var kt in Et)kt!=="default"&&Object.prototype.hasOwnProperty.call(Et,kt)&&i(Ct,Et,kt);return a(Ct,Et),Ct};Object.defineProperty(e,"__esModule",{value:!0}),e.WEBGL_OP_RESOLVE_RULES=void 0;const h=s(8817),b=d(s(5194)),_=s(4752),j=s(6668),_e=s(9754),g=s(5042),c=s(6742),$=s(4125),et=s(6149),tt=s(5378),nt=s(6981),rt=s(7413),ot=s(7006),st=s(8276),it=s(5565),at=s(2834),lt=s(1010),ut=s(8126),ct=s(2801),pt=s(565),ht=s(2444),yt=s(815),xt=s(564),ft=s(5416),wt=s(1240),dt=s(5944),mt=s(5707),bt=d(s(9087)),vt=s(7862),Tt=s(3980);e.WEBGL_OP_RESOLVE_RULES=[["Abs","","6+",bt.abs],["Acos","","7+",bt.acos],["Add","","7+",b.add],["And","","7+",b.and],["Asin","","7+",bt.asin],["Atan","","7+",bt.atan],["AveragePool","","7+",at.averagePool,at.parseAveragePoolAttributes],["BatchNormalization","","7+",h.batchNormalization,h.parseBatchNormalizationAttributes],["Cast","","6+",_.cast,_.parseCastAttributes],["Ceil","","6+",bt.ceil],["Clip","","6-10",bt.clip,bt.parseClipAttributes],["Clip","","11+",bt.clipV11],["Concat","","4+",j.concat,j.parseConcatAttributes],["Conv","","1+",_e.conv,_e.parseConvAttributes],["ConvTranspose","","1+",g.convTranspose,g.parseConvTransposeAttributes],["Cos","","7+",bt.cos],["Div","","7+",b.div],["Dropout","","7+",bt.identity],["DepthToSpace","","1+",c.depthToSpace,c.parseDepthToSpaceAttributes],["Equal","","7+",b.equal],["Elu","","6+",bt.elu,bt.parseEluAttributes],["Exp","","6+",bt.exp],["Flatten","","1+",$.flatten,$.parseFlattenAttributes],["Floor","","6+",bt.floor],["FusedConv","com.microsoft","1+",_e.conv,_e.parseConvAttributes],["Gather","","1+",et.gather,et.parseGatherAttributes],["Gemm","","7-10",tt.gemm,tt.parseGemmAttributesV7],["Gemm","","11+",tt.gemm,tt.parseGemmAttributesV11],["GlobalAveragePool","","1+",at.globalAveragePool,at.parseGlobalAveragePoolAttributes],["GlobalMaxPool","","1+",at.globalMaxPool],["Greater","","7+",b.greater],["Identity","","1+",bt.identity],["ImageScaler","","1+",nt.imageScaler,nt.parseImageScalerAttributes],["InstanceNormalization","","6+",rt.instanceNormalization,rt.parseInstanceNormalizationAttributes],["LeakyRelu","","6+",bt.leakyRelu,bt.parseLeakyReluAttributes],["Less","","7+",b.less],["LRN","","1+",ot.lrn,ot.parseLrnAttributes],["Log","","6+",bt.log],["MatMul","","1+",st.matMul,st.parseMatMulAttributes],["MaxPool","","1+",at.maxPool,at.parseMaxPoolAttributes],["Mul","","7+",b.mul],["Neg","","6+",bt.neg],["Not","","1+",bt.not],["Or","","7+",b.or],["Pad","","2-10",it.padV2,it.parsePadAttributesV2],["Pad","","11+",it.padV11,it.parsePadAttributesV11],["Pow","","7+",b.pow],["PRelu","","7+",b.pRelu],["ReduceLogSum","","1+",lt.reduceLogSum,lt.parseReduceAttributes],["ReduceMax","","1+",lt.reduceMax,lt.parseReduceAttributes],["ReduceMean","","1+",lt.reduceMean,lt.parseReduceAttributes],["ReduceMin","","1+",lt.reduceMin,lt.parseReduceAttributes],["ReduceProd","","1+",lt.reduceProd,lt.parseReduceAttributes],["ReduceSum","","1-12",lt.reduceSum,lt.parseReduceAttributes],["ReduceSumSquare","","1+",lt.reduceLogSumSquare,lt.parseReduceAttributes],["Relu","","6+",bt.relu],["Reshape","","5+",ut.reshape],["Resize","","10",ct.resize,ct.parseResizeAttributesV10],["Resize","","11+",ct.resize,ct.parseResizeAttributesV11],["Shape","","1+",pt.shape],["Sigmoid","","6+",bt.sigmoid],["Sin","","7+",bt.sin],["Slice","","10+",ht.sliceV10],["Slice","","1-9",ht.slice,ht.parseSliceAttributes],["Softmax","","1-12",yt.softmax,yt.parseSoftmaxAttributes],["Softmax","","13+",yt.softmaxV13,yt.parseSoftmaxAttributesV13],["Split","","2-12",xt.split,xt.parseSplitAttributes],["Sqrt","","6+",bt.sqrt],["Squeeze","","1-12",ft.squeeze,ft.parseSqueezeAttributes],["Squeeze","","13+",ft.squeezeV13],["Sub","","7+",b.sub],["Sum","","6+",wt.sum],["Tan","","7+",bt.tan],["Tanh","","6+",bt.tanh],["Tile","","6+",dt.tile],["Transpose","","1+",mt.transpose,mt.parseTransposeAttributes],["Upsample","","7-8",Tt.upsample,Tt.parseUpsampleAttributesV7],["Upsample","","9",Tt.upsample,Tt.parseUpsampleAttributesV9],["Unsqueeze","","1-12",vt.unsqueeze,vt.parseUnsqueezeAttributes],["Unsqueeze","","13+",vt.unsqueezeV13],["Xor","","7+",b.xor]]},8817:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseBatchNormalizationAttributes=e.batchNormalization=void 0;const i=s(4910),a=s(6757),d=s(5639),h={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]};e.batchNormalization=(j,_e,g)=>(_(_e),[j.run(Object.assign(Object.assign({},h),{cacheHint:g.cacheKey,get:()=>b(j,_e,g)}),_e)]),e.parseBatchNormalizationAttributes=j=>{const _e=j.attributes.getFloat("epsilon",1e-5),g=j.attributes.getFloat("momentum",.9),c=j.attributes.getInt("spatial",1);return(0,i.createAttributeWithCacheKey)({epsilon:_e,momentum:g,spatial:c})};const b=(j,_e,g)=>{const c=(0,a.getGlsl)(j.session.backend.glContext.version),$=_e[0].dims.length,[et,tt]=j.calculateTextureWidthAndHeight(_e[1].dims,d.TextureType.unpacked),nt=`
  float process(int[${$}] indices) {
    vec2 position = offsetToCoords(indices[1], ${et}, ${tt});
    float scale = getColorAsFloat(${c.texture2D}(Scale, position));
    float mean = getColorAsFloat(${c.texture2D}(Mean, position));
    float variance = getColorAsFloat(${c.texture2D}(Variance, position));
    float b = getColorAsFloat(${c.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${g.epsilon})) ) + b;
  }`;return Object.assign(Object.assign({},h),{output:{dims:_e[0].dims,type:_e[0].type,textureType:d.TextureType.unpacked},shaderSource:nt})},_=j=>{if(!j||j.length!==5)throw new Error("BatchNormalization requires 5 inputs.");const _e=j[0],g=j[1],c=j[2],$=j[3],et=j[4];if(_e.dims.length<3||g.dims.length!==1||c.dims.length!==1||$.dims.length!==1||et.dims.length!==1)throw new Error("invalid input shape.");if(g.dims[0]!==_e.dims[1]||c.dims[0]!==_e.dims[1]||$.dims[0]!==_e.dims[1]||et.dims[0]!==_e.dims[1])throw new Error("invalid input shape.");if(_e.type!=="float32"&&_e.type!=="float64"||g.type!=="float32"&&g.type!=="float64"||c.type!=="float32"&&c.type!=="float64"||$.type!=="float32"&&$.type!=="float64"||et.type!=="float32"&&et.type!=="float64")throw new Error("invalid input tensor types.")}},5194:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.xor=e.sub=e.pRelu=e.pow=e.or=e.mul=e.less=e.greater=e.equal=e.div=e.and=e.add=e.glslPRelu=e.glslPow=e.glslXor=e.glslOr=e.glslAnd=e.glslLess=e.glslGreater=e.glslEqual=e.glslSub=e.glslMul=e.glslDiv=e.glslAdd=void 0;const i=s(7273),a=s(1997),d=s(6757),h=s(5639);function b(){const at="add_";return{body:`
  float ${at}(float a, float b) {
    return a + b;
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:at,type:a.FunctionType.ValueBased}}function _(){const at="div_";return{body:`
  float ${at}(float a, float b) {
    return a / b;
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:at,type:a.FunctionType.ValueBased}}function j(){const at="mul_";return{body:`
  float ${at}(float a, float b) {
    return a * b;
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:at,type:a.FunctionType.ValueBased}}function _e(){const at="sub_";return{body:`
  float ${at}(float a, float b) {
    return a - b;
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:at,type:a.FunctionType.ValueBased}}function g(){const at="equal_";return{body:`
  float ${at}(float a, float b) {
    return float(a == b);
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:at,type:a.FunctionType.ValueBased}}function c(){const at="greater_";return{body:`
  float ${at}(float a, float b) {
    return float(a > b);
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:at,type:a.FunctionType.ValueBased}}function $(){const at="less_";return{body:`
  float ${at}(float a, float b) {
    return float(a < b);
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:at,type:a.FunctionType.ValueBased}}function et(){const at="and_";return{body:`
  float ${at}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:at,type:a.FunctionType.ValueBased}}function tt(){const at="or_";return{body:`
  float ${at}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:at,type:a.FunctionType.ValueBased}}function nt(){const at="xor_";return{body:`
  float ${at}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:at,type:a.FunctionType.ValueBased}}function rt(){return function(at){const lt=`${at}_`;return{body:`
  float ${lt}(float a, float b) {
    return ${at}(a, b);
  }
  vec4 ${lt}(vec4 v1, vec4 v2) {
    return ${at}(v1, v2);
  }
  `,name:lt,type:a.FunctionType.ValueBased}}("pow")}function ot(){const at="prelu_";return{body:`
  float ${at}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${at}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:at,type:a.FunctionType.ValueBased}}e.glslAdd=b,e.glslDiv=_,e.glslMul=j,e.glslSub=_e,e.glslEqual=g,e.glslGreater=c,e.glslLess=$,e.glslAnd=et,e.glslOr=tt,e.glslXor=nt,e.glslPow=rt,e.glslPRelu=ot;const st=(at,lt,ut,ct=lt[0].type,pt)=>{const ht=at.session.pack?h.TextureType.packed:h.TextureType.unpacked;return{name:ut.name,inputNames:["A","B"],inputTypes:[ht,ht],cacheHint:pt,get:()=>it(at,lt,ut,ct)}},it=(at,lt,ut,ct=lt[0].type)=>{const pt=at.session.pack?h.TextureType.packed:h.TextureType.unpacked,ht=!i.ShapeUtil.areEqual(lt[0].dims,lt[1].dims);let yt=lt[0].dims;const xt=at.session.pack;if(ht){const dt=i.BroadcastUtil.calcShape(lt[0].dims,lt[1].dims,!1);if(!dt)throw new Error("Can't perform binary op on the given tensors");yt=dt;const mt=yt.length,bt=lt[0].dims.length!==0?lt[0].dims.length:1,vt=lt[1].dims.length!==0?lt[1].dims.length:1,Tt=lt[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",Et=lt[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",Ct=(0,d.getGlsl)(at.session.backend.glContext.version),kt=xt?`
      ${ut.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${ut.name}(a, b);
        ${Ct.output} = result;
      }`:`
      ${ut.body}
      float process(int indices[${mt}]) {
        int aindices[${bt}];
        int bindices[${vt}];
        ${Tt}
        ${Et}
        return ${ut.name}(_A(aindices), _B(bindices));
      }`;return{name:ut.name,inputNames:["A","B"],inputTypes:[pt,pt],output:{dims:yt,type:ct,textureType:pt},shaderSource:kt,hasMain:xt}}const ft=(0,d.getGlsl)(at.session.backend.glContext.version),wt=`
    ${ut.body}
    void main() {
      vec4 v1 = ${ft.texture2D}(A, TexCoords);
      vec4 v2 = ${ft.texture2D}(B, TexCoords);
      vec4 result = ${ut.name}(v1, v2);
      ${ft.output} = result;
    }
    `;return{name:ut.name,inputNames:["A","B"],inputTypes:[pt,pt],output:{dims:lt[0].dims,type:ct,textureType:pt},shaderSource:wt,hasMain:!0}};e.add=(at,lt)=>[at.run(st(at,lt,b()),lt)],e.and=(at,lt)=>[at.run(st(at,lt,et(),"bool"),lt)],e.div=(at,lt)=>[at.run(st(at,lt,_()),lt)],e.equal=(at,lt)=>[at.run(st(at,lt,g(),"bool"),lt)],e.greater=(at,lt)=>[at.run(st(at,lt,c(),"bool"),lt)],e.less=(at,lt)=>[at.run(st(at,lt,$(),"bool"),lt)],e.mul=(at,lt)=>[at.run(st(at,lt,j()),lt)],e.or=(at,lt)=>[at.run(st(at,lt,tt(),"bool"),lt)],e.pow=(at,lt)=>[at.run(st(at,lt,rt()),lt)],e.pRelu=(at,lt)=>[at.run(st(at,lt,ot()),lt)],e.sub=(at,lt)=>[at.run(st(at,lt,_e()),lt)],e.xor=(at,lt)=>[at.run(st(at,lt,nt(),"bool"),lt)]},4752:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseCastAttributes=e.cast=void 0;const i=s(7273);e.cast=(d,h,b)=>(a(h),[d.cast(h[0],b)]),e.parseCastAttributes=d=>i.ProtoUtil.tensorDataTypeFromProto(d.attributes.getInt("to"));const a=d=>{if(!d||d.length!==1)throw new Error("Cast requires 1 input.");if(d[0].type==="string")throw new Error("Invalid input type.")}},4595:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedConcatProgramInfoLoader=void 0;const i=s(6757),a=s(5639),d=s(432),h=s(5614);e.createPackedConcatProgramInfoLoader=(_,j,_e)=>{const g=(c=j.length,$=_e.cacheKey,{name:"Concat (packed)",inputNames:Array.from({length:c},(et,tt)=>`X${tt}`),inputTypes:Array(c).fill(a.TextureType.packed),cacheHint:$});var c,$;return Object.assign(Object.assign({},g),{get:()=>((et,tt,nt,rt)=>{const ot=nt[0].dims.slice();if(rt>=ot.length||rt<-1*ot.length)throw new Error("axis specified for concat doesn't match input dimensionality");rt<0&&(rt=ot.length+rt);const st=ot.slice(0);for(let Tt=1;Tt<nt.length;Tt++){const Et=nt[Tt].dims.slice();for(let Ct=0;Ct<ot.length;Ct++)if(Ct===rt)st[rt]+=Et[Ct];else if(ot[Ct]!==Et[Ct])throw new Error("non concat dimensions must match")}const it=st.length,at=(0,h.getChannels)("coords",it),lt=(0,d.getCoordsDataType)(it),ut=(0,h.unpackFromChannel)(),ct=nt.map(Tt=>Tt.dims),pt=(0,d.getGlChannels)(it),ht=new Array(ct.length-1);ht[0]=ct[0][rt];for(let Tt=1;Tt<ht.length;Tt++)ht[Tt]=ht[Tt-1]+ct[Tt][rt];const yt=pt[rt],xt=pt.slice(-2),ft=pt.join();let wt=`if (${yt} < ${ht[0]}) {
        return getChannel(
            getX0(${ft}), vec2(${xt.join()}));
        }`;for(let Tt=1;Tt<ht.length;Tt++){const Et=ht[Tt-1];wt+=`
            if (${yt} < ${ht[Tt]}  && ${yt} >= ${ht[Tt-1]}) {
              return getChannel(
                getX${Tt}(${b(pt,yt,Et)}),
                vec2(${b(xt,yt,Et)}));
            }`}const dt=ht.length,mt=ht[ht.length-1];wt+=`
            return getChannel(
              getX${dt}(${b(pt,yt,mt)}),
              vec2(${b(xt,yt,mt)}));`;const bt=(0,i.getGlsl)(et.session.backend.glContext.version),vt=`
          ${ut}
          float getValue(${pt.map(Tt=>"int "+Tt)}) {
            ${wt}
          }

          void main() {
            ${lt} coords = getOutputCoords();
            int lastDim = coords.${pt[it-1]};
            coords.${pt[it-1]} = coords.${pt[it-2]};
            coords.${pt[it-2]} = lastDim;

            vec4 result = vec4(getValue(${at}), 0., 0., 0.);

            ${at[it-1]} = ${at[it-1]} + 1;
            if (${at[it-1]} < ${st[it-1]}) {
              result.g = getValue(${at});
            }

            ${at[it-2]} = ${at[it-2]} + 1;
            if (${at[it-2]} < ${st[it-2]}) {
              result.a = getValue(${at});
            }

            ${at[it-1]} = ${at[it-1]} - 1;
            if (${at[it-2]} < ${st[it-2]} &&
                ${at[it-1]} < ${st[it-1]}) {
              result.b = getValue(${at});
            }
            ${bt.output} = result;
          }
        `;return Object.assign(Object.assign({},tt),{output:{dims:st,type:nt[0].type,textureType:a.TextureType.packed},shaderSource:vt,hasMain:!0})})(_,g,j,_e.axis)})};const b=(_,j,_e)=>{const g=_.indexOf(j);return _.map((c,$)=>$===g?`${c} - ${_e}`:c).join()}},6668:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConcatAttributes=e.concat=void 0;const i=s(4910),a=s(5639),d=s(4595);e.concat=(c,$,et)=>(g($),c.session.pack&&$[0].dims.length>1?[c.run((0,d.createPackedConcatProgramInfoLoader)(c,$,et),$)]:[c.run(h(c,$,et),$)]);const h=(c,$,et)=>{const tt=(nt=$.length,rt=et.cacheKey,{name:"Concat",inputNames:Array.from({length:nt},(ot,st)=>`X${st}`),inputTypes:Array(nt).fill(a.TextureType.unpacked),cacheHint:rt});var nt,rt;return Object.assign(Object.assign({},tt),{get:()=>((ot,st,it,at)=>{const lt=it[0].dims.slice();if(at>=lt.length||at<-1*lt.length)throw new Error("axis specified for concat doesn't match input dimensionality");at<0&&(at=lt.length+at);const ut=lt.slice(0);for(let ft=1;ft<it.length;ft++){const wt=it[ft].dims.slice();for(let dt=0;dt<lt.length;dt++)if(dt===at)ut[at]+=wt[dt];else if(lt[dt]!==wt[dt])throw new Error("non concat dimensions must match")}const ct=ut.length,pt=new Array(it.length);let ht=0;for(let ft=0;ft<pt.length;++ft)ht+=it[ft].dims[at],pt[ft]=ht;let yt="";yt=it.length<5?b(pt):_(pt);const xt=`
        ${j(it.length,ct)}
        ${_e(pt)}
        ${yt}
        float process(int indices[${ct}]) {
          int textureIndex = getTextureWhereDataResides (indices[${at}]);

          if(textureIndex != 0) {
            indices[${at}] = indices[${at}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return Object.assign(Object.assign({},st),{output:{dims:ut,type:it[0].type,textureType:a.TextureType.unpacked},shaderSource:xt})})(0,tt,$,et.axis)})},b=c=>`int getTextureWhereDataResides(int index) {
      ${c.map(($,et)=>`if(index<${$}) {return ${et};}
`).join("")}
    }`,_=c=>b(c),j=(c,$)=>{const et=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${$}]) {`];for(let tt=0;tt<c;++tt)tt===0?et.push(`	if (textureIndex == ${tt}) { return _X${tt}(indices); }`):tt===c-1?et.push(`	else { return _X${tt}(indices); }`):et.push(`	else if (textureIndex == ${tt}) { return _X${tt}(indices); }`);return et.push("	}"),et.join(`
`)},_e=c=>{const $=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let et=0;et<c.length;++et)et===0?$.push(`	if (index == ${et}) { return ${c[et]}; }`):et===c.length-1?$.push(`	else { return ${c[et]}; }`):$.push(`	else if (index == ${et}) { return ${c[et]}; }`);return $.push("	}"),$.join(`
`)};e.parseConcatAttributes=c=>(0,i.createAttributeWithCacheKey)({axis:c.attributes.getInt("axis")});const g=c=>{if(!c||c.length<1)throw new Error("too few inputs");const $=c[0].type,et=c[0].dims.length;if($==="string")throw new Error("string tensor is not supported yet");for(const tt of c){if(tt.type!==$)throw new Error("input tensors should be one type");if(tt.dims.length!==et)throw new Error("input tensors should have the same shape")}}},7825:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createUnpackedGroupedConvProgramInfoLoader=void 0;const i=s(1315),a=s(6757),d=s(5639),h=s(9754),b=s(2150);e.createUnpackedGroupedConvProgramInfoLoader=(_,j,_e)=>{const g=(c=j.length>2,$=_e.cacheKey,{name:"GroupedConv",inputNames:c?["X","W","Bias"]:["X","W"],inputTypes:c?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],cacheHint:$});var c,$;return Object.assign(Object.assign({},g),{get:()=>((et,tt,nt,rt)=>{const ot=tt.length>2?"value += getBias(output_channel);":"",st=tt[0].dims.slice(),it=tt[1].dims.slice(),at=it[0]/rt.group;i.Logger.verbose("GroupedConv",`autpPad:${rt.autoPad}, dilations:${rt.dilations}, group:${rt.group}, kernelShape:${rt.kernelShape}, pads:${rt.pads}, strides:${rt.strides}`);const lt=(0,h.calculateOutputShape)(st,it,rt.dilations,rt.pads,rt.strides),ut=(0,a.getGlsl)(et.session.backend.glContext.version),{activationFunction:ct,applyActivation:pt}=(0,b.getActivationSnippet)(rt),ht=`
  const ivec2 strides = ivec2(${rt.strides[0]}, ${rt.strides[1]});
  const ivec2 pads = ivec2(${rt.pads[0]}, ${rt.pads[1]});
  ${ct}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${at};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${it[1]}; wInChannel++) {
      int input_channel = group_id * ${it[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${it[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${rt.dilations[0]};

        if (xHeight < 0 || xHeight >= ${st[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${it[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${rt.dilations[1]};
          if (xWidth < 0 || xWidth >= ${st[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${ot}
    ${pt}
    ${ut.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},nt),{output:{dims:lt,type:tt[0].type,textureType:d.TextureType.unpacked},shaderSource:ht,hasMain:!0})})(_,j,g,_e)})}},7708:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.conv2DPacked=e.conv2DPackedPointwise=void 0;const i=s(9754),a=s(5950),d=s(5632);e.conv2DPackedPointwise=(h,b,_)=>{const j=b[0].dims,_e=b[1].dims,g=(0,i.calculateOutputShape)(j,_e,_.dilations,_.pads,_.strides),c=h.reshapePacked(b[0],[j[1],j[2]*j[3]]),$=h.reshapePacked(b[1],[_e[0],_e[1]]),et=b.length>2?[$,c,b[2]]:[$,c],tt=h.run((0,d.createPackedMatmulProgramInfoLoader)(h,et,_),et);return h.reshapePacked(tt,g)},e.conv2DPacked=(h,b,_)=>{const j=b[0].dims,_e=b[1].dims,g=(0,i.calculateOutputShape)(j,_e,_.dilations,_.pads,_.strides),c=h.run((0,a.createPackedIm2ColProgramInfoLoader)(h,b[0],b[1],g,_),[b[0]]),$=h.reshapePacked(b[1],[_e[0],_e[1]*_e[2]*_e[3]]),et=b.length===3?[$,c,b[2]]:[$,c],tt=h.run((0,d.createPackedMatmulProgramInfoLoader)(h,et,_),et);return h.reshapePacked(tt,g)}},5042:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConvTransposeAttributes=e.convTranspose=void 0;const i=s(4910),a=s(6757),d=s(5639),h=s(2150),b=($,et,tt,nt,rt,ot)=>($-1)*et+tt+(nt-1)*rt+1-ot,_=($,et,tt,nt,rt)=>{const ot=Math.floor($/2);et==="SAME_UPPER"?(tt[nt]=ot,tt[rt]=$-ot):et==="SAME_LOWER"&&(tt[nt]=$-ot,tt[rt]=ot)};e.convTranspose=($,et,tt)=>(c(et,tt),j($,et,tt));const j=($,et,tt)=>{const nt=g(tt,et);return[_e($,et,nt)]},_e=($,et,tt)=>$.run(((nt,rt,ot)=>{const st=(it=rt.length>2,at=ot.cacheKey,{name:"ConvTranspose",inputNames:it?["X","W","B"]:["X","W"],inputTypes:it?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],cacheHint:at});var it,at;return Object.assign(Object.assign({},st),{get:()=>((lt,ut,ct,pt)=>{const ht=ut.length>2?"getB(output_channel)":"0.0",yt=ut[0].dims,xt=ut[1].dims,ft=xt[1],wt=xt[0]/pt.group,dt=[ut[0].dims[0],ut[1].dims[1]*pt.group,...pt.outputShape],mt=(0,a.getGlsl)(lt.session.backend.glContext.version),{activationFunction:bt,applyActivation:vt}=(0,h.getActivationSnippet)(pt),Tt=`
  const ivec2 strides = ivec2(${pt.strides[0]}, ${pt.strides[1]});
  const ivec2 pads = ivec2(${pt.pads[0]}, ${pt.pads[1]});
  ${bt}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${ft};
    int wOutChannel = output_channel - group_id * ${ft};

    float value = ${ht};
    for (int inChannelOffset = 0; inChannelOffset < ${wt}; inChannelOffset++) {
      int input_channel = group_id * ${wt} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${xt[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${xt[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${pt.dilations[0]}, wHOff * ${pt.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${yt[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${yt[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${vt}
    ${mt.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},ct),{output:{dims:dt,type:ut[0].type,textureType:d.TextureType.unpacked},shaderSource:Tt,hasMain:!0})})(nt,rt,st,ot)})})($,et,tt),et),g=($,et)=>{const tt=$.kernelShape.slice();if($.kernelShape.length===0)for(let st=2;st<et[1].dims.length;++st)tt.push(et[1].dims[st]);const nt=$.pads.slice(),rt=$.outputShape.slice();((st,it,at,lt,ut,ct,pt,ht)=>{const yt=st.length-2,xt=ht.length===0;for(let ft=0;ft<yt;++ft){const wt=xt?st[ft+2]*ct[ft]:ht[ft],dt=b(st[ft+2],ct[ft],ut[ft],it[ft],at[ft],wt);_(dt,lt,ut,ft,ft+yt),xt&&ht.push(ct[ft]*(st[ft+2]-1)+pt[ft]+(it[ft]-1)*at[ft]+1-ut[ft]-ut[ft+yt])}})(et[0].dims,tt,$.dilations,$.autoPad,nt,$.strides,$.outputPadding,rt);const ot=Object.assign({},$);return Object.assign(ot,{kernelShape:tt,pads:nt,outputShape:rt,cacheKey:$.cacheKey}),ot};e.parseConvTransposeAttributes=$=>{const et=$.attributes,tt=(0,h.parseInternalActivationAttributes)(et),nt=et.getString("auto_pad","NOTSET"),rt=et.getInts("dilations",[1,1]),ot=et.getInt("group",1),st=et.getInts("kernel_shape",[]),it=et.getInts("output_padding",[0,0]),at=et.getInts("output_shape",[]),lt=et.getInts("pads",[0,0,0,0]),ut=et.getInts("strides",[1,1]);return(0,i.createAttributeWithCacheKey)(Object.assign({autoPad:nt,dilations:rt,group:ot,kernelShape:st,outputPadding:it,outputShape:at,pads:lt,strides:ut},tt))};const c=($,et)=>{if(!$||$.length!==2&&$.length!==3)throw new Error("Conv requires 2 or 3 inputs");if($[0].dims.length!==4||$[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if($[0].dims[1]!==$[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const tt=$[1].dims[1]*et.group;if($.length===3&&($[2].dims.length!==1||$[2].dims[0]!==tt))throw new Error("invalid bias");const nt=$[0].dims.length-2;if(et.dilations.length!==nt)throw new Error(`dilations should be ${nt}D`);if(et.strides.length!==nt)throw new Error(`strides should be ${nt}D`);if(et.pads.length!==2*nt)throw new Error(`pads should be ${2*nt}D`);if(et.outputPadding.length!==nt)throw new Error(`output_padding should be ${nt}D`);if(et.kernelShape.length!==0&&et.kernelShape.length!==$[1].dims.length-2)throw new Error("invalid kernel shape");if(et.outputShape.length!==0&&et.outputShape.length!==$[0].dims.length-2)throw new Error("invalid output shape");if($[0].type!=="float32"||$[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if($.length===3&&$[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}},9754:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseConvAttributes=e.conv=e.calculateOutputShape=void 0;const i=s(4910),a=s(7273),d=s(7825),h=s(7708),b=s(3281),_=s(2150),j=s(1625),_e=s(8276);e.calculateOutputShape=(nt,rt,ot,st,it)=>{const at=nt[0],lt=nt.slice(2),ut=lt.length,ct=rt[0],pt=rt.slice(2).map((yt,xt)=>yt+(yt-1)*(ot[xt]-1)),ht=lt.map((yt,xt)=>yt+st[xt]+st[xt+ut]).map((yt,xt)=>Math.floor((yt-pt[xt]+it[xt])/it[xt]));return[at,ct].concat(...ht)},e.conv=(nt,rt,ot)=>(tt(rt,ot),g(nt,rt,ot));const g=(nt,rt,ot)=>{const st=et(ot,rt),it=nt.session.pack,at=st.kernelShape[0]===1&&st.kernelShape[1]===1;return st.group>1?[nt.run((0,d.createUnpackedGroupedConvProgramInfoLoader)(nt,rt,st),rt)]:at&&it?[c(nt,rt,st)]:it&&rt[0].dims.length===4&&rt[0].dims[0]===1&&!at?[(0,h.conv2DPacked)(nt,rt,st)]:[$(nt,rt,st)]},c=(nt,rt,ot)=>{const st=rt[0].dims,it=rt[1].dims,at=(0,e.calculateOutputShape)(st,it,ot.dilations,ot.pads,ot.strides),lt=nt.reshapeUnpacked(rt[0],[st[1],st[2]*st[3]]),ut=nt.reshapeUnpacked(rt[1],[it[0],it[1]]),ct=rt.length>2?[ut,lt,rt[2]]:[ut,lt],pt=nt.run((0,_e.createMatmulProgramInfoLoader)(ct,ot),ct);return nt.reshapeUnpacked(pt,at)},$=(nt,rt,ot)=>{const st=rt[0].dims,it=rt[1].dims,at=(0,e.calculateOutputShape)(st,it,ot.dilations,ot.pads,ot.strides),lt=nt.run((0,j.createIm2ColProgramInfoLoader)(nt,rt[0],rt[1],at,ot),[rt[0]]),ut=rt.length===3?[lt,rt[1],rt[2]]:[lt,rt[1]];return nt.run((0,b.createDotProductProgramInfoLoader)(nt,rt,at,ot),ut)},et=(nt,rt)=>{const ot=nt.kernelShape.slice();if(nt.kernelShape.length===0)for(let at=2;at<rt[1].dims.length;++at)ot.push(rt[1].dims[at]);const st=nt.pads.slice();a.PoolConvUtil.adjustPadsBasedOnAutoPad(rt[0].dims,nt.strides,nt.dilations,ot,st,nt.autoPad);const it=Object.assign({},nt);return Object.assign(it,{kernelShape:ot,pads:st,cacheKey:nt.cacheKey}),it};e.parseConvAttributes=nt=>{const rt=nt.attributes,ot=(0,_.parseInternalActivationAttributes)(rt),st=rt.getString("auto_pad","NOTSET"),it=rt.getInts("dilations",[1,1]),at=rt.getInt("group",1),lt=rt.getInts("kernel_shape",[]),ut=rt.getInts("pads",[0,0,0,0]),ct=rt.getInts("strides",[1,1]);return(0,i.createAttributeWithCacheKey)(Object.assign({autoPad:st,dilations:it,group:at,kernelShape:lt,pads:ut,strides:ct},ot))};const tt=(nt,rt)=>{if(!nt||nt.length!==2&&nt.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(nt[0].dims.length!==4||nt[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if(nt[0].dims[1]!==nt[1].dims[1]*rt.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(nt.length===3&&(nt[2].dims.length!==1||nt[1].dims[0]!==nt[2].dims[0]))throw new Error("invalid bias");const ot=nt[0].dims.length-2;if(rt.dilations.length!==ot)throw new Error(`dilations should be ${ot}D`);if(rt.strides.length!==ot)throw new Error(`strides should be ${ot}D`);if(rt.pads.length!==2*ot)throw new Error(`pads should be ${2*ot}D`);if(rt.kernelShape.length!==0&&rt.kernelShape.length!==nt[1].dims.length-2)throw new Error("invalid kernel shape");if(nt[0].type!=="float32"||nt[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(nt.length===3&&nt[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}},6742:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseDepthToSpaceAttributes=e.depthToSpace=void 0;const i=s(5707);e.depthToSpace=(d,h,b)=>{a(h);const _=b.blocksize,j=_*_,_e=b.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],g=b.mode==="DCR"?[h[0].dims[0],_,_,h[0].dims[1]/j,h[0].dims[2],h[0].dims[3]]:[h[0].dims[0],h[0].dims[1]/j,_,_,h[0].dims[2],h[0].dims[3]],c=d.reshapeUnpacked(h[0],g),$={perm:_e,cacheKey:`${_e}`},[et]=(0,i.transpose)(d,[c],$),tt=[h[0].dims[0],h[0].dims[1]/j,h[0].dims[2]*_,h[0].dims[3]*_];return[d.reshapeUnpacked(et,tt)]},e.parseDepthToSpaceAttributes=d=>{const h=d.attributes.getInt("blocksize");if(h<1)throw new Error(`blocksize must be >= 1, but got : ${h} for DepthToSpace`);const b=d.attributes.getString("mode","DCR");if(b!=="DCR"&&b!=="CRD")throw new Error(`unrecognized mode: ${b} for DepthToSpace`);return{mode:b,blocksize:h}};const a=d=>{if(d.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${d.length}`);if(d[0].type==="string"||d[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}},3281:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createDotProductProgramInfoLoader=void 0;const i=s(7273),a=s(6757),d=s(5639),h=s(2150),b=s(1625);e.createDotProductProgramInfoLoader=(_,j,_e,g)=>{const c=(($,et)=>({name:"ConvDotProduct",inputNames:$?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:$?[d.TextureType.unpacked,d.TextureType.packedLastDimension,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.packedLastDimension],cacheKey:et.activationCacheKey}))(j.length>2,g);return Object.assign(Object.assign({},c),{get:()=>(($,et,tt,nt,rt)=>{const ot=tt[0].dims,st=tt[1].dims,it=[st[0],Math.ceil(ot[1]*st[2]*st[3]/4)],at=(0,b.calculateIm2ColDims)(ot,st,nt),[lt,ut]=$.calculateTextureWidthAndHeight(it,d.TextureType.packedLastDimension),ct=i.ShapeUtil.computeStrides(at),[pt,ht]=$.calculateTextureWidthAndHeight(at,d.TextureType.packedLastDimension),yt=nt.length,xt=tt.length<3?"0.0":"_B(b)",ft=Math.ceil(ot[1]*st[2]*st[3]/4),{activationFunction:wt,applyActivation:dt}=(0,h.getActivationSnippet)(rt),mt=(0,a.getGlsl)($.session.backend.glContext.version),bt=`
${wt}
float process(int indices[${yt}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${ct[0]} + im2col[1] * ${ct[1]} + im2col[2] * ${ct[2]};
  int kernelOffset = indices[1] * ${it[1]};
  float value = ${xt};
  for (int i = 0; i < ${ft}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${pt}, ${ht});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${lt}, ${ut});
    value += dot(${mt.texture2D}(Im2Col, im2colCoords), ${mt.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${dt}
  return value;
}`;return Object.assign(Object.assign({},et),{output:{dims:nt,type:tt[0].type,textureType:d.TextureType.unpacked},shaderSource:bt})})(_,c,j,_e,g)})}},4125:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseFlattenAttributes=e.flatten=void 0;const i=s(7273);e.flatten=(d,h,b)=>{a(h,b);const _=i.ShapeUtil.flattenShape(h[0].dims,b);return[d.reshapeUnpacked(h[0],_)]},e.parseFlattenAttributes=d=>d.attributes.getInt("axis",1);const a=(d,h)=>{if(!d||d.length!==1)throw new Error("Flatten requires 1 input.");const b=d[0].dims.length;if(b===0)throw new Error("scalar tensor is not supported.");if(h<-b||h>b)throw new Error("Invalid axis");if(d[0].type==="string")throw new Error("string tensor is not supported.")}},2150:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseInternalActivationAttributes=e.getActivationSnippet=void 0;const i=s(7273),a=s(9087);e.getActivationSnippet=function(d){let h;switch(d.activation){case"Relu":h=(0,a.glslRelu)();break;case"Sigmoid":h=(0,a.glslSigmoid)();break;case"Clip":h=(0,a.glslClip)(d.clipMin,d.clipMax);break;default:return{activationFunction:"",applyActivation:""}}const b=h.name;return{activationFunction:h.body,applyActivation:`value = ${b}_(value);`}},e.parseInternalActivationAttributes=d=>{const h=d.getString("activation","");if(h==="Clip"){const[b,_]=d.getFloats("activation_params",[i.MIN_CLIP,i.MAX_CLIP]);return{activation:h,clipMax:_,clipMin:b,activationCacheKey:`${h}:${b},${_}`}}return{activation:h,activationCacheKey:h}}},6149:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseGatherAttributes=e.gather=void 0;const i=s(4910),a=s(6145),d=s(7273),h=s(5639);e.gather=(_e,g,c)=>(j(g,c.axis),[_e.run(_(_e,g,c),g)]),e.parseGatherAttributes=_e=>(0,i.createAttributeWithCacheKey)({axis:_e.attributes.getInt("axis",0)});const b={name:"Gather",inputNames:["A","B"],inputTypes:[h.TextureType.unpacked,h.TextureType.unpacked]},_=(_e,g,c)=>{const $=Object.assign(Object.assign({},b),{cacheHint:c.cacheKey});return Object.assign(Object.assign({},$),{get:()=>((et,tt,nt,rt)=>{const ot=nt[0].dims.slice(),st=nt[1].dims.slice(),it=new Array(ot.length+st.length-1);rt=d.ShapeUtil.normalizeAxis(rt,ot.length);const at=[];for(let ut=0;ut<it.length;ut++)ut<rt?(it[ut]=ot[ut],at.push(`inputIdx[${ut}] = outputIdx[${ut}];`)):ut<rt+st.length?(it[ut]=st[ut-rt],at.push(`indexDataIdx[${ut-rt}] = outputIdx[${ut}];`)):(it[ut]=ot[ut-st.length+1],at.push(`inputIdx[${ut-st.length+1}] = outputIdx[${ut}];`));const lt=`
      float process(int outputIdx[${it.length||1}]) {
        int inputIdx[${ot.length}];
        int indexDataIdx[${st.length||1}];
        indexDataIdx[0] = 0;
        ${at.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${rt}] = idx < 0 ? idx + ${ot[rt]} : idx;
        return _A(inputIdx);
      }`;return Object.assign(Object.assign({},tt),{output:{dims:it,type:nt[0].type,textureType:h.TextureType.unpacked},shaderSource:lt})})(0,$,g,c.axis)})},j=(_e,g)=>{if(!_e||_e.length!==2)throw new Error("Gather requires 2 inputs.");const c=_e[0].dims.length;if(c<1)throw new Error("Invalid input shape.");if(g<-c||g>c-1)throw new Error("Invalid axis.");if(a.NUMBER_TYPES.indexOf(_e[0].type)===-1)throw new Error("Invaid input type.");if(_e[1].type!=="int32"&&_e[1].type!=="int16")throw new Error("Invaid input type.")}},5378:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseGemmAttributesV11=e.parseGemmAttributesV7=e.gemm=void 0;const i=s(4910),a=s(7273),d=s(5639);e.gemm=(_e,g,c)=>(j(g,c),[_e.run(b(g,c),g)]);const h=(_e,g)=>{const c=_e.attributes.getInt("transA",0)!==0,$=_e.attributes.getInt("transB",0)!==0,et=_e.attributes.getFloat("alpha",1),tt=_e.attributes.getFloat("beta",1);return(0,i.createAttributeWithCacheKey)({transA:c,transB:$,alpha:et,beta:tt,isOptionalC:g})};e.parseGemmAttributesV7=_e=>h(_e,!1),e.parseGemmAttributesV11=_e=>h(_e,!0);const b=(_e,g)=>{const c={name:"Gemm",inputNames:_e.length===3?["A","B","C"]:["A","B"],inputTypes:_e.length===3?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],key:g.cacheKey};return Object.assign(Object.assign({},c),{get:()=>_(c,_e,g)})},_=(_e,g,c)=>{const $=g[0].dims.slice(),et=g[1].dims.slice(),[tt,nt]=a.GemmUtil.getShapeOfGemmResult($,c.transA,et,c.transB,g.length===3?g[2].dims:void 0),rt=[tt,nt];if(!rt)throw new Error("Can't use gemm on the given tensors");let ot=$[$.length-1],st="";c.transA&&(ot=$[0]),c.transA&&c.transB?st="value += _A_T(a) * _B_T(b);":c.transA&&!c.transB?st="value += _A_T(a) * _B(b);":!c.transA&&c.transB?st="value += _A(a) * _B_T(b);":c.transA||c.transB||(st="value += _A(a) * _B(b);");const it=rt.length,at=`
      float process(int indices[${it}]) {
          int a[${it}];
          int b[${it}];
          ${g.length===3?`int c[${g[2].dims.length}];`:""}

          copyVec(indices, a);
          copyVec(indices, b);
          ${g.length===3?"bcastIndices_C(indices, c);":""}

          float value = 0.0;
          for (int k=0; k<${ot}; ++k) {
              a[${it-1}] = k;
              b[${it-2}] = k;
              ${st}
          }

          value = value * alpha;
          ${g.length===3?"value += beta * _C(c);":""}
          return value;
      }`;return Object.assign(Object.assign({},_e),{output:{dims:rt,type:g[0].type,textureType:d.TextureType.unpacked},variables:[{name:"alpha",type:"float",data:c.alpha},{name:"beta",type:"float",data:c.beta}],shaderSource:at})},j=(_e,g)=>{if(!_e)throw new Error("Input is missing");if(g.isOptionalC&&(_e.length<2||_e.length>3))throw new Error("Invaid input shape.");if(!g.isOptionalC&&_e.length!==3)throw new Error("Gemm requires 3 inputs");if(_e.length===3&&_e[2].dims.length!==1&&_e[2].dims.length!==2)throw new Error("Invalid input shape of C");if(_e[0].type!=="float32"&&_e[0].type!=="float64"||_e[1].type!=="float32"&&_e[1].type!=="float64"||_e.length===3&&_e[2].type!=="float32"&&_e[2].type!=="float64")throw new Error("Invalid input type.");if(_e[0].type!==_e[1].type||_e.length===3&&_e[0].type!==_e[2].type)throw new Error("Input types are mismatched")}},5950:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedIm2ColProgramInfoLoader=void 0;const i=s(6757),a=s(5639),d=s(5614);e.createPackedIm2ColProgramInfoLoader=(h,b,_,j,_e)=>{const g=(c=_e.cacheKey,{name:"Im2Col (packed)",inputNames:["A"],inputTypes:[a.TextureType.packed],cacheHint:c});var c;return Object.assign(Object.assign({},g),{get:()=>(($,et,tt,nt,rt,ot)=>{const st=tt.dims,it=nt.dims,at=rt.length,lt=[it[1]*it[2]*it[3],rt[2]*rt[3]],ut=it[2]*it[3],ct=(0,d.unpackFromChannel)(),pt=(0,i.getGlsl)($.session.backend.glContext.version);let ht="";for(let xt=0;xt<=1;xt++)for(let ft=0;ft<=1;ft++)ht+=`
            blockIndex = rc.x + ${ft};
            pos = rc.y + ${xt};

            if(blockIndex < ${lt[1]} && pos < ${lt[0]}) {
              offsetY = int(blockIndex / (${rt[at-1]})) * ${ot.strides[0]} -
                ${ot.pads[0]};
              d0 = offsetY + ${ot.dilations[0]} * (imod(pos, ${ut}) / ${it[2]});

              if(d0 < ${st[2]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${rt[at-1]}) * ${ot.strides[1]} -
                  ${ot.pads[1]};
                d1 = offsetX + ${ot.dilations[1]} * imod(imod(pos, ${ut}), ${it[2]});

                if(d1 < ${st[3]} && d1 >= 0) {

                  ch = int(float(pos)/ ${ut}.);
                    innerDims = vec2(d0, d1);
                    result[${2*xt+ft}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;const yt=`
      ${ct}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${ht}
          ${pt.output} = result;
      }
            `;return Object.assign(Object.assign({},et),{output:{dims:lt,type:tt.type,textureType:a.TextureType.packed},shaderSource:yt,hasMain:!0})})(h,g,b,_,j,_e)})}},1625:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.calculateIm2ColDims=e.createIm2ColProgramInfoLoader=void 0;const i=s(5639);e.createIm2ColProgramInfoLoader=(a,d,h,b,_)=>{const j=(_e=_.cacheKey,{name:"Im2Col",inputNames:["X"],inputTypes:[i.TextureType.unpacked],cacheHint:_e});var _e;return Object.assign(Object.assign({},j),{get:()=>((g,c,$,et,tt,nt)=>{const rt=$.dims,ot=et.dims,st=tt.length,it=(0,e.calculateIm2ColDims)(rt,ot,tt,4),at=`
        const int XC = ${rt[1]};
        const int XH = ${rt[2]};
        const int XW = ${rt[3]};
        const int KH = ${nt.kernelShape[0]};
        const int KW = ${nt.kernelShape[1]};
        const int dilationH = ${nt.dilations[0]};
        const int dilationW = ${nt.dilations[1]};
        const int strideH = ${nt.strides[0]};
        const int strideW = ${nt.strides[1]};
        const int padH = ${nt.pads[0]};
        const int padW = ${nt.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${st}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${rt.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return Object.assign(Object.assign({},c),{output:{dims:it,type:$.type,textureType:i.TextureType.packedLastDimension},shaderSource:at})})(0,j,d,h,b,_)})},e.calculateIm2ColDims=(a,d,h,b=4)=>[h[0],h[2],h[3],Math.ceil(a[1]*d[2]*d[3]/b)]},6981:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseImageScalerAttributes=e.imageScaler=void 0;const i=s(4910),a=s(5639);e.imageScaler=(j,_e,g)=>(_(_e),[j.run(h(j,_e,g),_e)]),e.parseImageScalerAttributes=j=>{const _e=j.attributes.getFloat("scale"),g=j.attributes.getFloats("bias");return(0,i.createAttributeWithCacheKey)({scale:_e,bias:g})};const d={name:"ImageScaler",inputNames:["X"],inputTypes:[a.TextureType.unpacked]},h=(j,_e,g)=>{const c=Object.assign(Object.assign({},d),{cacheHint:g.cacheKey});return Object.assign(Object.assign({},c),{get:()=>(($,et,tt,nt)=>{const rt=tt[0].dims.slice(),ot=rt.length,st=`
      ${b(nt.bias.length)}
      float process(int indices[${ot}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return Object.assign(Object.assign({},et),{output:{dims:rt,type:tt[0].type,textureType:a.TextureType.unpacked},variables:[{name:"bias",type:"float",arrayLength:nt.bias.length,data:nt.bias},{name:"scale",type:"float",data:nt.scale}],shaderSource:st})})(0,c,_e,g)})},b=j=>{const _e=[`float getBias(float bias[${j}], int channel) {`];for(let g=0;g<j;++g)g===0?_e.push(`	if (channel == ${g}) { return bias[${g}]; }`):g===j-1?_e.push(`	else { return bias[${g}]; }`):_e.push(`	else if (channel == ${g}) { return bias[${g}]; }`);return _e.push("	}"),_e.join(`
`)},_=j=>{if(!j||j.length!==1)throw new Error("ImageScaler requires 1 input.");if(j[0].dims.length!==4)throw new Error("Invalid input shape.");if(j[0].type!=="float32"&&j[0].type!=="float64")throw new Error("Invalid input type.")}},7413:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseInstanceNormalizationAttributes=e.instanceNormalization=void 0;const i=s(6757),a=s(5639);e.instanceNormalization=(_e,g,c)=>{j(g);const $=_e.run(h(g[0]),g);return[_e.run(_(_e,g[0],c,$.dims),[g[0],$,g[1],g[2]])]},e.parseInstanceNormalizationAttributes=_e=>_e.attributes.getFloat("epsilon",1e-5);const d={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[a.TextureType.unpacked]},h=_e=>Object.assign(Object.assign({},d),{get:()=>((g,c)=>{const $=c.dims.slice(),et=$[1],tt=$[2]*$[3],nt=[$[0],et],rt=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${$[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${$[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${tt});
        temp = 0.0;
        for(int a2=0; a2<${$[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${$[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${tt});

        return v;
      }`;return Object.assign(Object.assign({},g),{output:{dims:nt,type:c.type,textureType:a.TextureType.packedLastDimension},shaderSource:rt})})(d,_e)}),b={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[a.TextureType.unpacked,a.TextureType.packedLastDimension,a.TextureType.unpacked,a.TextureType.unpacked]},_=(_e,g,c,$)=>{const et=Object.assign(Object.assign({},b),{cacheHint:`${c}`});return Object.assign(Object.assign({},et),{get:()=>((tt,nt,rt,ot,st)=>{const it=(0,i.getGlsl)(tt.session.backend.glContext.version),[at,lt]=tt.calculateTextureWidthAndHeight(st,a.TextureType.packedLastDimension),[ut,ct]=[at/4,lt],pt=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${ut}, ${ct});
        return ${it.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return Object.assign(Object.assign({},nt),{output:{dims:rt.dims,type:rt.type,textureType:a.TextureType.unpacked},variables:[{name:"epsilon",type:"float",data:ot}],shaderSource:pt})})(_e,et,g,c,$)})},j=_e=>{if(!_e||_e.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");const g=_e[0],c=_e[1],$=_e[2];if(g.dims.length<3||c.dims.length!==1||$.dims.length!==1)throw new Error("Invalid input shape.");if(c.dims[0]!==g.dims[1]||$.dims[0]!==g.dims[1])throw new Error("Input shapes are mismatched.");if(g.type!=="float32"&&g.type!=="float64"||c.type!=="float32"&&c.type!=="float64"||$.type!=="float32"&&$.type!=="float64")throw new Error("Invalid input type.");if(_e[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}},7006:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createLrnProgramInfoLoader=e.parseLrnAttributes=e.lrn=void 0;const i=s(4910),a=s(5639);e.lrn=(_,j,_e)=>(b(j),[_.run(h(j,_e),j)]),e.parseLrnAttributes=_=>{const j=_.attributes.getFloat("alpha",1e-4),_e=_.attributes.getFloat("beta",.75),g=_.attributes.getFloat("bias",1),c=_.attributes.getInt("size");return(0,i.createAttributeWithCacheKey)({alpha:j,beta:_e,bias:g,size:c})};const d={name:"LRN",inputNames:["X"],inputTypes:[a.TextureType.unpacked]};function h(_,j){return Object.assign(Object.assign({},d),{cacheHint:j.cacheKey,get:()=>function(_e,g){const c=_e[0].dims[1],$=_e[0].dims.length,et=-Math.floor((g.size-1)/2),tt=Math.ceil((g.size-1)/2),nt=`float(${g.alpha}) / float(${g.size})`,rt=`
    float process(int indices[${$}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${et}; i <= ${tt}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${c}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(float(${g.bias}) + ${nt} * square_sum, float(${g.beta}));
    }`;return Object.assign(Object.assign({},d),{cacheHint:g.cacheKey,output:{dims:_e[0].dims,type:_e[0].type,textureType:a.TextureType.unpacked},shaderSource:rt})}(_,j)})}e.createLrnProgramInfoLoader=h;const b=_=>{if(!_||_.length!==1)throw new Error("LRN requires 1 input.");if(_[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(_[0].type!=="float32")throw new Error("input should be float type")}},5632:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackedMatmulProgramInfoLoader=void 0;const i=s(7273),a=s(6757),d=s(5639),h=s(432),b=s(2150),_=s(8276);e.createPackedMatmulProgramInfoLoader=(j,_e,g)=>{const c=($=_e.length>2,et=g.activationCacheKey,{name:"MatMul (packed)",inputNames:$?["A","B","Bias"]:["A","B"],inputTypes:$?[d.TextureType.packed,d.TextureType.packed,d.TextureType.packed]:[d.TextureType.packed,d.TextureType.packed],cacheHint:et});var $,et;return Object.assign(Object.assign({},c),{get:()=>((tt,nt,rt,ot)=>{const st=rt.length>2,it=st?"value += getBiasForMatmul();":"",at=rt[0].dims,lt=rt[1].dims,ut=i.BroadcastUtil.calcShape(at,lt,!0),ct=!i.ShapeUtil.areEqual(rt[0].dims,rt[1].dims);if(!ut)throw new Error("Can't use matmul on the given tensors");const pt=at[at.length-1],ht=Math.ceil(pt/2),yt=at.length,xt=lt.length,ft=(0,a.getGlsl)(tt.session.backend.glContext.version),wt=(0,h.getCoordsDataType)(ut.length),dt=ut.length,mt=(0,h.getGlChannels)(),{activationFunction:bt,applyActivation:vt}=(0,b.getActivationSnippet)(ot),Tt=st?`${(0,_.getBiasForMatmul)(wt,mt,rt[2].dims,ut,!0)}`:"",Et=ct?`${function(Rt,Ot,zt,Bt){let Gt=[],jt=[];const Kt=zt[0].dims,Wt=zt[1].dims,Jt=Kt.length,Xt=Wt.length,tn=Bt.length,en=tn-Jt,Zt=tn-Xt;Gt=Kt.map((an,gn)=>`coords.${Ot[gn+en]}`),Gt[Jt-1]="i*2",Gt.join(", "),jt=Wt.map((an,gn)=>`coords.${Ot[gn+Zt]}`),jt[Xt-2]="i*2",jt.join(", ");const nn=i.BroadcastUtil.getBroadcastDims(Kt,Bt),rn=i.BroadcastUtil.getBroadcastDims(Wt,Bt),un=nn.map(an=>`coords.${Ot[an+en]} = 0;`).join(`
`),ln=rn.map(an=>`coords.${Ot[an+Zt]} = 0;`).join(`
`),mn=`int lastDim = coords.${Ot[tn-1]};
  coords.${Ot[tn-1]} = coords.${Ot[tn-2]};
  coords.${Ot[tn-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${Rt} coords = getOutputCoords();
  ${mn}
  ${un}
  vec4 outputValue = getA(${Gt});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${Rt} coords = getOutputCoords();
  ${mn}
  ${ln}
  vec4 outputValue = getB(${jt});
  return outputValue;
}`}(wt,mt,rt,ut)}`:"",Ct=ct?"getAAtOutCoordsMatmul(i)":`getA(${function(Rt,Ot){let zt="";for(let Bt=0;Bt<Ot-2;Bt++)zt+=`rc.${Rt[Bt]}, `;return zt+=`rc.${Rt[Ot-2]}, i*2`,zt}(mt,yt)})`,kt=ct?"getBAtOutCoordsMatmul(i)":`getB(${function(Rt,Ot){let zt="";for(let Bt=0;Bt<Ot-2;Bt++)zt+=`rc.${Rt[Bt]}, `;return zt+=`i*2, rc.${Rt[Ot-1]}`,zt}(mt,xt)})`,Dt=`
            ${Et}
            ${Tt}
            ${bt}
            void main() {
              ${ct?"":`${wt} rc =
          getOutputCoords(); int lastDim = rc.${mt[dt-1]}; rc.${mt[dt-1]} =
          rc.${mt[dt-2]}; rc.${mt[dt-2]} = lastDim;
      `}

              vec4 value = vec4(0);
              for (int i = 0; i < ${ht}; i++) {
                vec4 a = ${Ct};
                vec4 b = ${kt};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${it}
              ${vt}
              ${ft.output} = value;
            }`;return Object.assign(Object.assign({},nt),{output:{dims:ut,type:rt[0].type,textureType:d.TextureType.packed},shaderSource:Dt,hasMain:!0})})(j,c,_e,g)})}},8276:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getBiasForMatmul=e.createMatmulProgramInfoLoader=e.parseMatMulAttributes=e.matMul=void 0;const i=s(7273),a=s(5639),d=s(432),h=s(2150),b=s(5632);e.matMul=(c,$,et)=>(_e($),c.session.pack?[c.run((0,b.createPackedMatmulProgramInfoLoader)(c,$,et),$)]:[c.run(j($,et),$)]),e.parseMatMulAttributes=c=>(0,h.parseInternalActivationAttributes)(c.attributes);const _=(c,$)=>({name:"MatMul",inputNames:c?["A","B","Bias"]:["A","B"],inputTypes:c?[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]:[a.TextureType.unpacked,a.TextureType.unpacked],cacheHint:$});function j(c,$){const et=_(c.length>2,$.activationCacheKey);return Object.assign(Object.assign({},et),{get:()=>function(tt,nt,rt){const ot=nt[0].dims,st=nt[1].dims,it=i.BroadcastUtil.calcShape(ot,st,!0);if(!it)throw new Error("Can't use matmul on the given tensors");const at=(0,d.getCoordsDataType)(it.length),lt=(0,d.getGlChannels)(),{activationFunction:ut,applyActivation:ct}=(0,h.getActivationSnippet)(rt),pt=nt.length>2,ht=pt?"value += getBiasForMatmul();":"",yt=pt?`${g(at,lt,nt[2].dims,it,!1)}`:"",xt=it.length,ft=ot.length,wt=st.length,dt=`
    ${ut}
    ${yt}
    float process(int indices[${xt}]) {
        int a[${ft}];
        int b[${wt}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${ot[ot.length-1]}; ++k) {
            a[${ft-1}] = k;
            b[${wt-2}] = k;
            value += _A(a) * _B(b);
        }
        ${ht}
        ${ct}
        return value;
    }`;return Object.assign(Object.assign({},tt),{output:{dims:it,type:nt[0].type,textureType:a.TextureType.unpacked},shaderSource:dt})}(et,c,$)})}e.createMatmulProgramInfoLoader=j;const _e=c=>{if(!c||c.length!==2)throw new Error("MatMul requires 2 inputs.");if(c[0].dims[c[0].dims.length-1]!==c[1].dims[c[1].dims.length-2])throw new Error("shared dimension does not match.");if(c[0].type!=="float32"&&c[0].type!=="float64"||c[1].type!=="float32"&&c[1].type!=="float64")throw new Error("inputs should be float type");if(c[0].type!==c[1].type)throw new Error("inputs types should match")};function g(c,$,et,tt,nt){let rt="";const ot=et.length,st=tt.length,it=st-ot;rt=st<2&&ot>0?"coords":et.map((ut,ct)=>`coords.${$[ct+it]}`).join(", ");const at=i.BroadcastUtil.getBroadcastDims(et,tt).map(ut=>`coords.${$[ut+it]} = 0;`).join(`
`);let lt="vec4(outputValue.xx, outputValue.yy)";return i.ShapeUtil.size(et)===1&&(lt="vec4(outputValue.x)"),nt?`
vec4 getBiasForMatmul() {
  ${c} coords = getOutputCoords();
  ${at}
  vec4 outputValue = getBias(${rt});
  return ${lt};
}`:`
float getBiasForMatmul() {
  ${c} coords = getOutputCoords();
  ${at}
  return getBias(coords.x);
}`}e.getBiasForMatmul=g},9:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createPackProgramInfoLoader=void 0;const i=s(6757),a=s(5639),d=s(432),h=s(5614),b={name:"pack",inputNames:["A"],inputTypes:[a.TextureType.unpackedReversed]};e.createPackProgramInfoLoader=(_,j)=>Object.assign(Object.assign({},b),{get:()=>((_e,g)=>{const c=(0,i.getGlsl)(_e.session.backend.glContext.version),$=g.dims,et=$.length,tt=g.dims.length,nt=(0,d.getCoordsDataType)(tt),rt=(0,h.getChannels)("rc",tt),ot=(st=tt,it=rt,at=$[$.length-2],lt=$[$.length-1],st===0||st===1?"":`
    int r = ${it[st-2]};
    int c = ${it[st-1]};
    int rp1 = ${it[st-2]} + 1;
    int cp1 = ${it[st-1]} + 1;
    bool rEdge = rp1 >= ${lt};
    bool cEdge = cp1 >= ${at};
    `);var st,it,at,lt;let ut;ut=et===0?[1,1]:et===1?[$[0],1]:[$[tt-1],$[tt-2]];const ct=function(yt,xt,ft){if(yt===0)return"false";if(yt===1)return`rc > ${xt[0]}`;let wt="";for(let dt=yt-2;dt<yt;dt++)wt+=`${ft[dt]} >= ${xt[dt-yt+2]}`,dt<yt-1&&(wt+="||");return wt}(tt,ut,rt),pt=function(yt,xt){const ft=yt.length;if(ft===0)return"getA(), 0, 0, 0";if(ft===1)return`getA(rc),
            rc + 1 >= ${yt[0]} ? 0. : getA(rc + 1),
            0, 0`;let wt="";if(ft>2)for(let dt=0;dt<ft-2;++dt)wt+=`${xt[dt]},`;return`getA(${wt}r, c),
          rEdge ? 0. : getA(${wt}rp1, c),
          cEdge ? 0. : getA(${wt}r, cp1),
          rEdge || cEdge ? 0. : getA(${wt}rp1, cp1)`}($,rt),ht=`
        void main() {
          ${nt} rc = getOutputCoords();

          if(${ct}) {
            ${c.output} = vec4(0);
          } else {
            ${ot}

            ${c.output} = vec4(${pt});
          }
        }
      `;return Object.assign(Object.assign({},b),{hasMain:!0,output:{dims:g.dims,type:g.type,textureType:a.TextureType.packed},shaderSource:ht})})(_,j)})},5614:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.unpackFromChannel=e.getChannels=e.getVecChannels=void 0;const i=s(432);function a(d,h){return(0,i.getGlChannels)(h).map(b=>`${d}.${b}`)}e.getVecChannels=a,e.getChannels=function(d,h){return h===1?[d]:a(d,h)},e.unpackFromChannel=function(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}},5565:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parsePadAttributesV11=e.padV11=e.parsePadAttributesV2=e.padV2=void 0;const i=s(4910),a=s(7273),d=s(6757),h=s(5639),b={name:"Pad",inputNames:["A"],inputTypes:[h.TextureType.unpacked]};e.padV2=(nt,rt,ot)=>(_e(rt),[nt.run(Object.assign(Object.assign({},b),{cacheHint:ot.cacheKey,get:()=>j(nt,rt[0],ot)}),rt)]),e.parsePadAttributesV2=nt=>{const rt=nt.attributes.getString("mode","constant"),ot=nt.attributes.getFloat("value",0),st=nt.attributes.getInts("pads");return(0,i.createAttributeWithCacheKey)({mode:rt,value:ot,pads:st})},e.padV11=(nt,rt,ot)=>{g(rt);const st=_(nt,rt,ot);return(0,e.padV2)(nt,[rt[0]],st)},e.parsePadAttributesV11=nt=>nt.attributes.getString("mode","constant");const _=(nt,rt,ot)=>{if(!nt.session.isInitializer(rt[1].dataId)||rt.length>=3&&!nt.session.isInitializer(rt[2].dataId))throw new Error("dynamic pad attributes are not allowed");const st=Array.from(rt[1].integerData),it=rt.length>=3?rt[2].floatData[0]:0;return(0,i.createAttributeWithCacheKey)({mode:ot,pads:st,value:it})},j=(nt,rt,ot)=>{const st=a.ShapeUtil.padShape(rt.dims.slice(),ot.pads),it=st.length,at=`
      ${c(nt,rt,ot)}
      float process(int[${it}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[h.TextureType.unpacked],output:{dims:st,type:rt.type,textureType:h.TextureType.unpacked},shaderSource:at}},_e=nt=>{if(!nt||nt.length!==1)throw new Error("Pad requires 1 input");if(nt[0].type!=="float32"&&nt[0].type!=="float64")throw new Error("Invalid input type.")},g=nt=>{if(!nt||nt.length!==2&&nt.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(nt[1].type!=="int32")throw new Error("Invalid input type.");if(nt.length>=3&&nt[2].type==="string")throw new Error("Invalid input type.")},c=(nt,rt,ot)=>{const st=(0,d.getGlsl)(nt.session.backend.glContext.version),[it,at]=nt.calculateTextureWidthAndHeight(rt.dims,h.TextureType.unpacked),lt=a.ShapeUtil.computeStrides(rt.dims);switch(ot.mode){case"constant":return $(st,rt.dims,lt,it,at,ot.pads,ot.value);case"reflect":return et(st,rt.dims,lt,it,at,ot.pads);case"edge":return tt(st,rt.dims,lt,it,at,ot.pads);default:throw new Error("Invalid mode")}},$=(nt,rt,ot,st,it,at,lt)=>{const ut=rt.length;let ct="";for(let pt=ut-1;pt>=0;--pt)ct+=`
        k = m[${pt}] - ${at[pt]};
        if (k < 0)  return constant;
        if (k >= ${rt[pt]}) return constant;
        offset += k * ${ot[pt]};
        `;return`
      float padA(int m[${ut}]) {
        const float constant = float(${lt});
        int offset = 0;
        int k = 0;
        ${ct}
        vec2 coords = offsetToCoords(offset, ${st}, ${it});
        float value = getColorAsFloat(${nt.texture2D}(A, coords));
        return value;
      }
      `},et=(nt,rt,ot,st,it,at)=>{const lt=rt.length;let ut="";for(let ct=lt-1;ct>=0;--ct)ut+=`
        k = m[${ct}] - ${at[ct]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(rt[ct]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${rt[ct]}) { k = _2n_1 - k; }
        }
        offset += k * ${ot[ct]};
        `;return`
      float padA(int m[${lt}]) {
        int offset = 0;
        int k = 0;
        ${ut}
        vec2 coords = offsetToCoords(offset, ${st}, ${it});
        float value = getColorAsFloat(${nt.texture2D}(A, coords));
        return value;
      }
      `},tt=(nt,rt,ot,st,it,at)=>{const lt=rt.length;let ut="";for(let ct=lt-1;ct>=0;--ct)ut+=`
        k = m[${ct}] - ${at[ct]};
        if (k < 0)  k = 0;
        if (k >= ${rt[ct]}) k = ${rt[ct]-1};
        offset += k * ${ot[ct]};
      `;return`
      float padA(int m[${lt}]) {
        int offset = 0;
        int k = 0;
        ${ut}
        vec2 coords = offsetToCoords(offset, ${st}, ${it});
        float value = getColorAsFloat(${nt.texture2D}(A, coords));
        return value;
      }
      `}},2834:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.globalMaxPool=e.parseMaxPoolAttributes=e.maxPool=e.parseGlobalAveragePoolAttributes=e.globalAveragePool=e.parseAveragePoolAttributes=e.averagePool=void 0;const i=s(4910),a=s(7273),d=s(5639);e.averagePool=(tt,nt,rt)=>{g(nt);const ot={name:"AveragePool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:rt.cacheKey};return[tt.run(Object.assign(Object.assign({},ot),{get:()=>h(nt,ot,!1,rt)}),nt)]},e.parseAveragePoolAttributes=tt=>{const nt=tt.attributes.getString("auto_pad","NOTSET"),rt=tt.attributes.getInt("ceil_mode",0),ot=tt.attributes.getInt("count_include_pad",0)!==0,st=tt.attributes.getInts("kernel_shape"),it=tt.attributes.getInts("strides",[]),at=tt.attributes.getInts("pads",[]);if(rt!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,i.createAttributeWithCacheKey)({autoPad:nt,ceilMode:rt,countIncludePad:ot,kernelShape:st,strides:it,pads:at})};const h=(tt,nt,rt,ot)=>{const[st,it]=_(tt,ot,rt),at=a.ShapeUtil.size(st.kernelShape);let lt="";st.countIncludePad?lt+=`value /= float(${at});`:lt+=`value /= float(${at} - pad);`;const ut=`
        ${c(tt[0].dims,st,"value += _X(x);",lt,"0.0")}
      `;return Object.assign(Object.assign({},nt),{output:{dims:it,type:tt[0].type,textureType:d.TextureType.unpacked},shaderSource:ut})};e.globalAveragePool=(tt,nt,rt)=>{g(nt);const ot={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:`${rt.countIncludePad}`};return[tt.run(Object.assign(Object.assign({},ot),{get:()=>h(nt,ot,!0,rt)}),nt)]},e.parseGlobalAveragePoolAttributes=tt=>{const nt=tt.attributes.getInt("count_include_pad",0)!==0;return(0,i.createAttributeWithCacheKey)({autoPad:"",ceilMode:0,countIncludePad:nt,kernelShape:[],strides:[],pads:[]})},e.maxPool=(tt,nt,rt)=>{g(nt);const ot={name:"MaxPool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:rt.cacheKey};return[tt.run(Object.assign(Object.assign({},ot),{get:()=>b(nt,ot,!1,rt)}),nt)]},e.parseMaxPoolAttributes=tt=>{const nt=tt.attributes.getString("auto_pad","NOTSET"),rt=tt.attributes.getInt("ceil_mode",0),ot=tt.attributes.getInts("kernel_shape"),st=tt.attributes.getInts("strides",[]),it=tt.attributes.getInts("pads",[]),at=tt.attributes.getInt("storage_order",0),lt=tt.attributes.getInts("dilations",[]);if(at!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(rt!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,i.createAttributeWithCacheKey)({autoPad:nt,ceilMode:rt,countIncludePad:!1,kernelShape:ot,strides:st,pads:it,storageOrder:at,dilations:lt})};const b=(tt,nt,rt,ot)=>{const[st,it]=_(tt,ot,rt),at=`
      ${c(tt[0].dims,st,`
      value = max(_X(x), value);
    `,"","-1e5")}
    `;return Object.assign(Object.assign({},nt),{output:{dims:it,type:tt[0].type,textureType:d.TextureType.unpacked},shaderSource:at})},_=(tt,nt,rt)=>{const ot=tt[0].dims.slice(),st=Object.hasOwnProperty.call(nt,"dilations"),it=nt.kernelShape.slice(),at=nt.strides.slice(),lt=st?nt.dilations.slice():[],ut=nt.pads.slice();a.PoolConvUtil.adjustPoolAttributes(rt,ot,it,at,lt,ut);const ct=a.PoolConvUtil.computePoolOutputShape(rt,ot,at,lt,it,ut,nt.autoPad),pt=Object.assign({},nt);return st?Object.assign(pt,{kernelShape:it,strides:at,pads:ut,dilations:lt,cacheKey:nt.cacheKey}):Object.assign(pt,{kernelShape:it,strides:at,pads:ut,cacheKey:nt.cacheKey}),[pt,ct]},j={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},_e={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[d.TextureType.unpacked]};e.globalMaxPool=(tt,nt)=>(g(nt),[tt.run(Object.assign(Object.assign({},_e),{get:()=>b(nt,_e,!0,j)}),nt)]);const g=tt=>{if(!tt||tt.length!==1)throw new Error("Pool ops requires 1 input.");if(tt[0].type!=="float32"&&tt[0].type!=="float64")throw new Error("Invalid input type.")},c=(tt,nt,rt,ot,st)=>{const it=tt.length;if(nt.kernelShape.length<=2){const at=nt.kernelShape[nt.kernelShape.length-1],lt=nt.strides[nt.strides.length-1],ut=nt.pads[nt.pads.length/2-1],ct=nt.pads[nt.pads.length-1],pt=tt[it-1];let ht="",yt="",xt="";if(ht=ut+ct!==0?`
          for (int i = 0; i < ${at}; i++) {
            x[${it} - 1] = indices[${it} - 1] * ${lt} - ${ut} + i;
            if (x[${it} - 1] < 0 || x[${it} - 1] >= ${pt}) {
              pad++;
              continue;
            }
            ${rt}
          }`:`
          for (int i = 0; i < ${at}; i++) {
            x[${it} - 1] = indices[${it} - 1] * ${lt} - ${ut} + i;
            ${rt}
          }`,nt.kernelShape.length===2){const ft=nt.kernelShape[nt.kernelShape.length-2],wt=nt.strides[nt.strides.length-2],dt=nt.pads[nt.pads.length/2-2],mt=nt.pads[nt.pads.length-2],bt=tt[it-2];yt=dt+mt!==0?`
            for (int j = 0; j < ${ft}; j++) {
              x[${it} - 2] = indices[${it} - 2] * ${wt} - ${dt} + j;
              if (x[${it} - 2] < 0 || x[${it} - 2] >= ${bt}) {
                pad+= ${at};
                continue;
              }
          `:`
            for (int j = 0; j < ${ft}; j++) {
              x[${it} - 2] = indices[${it} - 2] * ${wt} - ${dt} + j;
            `,xt=`
          }
        `}return`
        float process(int indices[${it}]) {
          int x[${it}];
          copyVec(indices, x);

          float value = ${st};
          int pad = 0;
          ${yt}
          ${ht}
          ${xt}
          ${ot}
          return value;
        }
      `}{const at=a.ShapeUtil.size(nt.kernelShape),lt=a.ShapeUtil.computeStrides(nt.kernelShape),ut=lt.length,ct=nt.pads.length,pt=et(ut),ht=$(tt,"inputDims"),yt=$(nt.pads,"pads"),xt=$(lt,"kernelStrides"),ft=$(nt.strides,"strides");let wt="";return wt=nt.pads.reduce((dt,mt)=>dt+mt)?`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${rt}
          }`:`
          }
          ${rt}
        `,`
        ${pt}
        float process(int indices[${it}]) {
          int x[${it}];
          copyVec(indices, x);
          int offset[${ut}];
          int pads[${ct}];
          int inputDims[${it}];
          int kernelStrides[${ut}];
          int strides[${ut}];
          ${yt}
          ${ht}
          ${ft}
          ${xt}

          float value = ${st};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${at}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${it} - ${ut}; j < ${it}; j++) {
              x[j] = indices[j] * strides[j - ${it} + ${ut}]
                + offset[j - ${it} + ${ut}] - pads[j - 2];
              ${wt}
          }
          ${ot}

          return value;
        }
      `}},$=(tt,nt)=>{let rt="";for(let ot=0;ot<tt.length;ot++)rt+=`
      ${nt}[${ot}] = ${tt[ot]};
    `;return rt},et=tt=>`
  void offsetToIndices(int offset, int[${tt}] strides, out int[${tt}] indices) {
    if (${tt} == 0) {
      return;
    }
    for (int i = 0; i < ${tt} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${tt} - 1] = offset;
  }`},1010:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.reduceLogSumSquare=e.reduceLogSum=e.reduceProd=e.reduceMin=e.reduceMax=e.reduceMean=e.reduceSum=e.parseReduceAttributes=void 0;const i=s(4910),a=s(6145),d=s(7273),h=s(5639),b=(_e,g,c,$,et)=>{j(g);const tt={name:$,inputNames:["A"],inputTypes:[h.TextureType.unpacked]};return[_e.run(Object.assign(Object.assign({},tt),{cacheHint:c.cacheKey,get:()=>_(_e,g,c,$,et,tt)}),g)]};e.parseReduceAttributes=_e=>{const g=_e.attributes.getInts("axes",[]),c=_e.attributes.getInt("keepdims",1)===1;return(0,i.createAttributeWithCacheKey)({axes:g,keepDims:c})};const _=(_e,g,c,$,et,tt)=>{const nt=[],rt=g[0].dims.length||1,ot=[],st=d.ShapeUtil.normalizeAxes(c.axes,g[0].dims.length),it=et(g,st);let at=it[1];for(let ut=0;ut<g[0].dims.length;ut++)st.indexOf(ut)>=0||st.length===0?(c.keepDims&&nt.push(1),at=`
          for(int j${ut} = 0; j${ut} < ${g[0].dims[ut]}; j${ut}++) {
            inputIdx[${ut}] = j${ut};
            ${at}
          }`):(ot.push(`inputIdx[${ut}] = outputIdx[${nt.length}];`),nt.push(g[0].dims[ut]));const lt=`
      float process(int outputIdx[${nt.length||1}]) {
        float value;                 // final result
        int inputIdx[${rt}];      // addressing input data
        ${ot.join(`
`)}
        ${it[0]}       // init ops for reduce max/min
        ${at}
        ${it[2]}       // final computation for reduce mean
        return value;
      }`;return Object.assign(Object.assign({},tt),{output:{dims:nt,type:g[0].type,textureType:h.TextureType.unpacked},shaderSource:lt})},j=_e=>{if(!_e||_e.length!==1)throw new Error("Reduce op requires 1 input.");if(a.NUMBER_TYPES.indexOf(_e[0].type)===-1)throw new Error("Invalid input type.")};e.reduceSum=(_e,g,c)=>b(_e,g,c,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),e.reduceMean=(_e,g,c)=>b(_e,g,c,"ReduceMean",($,et)=>{let tt=1;for(let nt=0;nt<$[0].dims.length;nt++)(et.indexOf(nt)>=0||et.length===0)&&(tt*=$[0].dims[nt]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${tt}.;`]}),e.reduceMax=(_e,g,c)=>b(_e,g,c,"ReduceMax",($,et)=>{const tt=[];for(let nt=0;nt<$[0].dims.length;nt++)(et.indexOf(nt)>=0||et.length===0)&&tt.push(`inputIdx[${nt}] = 0;`);return[`${tt.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),e.reduceMin=(_e,g,c)=>b(_e,g,c,"ReduceMin",($,et)=>{const tt=[];for(let nt=0;nt<$[0].dims.length;nt++)(et.indexOf(nt)>=0||et.length===0)&&tt.push(`inputIdx[${nt}] = 0;`);return[`${tt.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),e.reduceProd=(_e,g,c)=>b(_e,g,c,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),e.reduceLogSum=(_e,g,c)=>b(_e,g,c,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),e.reduceLogSumSquare=(_e,g,c)=>b(_e,g,c,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])},7379:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isReshapeCheap=e.processDims3D=e.createPackedReshape3DProgramInfoLoader=void 0;const i=s(7273),a=s(6757),d=s(5639),h=s(5614);e.createPackedReshape3DProgramInfoLoader=(b,_,j)=>{const _e=(g=>({name:"Reshape (packed)",inputTypes:[d.TextureType.packed],inputNames:["A"],cacheHint:`${g}`}))(j);return Object.assign(Object.assign({},_e),{get:()=>((g,c,$,et)=>{const tt=c.dims,nt=et;let rt="";for(let it=0;it<4;it++){let at="";switch(it){case 0:at="outputCoords = rc;";break;case 1:at="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:at="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:at="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}rt+=`
        ${at}
        ${it>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${it}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${it>0?"}":""}
      `}const ot=(0,a.getGlsl)(g.session.backend.glContext.version),st=`
      ${function(it){const at=i.ShapeUtil.computeStrides(it),lt=["b","r","c"],ut="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${at.map((ct,pt)=>`int ${lt[pt]} = ${ut} / ${ct}; ${pt===at.length-1?`int ${lt[pt+1]} = ${ut} - ${lt[pt]} * ${ct}`:`index -= ${lt[pt]} * ${ct}`};`).join("")}
      return ivec3(b, r, c);
    }
  `}(tt)}
      ${function(it){const at=i.ShapeUtil.computeStrides(it);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${at[0]} + coords.z * ${at[1]} + coords.y;
  }
`}(nt)}
      ${(0,h.unpackFromChannel)()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${nt[2]};
        int cols = ${nt[1]};

        ${rt}
        ${ot.output} = result;
      }
    `;return Object.assign(Object.assign({},$),{output:{dims:nt,type:c.type,textureType:d.TextureType.packed},shaderSource:st,hasMain:!0})})(b,_,_e,j)})},e.processDims3D=function(b){if(b.length===0)return[1,1,1];let _=1;for(let j=0;j<b.length-2;++j)_*=b[j];return[_,b.length>1?b[b.length-2]:1,b[b.length-1]]},e.isReshapeCheap=function(b,_){let j=!1;return j=b.length===0||_.length===0||(b.length<2||_.length<2?b[b.length-1]===_[_.length-1]:b[b.length-1]===_[_.length-1]&&b[b.length-2]===_[_.length-2]),j}},8126:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.reshape=void 0;const i=s(7273);e.reshape=(a,d)=>{const h=i.ShapeUtil.calculateReshapedDims(d[0].dims,d[1].integerData);return a.session.pack?[a.reshapePacked(d[0],h)]:[a.reshapeUnpacked(d[0],h)]}},2801:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseResizeAttributesV11=e.parseResizeAttributesV10=e.resize=void 0;const i=s(6757),a=s(5639),d=s(432),h=s(5614),b=s(3980),_={name:"Resize",inputNames:["A"],inputTypes:[a.TextureType.packed]};e.resize=($,et,tt)=>((0,b.validateInputs)(et,tt),[$.run(Object.assign(Object.assign({},_),{cacheHint:tt.cacheKey,get:()=>j($,et,tt)}),et)]),e.parseResizeAttributesV10=$=>(0,b.parseUpsampleAttributes)($,10),e.parseResizeAttributesV11=$=>(0,b.parseUpsampleAttributes)($,11);const j=($,et,tt)=>{const nt=(0,i.getGlsl)($.session.backend.glContext.version),[rt,ot]=_e(et,tt);if(rt.every(wt=>wt===1)&&tt.coordinateTransformMode!=="tf_crop_and_resize")return Object.assign(Object.assign({},_),{output:{dims:ot,type:et[0].type,textureType:a.TextureType.packed},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${nt.texture2D}(X, TexCoords);
                    ${nt.output} = v;
                }`});const st=ot.length;if(st<2)throw new Error(`output dimension should be at least 2, but got ${st}`);const it=ot[st-2],at=ot[st-1],lt=et[0].dims;if(st!==lt.length)throw new Error(`output dimension should match input ${lt.length}, but got ${st}`);const ut=lt[st-2],ct=lt[st-1],pt=rt[st-2],ht=rt[st-1];let yt="";if(tt.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${tt.mode}'`);switch(tt.coordinateTransformMode){case"asymmetric":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${at}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${it}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${at}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${it}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${at}.0 - 1.0, ${it}.0 - 1.0, ${at}.0 - 1.0,
                            ${it}.0 - 1.0);
                        vec4 original = vec4(${ct}.0 - 1.0, ${ut}.0 - 1.0, ${ct}.0 - 1.0,
                            ${ut}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${tt.coordinateTransformMode}'`)}const xt=(0,d.getCoordsDataType)(st),ft=`
            const vec2 inputWH = vec2(${ut}.0, ${ct}.0);
            const vec4 scaleWHWH = vec4(float(${pt}), float(${ht}), float(${pt}), float(${ht}));
            ${(0,h.unpackFromChannel)()}
            ${yt}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${xt} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${it-1};
                bool hasNextCol = rc.z < ${at-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${nt.output} = vec4(newValue);
            }
        `;return Object.assign(Object.assign({},_),{output:{dims:ot,type:et[0].type,textureType:a.TextureType.packed},hasMain:!0,shaderSource:ft})},_e=($,et)=>{const tt=$[0].dims;let nt,rt=et.scales;if(rt.length===0){const st=$[et.scalesInputIdx];if(st&&st.size!==0){if($[et.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");rt=g(st,et.mode,et.isResize)}else{const it=$[et.sizesInputIdx];if(!it||it.size===0)throw new Error("Either scales or sizes MUST be provided as input.");nt=Array.from(it.integerData),rt=c(nt,tt,et.mode,et.isResize)}}else if($[et.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");const ot=nt||tt.map((st,it)=>Math.floor(st*rt[it]));return[rt,ot]},g=($,et,tt)=>{const nt=Array.from($.floatData);return(0,b.scalesValidation)(nt,et,tt),nt},c=($,et,tt,nt)=>{const rt=et.length,ot=new Array(rt);for(let st=0,it=rt;st<it;st++)if(et[st]===0){if($[st]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");ot[st]=1}else ot[st]=$[st]/et[st];return(0,b.scalesValidation)(ot,tt,nt),ot}},565:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.shape=void 0;const i=s(9240);e.shape=(d,h)=>(a(h),[new i.Tensor([h[0].dims.length],"int32",void 0,void 0,new Int32Array(h[0].dims))]);const a=d=>{if(!d||d.length!==1)throw new Error("Shape requires 1 input.")}},2444:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.sliceV10=e.parseSliceAttributes=e.slice=void 0;const i=s(4910),a=s(6145),d=s(7273),h=s(5639),b={name:"Slice",inputNames:["A"],inputTypes:[h.TextureType.unpacked]};e.slice=(c,$,et)=>(j($),[c.run(Object.assign(Object.assign({},b),{cacheHint:et.cacheKey,get:()=>_(c,$[0],et)}),$)]),e.parseSliceAttributes=c=>{const $=c.attributes.getInts("starts"),et=c.attributes.getInts("ends"),tt=c.attributes.getInts("axes",[]);return(0,i.createAttributeWithCacheKey)({starts:$,ends:et,axes:tt})};const _=(c,$,et)=>{const tt=et.axes.length===0?$.dims.slice(0).map((lt,ut)=>ut):et.axes,nt=d.ShapeUtil.normalizeAxes(tt,$.dims.length),rt=et.starts.map((lt,ut)=>lt>$.dims[nt[ut]]-1?$.dims[nt[ut]]:d.ShapeUtil.normalizeAxis(lt,$.dims[nt[ut]])),ot=et.ends.map((lt,ut)=>lt>$.dims[nt[ut]]-1?$.dims[nt[ut]]:d.ShapeUtil.normalizeAxis(lt,$.dims[nt[ut]])),st=$.dims.slice(),it=[];for(let lt=0;lt<nt.length;lt++)st[nt[lt]]=ot[lt]-rt[lt],rt[lt]>0&&it.push(`outputIdx[${nt[lt]}] += ${rt[lt]};`);const at=`
      float process(int outputIdx[${st.length}]) {
        ${it.join(`
      `)}
        return _A(outputIdx);
      }`;return Object.assign(Object.assign({},b),{output:{dims:st,type:$.type,textureType:h.TextureType.unpacked},shaderSource:at})},j=c=>{if(!c||c.length!==1)throw new Error("Slice requires 1 input.");if(a.NUMBER_TYPES.indexOf(c[0].type)===-1)throw new Error("Invalid input type.")};e.sliceV10=(c,$)=>{g($);const et=_e(c,$);return[c.run(Object.assign(Object.assign({},b),{cacheHint:et.cacheKey,get:()=>_(c,$[0],et)}),[$[0]])]};const _e=(c,$)=>{if(!c.session.isInitializer($[1].dataId)||!c.session.isInitializer($[2].dataId)||$.length>=4&&!c.session.isInitializer($[3].dataId)||$.length>=5&&!c.session.isInitializer($[4].dataId))throw new Error("dynamic slice attributes are not allowed");if($.length>=5&&$[4].integerData.some(rt=>rt!==1))throw new Error("currently non-1 steps is not supported for Slice");const et=Array.from($[1].integerData),tt=Array.from($[2].integerData),nt=$.length>=4?Array.from($[3].integerData):[];return{starts:et,ends:tt,axes:nt,cacheKey:`${nt};${et};${tt}`}},g=c=>{if(!c||c.length<3||c.length>5)throw new Error("Invalid input number.");if(c[1].type!=="int32"||c[1].dims.length!==1)throw new Error("Invalid input type.");if(c[2].type!=="int32"||c[2].dims.length!==1)throw new Error("Invalid input type.");if(c.length>=4&&(c[3].type!=="int32"||c[3].dims.length!==1))throw new Error("Invalid input type.");if(c.length>=5&&(c[4].type!=="int32"||c[4].dims.length!==1))throw new Error("Invalid input type.")}},815:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.softmaxV13=e.parseSoftmaxAttributesV13=e.parseSoftmaxAttributes=e.softmax=void 0;const i=s(4910),a=s(7273),d=s(6757),h=s(5639),b=s(5707),_={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[h.TextureType.unpacked]},j={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[h.TextureType.unpacked,h.TextureType.unpacked]},_e={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[h.TextureType.unpacked,h.TextureType.unpacked,h.TextureType.unpacked]};e.softmax=(nt,rt,ot)=>{tt(rt);const st=rt[0].dims.slice(),it=a.ShapeUtil.normalizeAxis(ot.axis,st.length),at=a.ShapeUtil.sizeToDimension(st,it),lt=a.ShapeUtil.sizeFromDimension(st,it);return g(nt,rt,ot,at,lt)},e.parseSoftmaxAttributes=nt=>(0,i.createAttributeWithCacheKey)({axis:nt.attributes.getInt("axis",1)}),e.parseSoftmaxAttributesV13=nt=>(0,i.createAttributeWithCacheKey)({axis:nt.attributes.getInt("axis",-1)}),e.softmaxV13=(nt,rt,ot)=>{tt(rt);const st=rt[0].dims.slice(),it=a.ShapeUtil.normalizeAxis(ot.axis,st.length),at=st.length,lt=it!==at-1,ut=[];let ct,pt=[],ht=[];lt&&(pt=Array.from({length:at}).map((wt,dt)=>dt),pt[it]=at-1,pt[at-1]=it,pt.map(wt=>ut.push(st[wt])),ct=(0,i.createAttributeWithCacheKey)({perm:pt}),ht=(0,b.transpose)(nt,rt,ct));const yt=lt?a.ShapeUtil.sizeToDimension(ut,at-1):a.ShapeUtil.sizeToDimension(st,at-1),xt=lt?a.ShapeUtil.sizeFromDimension(ut,at-1):a.ShapeUtil.sizeFromDimension(st,at-1),ft=g(nt,lt?ht:rt,ot,yt,xt);return lt?(0,b.transpose)(nt,ft,ct):ft};const g=(nt,rt,ot,st,it)=>{const at=c(nt,rt[0],st,it,[st]),lt=nt.run(Object.assign(Object.assign({},_),{cacheHint:ot.cacheKey,get:()=>at}),rt),ut=$(nt,rt[0],st,it,at.output.dims,[st]),ct=nt.run(Object.assign(Object.assign({},j),{cacheHint:ot.cacheKey,get:()=>ut}),[rt[0],lt]),pt=et(nt,rt[0],st,it,at.output.dims,ut.output.dims);return[nt.run(Object.assign(Object.assign({},_e),{cacheHint:ot.cacheKey,get:()=>pt}),[rt[0],lt,ct])]},c=(nt,rt,ot,st,it)=>{const[at,lt]=nt.calculateTextureWidthAndHeight(rt.dims,h.TextureType.unpacked),ut=it.length;if(ot<1||st<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(it.length!==1)throw new Error("Dimensionality of the output should be 1");if(it[0]!==ot)throw new Error("Shape of the output should be equal to logical row count");const ct=(0,d.getGlsl)(nt.session.backend.glContext.version),pt=`
      float process(int[${ut}] indices) {
        int logical_row_start_offset = indices[0] * ${st};

        float max = getColorAsFloat(${ct.texture2D}(A, offsetToCoords(logical_row_start_offset, ${at},
        ${lt} )));
        for(int i=1; i<${st}; ++i)
        {
          float current = getColorAsFloat(${ct.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${at}, ${lt})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return Object.assign(Object.assign({},_),{output:{dims:it,type:rt.type,textureType:h.TextureType.unpacked},shaderSource:pt})},$=(nt,rt,ot,st,it,at)=>{const[lt,ut]=nt.calculateTextureWidthAndHeight(rt.dims,h.TextureType.unpacked),ct=at.length;if(ot<1||st<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(at.length!==1)throw new Error("Dimensionality of the output should be 1");if(at[0]!==ot)throw new Error("Shape of the output should be equal to logical row count");if(it.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(it[0]!==ot)throw new Error("Shape of the intermediate results should be equal to logical row count");const pt=`
      float process(int[${ct}] indices) {
        int logical_row_start_offset = indices[0] * ${st};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${st}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${(0,d.getGlsl)(nt.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${lt}, ${ut}))) - max);
        }

        return norm_factor;
      }`;return Object.assign(Object.assign({},j),{output:{dims:at,type:rt.type,textureType:h.TextureType.unpacked},shaderSource:pt})},et=(nt,rt,ot,st,it,at)=>{const[lt,ut]=nt.calculateTextureWidthAndHeight(rt.dims,h.TextureType.unpacked),ct=rt.dims.length;if(ot<1||st<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(it.length!==1||at.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(it[0]!==ot||at[0]!==ot)throw new Error("Shape of the intermediate results should be equal to logical row count");const pt=`
      float process(int[${ct}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${lt}, ${ut});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${st};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return Object.assign(Object.assign({},_e),{output:{dims:rt.dims,type:rt.type,textureType:h.TextureType.unpacked},shaderSource:pt})},tt=nt=>{if(!nt||nt.length!==1)throw new Error("Softmax requires 1 input.");if(nt[0].type!=="float32"&&nt[0].type!=="float64")throw new Error("Invalid input type")}},564:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseSplitAttributes=e.split=void 0;const i=s(4910),a=s(7273),d=s(5639),h={name:"Split",inputNames:["A"],inputTypes:[d.TextureType.unpacked]};e.split=(_e,g,c)=>{j(g);const $=a.ShapeUtil.normalizeAxis(c.axis,g[0].dims.length),et=b(_e,g,$,c),tt=[];for(let nt=0;nt<et;++nt)tt.push(_e.run(Object.assign(Object.assign({},h),{cacheHint:`${c.cacheKey};${nt}`,get:()=>_(_e,g[0],c,$,nt)}),g));return tt},e.parseSplitAttributes=_e=>{const g=_e.attributes.getInt("axis",0),c=_e.attributes.getInts("split",[]),$=_e.outputs.length;return(0,i.createAttributeWithCacheKey)({axis:g,split:c,numOutputs:$})};const b=(_e,g,c,$)=>{const[,et]=a.SplitUtil.splitShape(g[0].dims,c,$.split,$.numOutputs);return et.length},_=(_e,g,c,$,et)=>{const[tt,nt]=a.SplitUtil.splitShape(g.dims,$,c.split,c.numOutputs),rt=nt[et],ot=tt[et],st=`
      float process(int indices[${ot.length}]) {
        indices[${$}] += ${rt};
        return _A(indices);
      }
    `;return Object.assign(Object.assign({},h),{cacheHint:`${c.cacheKey}:${et}`,output:{dims:ot,type:g.type,textureType:d.TextureType.unpacked},shaderSource:st})},j=_e=>{if(!_e||_e.length!==1)throw new Error("Split requires one input.");if(_e[0].type!=="int8"&&_e[0].type!=="uint8"&&_e[0].type!=="int16"&&_e[0].type!=="uint16"&&_e[0].type!=="int32"&&_e[0].type!=="uint32"&&_e[0].type!=="float32"&&_e[0].type!=="float64"&&_e[0].type!=="bool")throw new Error("Invalid input type.")}},5416:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseSqueezeAttributes=e.squeezeV13=e.squeeze=void 0;const i=s(7273);e.squeeze=(h,b,_)=>{a(b);const j=i.ShapeUtil.squeezeShape(b[0].dims,_);return[h.reshapeUnpacked(b[0],j)]},e.squeezeV13=(h,b)=>(d(b),(0,e.squeeze)(h,[b[0]],Array.from(b[1].integerData))),e.parseSqueezeAttributes=h=>h.attributes.getInts("axes");const a=h=>{if(!h||h.length!==1)throw new Error("Squeeze requires 1 input.");if(h[0].type==="string")throw new Error("invalid input tensor types.")},d=h=>{if(!h||h.length!==2)throw new Error("Squeeze requires 2 inputs.");if(h[1].type!=="int32")throw new Error("Invalid input type.")}},1240:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.sum=void 0;const i=s(6757),a=s(5639);e.sum=(b,_)=>{h(_);const j={name:"Sum",inputNames:_.map((_e,g)=>`X${g}`),inputTypes:new Array(_.length).fill(a.TextureType.unpacked)};return[b.run(Object.assign(Object.assign({},j),{get:()=>d(b,_,j)}),_)]};const d=(b,_,j)=>{const _e=(0,i.getGlsl)(b.session.backend.glContext.version),g=_[0].dims.slice(),c=`
      void main() {
        vec4 result = ${_.map(($,et)=>`${_e.texture2D}(X${et},TexCoords)`).join(" + ")};
        ${_e.output} = result;
      }
    `;return Object.assign(Object.assign({},j),{output:{dims:g,type:_[0].type,textureType:a.TextureType.unpacked},hasMain:!0,shaderSource:c})},h=b=>{if(!b||b.length===0)throw new Error("Sum requires inputs.");const _=b[0].dims.length;for(let j=1;j<b.length;j++){if(_!==b[j].dims.length)throw new Error("Input shapes are mismatched.");for(let _e=0;_e<_;_e++)if(b[0].dims[_e]!==b[j].dims[_e])throw new Error("Input shapes are not matched.")}if(b[0].type!=="float32"&&b[0].type!=="float64")throw new Error("Invalid input type.");for(let j=1;j<b.length;j++)if(b[0].type!==b[j].type)throw new Error("Input types are not matched.")}},5944:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tile=void 0;const i=s(6145),a=s(5639);e.tile=(b,_)=>{h(_);const j={name:"Tile",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};return[b.run(Object.assign(Object.assign({},j),{get:()=>d(b,_,j)}),_)]};const d=(b,_,j)=>{const _e=_[0].dims.slice(),g=new Array(_e.length),c=[];for(let tt=0;tt<_e.length;tt++)g[tt]=_e[tt]*_[1].numberData[tt],c.push(`inputIdx[${tt}] = int(mod(float(outputIdx[${tt}]), ${_e[tt]}.));`);const $=g.length,et=`
      float process(int outputIdx[${$}]) {
        int inputIdx[${$}];
        ${c.join(`
`)}
        return _A(inputIdx);
      }
    `;return Object.assign(Object.assign({},j),{output:{dims:g,type:_[0].type,textureType:a.TextureType.unpacked},shaderSource:et})},h=b=>{if(!b||b.length!==2)throw new Error("Tile requires 2 input.");if(b[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(b[1].dims[0]!==b[0].dims.length)throw new Error("Invalid input shape.");if(i.NUMBER_TYPES.indexOf(b[0].type)===-1)throw new Error("Invalid input type.");if(b[1].type!=="int32"&&b[1].type!=="int16")throw new Error("Invalid repeat type.")}},5707:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseTransposeAttributes=e.transpose=void 0;const i=s(4910),a=s(7273),d=s(5639),h={name:"Transpose",inputNames:["A"],inputTypes:[d.TextureType.unpacked]};e.transpose=(c,$,et)=>(g($),[c.run(Object.assign(Object.assign({},h),{cacheHint:et.cacheKey,get:()=>b(c,$[0],et.perm)}),$)]),e.parseTransposeAttributes=c=>(0,i.createAttributeWithCacheKey)({perm:c.attributes.getInts("perm",[])});const b=(c,$,et)=>{const tt=$.dims;et=_(tt,et);const nt=j(tt,et),rt=tt.length,ot=`
      ${_e("perm",et,rt)}
      float process(int indices[${rt}]) {
        int a[${rt}];
        perm(a, indices);
        return _A(a);
      }`;return Object.assign(Object.assign({},h),{output:{dims:nt,type:$.type,textureType:d.TextureType.unpacked},shaderSource:ot})},_=(c,$)=>($&&$.length!==c.length&&($=[...c.keys()].reverse()),$),j=(c,$)=>($=_(c,$),a.ShapeUtil.sortBasedOnPerm(c,$)),_e=(c,$,et)=>{const tt=[];tt.push(`void ${c}(out int a[${et}], int src[${et}]) {`);for(let nt=0;nt<et;++nt)tt.push(`	a[${$[nt]}]=src[${nt}];`);return tt.push("	}"),tt.join(`
`)},g=c=>{if(!c||c.length!==1)throw new Error("Transpose requires 1 input.");if(c[0].type!=="float32"&&c[0].type!=="float64")throw new Error("input should be float tensor")}},2488:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.encodeAsUint8=void 0;const i=s(6757),a=s(5639);e.encodeAsUint8=(d,h)=>{const b=h.shape,_=(0,i.getGlsl)(d.session.backend.glContext.version),j=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${_.texture2D}(X,TexCoords).r;
      ${_.output} = encodeAsUint8(value);
    }`,_e={name:"Uint8Encode",inputTypes:[a.TextureType.unpacked],inputNames:["X"],output:{dims:b,type:h.tensor.type,textureType:a.TextureType.downloadUint8AsFloat},shaderSource:j,hasMain:!0};return d.executeProgram(_e,[h.tensor])}},9087:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tanh=e.tan=e.sqrt=e.sin=e.sigmoid=e.relu=e.not=e.neg=e.log=e.parseLeakyReluAttributes=e.leakyRelu=e.identity=e.floor=e.exp=e.parseEluAttributes=e.elu=e.cos=e.ceil=e.clipV11=e.parseClipAttributes=e.clip=e.atan=e.asin=e.acos=e.abs=e.glslTanh=e.glslTan=e.glslSqrt=e.glslSigmoid=e.glslRelu=e.glslSin=e.glslNot=e.glslNeg=e.glslLog=e.glslLeakyRelu=e.glslIdentity=e.glslClip=e.glslFloor=e.glslExp=e.glslElu=e.glslCos=e.glslCeil=e.glslAtan=e.glslAsin=e.glslAcos=e.glslAbs=void 0;const i=s(4910),a=s(7273),d=s(1997),h=s(6757),b=s(5639);function _(){return ft("abs")}function j(){return ft("acos")}function _e(){return ft("asin")}function g(){return ft("atan")}function c(){return ft("ceil")}function $(){return ft("cos")}function et(mt){const bt="elu";return{body:`
  const float alpha = float(${mt});

  float ${bt}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${bt}_(vec4 v) {
    return vec4(${bt}_(v.x), ${bt}_(v.y), ${bt}_(v.z), ${bt}_(v.w));
  }
  `,name:bt,type:d.FunctionType.ValueBased}}function tt(){return ft("exp")}function nt(){return ft("floor")}function rt(mt,bt){const vt="clip";return{body:`
  const float min = float(${mt});
  const float max = float(${bt});

  float ${vt}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${vt}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:vt,type:d.FunctionType.ValueBased}}function ot(){const mt="indentity";return{body:`
  float ${mt}_(float a) {
    return a;
  }
  vec4 ${mt}_(vec4 v) {
    return v;
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function st(mt){const bt="leakyRelu";return{body:`
  const float alpha = float(${mt});

  float ${bt}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${bt}_(vec4 v) {
    return vec4(${bt}_(v.x), ${bt}_(v.y), ${bt}_(v.z), ${bt}_(v.w));
  }
  `,name:bt,type:d.FunctionType.ValueBased}}function it(){return ft("log")}function at(){const mt="neg";return{body:`
  float ${mt}_(float a) {
    return -a;
  }
  vec4 ${mt}_(vec4 v) {
    return -v;
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function lt(){const mt="not";return{body:`
  float ${mt}_(float a) {
    return float( ! bool(a) );
  }
  bool ${mt}_(bool a) {
    return !a;
  }
  vec4 ${mt}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${mt}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ut(){return ft("sin")}function ct(){const mt="relu";return{body:`
  float ${mt}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${mt}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function pt(){const mt="sigmoid";return{body:`
  float ${mt}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${mt}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ht(){return ft("sqrt")}function yt(){return ft("tan")}function xt(){const mt="tanh";return{body:`
  float ${mt}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${mt}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ft(mt){return{body:`
  float ${mt}_(float a) {
    return ${mt}(a);
  }
  vec4 ${mt}_(vec4 v) {
    return ${mt}(v);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}e.glslAbs=_,e.glslAcos=j,e.glslAsin=_e,e.glslAtan=g,e.glslCeil=c,e.glslCos=$,e.glslElu=et,e.glslExp=tt,e.glslFloor=nt,e.glslClip=rt,e.glslIdentity=ot,e.glslLeakyRelu=st,e.glslLog=it,e.glslNeg=at,e.glslNot=lt,e.glslSin=ut,e.glslRelu=ct,e.glslSigmoid=pt,e.glslSqrt=ht,e.glslTan=yt,e.glslTanh=xt;const wt=(mt,bt,vt,Tt)=>{const Et=mt.session.pack?b.TextureType.packed:b.TextureType.unpacked,Ct={name:vt.name,inputTypes:[Et],inputNames:["A"],cacheHint:Tt};return Object.assign(Object.assign({},Ct),{get:()=>((kt,Dt,Rt,Ot)=>{const zt=kt.session.pack?b.TextureType.packed:b.TextureType.unpacked,Bt=(0,h.getGlsl)(kt.session.backend.glContext.version);return Object.assign(Object.assign({},Dt),{output:{dims:Rt.dims,type:Rt.type,textureType:zt},shaderSource:`
     ${Ot.body}
     void main() {
       vec4 v = ${Bt.texture2D}(A, TexCoords);
       v = ${Ot.name}_(v);
       ${Bt.output} = v;
     }
     `,hasMain:!0})})(mt,Ct,bt,vt)})};e.abs=(mt,bt)=>[mt.run(wt(mt,bt[0],_()),bt)],e.acos=(mt,bt)=>[mt.run(wt(mt,bt[0],j()),bt)],e.asin=(mt,bt)=>[mt.run(wt(mt,bt[0],_e()),bt)],e.atan=(mt,bt)=>[mt.run(wt(mt,bt[0],g()),bt)],e.clip=(mt,bt,vt)=>[mt.run(wt(mt,bt[0],rt(vt.min,vt.max),vt.cacheKey),bt)],e.parseClipAttributes=mt=>(0,i.createAttributeWithCacheKey)({min:mt.attributes.getFloat("min",a.MIN_CLIP),max:mt.attributes.getFloat("max",a.MAX_CLIP)}),e.clipV11=(mt,bt)=>{const vt=dt(mt,bt);return(0,e.clip)(mt,[bt[0]],vt)};const dt=(mt,bt)=>{if(bt.length>=3&&(!mt.session.isInitializer(bt[1].dataId)||!mt.session.isInitializer(bt[2].dataId)))throw new Error("dynamic clip attributes are not allowed");const vt=bt.length>=3?bt[1].numberData[0]:a.MIN_CLIP,Tt=bt.length>=3?bt[2].numberData[0]:a.MAX_CLIP;return(0,i.createAttributeWithCacheKey)({min:vt,max:Tt})};e.ceil=(mt,bt)=>[mt.run(wt(mt,bt[0],c()),bt)],e.cos=(mt,bt)=>[mt.run(wt(mt,bt[0],$()),bt)],e.elu=(mt,bt,vt)=>[mt.run(wt(mt,bt[0],et(vt.alpha),vt.cacheKey),bt)],e.parseEluAttributes=mt=>(0,i.createAttributeWithCacheKey)({alpha:mt.attributes.getFloat("alpha",1)}),e.exp=(mt,bt)=>[mt.run(wt(mt,bt[0],tt()),bt)],e.floor=(mt,bt)=>[mt.run(wt(mt,bt[0],nt()),bt)],e.identity=(mt,bt)=>[mt.run(wt(mt,bt[0],ot()),bt)],e.leakyRelu=(mt,bt,vt)=>[mt.run(wt(mt,bt[0],st(vt.alpha),vt.cacheKey),bt)],e.parseLeakyReluAttributes=mt=>(0,i.createAttributeWithCacheKey)({alpha:mt.attributes.getFloat("alpha",.01)}),e.log=(mt,bt)=>[mt.run(wt(mt,bt[0],it()),bt)],e.neg=(mt,bt)=>[mt.run(wt(mt,bt[0],at()),bt)],e.not=(mt,bt)=>[mt.run(wt(mt,bt[0],lt()),bt)],e.relu=(mt,bt)=>[mt.run(wt(mt,bt[0],ct()),bt)],e.sigmoid=(mt,bt)=>[mt.run(wt(mt,bt[0],pt()),bt)],e.sin=(mt,bt)=>[mt.run(wt(mt,bt[0],ut()),bt)],e.sqrt=(mt,bt)=>[mt.run(wt(mt,bt[0],ht()),bt)],e.tan=(mt,bt)=>[mt.run(wt(mt,bt[0],yt()),bt)],e.tanh=(mt,bt)=>[mt.run(wt(mt,bt[0],xt()),bt)]},540:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createUnpackProgramInfoLoader=e.createUnpackProgramInfo=void 0;const i=s(6757),a=s(5639),d=s(432),h=s(5614),b={name:"unpack",inputNames:["A"],inputTypes:[a.TextureType.packed]};e.createUnpackProgramInfo=(_,j)=>{const _e=j.dims.length,g=(0,h.getChannels)("rc",_e),c=g.slice(-2),$=(0,d.getCoordsDataType)(_e),et=(0,h.unpackFromChannel)(),tt=j.dims.length===0?"":function(ot,st){if(ot===1)return"rc";let it="";for(let at=0;at<ot;at++)it+=st[at],at<ot-1&&(it+=",");return it}(_e,g),nt=_e<=1?"rc":`vec2(${c.join(",")})`,rt=`
    ${et}
    void main() {
      ${$} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${tt});

       ${(0,i.getGlsl)(_.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${nt}), 0, 0, 0);
     }
   `;return Object.assign(Object.assign({},b),{hasMain:!0,output:{dims:j.dims,type:j.type,textureType:a.TextureType.unpacked},shaderSource:rt})},e.createUnpackProgramInfoLoader=(_,j)=>Object.assign(Object.assign({},b),{get:()=>(0,e.createUnpackProgramInfo)(_,j)})},7862:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseUnsqueezeAttributes=e.unsqueezeV13=e.unsqueeze=void 0;const i=s(7273);e.unsqueeze=(h,b,_)=>{a(b);const j=i.ShapeUtil.unsqueezeShape(b[0].dims,_);return[h.reshapeUnpacked(b[0],j)]},e.unsqueezeV13=(h,b)=>(d(b),(0,e.unsqueeze)(h,[b[0]],Array.from(b[1].integerData))),e.parseUnsqueezeAttributes=h=>h.attributes.getInts("axes");const a=h=>{if(!h||h.length!==1)throw new Error("Unsqueeze requires 1 input.");if(h[0].type==="string")throw new Error("invalid input tensor types.")},d=h=>{if(!h||h.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(h[1].type!=="int32")throw new Error("Invalid input type.")}},3980:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.scalesValidation=e.validateInputs=e.parseUpsampleAttributes=e.parseUpsampleAttributesV9=e.parseUpsampleAttributesV7=e.upsample=void 0;const i=s(4910),a=s(6757),d=s(5639),h={name:"Upsample",inputNames:["X"],inputTypes:[d.TextureType.unpacked]};e.upsample=(_,j,_e)=>((0,e.validateInputs)(j,_e),[_.run(Object.assign(Object.assign({},h),{cacheHint:_e.cacheKey,get:()=>b(_,j,_e)}),j)]),e.parseUpsampleAttributesV7=_=>(0,e.parseUpsampleAttributes)(_,7),e.parseUpsampleAttributesV9=_=>(0,e.parseUpsampleAttributes)(_,9),e.parseUpsampleAttributes=(_,j)=>{const _e=j>=10,g=_.attributes.getString("mode","nearest");if(g!=="nearest"&&g!=="linear"&&(j<11||g!=="cubic"))throw new Error(`unrecognized mode: ${g}`);let c=[];j<9&&(c=_.attributes.getFloats("scales"),(0,e.scalesValidation)(c,g,_e));const $=_.attributes.getFloat("extrapolation_value",0),et=j>10?_.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(et)===-1)throw new Error(`coordinate_transform_mode '${et}' is not supported`);const tt=et==="tf_crop_and_resize",nt=tt,rt=g==="nearest"&&j>=11?_.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(rt)===-1)throw new Error(`nearest_mode '${rt}' is not supported`);const ot=_.attributes.getFloat("cubic_coeff_a",-.75),st=_.attributes.getInt("exclude_outside",0)!==0;if(st&&g!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");const it=j<11||g==="nearest"&&et==="asymmetric"&&rt==="floor";let at=0,lt=0,ut=0;return j>10?_.inputs.length>2?(at=1,lt=2,ut=3):(lt=1,ut=2):j===9&&(lt=1),(0,i.createAttributeWithCacheKey)({opset:j,isResize:_e,mode:g,scales:c,extrapolationValue:$,coordinateTransformMode:et,useExtrapolation:nt,needRoiInput:tt,nearestMode:rt,cubicCoefficientA:ot,excludeOutside:st,useNearest2xOptimization:it,roiInputIdx:at,scalesInputIdx:lt,sizesInputIdx:ut})};const b=(_,j,_e)=>{const g=(0,a.getGlsl)(_.session.backend.glContext.version),[c,$]=_.calculateTextureWidthAndHeight(j[0].dims,d.TextureType.unpacked),et=j[0].dims.map((ut,ct)=>Math.floor(ut*_e.scales[ct])),[tt,nt]=_.calculateTextureWidthAndHeight(et,d.TextureType.unpacked),rt=et.length,ot=new Array(rt),st=new Array(rt);let it=`
      int output_pitches[${rt}];
      int input_pitches[${rt}];
      `;for(let ut=rt-1;ut>=0;ut--)ot[ut]=ut===rt-1?1:ot[ut+1]*et[ut+1],st[ut]=ut===rt-1?1:st[ut+1]*j[0].dims[ut+1],it+=`
        output_pitches[${ut}] = ${ot[ut]};
        input_pitches[${ut}] = ${st[ut]};
        `;const at=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${c}, ${$});
        float value = getColorAsFloat(${g.texture2D}(X, coords));
        return value;
      }
      `,lt=_e.mode==="nearest"?`
    ${at}
    float process(int indices[${rt}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${tt}, ${nt});

      ${it}

      int d, m;
      for (int dim = 0; dim < ${rt}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:rt===4?`
    ${at}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${tt}, ${nt});

      ${it}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${j[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${at}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${tt}, ${nt});

      ${it}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${j[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return Object.assign(Object.assign({},h),{output:{dims:et,type:j[0].type,textureType:d.TextureType.unpacked},shaderSource:lt,variables:[{name:"scales",type:"int",arrayLength:_e.scales.length,data:_e.scales.map(ut=>Math.ceil(ut))}]})};e.validateInputs=(_,j)=>{if(!_||j.opset<9&&_.length!==1||j.opset>=9&&j.opset<11&&_.length!==2||j.opset>=11&&_.length<2)throw new Error("invalid inputs.");if(j.scales.length>0&&_[0].dims.length!==j.scales.length)throw new Error("Invalid input shape.");if(_[0].type==="string")throw new Error("Invalid input tensor types.")},e.scalesValidation=(_,j,_e)=>{if(_e){for(const g of _)if(g<=0)throw new Error("Scale value should be greater than 0.")}else for(const g of _)if(g<1)throw new Error("Scale value should be greater than or equal to 1.");if(!(j!=="linear"&&j!=="cubic"||_.length===2||_.length===4&&_[0]===1&&_[1]===1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${_e?"Resize":"Upsample"} opeartor.`)}},2757:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ProgramManager=void 0;const i=s(2235),a=s(1315),d=s(8897),h=s(6757);e.ProgramManager=class{constructor(b,_,j){this.profiler=b,this.glContext=_,this.textureLayoutStrategy=j,this.repo=new Map,this.attributesBound=!1}getArtifact(b){return this.repo.get(b)}setArtifact(b,_){this.repo.set(b,_)}run(b,_,j){var _e;this.profiler.event("op",`ProgramManager.run ${(_e=b.programInfo.name)!==null&&_e!==void 0?_e:"unknown kernel"}`,()=>{var g;const c=this.glContext.gl,$=b.program;c.useProgram($);try{this.bindOutput(j),this.attributesBound||this.bindAttributes(b.attribLocations),this.bindUniforms(b.uniformLocations,(g=b.programInfo.variables)!==null&&g!==void 0?g:[],_)}catch(et){throw a.Logger.error("ProgramManager",b.programInfo.shaderSource),et}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(b=>this.glContext.deleteProgram(b.program))}build(b,_,j){return this.profiler.event("backend","ProgramManager.build",()=>{const _e=new d.GlslPreprocessor(this.glContext,b,_,j),g=_e.preprocess(),c=this.compile(g);return{programInfo:b,program:c,uniformLocations:this.getUniformLocations(c,_e.context.programInfo.inputNames,_e.context.programInfo.variables),attribLocations:this.getAttribLocations(c)}})}compile(b){if(!this.vertexShader){a.Logger.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");const _e=(0,h.getVertexShaderSource)(this.glContext.version);this.vertexShader=this.glContext.compileShader(_e,this.glContext.gl.VERTEX_SHADER)}i.env.debug&&a.Logger.verbose("ProrgramManager",`FragShader:
${b}
`);const _=this.glContext.compileShader(b,this.glContext.gl.FRAGMENT_SHADER),j=this.glContext.createProgram(this.vertexShader,_);return this.glContext.deleteShader(_),j}bindOutput(b){const _=b.width,j=b.height;a.Logger.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${_}/${j}, shape=${b.shape}, type=${b.tensor.type}`),this.glContext.attachFramebuffer(b.texture,_,j)}bindAttributes(b){const _=b.position,j=b.textureCoord;this.glContext.setVertexAttributes(_,j),this.attributesBound=!0}bindUniforms(b,_,j){var _e;const g=this.glContext.gl;let c=0;for(const{name:$,type:et,location:tt,arrayLength:nt}of b){const rt=(_e=_.find(ot=>ot.name===$))===null||_e===void 0?void 0:_e.data;if(et!=="sampler2D"&&!rt)throw new Error(`variable '${$}' does not have data defined in program info`);switch(et){case"sampler2D":this.bindTexture(j[c],tt,c),c++;break;case"float":nt?g.uniform1fv(tt,rt):g.uniform1f(tt,rt);break;case"int":nt?g.uniform1iv(tt,rt):g.uniform1i(tt,rt);break;default:throw new Error(`Uniform not implemented: ${et}`)}}}bindTexture(b,_,j){this.glContext.bindTextureToUniform(b.texture,j,_)}getAttribLocations(b){return{position:this.getAttribLocation(b,"position"),textureCoord:this.getAttribLocation(b,"textureCoord")}}getUniformLocations(b,_,j){const _e=[];if(_)for(const g of _)_e.push({name:g,type:"sampler2D",location:this.getUniformLocation(b,g)});if(j)for(const g of j)_e.push(Object.assign(Object.assign({},g),{location:this.getUniformLocation(b,g.name)}));return _e}getUniformLocation(b,_){const j=this.glContext.gl.getUniformLocation(b,_);if(j===null)throw new Error(`Uniform ${_} not found.`);return j}getAttribLocation(b,_){return this.glContext.gl.getAttribLocation(b,_)}}},2171:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLSessionHandler=void 0;const i=s(1315),a=s(5881),d=s(7860),h=s(4110),b=s(2757),_=s(7618),j=s(5243);e.WebGLSessionHandler=class{constructor(_e,g){this.backend=_e,this.context=g,this.layoutStrategy=new _.PreferLogicalStrategy(_e.glContext.maxTextureSize),this.programManager=new b.ProgramManager(this.context.profiler,_e.glContext,this.layoutStrategy),this.textureManager=new j.TextureManager(_e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:_e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=_e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new d.WebGLInferenceHandler(this)}onGraphInitialized(_e){const g=_e.getValues().filter(c=>c.from===-1&&c.tensor).map(c=>c.tensor.dataId);this.initializers=new Set(g)}isInitializer(_e){return!!this.initializers&&this.initializers.has(_e)}addInitializer(_e){this.initializers.add(_e)}getTextureData(_e,g){return g?this.packedTextureDataCache.get(_e):this.unpackedTextureDataCache.get(_e)}setTextureData(_e,g,c=!1){i.Logger.verbose("WebGLSessionHandler","Storing Texture data in cache"),c?this.packedTextureDataCache.set(_e,g):this.unpackedTextureDataCache.set(_e,g)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(_e=>this.textureManager.releaseTexture(_e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(_e=>this.textureManager.releaseTexture(_e,!0)),this.unpackedTextureDataCache=new Map}resolve(_e,g,c){const $=(0,a.resolveOperator)(_e,g,h.WEBGL_OP_RESOLVE_RULES);return{impl:$.opImpl,context:$.opInit?$.opInit(_e,c):_e}}}},9622:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Uint8DataEncoder=e.RGBAFloatDataEncoder=e.RedFloat32DataEncoder=void 0;const i=s(1315);e.RedFloat32DataEncoder=class{constructor(a,d=1){if(d===1)this.internalFormat=a.R32F,this.format=a.RED,this.textureType=a.FLOAT,this.channelSize=d;else{if(d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=a.RGBA32F,this.format=a.RGBA,this.textureType=a.FLOAT,this.channelSize=d}}encode(a,d){let h,b;return a.constructor!==Float32Array&&(i.Logger.warning("Encoder","data was not of type Float32; creating new Float32Array"),b=new Float32Array(a)),d*this.channelSize>a.length?(i.Logger.warning("Encoder","Source data too small. Allocating larger array"),b=a,h=this.allocate(d*this.channelSize),b.forEach((_,j)=>h[j]=_)):(b=a,h=b),h}allocate(a){return new Float32Array(4*a)}decode(a,d){return this.channelSize===1?a.filter((h,b)=>b%4==0).subarray(0,d):a.subarray(0,d)}},e.RGBAFloatDataEncoder=class{constructor(a,d=1,h){if(d!==1&&d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=a.RGBA,this.format=a.RGBA,this.channelSize=d,this.textureType=h||a.FLOAT}encode(a,d){let h=a;return this.channelSize===1&&(i.Logger.verbose("Encoder","Exploding into a larger array"),h=this.allocate(d),a.forEach((b,_)=>h[4*_]=b)),h}allocate(a){return new Float32Array(4*a)}decode(a,d){return this.channelSize===1?a.filter((h,b)=>b%4==0).subarray(0,d):a.subarray(0,d)}},e.Uint8DataEncoder=class{constructor(a,d=1){if(this.channelSize=4,d===1)this.internalFormat=a.ALPHA,this.format=a.ALPHA,this.textureType=a.UNSIGNED_BYTE,this.channelSize=d;else{if(d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=a.RGBA,this.format=a.RGBA,this.textureType=a.UNSIGNED_BYTE,this.channelSize=d}}encode(a,d){return new Uint8Array(a.buffer,a.byteOffset,a.byteLength)}allocate(a){return new Uint8Array(a*this.channelSize)}decode(a,d){if(a instanceof Uint8Array)return a.subarray(0,d);throw new Error(`Invalid array type: ${a.constructor}`)}}},7618:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getBatchDim=e.sizeToSquarishShape=e.getRowsCols=e.sizeFromShape=e.isInt=e.parseAxisParam=e.squeezeShape=e.PreferLogicalStrategy=e.AlwaysKeepOriginalSizeStrategy=void 0;const i=s(1315),a=s(7273);function d(_e,g){const c=[],$=[],et=g!=null&&Array.isArray(g)&&g.length===0,tt=g==null||et?null:h(g,_e).sort();let nt=0;for(let rt=0;rt<_e.length;++rt){if(tt!=null){if(tt[nt]===rt&&_e[rt]!==1)throw new Error(`Can't squeeze axis ${rt} since its dim '${_e[rt]}' is not 1`);(tt[nt]==null||tt[nt]>rt)&&_e[rt]===1&&(c.push(_e[rt]),$.push(rt)),tt[nt]<=rt&&nt++}_e[rt]!==1&&(c.push(_e[rt]),$.push(rt))}return{newShape:c,keptDims:$}}function h(_e,g){const c=g.length;return _e=_e==null?g.map(($,et)=>et):[].concat(_e),(0,a.assert)(_e.every($=>$>=-c&&$<c),()=>`All values in axis param must be in range [-${c}, ${c}) but got axis ${_e}`),(0,a.assert)(_e.every(b),()=>`All values in axis param must be integers but got axis ${_e}`),_e.map($=>$<0?c+$:$)}function b(_e){return _e%1==0}function _(_e){if(_e.length===0)return 1;let g=_e[0];for(let c=1;c<_e.length;c++)g*=_e[c];return g}function j(_e){const g=Math.ceil(Math.sqrt(_e));return[g,Math.ceil(_e/g)]}e.AlwaysKeepOriginalSizeStrategy=class{constructor(_e){this.maxTextureSize=_e}computeTextureWH(_e,g){if(_e.length===0)return[1,1];const c=this.maxTextureSize;if(g&&g.breakAxis!==void 0){const tt=g.breakAxis>=_e.length?1:_e.slice(g.breakAxis).reduce((rt,ot)=>rt*ot),nt=g.breakAxis<=0?1:_e.slice(0,g.breakAxis).reduce((rt,ot)=>rt*ot);if(!(tt>c||nt>c))return[tt,nt];i.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${_e}, breakAxis:${g.breakAxis}`)}const $=_e.reduce((tt,nt)=>tt*nt);let et=Math.floor(Math.sqrt($));for(;et<c&&et<$&&$%et!=0;et++);if(et>=c||$%et!=0)throw new Error(`The given dimensions are outside this GPU's boundaries: ${_e}`);return[et,$/et]}},e.PreferLogicalStrategy=class{constructor(_e){this.maxTextureSize=_e}computeTextureWH(_e,g){const c=this.computeTexture(_e,g);return g&&g.isPacked&&(c[0]/=2,c[1]/=2),g&&g.reverseWH?[c[1],c[0]]:c}computeTexture(_e,g){const c=g&&g.isPacked;if(_e.length===0)return c?[2,2]:[1,1];let $=this.maxTextureSize;if(g&&g.breakAxis!==void 0){const nt=g.breakAxis>=_e.length?1:_e.slice(g.breakAxis).reduce((ot,st)=>ot*st),rt=g.breakAxis<=0?1:_e.slice(0,g.breakAxis).reduce((ot,st)=>ot*st);if(!(nt>$||rt>$))return[nt,rt];i.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${_e}, breakAxis:${g.breakAxis}`)}let et=_e.slice(0);c&&($*=2,et=et.map((nt,rt)=>rt>=et.length-2?et[rt]%2==0?et[rt]:et[rt]+1:et[rt]),et.length===1&&(et=[2,et[0]])),et.length!==2&&(et=d(et).newShape);const tt=_(et);return et.length<=1&&tt<=$?[1,tt]:et.length===2&&et[0]<=$&&et[1]<=$?et:et.length===3&&et[0]*et[1]<=$&&et[2]<=$?[et[0]*et[1],et[2]]:et.length===3&&et[0]<=$&&et[1]*et[2]<=$?[et[0],et[1]*et[2]]:et.length===4&&et[0]*et[1]*et[2]<=$&&et[3]<=$?[et[0]*et[1]*et[2],et[3]]:et.length===4&&et[0]<=$&&et[1]*et[2]*et[3]<=$?[et[0],et[1]*et[2]*et[3]]:c?j(tt/4).map(nt=>2*nt):j(tt)}},e.squeezeShape=d,e.parseAxisParam=h,e.isInt=b,e.sizeFromShape=_,e.getRowsCols=function(_e){if(_e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[_e.length>1?_e[_e.length-2]:1,_e[_e.length-1]]},e.sizeToSquarishShape=j,e.getBatchDim=function(_e,g=2){return _(_e.slice(0,_e.length-g))}},3314:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createTextureLayoutFromShape=e.calculateTextureWidthAndHeight=e.createTextureLayoutFromTextureType=void 0;const i=s(7273),a=s(5639);e.createTextureLayoutFromTextureType=(d,h,b)=>{const _=b===a.TextureType.unpacked||b===a.TextureType.unpackedReversed?1:4,j=b===a.TextureType.packed,_e=b===a.TextureType.unpackedReversed||b===a.TextureType.packed,g=b===a.TextureType.packedLastDimension?h.length-1:void 0,c=b===a.TextureType.packedLastDimension?h.map(($,et)=>et===h.length-1?4*$:$):void 0;return(0,e.createTextureLayoutFromShape)(d,h,_,c,{isPacked:j,reverseWH:_e,breakAxis:g})},e.calculateTextureWidthAndHeight=(d,h,b)=>{const _=(0,e.createTextureLayoutFromTextureType)(d,h,b);return[_.width,_.height]},e.createTextureLayoutFromShape=(d,h,b=1,_,j)=>{const _e=!(!j||!j.isPacked),[g,c]=d.computeTextureWH(_e&&_||h,j),$=h.length;let et=h.slice(0);if($===0&&(et=[1]),b===1)_=h;else if(_e){if(b!==4)throw new Error("a packed texture must be 4-channel");_=h,$>0&&(et[$-1]=Math.ceil(et[$-1]/2)),$>1&&(et[$-2]=Math.ceil(et[$-2]/2))}else if(!_)throw new Error("Unpacked shape is needed when using channels > 1");return{width:g,height:c,channels:b,isPacked:_e,shape:et,strides:i.ShapeUtil.computeStrides(et),unpackedShape:_,reversedWH:j&&j.reverseWH}}},5243:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TextureManager=void 0;const i=s(1315);e.TextureManager=class{constructor(a,d,h,b){this.glContext=a,this.layoutStrategy=d,this.profiler=h,this.config=b,this.pendingRead=new Map,b.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(a,d,h,b){const _=this.toEncoderType(a),j=this.glContext.getEncoder(_,d.channels||1,b);if(d.isPacked&&b===1)throw new Error("not implemented");const _e=d.width,g=d.height;let c,$;if(this.config.reuseTextures){c=`${_e}x${g}_${j.format}_${j.internalFormat}_${j.textureType}`,$=this.inUseTextures.get(c),$||($=[],this.inUseTextures.set(c,$));const tt=this.idleTextures.get(c);if(tt&&tt.length>0){const nt=tt.pop();return $.push(nt),b===1&&this.glContext.updateTexture(nt,_e,g,j,this.toTextureData(a,h)),nt}}i.Logger.verbose("TextureManager",`Creating new texture of size ${d.width}x${d.height}`);const et=this.glContext.allocateTexture(_e,g,j,this.toTextureData(a,h));return this.config.reuseTextures&&($.push(et),this.textureLookup.set(et,c)),et}readTexture(a,d,h){return h||(h=1),this.profiler.event("backend","TextureManager.readTexture",()=>{const b=a.shape.reduce((j,_e)=>j*_e)*h,_=this.glContext.readTexture(a.texture,a.width,a.height,b,this.toEncoderType(d),h);return this.toTensorData(d,_)})}async readTextureAsync(a,d,h){const b=a.tensor.dataId;if(h||(h=1),this.pendingRead.has(b)){const _=this.pendingRead.get(b);return new Promise(j=>_==null?void 0:_.push(j))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(b,[]);const _=a.shape.reduce((c,$)=>c*$)*h;await this.glContext.createAndWaitForFence();const j=this.glContext.readTexture(a.texture,a.width,a.height,_,this.toEncoderType(d),h),_e=this.toTensorData(d,j),g=this.pendingRead.get(b);return this.pendingRead.delete(b),g==null||g.forEach(c=>c(_e)),_e})}readUint8TextureAsFloat(a){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{const d=a.shape.reduce((b,_)=>b*_),h=this.glContext.readTexture(a.texture,a.width,a.height,4*d,"byte",4);return new Float32Array(h.buffer,h.byteOffset,d)})}releaseTexture(a,d){let h;if(this.config.reuseTextures&&(h=this.textureLookup.get(a.texture),h)){d&&this.textureLookup.delete(h);const b=this.inUseTextures.get(h);if(b){const _=b.indexOf(a.texture);if(_!==-1){b.splice(_,1);let j=this.idleTextures.get(h);j||(j=[],this.idleTextures.set(h,j)),j.push(a.texture)}}}h&&!d||(i.Logger.verbose("TextureManager",`Deleting texture of size ${a.width}x${a.height}`),this.glContext.deleteTexture(a.texture))}toTensorData(a,d){switch(a){case"int16":return d instanceof Int16Array?d:Int16Array.from(d);case"int32":return d instanceof Int32Array?d:Int32Array.from(d);case"int8":return d instanceof Int8Array?d:Int8Array.from(d);case"uint16":return d instanceof Uint16Array?d:Uint16Array.from(d);case"uint32":return d instanceof Uint32Array?d:Uint32Array.from(d);case"uint8":case"bool":return d instanceof Uint8Array?d:Uint8Array.from(d);case"float32":return d instanceof Float32Array?d:Float32Array.from(d);case"float64":return d instanceof Float64Array?d:Float64Array.from(d);default:throw new Error(`TensorData type ${a} is not supported`)}}toTextureData(a,d){if(d)return d instanceof Float32Array?d:new Float32Array(d)}toEncoderType(a){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}},5639:(o,e)=>{var s;Object.defineProperty(e,"__esModule",{value:!0}),e.TextureType=void 0,(s=e.TextureType||(e.TextureType={}))[s.unpacked=0]="unpacked",s[s.unpackedReversed=1]="unpackedReversed",s[s.packed=2]="packed",s[s.downloadUint8AsFloat=3]="downloadUint8AsFloat",s[s.packedLastDimension=4]="packedLastDimension"},432:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getGlChannels=e.getCoordsDataType=e.getSqueezedParams=e.squeezeInputShape=e.generateShaderFuncNameFromInputSamplerNameAtOutCoords=e.generateShaderFuncNameFromInputSamplerName=e.repeatedTry=e.getPackedShape=void 0;const i=s(7273);e.getPackedShape=function(a){const d=a.length;return a.slice(0,d-1).concat(a[d-1]/4)},e.repeatedTry=async function(a,d=b=>0,h){return new Promise((b,_)=>{let j=0;const _e=()=>{if(a())return void b();j++;const g=d(j);h!=null&&j>=h?_():setTimeout(_e,g)};_e()})},e.generateShaderFuncNameFromInputSamplerName=function(a){return(0,i.assert)(a!==void 0&&a.length!==0,()=>"empty string found for sampler name"),"get"+a.charAt(0).toUpperCase()+a.slice(1)},e.generateShaderFuncNameFromInputSamplerNameAtOutCoords=function(a){return(0,i.assert)(a!==void 0&&a.length!==0,()=>"empty string found for sampler name"),"get"+a.charAt(0).toUpperCase()+a.slice(1)+"AtOutCoords"},e.squeezeInputShape=function(a,d){let h=JSON.parse(JSON.stringify(a));return h=d,h},e.getSqueezedParams=function(a,d){return d.map(h=>a[h]).join(", ")},e.getCoordsDataType=function(a){if(a<=1)return"int";if(a===2)return"ivec2";if(a===3)return"ivec3";if(a===4)return"ivec4";if(a===5)return"ivec5";if(a===6)return"ivec6";throw Error(`GPU for rank ${a} is not yet supported`)},e.getGlChannels=function(a=6){return["x","y","z","w","u","v"].slice(0,a)}},3389:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createNewWebGLContext=e.createWebGLContext=void 0;const i=s(1315),a=s(3524),d={};function h(b,_){let j;const _e={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!_||_==="webgl2")&&(j=b.getContext("webgl2",_e),j))try{return new a.WebGLContext(j,2)}catch(g){i.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${g}`)}if((!_||_==="webgl")&&(j=b.getContext("webgl",_e)||b.getContext("experimental-webgl",_e),j))try{return new a.WebGLContext(j,1)}catch(g){i.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${g}`)}throw new Error("WebGL is not supported")}e.createWebGLContext=function b(_){let j;if(_&&_!=="webgl2"||!("webgl2"in d)?_&&_!=="webgl"||!("webgl"in d)||(j=d.webgl):j=d.webgl2,!j)try{j=h(function(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}(),_)}catch{j=h(function(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");const c=document.createElement("canvas");return c.width=1,c.height=1,c}(),_)}_=_||j.version===1?"webgl":"webgl2";const _e=j.gl;return d[_]=j,_e.isContextLost()?(delete d[_],b(_)):(_e.disable(_e.DEPTH_TEST),_e.disable(_e.STENCIL_TEST),_e.disable(_e.BLEND),_e.disable(_e.DITHER),_e.disable(_e.POLYGON_OFFSET_FILL),_e.disable(_e.SAMPLE_COVERAGE),_e.enable(_e.SCISSOR_TEST),_e.enable(_e.CULL_FACE),_e.cullFace(_e.BACK),j)},e.createNewWebGLContext=h},3524:function(o,e,s){var i=this&&this.__createBinding||(Object.create?function(_e,g,c,$){$===void 0&&($=c);var et=Object.getOwnPropertyDescriptor(g,c);et&&!("get"in et?!g.__esModule:et.writable||et.configurable)||(et={enumerable:!0,get:function(){return g[c]}}),Object.defineProperty(_e,$,et)}:function(_e,g,c,$){$===void 0&&($=c),_e[$]=g[c]}),a=this&&this.__setModuleDefault||(Object.create?function(_e,g){Object.defineProperty(_e,"default",{enumerable:!0,value:g})}:function(_e,g){_e.default=g}),d=this&&this.__importStar||function(_e){if(_e&&_e.__esModule)return _e;var g={};if(_e!=null)for(var c in _e)c!=="default"&&Object.prototype.hasOwnProperty.call(_e,c)&&i(g,_e,c);return a(g,_e),g};Object.defineProperty(e,"__esModule",{value:!0}),e.WebGLContext=e.linearSearchLastTrue=void 0;const h=s(2235),b=d(s(9622)),_=s(432);function j(_e){let g=0;for(;g<_e.length&&_e[g]();++g);return g-1}e.linearSearchLastTrue=j,e.WebGLContext=class{constructor(_e,g){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=_e,this.version=g,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(_e,g,c,$){const et=this.gl,tt=et.createTexture();et.bindTexture(et.TEXTURE_2D,tt),et.texParameteri(et.TEXTURE_2D,et.TEXTURE_MIN_FILTER,et.NEAREST),et.texParameteri(et.TEXTURE_2D,et.TEXTURE_MAG_FILTER,et.NEAREST),et.texParameteri(et.TEXTURE_2D,et.TEXTURE_WRAP_S,et.CLAMP_TO_EDGE),et.texParameteri(et.TEXTURE_2D,et.TEXTURE_WRAP_T,et.CLAMP_TO_EDGE);const nt=$?c.encode($,_e*g):null;return et.texImage2D(et.TEXTURE_2D,0,c.internalFormat,_e,g,0,c.format,c.textureType,nt),this.checkError(),tt}updateTexture(_e,g,c,$,et){const tt=this.gl;tt.bindTexture(tt.TEXTURE_2D,_e);const nt=$.encode(et,g*c);tt.texSubImage2D(tt.TEXTURE_2D,0,0,0,g,c,$.format,$.textureType,nt),this.checkError()}attachFramebuffer(_e,g,c){const $=this.gl;$.bindTexture($.TEXTURE_2D,_e),$.bindFramebuffer($.FRAMEBUFFER,this.framebuffer),$.framebufferTexture2D($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_2D,_e,0),this.checkError(),$.viewport(0,0,g,c),$.scissor(0,0,g,c)}readTexture(_e,g,c,$,et,tt){const nt=this.gl;tt||(tt=1),this.frameBufferBound||this.attachFramebuffer(_e,g,c);const rt=this.getEncoder(et,tt),ot=rt.allocate(g*c);return nt.bindTexture(nt.TEXTURE_2D,_e),nt.framebufferTexture2D(nt.FRAMEBUFFER,nt.COLOR_ATTACHMENT0,nt.TEXTURE_2D,_e,0),nt.readPixels(0,0,g,c,nt.RGBA,rt.textureType,ot),this.checkError(),rt.decode(ot,$)}isFramebufferReady(){return!0}getActiveTexture(){const _e=this.gl;return"TEXTURE"+(_e.getParameter(this.gl.ACTIVE_TEXTURE)-_e.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(_e,g){const c=this.gl;c.vertexAttribPointer(_e,3,c.FLOAT,!1,20,0),c.enableVertexAttribArray(_e),g!==-1&&(c.vertexAttribPointer(g,2,c.FLOAT,!1,20,12),c.enableVertexAttribArray(g)),this.checkError()}createProgram(_e,g){const c=this.gl,$=c.createProgram();return c.attachShader($,_e),c.attachShader($,g),c.linkProgram($),$}compileShader(_e,g){const c=this.gl,$=c.createShader(g);if(!$)throw new Error(`createShader() returned null with type ${g}`);if(c.shaderSource($,_e),c.compileShader($),c.getShaderParameter($,c.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${c.getShaderInfoLog($)}
Shader source:
${_e}`);return $}deleteShader(_e){this.gl.deleteShader(_e)}bindTextureToUniform(_e,g,c){const $=this.gl;$.activeTexture($.TEXTURE0+g),this.checkError(),$.bindTexture($.TEXTURE_2D,_e),this.checkError(),$.uniform1i(c,g),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(h.env.debug){const _e=this.gl,g=_e.getError();let c="";switch(g){case _e.NO_ERROR:return;case _e.INVALID_ENUM:c="INVALID_ENUM";break;case _e.INVALID_VALUE:c="INVALID_VALUE";break;case _e.INVALID_OPERATION:c="INVALID_OPERATION";break;case _e.INVALID_FRAMEBUFFER_OPERATION:c="INVALID_FRAMEBUFFER_OPERATION";break;case _e.OUT_OF_MEMORY:c="OUT_OF_MEMORY";break;case _e.CONTEXT_LOST_WEBGL:c="CONTEXT_LOST_WEBGL";break;default:c=`Unknown WebGL Error: ${g.toString(16)}`}throw new Error(c)}}deleteTexture(_e){this.gl.deleteTexture(_e)}deleteProgram(_e){this.gl.deleteProgram(_e)}getEncoder(_e,g,c=0){if(this.version===2)return new b.RedFloat32DataEncoder(this.gl,g);switch(_e){case"float":return c===1||this.isRenderFloat32Supported?new b.RGBAFloatDataEncoder(this.gl,g):new b.RGBAFloatDataEncoder(this.gl,g,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new b.Uint8DataEncoder(this.gl,g);default:throw new Error(`Invalid dataType: ${_e}`)}}clearActiveTextures(){const _e=this.gl;for(let g=0;g<this.maxTextureImageUnits;++g)_e.activeTexture(_e.TEXTURE0+g),_e.bindTexture(_e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;const _e=this.gl;_e.bindFramebuffer(_e.FRAMEBUFFER,null),_e.deleteFramebuffer(this.framebuffer),_e.bindBuffer(_e.ARRAY_BUFFER,null),_e.deleteBuffer(this.vertexbuffer),_e.bindBuffer(_e.ELEMENT_ARRAY_BUFFER,null),_e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){const _e=this.gl,g=_e.createBuffer();if(!g)throw new Error("createBuffer() returned null");const c=this.createDefaultGeometry();return _e.bindBuffer(_e.ARRAY_BUFFER,g),_e.bufferData(_e.ARRAY_BUFFER,c,_e.STATIC_DRAW),this.checkError(),g}createFramebuffer(){const _e=this.gl.createFramebuffer();if(!_e)throw new Error("createFramebuffer returned null");return _e}queryVitalParameters(){const _e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=_e.getParameter(_e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=_e.getParameter(_e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){const _e=this.gl,g=_e.createTexture();_e.bindTexture(_e.TEXTURE_2D,g);const c=this.version===2?_e.RGBA32F:_e.RGBA;_e.texImage2D(_e.TEXTURE_2D,0,c,1,1,0,_e.RGBA,_e.FLOAT,null);const $=_e.createFramebuffer();_e.bindFramebuffer(_e.FRAMEBUFFER,$),_e.framebufferTexture2D(_e.FRAMEBUFFER,_e.COLOR_ATTACHMENT0,_e.TEXTURE_2D,g,0);const et=_e.checkFramebufferStatus(_e.FRAMEBUFFER)===_e.FRAMEBUFFER_COMPLETE;return _e.bindTexture(_e.TEXTURE_2D,null),_e.bindFramebuffer(_e.FRAMEBUFFER,null),_e.deleteTexture(g),_e.deleteFramebuffer($),et}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){const _e=this.gl;let g,c,$,et,tt;try{g=_e.createTexture(),c=_e.createFramebuffer(),_e.bindTexture(_e.TEXTURE_2D,g);const nt=this.version===2?_e.RGBA32F:_e.RGBA;return _e.texImage2D(_e.TEXTURE_2D,0,nt,1,1,0,_e.RGBA,_e.FLOAT,null),_e.bindFramebuffer(_e.FRAMEBUFFER,c),_e.framebufferTexture2D(_e.FRAMEBUFFER,_e.COLOR_ATTACHMENT0,_e.TEXTURE_2D,g,0),_e.enable(_e.BLEND),$=_e.createShader(_e.VERTEX_SHADER),!!$&&(_e.shaderSource($,"void main(){}"),_e.compileShader($),et=_e.createShader(_e.FRAGMENT_SHADER),!!et&&(_e.shaderSource(et,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),_e.compileShader(et),tt=_e.createProgram(),!!tt&&(_e.attachShader(tt,$),_e.attachShader(tt,et),_e.linkProgram(tt),_e.useProgram(tt),_e.drawArrays(_e.POINTS,0,1),_e.getError()===_e.NO_ERROR)))}finally{_e.disable(_e.BLEND),tt&&_e.deleteProgram(tt),$&&_e.deleteShader($),et&&_e.deleteShader(et),c&&(_e.bindFramebuffer(_e.FRAMEBUFFER,null),_e.deleteFramebuffer(c)),g&&(_e.bindTexture(_e.TEXTURE_2D,null),_e.deleteTexture(g))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){const _e=this.gl,g=this.disjointTimerQueryWebgl2Extension,c=_e.createQuery();return _e.beginQuery(g.TIME_ELAPSED_EXT,c),c}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const _e=this.gl,g=this.disjointTimerQueryWebgl2Extension;_e.endQuery(g.TIME_ELAPSED_EXT)}}isTimerResultAvailable(_e){let g=!1,c=!1;if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const $=this.gl,et=this.disjointTimerQueryWebgl2Extension;g=$.getQueryParameter(_e,$.QUERY_RESULT_AVAILABLE),c=$.getParameter(et.GPU_DISJOINT_EXT)}return g&&!c}getTimerResult(_e){let g=0;if(this.version!==2)throw new Error("WebGL1 profiling currently not supported");{const c=this.gl;g=c.getQueryParameter(_e,c.QUERY_RESULT),c.deleteQuery(_e)}return g/1e6}async waitForQueryAndGetTime(_e){return await(0,_.repeatedTry)(()=>this.isTimerResultAvailable(_e)),this.getTimerResult(_e)}async createAndWaitForFence(){const _e=this.createFence(this.gl);return this.pollFence(_e)}createFence(_e){let g;const c=_e,$=c.fenceSync(c.SYNC_GPU_COMMANDS_COMPLETE,0);return _e.flush(),g=$===null?()=>!0:()=>{const et=c.clientWaitSync($,0,0);return et===c.ALREADY_SIGNALED||et===c.CONDITION_SATISFIED},{query:$,isFencePassed:g}}async pollFence(_e){return new Promise(g=>{this.addItemToPoll(()=>_e.isFencePassed(),()=>g())})}pollItems(){const _e=j(this.itemsToPoll.map(g=>g.isDoneFn));for(let g=0;g<=_e;++g){const{resolveFn:c}=this.itemsToPoll[g];c()}this.itemsToPoll=this.itemsToPoll.slice(_e+1)}async addItemToPoll(_e,g){this.itemsToPoll.push({isDoneFn:_e,resolveFn:g}),this.itemsToPoll.length>1||await(0,_.repeatedTry)(()=>(this.pollItems(),this.itemsToPoll.length===0))}}},6496:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ExecutionPlan=void 0;const i=s(1315);class a{constructor(h,b){this.op=h,this.node=b}}e.ExecutionPlan=class{constructor(d,h,b){this.graph=d,this.profiler=b,this.initialize(h)}initialize(d){this.profiler.event("session","ExecutionPlan.initialize",()=>{const h=this.graph.getNodes();if(h.length!==d.length)throw new Error("The size of nodes and OPs do not match.");this._ops=d.map((b,_)=>new a(b,h[_])),this.reset(),this._starter=[],this._ops.forEach((b,_)=>{let j=!0;for(const _e of b.node.inputs)if(!this._values[_e]&&this.graph.getInputIndices().indexOf(_e)===-1){j=!1;break}j&&this._starter.push(_)})})}reset(){this._values=this.graph.getValues().map(d=>d.tensor)}async execute(d,h){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();const b=d.createInferenceHandler(),_=this.graph.getInputIndices();if(h.length!==_.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${h.length} expected: ${_.length}`);h.forEach((et,tt)=>{const nt=_[tt];this._values[nt]=et});const j=this._starter.slice(0),_e=this.graph.getValues(),g=this.graph.getNodes();let c=0;for(;c<j.length;){const et=j[c++],tt=this._ops[et],nt=tt.node.inputs.map(it=>this._values[it]);if(nt.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${tt.node}`);const rt=nt;i.Logger.verbose("ExecPlan",`Runing op:${tt.node.name} (${rt.map((it,at)=>`'${tt.node.inputs[at]}': ${it.type}[${it.dims.join(",")}]`).join(", ")})`);const ot=await this.profiler.event("node",tt.node.name,async()=>tt.op.impl(b,rt,tt.op.context));if(ot.length!==tt.node.outputs.length)throw new Error("the size of output does not match model definition.");ot.forEach((it,at)=>{const lt=tt.node.outputs[at];if(this._values[lt])throw new Error(`output [${lt}] already has value: op:${tt.node.name}`);this._values[lt]=it});const st=new Set;ot.forEach((it,at)=>{const lt=tt.node.outputs[at];for(const ut of _e[lt].to){const ct=g[ut];let pt=!0;for(const ht of ct.inputs)if(!this._values[ht]){pt=!1;break}pt&&st.add(ut)}}),j.push(...st)}const $=[];for(let et=0;et<this.graph.getOutputIndices().length;et++){const tt=this.graph.getOutputIndices()[et],nt=this._values[tt];if(nt===void 0)throw new Error(`required output [${tt}] does not have value`);tt===0?await nt.getData():nt.data,$.push(nt)}return i.Logger.verbose("ExecPlan","disposing of inferenceHandler"),b.dispose(),$})}}},4662:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Graph=void 0;const i=s(6874),a=s(5127),d=s(2446),h=s(9240),b=s(7273);var _=a.onnxruntime.experimental.fbs;e.Graph={from:(c,$)=>new g(c,$)};class j{constructor($){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,$&&(this.type=b.ProtoUtil.tensorValueTypeFromProto($.type.tensorType))}get from(){return this._from}get to(){return this._to}}class _e{constructor($,et){$ instanceof d.onnx.NodeProto?(this.name=$.name,this.opType=$.opType,this.attributes=new i.Attribute($.attribute)):$ instanceof _.Node&&(this.name=et??$.name(),this.opType=$.opType(),this.attributes=new i.Attribute(b.ProtoUtil.tensorAttributesFromORTFormat($))),this.inputs=[],this.outputs=[],this.executeNode=!0}}class g{constructor($,et){if(!$)throw new TypeError("graph is empty");this.buildGraph($),this.transformGraph(et),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph($){if($ instanceof d.onnx.GraphProto)this.buildGraphFromOnnxFormat($);else{if(!($ instanceof _.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat($)}}buildGraphFromOnnxFormat($){const et=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const tt=new Map;if(!$.input)throw new Error("missing information in graph: input");const nt=[];for(const rt of $.input){if(et.has(rt.name))throw new Error(`duplicated input name: ${rt.name}`);const ot=this._allData.push(new j(rt))-1;et.set(rt.name,ot),nt.push(rt.name)}if(!$.initializer)throw new Error("missing information in graph: initializer");for(const rt of $.initializer){let ot=et.get(rt.name);if(ot===void 0){const st=new j;st.type={shape:{dims:b.ProtoUtil.tensorDimsFromProto(rt.dims)},tensorType:b.ProtoUtil.tensorDataTypeFromProto(rt.dataType)},ot=this._allData.push(st)-1,et.set(rt.name,ot)}this._allData[ot]._from=-1,this._allData[ot].tensor=h.Tensor.fromProto(rt)}for(let rt=0;rt<this._allData.length;rt++)this._allData[rt].tensor||(this._allInputIndices.push(rt),this._allInputNames.push(nt[rt]));if(!$.output)throw new Error("missing information in graph: output");for(const rt of $.output){if(et.has(rt.name))throw new Error(`duplicated output name: ${rt.name}`);const ot=this._allData.push(new j(rt))-1;et.set(rt.name,ot),this._allOutputIndices.push(ot),this._allOutputNames.push(rt.name)}if(!$.node)throw new Error("missing information in graph: node");for(const rt of $.node){if(!rt.name)for(let st=0;;st++){const it=`unnamed_${rt.opType}_${st}`;if(!tt.has(it)){rt.name=it;break}}if(tt.has(rt.name))throw new Error(`duplicated node name: ${rt.name}`);const ot=this._nodes.push(new _e(rt))-1;tt.set(rt.name,ot)}for(let rt=0;rt<this._nodes.length;rt++){const ot=this._nodes[rt],st=$.node[rt];if(!st.output)throw new Error(`missing output for node: ${st.name}`);for(const it of st.output){let at=et.get(it);if(at===void 0&&(at=this._allData.push(new j)-1,et.set(it,at)),ot.outputs.push(at),this._allData[at]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${at}`);if(this._allData[at]._from=rt,st.opType==="Constant"){if(!st.attribute||st.attribute.length!==1||!st.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!st.output||st.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");ot.outputs.pop(),ot.executeNode=!1,this._allData[at]._from=-1,this._allData[at].tensor=h.Tensor.fromProto(st.attribute[0].t)}}}for(let rt=0;rt<this._nodes.length;rt++){const ot=this._nodes[rt],st=$.node[rt];if(!st.input)throw new Error(`missing input for node: ${st.name}`);for(const it of st.input){const at=et.get(it);if(at===void 0){if(it===""&&(st.input.length===3||st.input.length===4)&&st.opType==="Resize")continue;throw new Error(`unrecognized input '${it}' for node: ${st.name}`)}ot.inputs.push(at),this._allData[at]._to.push(rt)}}return!0}buildGraphFromOrtFormat($){var et,tt,nt;const rt=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const ot=new Map,st=[];for(let it=0;it<$.inputsLength();it++){const at=$.inputs(it);if(rt.has(at))throw new Error(`duplicated input name: ${at}`);for(let lt=0;lt<$.nodeArgsLength();lt++)if(((et=$.nodeArgs(lt))===null||et===void 0?void 0:et.name())===at){const ut=new j;if(((nt=(tt=$.nodeArgs(lt))===null||tt===void 0?void 0:tt.type())===null||nt===void 0?void 0:nt.valueType())!==_.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");const ct=$.nodeArgs(lt).type().value(new _.TensorTypeAndShape),pt=b.ProtoUtil.tensorDataTypeFromProto(ct.elemType()),ht=ct.shape(),yt=[];for(let ft=0;ft<ht.dimLength();ft++)yt.push(b.LongUtil.longToNumber(ht.dim(ft).value().dimValue()));ut.type={shape:{dims:yt},tensorType:pt};const xt=this._allData.push(ut)-1;rt.set(at,xt),st.push(at)}}for(let it=0;it<$.initializersLength();it++){const at=$.initializers(it);let lt=rt.get(at.name());if(lt===void 0){const ut=new j,ct=b.ProtoUtil.tensorDimsFromORTFormat(at),pt=b.ProtoUtil.tensorDataTypeFromProto(at.dataType());ut.type={shape:{dims:ct},tensorType:pt},lt=this._allData.push(ut)-1,rt.set(at.name(),lt)}this._allData[lt]._from=-1,this._allData[lt].tensor=h.Tensor.fromOrtTensor(at)}for(let it=0;it<this._allData.length;it++)this._allData[it].tensor||(this._allInputIndices.push(it),this._allInputNames.push(st[it]));for(let it=0;it<$.outputsLength();it++){const at=$.outputs(it);if(rt.has(at))throw new Error(`duplicated output name: ${at}`);const lt=this._allData.push(new j)-1;rt.set(at,lt),this._allOutputIndices.push(lt),this._allOutputNames.push(at)}if(!$.nodes)throw new Error("missing information in graph: node");for(let it=0;it<$.nodesLength();it++){const at=$.nodes(it);let lt=at.name();if(!lt)for(let ct=0;lt=`unnamed_${at.opType()}_${ct}`,ot.has(lt);ct++);if(ot.has(lt))throw new Error(`duplicated node name: ${lt}`);const ut=this._nodes.push(new _e(at,lt))-1;ot.set(lt,ut)}for(let it=0;it<this._nodes.length;it++){const at=this._nodes[it],lt=$.nodes(it);if(lt==null)throw new Error(`No node exists at index ${it}`);if((lt==null?void 0:lt.outputsLength())===0)throw new Error(`missing output for node: ${lt.name}`);for(let ut=0;ut<(lt==null?void 0:lt.outputsLength());ut++){const ct=lt==null?void 0:lt.outputs(ut);let pt=rt.get(ct);if(pt===void 0&&(pt=this._allData.push(new j)-1,rt.set(ct,pt)),at.outputs.push(pt),this._allData[pt]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${pt}`);if(this._allData[pt]._from=it,lt.opType()==="Constant"){if(lt.attributesLength()!==1||!lt.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(lt.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");at.outputs.pop(),at.executeNode=!1,this._allData[pt]._from=-1,this._allData[pt].tensor=h.Tensor.fromOrtTensor(lt.attributes(0).t())}}}for(let it=0;it<this._nodes.length;it++){const at=this._nodes[it],lt=$.nodes(it);if(lt.inputsLength()===0)throw new Error(`missing input for node: ${lt.name}`);for(let ut=0;ut<lt.inputsLength();ut++){const ct=lt.inputs(ut),pt=rt.get(ct);if(pt===void 0)throw new Error(`unrecognized input '${ct}' for node: ${lt.name()}`);at.inputs.push(pt),this._allData[pt]._to.push(it)}}}checkIsAcyclic(){const $=new Set;this._allInputIndices.forEach(nt=>{this._allData[nt]._to.forEach(rt=>{$.add(rt)})});const et=Array.from($),tt=new Array(this._nodes.length).fill("white");for(;et.length>0;){const nt=et.pop();tt[nt]==="gray"?tt[nt]="black":(et.push(nt),tt[nt]="gray",this._nodes[nt].outputs.forEach(rt=>{const ot=this._allData[rt];if(ot.tensor!==void 0)throw new Error("node outputs should not be initialized");if(ot._from!==nt)throw new Error("from property of the Value object doesn't match index of Node being processed");ot._to.forEach(st=>{if(tt[st]==="gray")throw new Error("model graph is cyclic");tt[st]==="white"&&et.push(st)})}))}}transformGraph($){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),$&&$.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let $=0;const et=new Array(this._nodes.length,0);let tt=0;for(let nt=0;nt<this._nodes.length;nt++)et[nt]=tt,this._nodes[nt].executeNode?(tt!==nt&&(this._nodes[tt]=this._nodes[nt]),tt++):this._nodes[nt].outputs.forEach(rt=>{this._allData[rt]._from=-2});this._nodes.splice(tt,this._nodes.length-tt);for(let nt=0;nt<this._allData.length;nt++){const rt=this._allData[nt];rt._from!==void 0&&rt._from!==-1&&rt._from!==-2&&(rt._from=et[rt._from]);for(let ot=0;ot<rt._to.length;ot++){if(!(rt._to[ot]>=0))throw new Error("Trying to update a removed node");rt._to[ot]=et[rt._to[ot]]}}$=0;for(let nt=0;nt<this._allData.length;nt++)if(this._allData[nt].from!==-2||this._allOutputIndices.indexOf(nt+$)!==-1){if($>0){let rt=-1;this._allData[nt].from!==void 0&&this._allData[nt].from!==-1?(rt=this._nodes[this._allData[nt].from].outputs.indexOf(nt+$),rt!==-1&&(this._nodes[this._allData[nt].from].outputs[rt]=nt)):(rt=this._allInputIndices.indexOf(nt+$),rt!==-1&&(this._allInputIndices[rt]=nt)),this._allData[nt].to.forEach(ot=>{rt=this._nodes[ot].inputs.indexOf(nt+$),rt!==-1&&(this._nodes[ot].inputs[rt]=nt)}),this._allData[nt].to.length===0&&(rt=this._allOutputIndices.indexOf(nt+$),rt!==-1&&(this._allOutputIndices[rt]=nt))}}else $++,this._allData.splice(nt,1),nt--}deleteNode($){const et=this._nodes[$];if(et.outputs.length>1){for(let st=1;st<et.outputs.length;st++)if(this._allData[et.outputs[st]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}et.executeNode=!1;const tt=et.inputs[0],nt=et.outputs[0],rt=this._allData[nt].to;for(let st=0;st<et.inputs.length;st++){const it=this._allData[et.inputs[st]].to.indexOf($);if(it===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[et.inputs[st]].to.splice(it,1)}this._allData[nt]._to=[];const ot=this._allOutputIndices.indexOf(nt);if(ot!==-1&&(this._allOutputIndices[ot]=tt),rt&&rt.length>0)for(const st of rt){const it=this._nodes[st].inputs.indexOf(nt);if(it===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[st].inputs[it]=tt,this._allData[tt].to.push(st)}}removeAllDropoutNodes(){let $=0;for(const et of this._nodes){if(et.opType==="Dropout"){if(et.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(et.outputs.length!==1&&et.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(et.outputs.length===2&&this._allData[et.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode($)}$++}}removeAllIdentityNodes(){let $=0;for(const et of this._nodes)et.opType==="Identity"&&this.deleteNode($),$++}isActivation($){switch($.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(const $ of this._nodes)if($.opType==="Conv"){const et=this._allData[$.outputs[0]]._to;if(et.length===1&&this.isActivation(this._nodes[et[0]])){const tt=this._nodes[et[0]];if(tt.opType==="Clip")if(tt.inputs.length===1)try{$.attributes.set("activation_params","floats",[tt.attributes.getFloat("min"),tt.attributes.getFloat("max")])}catch{$.attributes.set("activation_params","floats",[b.MIN_CLIP,b.MAX_CLIP])}else{if(!(tt.inputs.length>=3&&this._allData[tt.inputs[1]].tensor!==void 0&&this._allData[tt.inputs[2]].tensor!==void 0))continue;$.attributes.set("activation_params","floats",[this._allData[tt.inputs[1]].tensor.floatData[0],this._allData[tt.inputs[2]].tensor.floatData[0]])}$.attributes.set("activation","string",tt.opType),this.deleteNode(et[0])}}}}},1315:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.now=e.Profiler=e.Logger=void 0;const s={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},i={none:new class{log(_e,g,c){}},console:new class{log(_e,g,c){console.log(`${this.color(_e)} ${c?"\x1B[35m"+c+"\x1B[0m ":""}${g}`)}color(_e){switch(_e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${_e}`)}}}},a={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1};let d={"":a};function h(_e,g,c,$){if(g===void 0)return et=_e,{verbose:h.verbose.bind(null,et),info:h.info.bind(null,et),warning:h.warning.bind(null,et),error:h.error.bind(null,et),fatal:h.fatal.bind(null,et)};if(c===void 0)b(_e,g);else if(typeof c=="number"&&$===void 0)b(_e,g);else if(typeof c=="string"&&$===void 0)b(_e,c,0,g);else{if(typeof c!="string"||typeof $!="number")throw new TypeError("input is valid");b(_e,c,0,g)}var et}function b(_e,g,c,$){const et=d[$||""]||d[""];s[_e]<s[et.minimalSeverity]||(et.logDateTime&&(g=`${new Date().toISOString()}|${g}`),et.logSourceLocation,i[et.provider].log(_e,g,$))}(function(_e){function g($){d={},c("",$||{})}function c($,et){if($==="*")g(et);else{const tt=d[$]||a;d[$]={provider:et.provider||tt.provider,minimalSeverity:et.minimalSeverity||tt.minimalSeverity,logDateTime:et.logDateTime===void 0?tt.logDateTime:et.logDateTime,logSourceLocation:et.logSourceLocation===void 0?tt.logSourceLocation:et.logSourceLocation}}}_e.verbose=function($,et){_e("verbose",$,et)},_e.info=function($,et){_e("info",$,et)},_e.warning=function($,et){_e("warning",$,et)},_e.error=function($,et){_e("error",$,et)},_e.fatal=function($,et){_e("fatal",$,et)},_e.reset=g,_e.set=c,_e.setWithEnv=function($){const et={};$.logLevel&&(et.minimalSeverity=$.logLevel),c("",et)}})(h||(h={})),e.Logger=h;class _{constructor(g,c,$,et,tt,nt){this.category=g,this.name=c,this.startTime=$,this.endCallback=et,this.timer=tt,this.ctx=nt}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}}class j{constructor(g,c,$,et){this.category=g,this.name=c,this.startTime=$,this.endTime=et}}e.Profiler=class{static create(_e){return _e===void 0?new this:new this(_e.maxNumberEvents,_e.flushBatchSize,_e.flushIntervalInMilliseconds)}constructor(_e,g,c){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=_e===void 0?1e4:_e,this._flushBatchSize=g===void 0?10:g,this._flushIntervalInMilliseconds=c===void 0?5e3:c}start(){this._started=!0,this._timingEvents=[],this._flushTime=(0,e.now)(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(_e,g,c,$){const et=this._started?this.begin(_e,g,$):void 0;let tt=!1;const nt=c();if(nt&&typeof nt.then=="function")return tt=!0,new Promise((rt,ot)=>{nt.then(async st=>{et&&await et.end(),rt(st)},async st=>{et&&await et.end(),ot(st)})});if(!tt&&et){const rt=et.end();if(rt&&typeof rt.then=="function")return new Promise((ot,st)=>{rt.then(()=>{ot(nt)},it=>{st(it)})})}return nt}begin(_e,g,c){if(!this._started)throw new Error("profiler is not started yet");if(c===void 0){const $=(0,e.now)();return this.flush($),new _(_e,g,$,et=>this.endSync(et))}{const $=c.beginTimer();return new _(_e,g,0,async et=>this.end(et),$,c)}}async end(_e){const g=await _e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new j(_e.category,_e.name,_e.startTime,g)),this.flush(g))}endSync(_e){const g=(0,e.now)();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new j(_e.category,_e.name,_e.startTime,g)),this.flush(g))}logOneEvent(_e){e.Logger.verbose(`Profiler.${_e.category}`,`${(_e.endTime-_e.startTime).toFixed(2)}ms on event '${_e.name}' at ${_e.endTime.toFixed(2)}`)}flush(_e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||_e-this._flushTime>=this._flushIntervalInMilliseconds){for(const g=this._flushPointer;this._flushPointer<g+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=(0,e.now)()}}get started(){return this._started}},e.now=typeof performance<"u"&&performance.now?()=>performance.now():Date.now},1745:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Model=void 0;const i=s(5686),a=s(4662),d=s(5127),h=s(2446),b=s(7273);var _=d.onnxruntime.experimental.fbs;e.Model=class{constructor(){}load(j,_e,g){if(!g)try{return void this.loadFromOnnxFormat(j,_e)}catch(c){if(g!==void 0)throw c}this.loadFromOrtFormat(j,_e)}loadFromOnnxFormat(j,_e){const g=h.onnx.ModelProto.decode(j);if(b.LongUtil.longToNumber(g.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=g.opsetImport.map(c=>({domain:c.domain,version:b.LongUtil.longToNumber(c.version)})),this._graph=a.Graph.from(g.graph,_e)}loadFromOrtFormat(j,_e){const g=new i.flatbuffers.ByteBuffer(j),c=_.InferenceSession.getRootAsInferenceSession(g).model();if(b.LongUtil.longToNumber(c.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let $=0;$<c.opsetImportLength();$++){const et=c.opsetImport($);this._opsets.push({domain:et==null?void 0:et.domain(),version:b.LongUtil.longToNumber(et.version())})}this._graph=a.Graph.from(c.graph(),_e)}get graph(){return this._graph}get opsets(){return this._opsets}}},6145:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FLOAT_TYPES=e.INT_TYPES=e.NUMBER_TYPES=void 0,e.NUMBER_TYPES=["float32","float64","int32","int16","int8","uint16","uint32","uint8"],e.INT_TYPES=["int32","int16","int8","uint16","uint32","uint8"],e.FLOAT_TYPES=["float32","float64"]},5881:(o,e)=>{function s(i,a){if(a.endsWith("+")){const d=Number.parseInt(a.substring(0,a.length-1),10);return!isNaN(d)&&d<=i}if(a.split("-").length===2){const d=a.split("-"),h=Number.parseInt(d[0],10),b=Number.parseInt(d[1],10);return!isNaN(h)&&!isNaN(b)&&h<=i&&i<=b}return Number.parseInt(a,10)===i}Object.defineProperty(e,"__esModule",{value:!0}),e.resolveOperator=void 0,e.resolveOperator=function(i,a,d){for(const h of d){const b=h[0],_=h[1],j=h[2],_e=h[3],g=h[4];if(i.opType===b){for(const c of a)if((c.domain===_||c.domain==="ai.onnx"&&_==="")&&s(c.version,j))return{opImpl:_e,opInit:g}}}throw new TypeError(`cannot resolve operator '${i.opType}' with opsets: ${a.map(h=>`${h.domain||"ai.onnx"} v${h.version}`).join(", ")}`)}},5127:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.onnxruntime=void 0;const i=s(5686);var a,d;a=e.onnxruntime||(e.onnxruntime={}),function(h){(function(b){b[b.UNDEFINED=0]="UNDEFINED",b[b.FLOAT=1]="FLOAT",b[b.INT=2]="INT",b[b.STRING=3]="STRING",b[b.TENSOR=4]="TENSOR",b[b.GRAPH=5]="GRAPH",b[b.FLOATS=6]="FLOATS",b[b.INTS=7]="INTS",b[b.STRINGS=8]="STRINGS",b[b.TENSORS=9]="TENSORS",b[b.GRAPHS=10]="GRAPHS",b[b.SPARSE_TENSOR=11]="SPARSE_TENSOR",b[b.SPARSE_TENSORS=12]="SPARSE_TENSORS"})(h.AttributeType||(h.AttributeType={}))}((d=a.experimental||(a.experimental={})).fbs||(d.fbs={})),function(h){(function(b){(function(_){(function(j){j[j.UNKNOWN=0]="UNKNOWN",j[j.VALUE=1]="VALUE",j[j.PARAM=2]="PARAM"})(_.DimensionValueType||(_.DimensionValueType={}))})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){(function(j){j[j.UNDEFINED=0]="UNDEFINED",j[j.FLOAT=1]="FLOAT",j[j.UINT8=2]="UINT8",j[j.INT8=3]="INT8",j[j.UINT16=4]="UINT16",j[j.INT16=5]="INT16",j[j.INT32=6]="INT32",j[j.INT64=7]="INT64",j[j.STRING=8]="STRING",j[j.BOOL=9]="BOOL",j[j.FLOAT16=10]="FLOAT16",j[j.DOUBLE=11]="DOUBLE",j[j.UINT32=12]="UINT32",j[j.UINT64=13]="UINT64",j[j.COMPLEX64=14]="COMPLEX64",j[j.COMPLEX128=15]="COMPLEX128",j[j.BFLOAT16=16]="BFLOAT16",j[j.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",j[j.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",j[j.FLOAT8E5M2=19]="FLOAT8E5M2",j[j.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"})(_.TensorDataType||(_.TensorDataType={}))})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){(function(j){j[j.Primitive=0]="Primitive",j[j.Fused=1]="Fused"})(_.NodeType||(_.NodeType={}))})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){(function(j){j[j.NONE=0]="NONE",j[j.tensor_type=1]="tensor_type",j[j.sequence_type=2]="sequence_type",j[j.map_type=3]="map_type"})(_.TypeInfoValue||(_.TypeInfoValue={}))})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsShape(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsShape(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}dim(g,c){let $=this.bb.__offset(this.bb_pos,4);return $?(c||new h.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}dimLength(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.__vector_len(this.bb_pos+g):0}static startShape(g){g.startObject(1)}static addDim(g,c){g.addFieldOffset(0,c,0)}static createDimVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startDimVector(g,c){g.startVector(4,c,4)}static endShape(g){return g.endObject()}static createShape(g,c){return j.startShape(g),j.addDim(g,c),j.endShape(g)}}_.Shape=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsDimension(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsDimension(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}value(g){let c=this.bb.__offset(this.bb_pos,4);return c?(g||new h.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}denotation(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.__string(this.bb_pos+c,g):null}static startDimension(g){g.startObject(2)}static addValue(g,c){g.addFieldOffset(0,c,0)}static addDenotation(g,c){g.addFieldOffset(1,c,0)}static endDimension(g){return g.endObject()}static createDimension(g,c,$){return j.startDimension(g),j.addValue(g,c),j.addDenotation(g,$),j.endDimension(g)}}_.Dimension=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsDimensionValue(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsDimensionValue(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}dimType(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.readInt8(this.bb_pos+g):h.experimental.fbs.DimensionValueType.UNKNOWN}dimValue(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.readInt64(this.bb_pos+g):this.bb.createLong(0,0)}dimParam(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.__string(this.bb_pos+c,g):null}static startDimensionValue(g){g.startObject(3)}static addDimType(g,c){g.addFieldInt8(0,c,h.experimental.fbs.DimensionValueType.UNKNOWN)}static addDimValue(g,c){g.addFieldInt64(1,c,g.createLong(0,0))}static addDimParam(g,c){g.addFieldOffset(2,c,0)}static endDimensionValue(g){return g.endObject()}static createDimensionValue(g,c,$,et){return j.startDimensionValue(g),j.addDimType(g,c),j.addDimValue(g,$),j.addDimParam(g,et),j.endDimensionValue(g)}}_.DimensionValue=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsTensorTypeAndShape(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsTensorTypeAndShape(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}elemType(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.readInt32(this.bb_pos+g):h.experimental.fbs.TensorDataType.UNDEFINED}shape(g){let c=this.bb.__offset(this.bb_pos,6);return c?(g||new h.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startTensorTypeAndShape(g){g.startObject(2)}static addElemType(g,c){g.addFieldInt32(0,c,h.experimental.fbs.TensorDataType.UNDEFINED)}static addShape(g,c){g.addFieldOffset(1,c,0)}static endTensorTypeAndShape(g){return g.endObject()}static createTensorTypeAndShape(g,c,$){return j.startTensorTypeAndShape(g),j.addElemType(g,c),j.addShape(g,$),j.endTensorTypeAndShape(g)}}_.TensorTypeAndShape=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsMapType(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsMapType(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}keyType(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.readInt32(this.bb_pos+g):h.experimental.fbs.TensorDataType.UNDEFINED}valueType(g){let c=this.bb.__offset(this.bb_pos,6);return c?(g||new h.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startMapType(g){g.startObject(2)}static addKeyType(g,c){g.addFieldInt32(0,c,h.experimental.fbs.TensorDataType.UNDEFINED)}static addValueType(g,c){g.addFieldOffset(1,c,0)}static endMapType(g){return g.endObject()}static createMapType(g,c,$){return j.startMapType(g),j.addKeyType(g,c),j.addValueType(g,$),j.endMapType(g)}}_.MapType=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsSequenceType(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsSequenceType(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}elemType(g){let c=this.bb.__offset(this.bb_pos,4);return c?(g||new h.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startSequenceType(g){g.startObject(1)}static addElemType(g,c){g.addFieldOffset(0,c,0)}static endSequenceType(g){return g.endObject()}static createSequenceType(g,c){return j.startSequenceType(g),j.addElemType(g,c),j.endSequenceType(g)}}_.SequenceType=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(b.fbs||(b.fbs={})).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(_,j){return this.bb_pos=_,this.bb=j,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(_,j,_e,g){return _.prep(4,12),_.writeInt32(g),_.writeInt32(_e),_.writeInt32(j),_.offset()}}})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsNodeEdge(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsNodeEdge(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}nodeIndex(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.readUint32(this.bb_pos+g):0}inputEdges(g,c){let $=this.bb.__offset(this.bb_pos,6);return $?(c||new h.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+$)+12*g,this.bb):null}inputEdgesLength(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.__vector_len(this.bb_pos+g):0}outputEdges(g,c){let $=this.bb.__offset(this.bb_pos,8);return $?(c||new h.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+$)+12*g,this.bb):null}outputEdgesLength(){let g=this.bb.__offset(this.bb_pos,8);return g?this.bb.__vector_len(this.bb_pos+g):0}static startNodeEdge(g){g.startObject(3)}static addNodeIndex(g,c){g.addFieldInt32(0,c,0)}static addInputEdges(g,c){g.addFieldOffset(1,c,0)}static startInputEdgesVector(g,c){g.startVector(12,c,4)}static addOutputEdges(g,c){g.addFieldOffset(2,c,0)}static startOutputEdgesVector(g,c){g.startVector(12,c,4)}static endNodeEdge(g){return g.endObject()}static createNodeEdge(g,c,$,et){return j.startNodeEdge(g),j.addNodeIndex(g,c),j.addInputEdges(g,$),j.addOutputEdges(g,et),j.endNodeEdge(g)}}_.NodeEdge=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsNode(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsNode(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}name(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}docString(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.__string(this.bb_pos+c,g):null}domain(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.__string(this.bb_pos+c,g):null}sinceVersion(){let g=this.bb.__offset(this.bb_pos,10);return g?this.bb.readInt32(this.bb_pos+g):0}index(){let g=this.bb.__offset(this.bb_pos,12);return g?this.bb.readUint32(this.bb_pos+g):0}opType(g){let c=this.bb.__offset(this.bb_pos,14);return c?this.bb.__string(this.bb_pos+c,g):null}type(){let g=this.bb.__offset(this.bb_pos,16);return g?this.bb.readInt32(this.bb_pos+g):h.experimental.fbs.NodeType.Primitive}executionProviderType(g){let c=this.bb.__offset(this.bb_pos,18);return c?this.bb.__string(this.bb_pos+c,g):null}inputs(g,c){let $=this.bb.__offset(this.bb_pos,20);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}inputsLength(){let g=this.bb.__offset(this.bb_pos,20);return g?this.bb.__vector_len(this.bb_pos+g):0}outputs(g,c){let $=this.bb.__offset(this.bb_pos,22);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}outputsLength(){let g=this.bb.__offset(this.bb_pos,22);return g?this.bb.__vector_len(this.bb_pos+g):0}attributes(g,c){let $=this.bb.__offset(this.bb_pos,24);return $?(c||new h.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}attributesLength(){let g=this.bb.__offset(this.bb_pos,24);return g?this.bb.__vector_len(this.bb_pos+g):0}inputArgCounts(g){let c=this.bb.__offset(this.bb_pos,26);return c?this.bb.readInt32(this.bb.__vector(this.bb_pos+c)+4*g):0}inputArgCountsLength(){let g=this.bb.__offset(this.bb_pos,26);return g?this.bb.__vector_len(this.bb_pos+g):0}inputArgCountsArray(){let g=this.bb.__offset(this.bb_pos,26);return g?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+g),this.bb.__vector_len(this.bb_pos+g)):null}implicitInputs(g,c){let $=this.bb.__offset(this.bb_pos,28);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}implicitInputsLength(){let g=this.bb.__offset(this.bb_pos,28);return g?this.bb.__vector_len(this.bb_pos+g):0}static startNode(g){g.startObject(13)}static addName(g,c){g.addFieldOffset(0,c,0)}static addDocString(g,c){g.addFieldOffset(1,c,0)}static addDomain(g,c){g.addFieldOffset(2,c,0)}static addSinceVersion(g,c){g.addFieldInt32(3,c,0)}static addIndex(g,c){g.addFieldInt32(4,c,0)}static addOpType(g,c){g.addFieldOffset(5,c,0)}static addType(g,c){g.addFieldInt32(6,c,h.experimental.fbs.NodeType.Primitive)}static addExecutionProviderType(g,c){g.addFieldOffset(7,c,0)}static addInputs(g,c){g.addFieldOffset(8,c,0)}static createInputsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startInputsVector(g,c){g.startVector(4,c,4)}static addOutputs(g,c){g.addFieldOffset(9,c,0)}static createOutputsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startOutputsVector(g,c){g.startVector(4,c,4)}static addAttributes(g,c){g.addFieldOffset(10,c,0)}static createAttributesVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startAttributesVector(g,c){g.startVector(4,c,4)}static addInputArgCounts(g,c){g.addFieldOffset(11,c,0)}static createInputArgCountsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addInt32(c[$]);return g.endVector()}static startInputArgCountsVector(g,c){g.startVector(4,c,4)}static addImplicitInputs(g,c){g.addFieldOffset(12,c,0)}static createImplicitInputsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startImplicitInputsVector(g,c){g.startVector(4,c,4)}static endNode(g){return g.endObject()}static createNode(g,c,$,et,tt,nt,rt,ot,st,it,at,lt,ut,ct){return j.startNode(g),j.addName(g,c),j.addDocString(g,$),j.addDomain(g,et),j.addSinceVersion(g,tt),j.addIndex(g,nt),j.addOpType(g,rt),j.addType(g,ot),j.addExecutionProviderType(g,st),j.addInputs(g,it),j.addOutputs(g,at),j.addAttributes(g,lt),j.addInputArgCounts(g,ut),j.addImplicitInputs(g,ct),j.endNode(g)}}_.Node=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsValueInfo(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsValueInfo(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}name(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}docString(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.__string(this.bb_pos+c,g):null}type(g){let c=this.bb.__offset(this.bb_pos,8);return c?(g||new h.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startValueInfo(g){g.startObject(3)}static addName(g,c){g.addFieldOffset(0,c,0)}static addDocString(g,c){g.addFieldOffset(1,c,0)}static addType(g,c){g.addFieldOffset(2,c,0)}static endValueInfo(g){return g.endObject()}static createValueInfo(g,c,$,et){return j.startValueInfo(g),j.addName(g,c),j.addDocString(g,$),j.addType(g,et),j.endValueInfo(g)}}_.ValueInfo=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsTypeInfo(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsTypeInfo(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}denotation(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}valueType(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.readUint8(this.bb_pos+g):h.experimental.fbs.TypeInfoValue.NONE}value(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.__union(g,this.bb_pos+c):null}static startTypeInfo(g){g.startObject(3)}static addDenotation(g,c){g.addFieldOffset(0,c,0)}static addValueType(g,c){g.addFieldInt8(1,c,h.experimental.fbs.TypeInfoValue.NONE)}static addValue(g,c){g.addFieldOffset(2,c,0)}static endTypeInfo(g){return g.endObject()}static createTypeInfo(g,c,$,et){return j.startTypeInfo(g),j.addDenotation(g,c),j.addValueType(g,$),j.addValue(g,et),j.endTypeInfo(g)}}_.TypeInfo=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsOperatorSetId(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsOperatorSetId(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}domain(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}version(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.readInt64(this.bb_pos+g):this.bb.createLong(0,0)}static startOperatorSetId(g){g.startObject(2)}static addDomain(g,c){g.addFieldOffset(0,c,0)}static addVersion(g,c){g.addFieldInt64(1,c,g.createLong(0,0))}static endOperatorSetId(g){return g.endObject()}static createOperatorSetId(g,c,$){return j.startOperatorSetId(g),j.addDomain(g,c),j.addVersion(g,$),j.endOperatorSetId(g)}}_.OperatorSetId=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsTensor(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsTensor(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}name(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}docString(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.__string(this.bb_pos+c,g):null}dims(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.readInt64(this.bb.__vector(this.bb_pos+c)+8*g):this.bb.createLong(0,0)}dimsLength(){let g=this.bb.__offset(this.bb_pos,8);return g?this.bb.__vector_len(this.bb_pos+g):0}dataType(){let g=this.bb.__offset(this.bb_pos,10);return g?this.bb.readInt32(this.bb_pos+g):h.experimental.fbs.TensorDataType.UNDEFINED}rawData(g){let c=this.bb.__offset(this.bb_pos,12);return c?this.bb.readUint8(this.bb.__vector(this.bb_pos+c)+g):0}rawDataLength(){let g=this.bb.__offset(this.bb_pos,12);return g?this.bb.__vector_len(this.bb_pos+g):0}rawDataArray(){let g=this.bb.__offset(this.bb_pos,12);return g?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+g),this.bb.__vector_len(this.bb_pos+g)):null}stringData(g,c){let $=this.bb.__offset(this.bb_pos,14);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}stringDataLength(){let g=this.bb.__offset(this.bb_pos,14);return g?this.bb.__vector_len(this.bb_pos+g):0}static startTensor(g){g.startObject(6)}static addName(g,c){g.addFieldOffset(0,c,0)}static addDocString(g,c){g.addFieldOffset(1,c,0)}static addDims(g,c){g.addFieldOffset(2,c,0)}static createDimsVector(g,c){g.startVector(8,c.length,8);for(let $=c.length-1;$>=0;$--)g.addInt64(c[$]);return g.endVector()}static startDimsVector(g,c){g.startVector(8,c,8)}static addDataType(g,c){g.addFieldInt32(3,c,h.experimental.fbs.TensorDataType.UNDEFINED)}static addRawData(g,c){g.addFieldOffset(4,c,0)}static createRawDataVector(g,c){g.startVector(1,c.length,1);for(let $=c.length-1;$>=0;$--)g.addInt8(c[$]);return g.endVector()}static startRawDataVector(g,c){g.startVector(1,c,1)}static addStringData(g,c){g.addFieldOffset(5,c,0)}static createStringDataVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startStringDataVector(g,c){g.startVector(4,c,4)}static endTensor(g){return g.endObject()}static createTensor(g,c,$,et,tt,nt,rt){return j.startTensor(g),j.addName(g,c),j.addDocString(g,$),j.addDims(g,et),j.addDataType(g,tt),j.addRawData(g,nt),j.addStringData(g,rt),j.endTensor(g)}}_.Tensor=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsSparseTensor(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsSparseTensor(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}values(g){let c=this.bb.__offset(this.bb_pos,4);return c?(g||new h.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}indices(g){let c=this.bb.__offset(this.bb_pos,6);return c?(g||new h.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}dims(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.readInt64(this.bb.__vector(this.bb_pos+c)+8*g):this.bb.createLong(0,0)}dimsLength(){let g=this.bb.__offset(this.bb_pos,8);return g?this.bb.__vector_len(this.bb_pos+g):0}static startSparseTensor(g){g.startObject(3)}static addValues(g,c){g.addFieldOffset(0,c,0)}static addIndices(g,c){g.addFieldOffset(1,c,0)}static addDims(g,c){g.addFieldOffset(2,c,0)}static createDimsVector(g,c){g.startVector(8,c.length,8);for(let $=c.length-1;$>=0;$--)g.addInt64(c[$]);return g.endVector()}static startDimsVector(g,c){g.startVector(8,c,8)}static endSparseTensor(g){return g.endObject()}static createSparseTensor(g,c,$,et){return j.startSparseTensor(g),j.addValues(g,c),j.addIndices(g,$),j.addDims(g,et),j.endSparseTensor(g)}}_.SparseTensor=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsAttribute(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsAttribute(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}name(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}docString(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.__string(this.bb_pos+c,g):null}type(){let g=this.bb.__offset(this.bb_pos,8);return g?this.bb.readInt32(this.bb_pos+g):h.experimental.fbs.AttributeType.UNDEFINED}f(){let g=this.bb.__offset(this.bb_pos,10);return g?this.bb.readFloat32(this.bb_pos+g):0}i(){let g=this.bb.__offset(this.bb_pos,12);return g?this.bb.readInt64(this.bb_pos+g):this.bb.createLong(0,0)}s(g){let c=this.bb.__offset(this.bb_pos,14);return c?this.bb.__string(this.bb_pos+c,g):null}t(g){let c=this.bb.__offset(this.bb_pos,16);return c?(g||new h.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}g(g){let c=this.bb.__offset(this.bb_pos,18);return c?(g||new h.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}floats(g){let c=this.bb.__offset(this.bb_pos,20);return c?this.bb.readFloat32(this.bb.__vector(this.bb_pos+c)+4*g):0}floatsLength(){let g=this.bb.__offset(this.bb_pos,20);return g?this.bb.__vector_len(this.bb_pos+g):0}floatsArray(){let g=this.bb.__offset(this.bb_pos,20);return g?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+g),this.bb.__vector_len(this.bb_pos+g)):null}ints(g){let c=this.bb.__offset(this.bb_pos,22);return c?this.bb.readInt64(this.bb.__vector(this.bb_pos+c)+8*g):this.bb.createLong(0,0)}intsLength(){let g=this.bb.__offset(this.bb_pos,22);return g?this.bb.__vector_len(this.bb_pos+g):0}strings(g,c){let $=this.bb.__offset(this.bb_pos,24);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}stringsLength(){let g=this.bb.__offset(this.bb_pos,24);return g?this.bb.__vector_len(this.bb_pos+g):0}tensors(g,c){let $=this.bb.__offset(this.bb_pos,26);return $?(c||new h.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}tensorsLength(){let g=this.bb.__offset(this.bb_pos,26);return g?this.bb.__vector_len(this.bb_pos+g):0}graphs(g,c){let $=this.bb.__offset(this.bb_pos,28);return $?(c||new h.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}graphsLength(){let g=this.bb.__offset(this.bb_pos,28);return g?this.bb.__vector_len(this.bb_pos+g):0}static startAttribute(g){g.startObject(13)}static addName(g,c){g.addFieldOffset(0,c,0)}static addDocString(g,c){g.addFieldOffset(1,c,0)}static addType(g,c){g.addFieldInt32(2,c,h.experimental.fbs.AttributeType.UNDEFINED)}static addF(g,c){g.addFieldFloat32(3,c,0)}static addI(g,c){g.addFieldInt64(4,c,g.createLong(0,0))}static addS(g,c){g.addFieldOffset(5,c,0)}static addT(g,c){g.addFieldOffset(6,c,0)}static addG(g,c){g.addFieldOffset(7,c,0)}static addFloats(g,c){g.addFieldOffset(8,c,0)}static createFloatsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addFloat32(c[$]);return g.endVector()}static startFloatsVector(g,c){g.startVector(4,c,4)}static addInts(g,c){g.addFieldOffset(9,c,0)}static createIntsVector(g,c){g.startVector(8,c.length,8);for(let $=c.length-1;$>=0;$--)g.addInt64(c[$]);return g.endVector()}static startIntsVector(g,c){g.startVector(8,c,8)}static addStrings(g,c){g.addFieldOffset(10,c,0)}static createStringsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startStringsVector(g,c){g.startVector(4,c,4)}static addTensors(g,c){g.addFieldOffset(11,c,0)}static createTensorsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startTensorsVector(g,c){g.startVector(4,c,4)}static addGraphs(g,c){g.addFieldOffset(12,c,0)}static createGraphsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startGraphsVector(g,c){g.startVector(4,c,4)}static endAttribute(g){return g.endObject()}static createAttribute(g,c,$,et,tt,nt,rt,ot,st,it,at,lt,ut,ct){return j.startAttribute(g),j.addName(g,c),j.addDocString(g,$),j.addType(g,et),j.addF(g,tt),j.addI(g,nt),j.addS(g,rt),j.addT(g,ot),j.addG(g,st),j.addFloats(g,it),j.addInts(g,at),j.addStrings(g,lt),j.addTensors(g,ut),j.addGraphs(g,ct),j.endAttribute(g)}}_.Attribute=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsGraph(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsGraph(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}initializers(g,c){let $=this.bb.__offset(this.bb_pos,4);return $?(c||new h.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}initializersLength(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.__vector_len(this.bb_pos+g):0}nodeArgs(g,c){let $=this.bb.__offset(this.bb_pos,6);return $?(c||new h.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}nodeArgsLength(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.__vector_len(this.bb_pos+g):0}nodes(g,c){let $=this.bb.__offset(this.bb_pos,8);return $?(c||new h.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}nodesLength(){let g=this.bb.__offset(this.bb_pos,8);return g?this.bb.__vector_len(this.bb_pos+g):0}maxNodeIndex(){let g=this.bb.__offset(this.bb_pos,10);return g?this.bb.readUint32(this.bb_pos+g):0}nodeEdges(g,c){let $=this.bb.__offset(this.bb_pos,12);return $?(c||new h.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}nodeEdgesLength(){let g=this.bb.__offset(this.bb_pos,12);return g?this.bb.__vector_len(this.bb_pos+g):0}inputs(g,c){let $=this.bb.__offset(this.bb_pos,14);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}inputsLength(){let g=this.bb.__offset(this.bb_pos,14);return g?this.bb.__vector_len(this.bb_pos+g):0}outputs(g,c){let $=this.bb.__offset(this.bb_pos,16);return $?this.bb.__string(this.bb.__vector(this.bb_pos+$)+4*g,c):null}outputsLength(){let g=this.bb.__offset(this.bb_pos,16);return g?this.bb.__vector_len(this.bb_pos+g):0}sparseInitializers(g,c){let $=this.bb.__offset(this.bb_pos,18);return $?(c||new h.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}sparseInitializersLength(){let g=this.bb.__offset(this.bb_pos,18);return g?this.bb.__vector_len(this.bb_pos+g):0}static startGraph(g){g.startObject(8)}static addInitializers(g,c){g.addFieldOffset(0,c,0)}static createInitializersVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startInitializersVector(g,c){g.startVector(4,c,4)}static addNodeArgs(g,c){g.addFieldOffset(1,c,0)}static createNodeArgsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startNodeArgsVector(g,c){g.startVector(4,c,4)}static addNodes(g,c){g.addFieldOffset(2,c,0)}static createNodesVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startNodesVector(g,c){g.startVector(4,c,4)}static addMaxNodeIndex(g,c){g.addFieldInt32(3,c,0)}static addNodeEdges(g,c){g.addFieldOffset(4,c,0)}static createNodeEdgesVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startNodeEdgesVector(g,c){g.startVector(4,c,4)}static addInputs(g,c){g.addFieldOffset(5,c,0)}static createInputsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startInputsVector(g,c){g.startVector(4,c,4)}static addOutputs(g,c){g.addFieldOffset(6,c,0)}static createOutputsVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startOutputsVector(g,c){g.startVector(4,c,4)}static addSparseInitializers(g,c){g.addFieldOffset(7,c,0)}static createSparseInitializersVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startSparseInitializersVector(g,c){g.startVector(4,c,4)}static endGraph(g){return g.endObject()}static createGraph(g,c,$,et,tt,nt,rt,ot,st){return j.startGraph(g),j.addInitializers(g,c),j.addNodeArgs(g,$),j.addNodes(g,et),j.addMaxNodeIndex(g,tt),j.addNodeEdges(g,nt),j.addInputs(g,rt),j.addOutputs(g,ot),j.addSparseInitializers(g,st),j.endGraph(g)}}_.Graph=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsModel(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsModel(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}irVersion(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.readInt64(this.bb_pos+g):this.bb.createLong(0,0)}opsetImport(g,c){let $=this.bb.__offset(this.bb_pos,6);return $?(c||new h.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}opsetImportLength(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.__vector_len(this.bb_pos+g):0}producerName(g){let c=this.bb.__offset(this.bb_pos,8);return c?this.bb.__string(this.bb_pos+c,g):null}producerVersion(g){let c=this.bb.__offset(this.bb_pos,10);return c?this.bb.__string(this.bb_pos+c,g):null}domain(g){let c=this.bb.__offset(this.bb_pos,12);return c?this.bb.__string(this.bb_pos+c,g):null}modelVersion(){let g=this.bb.__offset(this.bb_pos,14);return g?this.bb.readInt64(this.bb_pos+g):this.bb.createLong(0,0)}docString(g){let c=this.bb.__offset(this.bb_pos,16);return c?this.bb.__string(this.bb_pos+c,g):null}graph(g){let c=this.bb.__offset(this.bb_pos,18);return c?(g||new h.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}graphDocString(g){let c=this.bb.__offset(this.bb_pos,20);return c?this.bb.__string(this.bb_pos+c,g):null}static startModel(g){g.startObject(9)}static addIrVersion(g,c){g.addFieldInt64(0,c,g.createLong(0,0))}static addOpsetImport(g,c){g.addFieldOffset(1,c,0)}static createOpsetImportVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startOpsetImportVector(g,c){g.startVector(4,c,4)}static addProducerName(g,c){g.addFieldOffset(2,c,0)}static addProducerVersion(g,c){g.addFieldOffset(3,c,0)}static addDomain(g,c){g.addFieldOffset(4,c,0)}static addModelVersion(g,c){g.addFieldInt64(5,c,g.createLong(0,0))}static addDocString(g,c){g.addFieldOffset(6,c,0)}static addGraph(g,c){g.addFieldOffset(7,c,0)}static addGraphDocString(g,c){g.addFieldOffset(8,c,0)}static endModel(g){return g.endObject()}static createModel(g,c,$,et,tt,nt,rt,ot,st,it){return j.startModel(g),j.addIrVersion(g,c),j.addOpsetImport(g,$),j.addProducerName(g,et),j.addProducerVersion(g,tt),j.addDomain(g,nt),j.addModelVersion(g,rt),j.addDocString(g,ot),j.addGraph(g,st),j.addGraphDocString(g,it),j.endModel(g)}}_.Model=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsKernelCreateInfos(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsKernelCreateInfos(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}nodeIndices(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.readUint32(this.bb.__vector(this.bb_pos+c)+4*g):0}nodeIndicesLength(){let g=this.bb.__offset(this.bb_pos,4);return g?this.bb.__vector_len(this.bb_pos+g):0}nodeIndicesArray(){let g=this.bb.__offset(this.bb_pos,4);return g?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+g),this.bb.__vector_len(this.bb_pos+g)):null}kernelDefHashes(g){let c=this.bb.__offset(this.bb_pos,6);return c?this.bb.readUint64(this.bb.__vector(this.bb_pos+c)+8*g):this.bb.createLong(0,0)}kernelDefHashesLength(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.__vector_len(this.bb_pos+g):0}static startKernelCreateInfos(g){g.startObject(2)}static addNodeIndices(g,c){g.addFieldOffset(0,c,0)}static createNodeIndicesVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addInt32(c[$]);return g.endVector()}static startNodeIndicesVector(g,c){g.startVector(4,c,4)}static addKernelDefHashes(g,c){g.addFieldOffset(1,c,0)}static createKernelDefHashesVector(g,c){g.startVector(8,c.length,8);for(let $=c.length-1;$>=0;$--)g.addInt64(c[$]);return g.endVector()}static startKernelDefHashesVector(g,c){g.startVector(8,c,8)}static endKernelCreateInfos(g){return g.endObject()}static createKernelCreateInfos(g,c,$){return j.startKernelCreateInfos(g),j.addNodeIndices(g,c),j.addKernelDefHashes(g,$),j.endKernelCreateInfos(g)}}_.KernelCreateInfos=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsSubGraphSessionState(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsSubGraphSessionState(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}graphId(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}sessionState(g){let c=this.bb.__offset(this.bb_pos,6);return c?(g||new h.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startSubGraphSessionState(g){g.startObject(2)}static addGraphId(g,c){g.addFieldOffset(0,c,0)}static addSessionState(g,c){g.addFieldOffset(1,c,0)}static endSubGraphSessionState(g){let c=g.endObject();return g.requiredField(c,4),c}static createSubGraphSessionState(g,c,$){return j.startSubGraphSessionState(g),j.addGraphId(g,c),j.addSessionState(g,$),j.endSubGraphSessionState(g)}}_.SubGraphSessionState=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsSessionState(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsSessionState(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}kernels(g){let c=this.bb.__offset(this.bb_pos,4);return c?(g||new h.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}subGraphSessionStates(g,c){let $=this.bb.__offset(this.bb_pos,6);return $?(c||new h.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+$)+4*g),this.bb):null}subGraphSessionStatesLength(){let g=this.bb.__offset(this.bb_pos,6);return g?this.bb.__vector_len(this.bb_pos+g):0}static startSessionState(g){g.startObject(2)}static addKernels(g,c){g.addFieldOffset(0,c,0)}static addSubGraphSessionStates(g,c){g.addFieldOffset(1,c,0)}static createSubGraphSessionStatesVector(g,c){g.startVector(4,c.length,4);for(let $=c.length-1;$>=0;$--)g.addOffset(c[$]);return g.endVector()}static startSubGraphSessionStatesVector(g,c){g.startVector(4,c,4)}static endSessionState(g){return g.endObject()}static createSessionState(g,c,$){return j.startSessionState(g),j.addKernels(g,c),j.addSubGraphSessionStates(g,$),j.endSessionState(g)}}_.SessionState=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={})),function(h){(function(b){(function(_){class j{constructor(){this.bb=null,this.bb_pos=0}__init(g,c){return this.bb_pos=g,this.bb=c,this}static getRootAsInferenceSession(g,c){return(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static getSizePrefixedRootAsInferenceSession(g,c){return g.setPosition(g.position()+i.flatbuffers.SIZE_PREFIX_LENGTH),(c||new j).__init(g.readInt32(g.position())+g.position(),g)}static bufferHasIdentifier(g){return g.__has_identifier("ORTM")}ortVersion(g){let c=this.bb.__offset(this.bb_pos,4);return c?this.bb.__string(this.bb_pos+c,g):null}model(g){let c=this.bb.__offset(this.bb_pos,6);return c?(g||new h.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}sessionState(g){let c=this.bb.__offset(this.bb_pos,8);return c?(g||new h.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+c),this.bb):null}static startInferenceSession(g){g.startObject(3)}static addOrtVersion(g,c){g.addFieldOffset(0,c,0)}static addModel(g,c){g.addFieldOffset(1,c,0)}static addSessionState(g,c){g.addFieldOffset(2,c,0)}static endInferenceSession(g){return g.endObject()}static finishInferenceSessionBuffer(g,c){g.finish(c,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(g,c){g.finish(c,"ORTM",!0)}static createInferenceSession(g,c,$,et){return j.startInferenceSession(g),j.addOrtVersion(g,c),j.addModel(g,$),j.addSessionState(g,et),j.endInferenceSession(g)}}_.InferenceSession=j})(b.fbs||(b.fbs={}))})(h.experimental||(h.experimental={}))}(e.onnxruntime||(e.onnxruntime={}))},1723:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OnnxjsSessionHandler=void 0;const i=s(2235),a=s(9240);e.OnnxjsSessionHandler=class{constructor(d){this.session=d,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(d,h,b){const _=new Map;for(const g in d)if(Object.hasOwnProperty.call(d,g)){const c=d[g];_.set(g,new a.Tensor(c.dims,c.type,void 0,void 0,c.data))}const j=await this.session.run(_),_e={};return j.forEach((g,c)=>{_e[c]=new i.Tensor(g.type,g.data,g.dims)}),_e}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}},6027:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Session=void 0;const i=s(7067),a=s(1296),d=s(1975),h=s(6496),b=s(1315),_=s(1745);e.Session=class{constructor(j={}){this._initialized=!1,this.backendHint=j.backendHint,this.profiler=b.Profiler.create(j.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(j,_e,g){await this.profiler.event("session","Session.loadModel",async()=>{const c=await(0,d.resolveBackend)(this.backendHint);if(this.sessionHandler=c.createSessionHandler(this.context),this._model=new _.Model,typeof j=="string"){const $=j.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){const et=await(0,a.promisify)(i.readFile)(j);this.initialize(et,$)}else{const et=await fetch(j),tt=await et.arrayBuffer();this.initialize(new Uint8Array(tt),$)}}else if(ArrayBuffer.isView(j))this.initialize(j);else{const $=new Uint8Array(j,_e||0,g||j.byteLength);this.initialize($)}})}initialize(j,_e){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{const g=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(j,g,_e),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new h.ExecutionPlan(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(j){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{const _e=this.normalizeAndValidateInputs(j),g=await this._executionPlan.execute(this.sessionHandler,_e);return this.createOutput(g)})}normalizeAndValidateInputs(j){const _e=this._model.graph.getInputNames();if(Array.isArray(j)){if(j.length!==_e.length)throw new Error(`incorrect input array length: expected ${_e.length} but got ${j.length}`)}else{if(j.size!==_e.length)throw new Error(`incorrect input map size: expected ${_e.length} but got ${j.size}`);const g=new Array(j.size);let c=0;for(let $=0;$<_e.length;++$){const et=j.get(_e[$]);if(!et)throw new Error(`missing input tensor for: '${name}'`);g[c++]=et}j=g}if(this.context.graphInputTypes&&this.context.graphInputTypes.length!==0&&this.context.graphInputDims&&this.context.graphInputDims.length!==0)this.validateInputTensorDims(this.context.graphInputDims,j,!1);else{const g=this._model.graph.getInputIndices(),c=this._model.graph.getValues(),$=new Array(g.length);for(let et=0;et<g.length;++et){const tt=c[g[et]];$[et]=tt.type.shape.dims,this.context.graphInputTypes.push(tt.type.tensorType),this.context.graphInputDims.push(j[et].dims)}this.validateInputTensorDims($,j,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,j),j}validateInputTensorTypes(j,_e){for(let g=0;g<_e.length;g++){const c=j[g],$=_e[g].type;if(c!==$)throw new Error(`input tensor[${g}] check failed: expected type '${c}' but got ${$}`)}}validateInputTensorDims(j,_e,g){for(let c=0;c<_e.length;c++){const $=j[c],et=_e[c].dims;if(!this.compareTensorDims($,et,g))throw new Error(`input tensor[${c}] check failed: expected shape '[${$.join(",")}]' but got [${et.join(",")}]`)}}compareTensorDims(j,_e,g){if(j.length!==_e.length)return!1;for(let c=0;c<j.length;++c)if(j[c]!==_e[c]&&(!g||j[c]!==0))return!1;return!0}createOutput(j){const _e=this._model.graph.getOutputNames();if(j.length!==_e.length)throw new Error("expected number of outputs do not match number of generated outputs");const g=new Map;for(let c=0;c<_e.length;++c)g.set(_e[c],j[c]);return g}initializeOps(j){const _e=j.getNodes();this._ops=new Array(_e.length);for(let g=0;g<_e.length;g++)this._ops[g]=this.sessionHandler.resolve(_e[g],this._model.opsets,j)}}},9240:function(o,e,s){var i=this&&this.__importDefault||function(tt){return tt&&tt.__esModule?tt:{default:tt}};Object.defineProperty(e,"__esModule",{value:!0}),e.Tensor=void 0;const a=s(3442),d=i(s(1583)),h=s(5127),b=s(2446),_=s(7273);var j=h.onnxruntime.experimental.fbs;class _e{get data(){if(this.cache===void 0){const nt=this.dataProvider(this.dataId);if(nt.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=nt}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(nt){return this.data[_.ShapeUtil.indicesToOffset(nt,this.strides)]}set(nt,rt){this.data[_.ShapeUtil.indicesToOffset(nt,this.strides)]=rt}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=_.ShapeUtil.computeStrides(this.dims)),this._strides}constructor(nt,rt,ot,st,it,at=a.Guid.create()){this.dims=nt,this.type=rt,this.dataProvider=ot,this.asyncDataProvider=st,this.cache=it,this.dataId=at,this.size=_.ShapeUtil.validateDimsAndCalcSize(nt);const lt=this.size,ut=ot===void 0&&st===void 0&&it===void 0;if(it!==void 0&&it.length!==lt)throw new RangeError("Input dims doesn't match data length.");if(rt==="string"){if(!(it===void 0||Array.isArray(it)&&it.every(ct=>typeof ct=="string")))throw new TypeError("cache should be a string array");ut&&(this.cache=new Array(lt))}else{if(it!==void 0){const ct=c(rt);if(!(it instanceof ct))throw new TypeError(`cache should be type ${ct.name}`)}if(ut){const ct=new ArrayBuffer(lt*function(pt){switch(pt){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${pt}`)}}(rt));this.cache=function(pt,ht){return new(c(ht))(pt)}(ct,rt)}}}static fromProto(nt){if(!nt)throw new Error("cannot construct Value from an empty tensor");const rt=_.ProtoUtil.tensorDataTypeFromProto(nt.dataType),ot=_.ProtoUtil.tensorDimsFromProto(nt.dims),st=new _e(ot,rt);if(rt==="string")nt.stringData.forEach((it,at)=>{st.data[at]=(0,_.decodeUtf8String)(it)});else if(nt.rawData&&typeof nt.rawData.byteLength=="number"&&nt.rawData.byteLength>0){const it=st.data,at=new DataView(nt.rawData.buffer,nt.rawData.byteOffset,nt.rawData.byteLength),lt=g(nt.dataType),ut=nt.rawData.byteLength/lt;if(nt.rawData.byteLength%lt!=0)throw new Error("invalid buffer length");if(it.length!==ut)throw new Error("buffer length mismatch");for(let ct=0;ct<ut;ct++){const pt=et(at,nt.dataType,ct*lt);it[ct]=pt}}else{let it;switch(nt.dataType){case b.onnx.TensorProto.DataType.FLOAT:it=nt.floatData;break;case b.onnx.TensorProto.DataType.INT32:case b.onnx.TensorProto.DataType.INT16:case b.onnx.TensorProto.DataType.UINT16:case b.onnx.TensorProto.DataType.INT8:case b.onnx.TensorProto.DataType.UINT8:case b.onnx.TensorProto.DataType.BOOL:it=nt.int32Data;break;case b.onnx.TensorProto.DataType.INT64:it=nt.int64Data;break;case b.onnx.TensorProto.DataType.DOUBLE:it=nt.doubleData;break;case b.onnx.TensorProto.DataType.UINT32:case b.onnx.TensorProto.DataType.UINT64:it=nt.uint64Data;break;default:throw new Error("unspecific error")}if(it==null)throw new Error("failed to populate data from a tensorproto value");const at=st.data;if(at.length!==it.length)throw new Error("array length mismatch");for(let lt=0;lt<it.length;lt++){const ut=it[lt];d.default.isLong(ut)?at[lt]=$(ut,nt.dataType):at[lt]=ut}}return st}static fromData(nt,rt,ot){return new _e(rt,ot,void 0,void 0,nt)}static fromOrtTensor(nt){if(!nt)throw new Error("cannot construct Value from an empty tensor");const rt=_.ProtoUtil.tensorDimsFromORTFormat(nt),ot=_.ProtoUtil.tensorDataTypeFromProto(nt.dataType()),st=new _e(rt,ot);if(ot==="string")for(let it=0;it<nt.stringDataLength();it++)st.data[it]=nt.stringData(it);else if(nt.rawDataArray()&&typeof nt.rawDataLength()=="number"&&nt.rawDataLength()>0){const it=st.data,at=new DataView(nt.rawDataArray().buffer,nt.rawDataArray().byteOffset,nt.rawDataLength()),lt=g(nt.dataType()),ut=nt.rawDataLength()/lt;if(nt.rawDataLength()%lt!=0)throw new Error("invalid buffer length");if(it.length!==ut)throw new Error("buffer length mismatch");for(let ct=0;ct<ut;ct++){const pt=et(at,nt.dataType(),ct*lt);it[ct]=pt}}return st}}function g(tt){switch(tt){case b.onnx.TensorProto.DataType.UINT8:case b.onnx.TensorProto.DataType.INT8:case b.onnx.TensorProto.DataType.BOOL:return 1;case b.onnx.TensorProto.DataType.UINT16:case b.onnx.TensorProto.DataType.INT16:return 2;case b.onnx.TensorProto.DataType.FLOAT:case b.onnx.TensorProto.DataType.INT32:case b.onnx.TensorProto.DataType.UINT32:return 4;case b.onnx.TensorProto.DataType.INT64:case b.onnx.TensorProto.DataType.DOUBLE:case b.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${b.onnx.TensorProto.DataType[tt]}`)}}function c(tt){switch(tt){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function $(tt,nt){if(nt===b.onnx.TensorProto.DataType.INT64||nt===j.TensorDataType.INT64){if(tt.greaterThanOrEqual(2147483648)||tt.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(nt!==b.onnx.TensorProto.DataType.UINT32&&nt!==j.TensorDataType.UINT32&&nt!==b.onnx.TensorProto.DataType.UINT64&&nt!==j.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${b.onnx.TensorProto.DataType[nt]}`);if(tt.greaterThanOrEqual(4294967296)||tt.lessThan(0))throw new TypeError("uint64 is not supported")}return tt.toNumber()}function et(tt,nt,rt){switch(nt){case b.onnx.TensorProto.DataType.BOOL:case b.onnx.TensorProto.DataType.UINT8:return tt.getUint8(rt);case b.onnx.TensorProto.DataType.INT8:return tt.getInt8(rt);case b.onnx.TensorProto.DataType.UINT16:return tt.getUint16(rt,!0);case b.onnx.TensorProto.DataType.INT16:return tt.getInt16(rt,!0);case b.onnx.TensorProto.DataType.FLOAT:return tt.getFloat32(rt,!0);case b.onnx.TensorProto.DataType.INT32:return tt.getInt32(rt,!0);case b.onnx.TensorProto.DataType.UINT32:return tt.getUint32(rt,!0);case b.onnx.TensorProto.DataType.INT64:return $(d.default.fromBits(tt.getUint32(rt,!0),tt.getUint32(rt+4,!0),!1),nt);case b.onnx.TensorProto.DataType.DOUBLE:return tt.getFloat64(rt,!0);case b.onnx.TensorProto.DataType.UINT64:return $(d.default.fromBits(tt.getUint32(rt,!0),tt.getUint32(rt+4,!0),!0),nt);default:throw new Error(`cannot read from DataView for type ${b.onnx.TensorProto.DataType[nt]}`)}}e.Tensor=_e},7273:function(o,e,s){var i=this&&this.__importDefault||function(nt){return nt&&nt.__esModule?nt:{default:nt}};Object.defineProperty(e,"__esModule",{value:!0}),e.decodeUtf8String=e.MAX_CLIP=e.MIN_CLIP=e.PoolConvUtil=e.ReduceUtil=e.SplitUtil=e.MathUtil=e.ShapeUtil=e.LongUtil=e.ProtoUtil=e.GemmUtil=e.arrayCopyHelper=e.BroadcastUtil=e.MatMulUtil=e.ArrayUtil=e.assert=e.checkInputsShape=void 0;const a=s(5686),d=i(s(1583)),h=s(2446),b=s(9240);e.checkInputsShape=function(nt,...rt){if(!nt||nt.length!==rt.length)return!1;for(let ot=0;ot<nt.length;ot++)if(!nt[ot].dims||nt[ot].dims.length!==rt[ot])return!1;return!0},e.assert=function(nt,rt){if(!nt)throw new Error(typeof rt=="string"?rt:rt())},e.ArrayUtil=class{static arraysEqual(nt,rt){if(nt.length!==rt.length)return!1;for(let ot=0;ot<nt.length;ot++)if(nt[ot]!==rt[ot])return!1;return!0}};class _{static preprocessInputShapes(rt,ot){return[rt.length===1?[1,rt[0]]:rt,ot.length===1?[ot[0],1]:ot]}static postprocessOutputShape(rt,ot,st){ot===1&&rt.splice(rt.length-2,1),st===1&&rt.pop()}static calcMatMulShape(rt,ot){return rt[1]!==ot[0]?void 0:[rt[0],ot[1]]}}e.MatMulUtil=_;class j{static calcShape(rt,ot,st=!1){const it=rt.length,at=ot.length;if(it===0)return ot;if(at===0)return rt;const lt=Math.max(rt.length,ot.length),ut=new Array(lt);if(st){if(it<2||at<2)return;const ct=_.calcMatMulShape([rt[it-2],rt[it-1]],[ot[at-2],ot[at-1]]);if(ct===void 0)return;[ut[lt-2],ut[lt-1]]=ct}for(let ct=st?3:1;ct<=lt;ct++){const pt=it-ct<0?1:rt[it-ct],ht=at-ct<0?1:ot[at-ct];if(pt!==ht&&pt>1&&ht>1)return;ut[lt-ct]=Math.max(pt,ht)}return ut}static index(rt,ot){const st=new Array(ot.length);return j.fillIndex(rt,ot,st),st}static fillIndex(rt,ot,st){const it=rt.length-ot.length;for(let at=0;at<ot.length;at++)st[at]=rt[it+at]%ot[at]}static calc(rt,ot,st,it,at){const lt=j.calcShape(rt.dims,ot.dims);if(lt){if(it&&!c.areEqual(lt,rt.dims))return;const ut=c.size(lt),ct=it?rt:new b.Tensor(lt,at||rt.type);if(lt.length===0)ct.set([],st(rt.get([]),ot.get([])));else{const pt=new Array(lt.length),ht=new Array(rt.dims.length),yt=new Array(ot.dims.length);let xt,ft=0,wt=0,dt=!1,mt=!1;rt.dims.length===0&&(ft=rt.get([]),dt=!0),ot.dims.length===0&&(wt=ot.get([]),mt=!0);for(let bt=0;bt<ut;bt++){xt=bt;for(let vt=lt.length-1;vt>=0;vt--)pt[vt]=xt%lt[vt],xt=Math.floor(xt/lt[vt]);dt||(j.fillIndex(pt,rt.dims,ht),ft=rt.get(ht)),mt||(j.fillIndex(pt,ot.dims,yt),wt=ot.get(yt)),ct.set(pt,st(ft,wt))}}return ct}}static isValidBroadcast(rt,ot){const st=rt.length,it=ot.length;if(st>it)return!1;for(let at=1;at<=st;at++)if(rt[st-at]!==1&&rt[st-at]!==ot[it-at])return!1;return!0}static getBroadcastDims(rt,ot){const st=rt.length,it=[];for(let at=0;at<st;at++){const lt=st-1-at,ut=rt[lt]||1;(ot[ot.length-1-at]||1)>1&&ut===1&&it.unshift(lt)}return it}}e.BroadcastUtil=j,e.arrayCopyHelper=function(nt,rt,ot,st,it){if(st<0||st>=rt.length)throw new Error("sourceIndex out of bounds");if(ot<0||ot>=nt.length)throw new Error("targetIndex out of bounds");if(st+it>rt.length)throw new Error("source indices to be copied are outside bounds");if(ot+it>nt.length)throw new Error("target array is too small to hold result");for(let at=0;at<it;at++)nt[ot+at]=rt[st+at]},e.GemmUtil=class{static getShapeOfGemmResult(nt,rt,ot,st,it){if(nt.length!==2||ot.length!==2)throw new Error("shape need to be of size 2");let at,lt,ut;rt?(at=nt[1],lt=nt[0]):(at=nt[0],lt=nt[1]);let ct=-1;if(st?(ut=ot[0],ct=1):(ut=ot[1],ct=0),ot[ct]!==lt)throw new Error("dimension mismatch");if(at<=0||ut<=0||lt<=0)throw new Error("invalid shape specified");if(it&&!j.isValidBroadcast(it,[at,ut]))throw new Error("gemm: invalid bias shape for broadcast");return[at,ut,lt]}};class _e{static tensorDataTypeFromProto(rt){switch(rt){case h.onnx.TensorProto.DataType.INT8:return"int8";case h.onnx.TensorProto.DataType.UINT8:return"uint8";case h.onnx.TensorProto.DataType.BOOL:return"bool";case h.onnx.TensorProto.DataType.INT16:return"int16";case h.onnx.TensorProto.DataType.UINT16:return"uint16";case h.onnx.TensorProto.DataType.INT32:return"int32";case h.onnx.TensorProto.DataType.UINT32:return"uint32";case h.onnx.TensorProto.DataType.FLOAT:return"float32";case h.onnx.TensorProto.DataType.DOUBLE:return"float64";case h.onnx.TensorProto.DataType.STRING:return"string";case h.onnx.TensorProto.DataType.INT64:return"int32";case h.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${h.onnx.TensorProto.DataType[rt]}`)}}static tensorDataTypeStringToEnum(rt){switch(rt){case"int8":return h.onnx.TensorProto.DataType.INT8;case"uint8":return h.onnx.TensorProto.DataType.UINT8;case"bool":return h.onnx.TensorProto.DataType.BOOL;case"int16":return h.onnx.TensorProto.DataType.INT16;case"uint16":return h.onnx.TensorProto.DataType.UINT16;case"int32":return h.onnx.TensorProto.DataType.INT32;case"uint32":return h.onnx.TensorProto.DataType.UINT32;case"float32":return h.onnx.TensorProto.DataType.FLOAT;case"float64":return h.onnx.TensorProto.DataType.DOUBLE;case"string":return h.onnx.TensorProto.DataType.STRING;case"int64":return h.onnx.TensorProto.DataType.INT64;case"uint64":return h.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${rt}`)}}static tensorDimsFromProto(rt){return rt.map(ot=>d.default.isLong(ot)?ot.toNumber():ot)}static tensorValueTypeFromProto(rt){return{tensorType:_e.tensorDataTypeFromProto(rt.elemType),shape:{dims:_e.tensorDimsFromProto(rt.shape.dim.map(ot=>ot.dimValue))}}}static tensorDimsFromORTFormat(rt){const ot=[];for(let st=0;st<rt.dimsLength();st++)ot.push(g.longToNumber(rt.dims(st)));return ot}static tensorAttributesFromORTFormat(rt){const ot=[];for(let st=0;st<rt.attributesLength();st++)ot.push(rt.attributes(st));return ot}}e.ProtoUtil=_e;class g{static longToNumber(rt,ot){return d.default.isLong(rt)?rt.toNumber():rt instanceof a.flatbuffers.Long?d.default.fromValue({low:rt.low,high:rt.high,unsigned:ot!=null&&ot}).toNumber():rt}static isLong(rt){return d.default.isLong(rt)||rt instanceof a.flatbuffers.Long}}e.LongUtil=g;class c{static size(rt){return c.getSizeFromDimensionRange(rt,0,rt.length)}static sizeFromDimension(rt,ot){if(ot<0||ot>rt.length)throw new Error(`invalid dimension of ${ot} for sizeFromDimension as Tensor has ${rt.length} dimensions.`);return c.getSizeFromDimensionRange(rt,ot,rt.length)}static sizeToDimension(rt,ot){if(ot<0||ot>rt.length)throw new Error(`invalid dimension of ${ot} for sizeToDimension as Tensor has ${rt.length} dimensions.`);return c.getSizeFromDimensionRange(rt,0,ot)}static getSizeFromDimensionRange(rt,ot,st){let it=1;for(let at=ot;at<st;at++){if(rt[at]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");it*=rt[at]}return it}static computeStrides(rt){const ot=rt.length;if(ot===0)return[];if(ot===1)return[1];const st=new Array(ot);st[ot-1]=1,st[ot-2]=rt[ot-1];for(let it=ot-3;it>=0;--it)st[it]=st[it+1]*rt[it+1];return st}static transpose(rt){return rt.slice().reverse()}static indicesToOffset(rt,ot,st){st===void 0&&(st=rt.length);let it=0;for(let at=0;at<st;++at)it+=ot[at]*rt[at];return it}static offsetToIndices(rt,ot){const st=ot.length;if(st===0)return[];if(st===1)return[rt*ot[0]];const it=new Array(ot.length);for(let at=0;at<it.length-1;++at)it[at]=Math.floor(rt/ot[at]),rt-=it[at]*ot[at];return it[it.length-1]=rt,it}static normalizeAxis(rt,ot){if(rt<-ot&&rt>=ot)throw new Error("unsupported axis for this operation.");return rt<0?rt+ot:rt}static normalizeAxes(rt,ot){return rt.map(st=>this.normalizeAxis(st,ot))}static incrementIndex(rt,ot,st){if(ot.length===0||rt.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(st===void 0)st=ot.length;else if(st<=0||st>ot.length)throw new Error("Incorrect axis to increment on");for(let it=st-1;it>=0&&(rt[it]++,!(rt[it]<ot[it]));--it)rt[it]=0}static calculateReshapedDims(rt,ot){if(ot.length===0){if(rt.length===0||c.size(rt)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}const st=ot.length,it=new Array(st);let at=-1,lt=1;for(let ct=0;ct<st;ct++){if(ot[ct]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(ot[ct]===-1){if(at!==-1)throw new Error("at most one dimension in shape hints can be -1");at=ct}else{if(ot[ct]===0){if(ct>=rt.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");it[ct]=rt[ct]}else it[ct]=ot[ct];lt*=it[ct]}}const ut=c.size(rt);if(at!==-1){if(ut%lt!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${rt}] Output shape: [${ot}]`);it[at]=ut/lt}else if(lt!==ut)throw new Error("reshapedDims and originalDims don't have matching sizes");return it}static sortBasedOnPerm(rt,ot){return ot?ot.map(st=>rt[st]):rt.slice().reverse()}static padShape(rt,ot){const st=rt.length;return rt.map((it,at)=>it+ot[at]+ot[at+st])}static areEqual(rt,ot){return rt.length===ot.length&&rt.every((st,it)=>st===ot[it])}static validateDimsAndCalcSize(rt){if(rt.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let ot=1;for(const st of rt){if(!Number.isInteger(st))throw new TypeError(`Invalid shape: ${st} is not an integer`);if(st<0||st>2147483647)throw new TypeError(`Invalid shape: length ${st} is not allowed`);ot*=st}return ot}static flattenShape(rt,ot){ot<0&&(ot+=rt.length);const st=rt.reduce((at,lt)=>at*lt,1),it=rt.slice(ot).reduce((at,lt)=>at*lt,1);return[st/it,it]}static squeezeShape(rt,ot){const st=new Array;ot=c.normalizeAxes(ot,rt.length);for(let it=0;it<rt.length;it++){const at=ot.indexOf(it)>=0;if(at&&rt[it]!==1)throw new Error("squeeze an axis of size different than 1");(ot.length===0&&rt[it]>1||ot.length>0&&!at)&&st.push(rt[it])}return st}static unsqueezeShape(rt,ot){const st=new Array(rt.length+ot.length);st.fill(0);for(let at=0;at<ot.length;at++){const lt=c.normalizeAxis(ot[at],st.length);if(lt>=st.length)throw new Error("'axes' has an out of range axis");if(st[lt]!==0)throw new Error("'axes' has a duplicate axis");st[lt]=1}let it=0;for(let at=0;at<st.length;at++)st[at]===0&&(st[at]=rt[it++]);if(it!==rt.length)throw new Error("the unsqueezed dimension could not be established");return st}}e.ShapeUtil=c,e.MathUtil=class{static sqr(nt,rt,ot,st,it){if(st<0||st>=rt.length)throw new Error("sourceIndex out of bounds");if(ot<0||ot>=nt.length)throw new Error("targetIndex out of bounds");if(st+it>rt.length)throw new Error("source indices to be copied are outside bounds");if(ot+it>nt.length)throw new Error("target array is too small to hold result");for(let at=0;at<it;at++)nt[ot+at]+=Math.pow(rt[st+at],2)}static axpy(nt,rt,ot,st,it,at){if(st<0||st>=rt.length)throw new Error("sourceIndex out of bounds");if(ot<0||ot>=nt.length)throw new Error("targetIndex out of bounds");if(st+it>rt.length)throw new Error("source indices to be copied are outside bounds");if(ot+it>nt.length)throw new Error("target array is too small to hold result");for(let lt=0;lt<it;lt++)nt[ot+lt]+=at*rt[st+lt]}static powx(nt,rt,ot,st,it,at){if(st<0||st>=rt.length)throw new Error("sourceIndex out of bounds");if(ot<0||ot>=nt.length)throw new Error("targetIndex out of bounds");if(st+it>rt.length)throw new Error("source indices to be copied are outside bounds");if(ot+it>nt.length)throw new Error("target array is too small to hold result");for(let lt=0;lt<it;lt++)nt[ot+lt]=Math.pow(rt[st+lt],at)}static mul(nt,rt,ot,st,it){if(st<0||st>=rt.length)throw new Error("sourceIndex out of bounds");if(ot<0||ot>=nt.length)throw new Error("targetIndex out of bounds");if(st+it>rt.length)throw new Error("source indices to be copied are outside bounds");if(ot+it>nt.length)throw new Error("target array is too small to hold result");for(let at=0;at<it;at++)nt[ot+at]=rt[st+at]*nt[ot+at]}};class ${static splitShape(rt,ot,st,it){if(st.length===0){if(!it)throw new Error("need to know number of outputs when the 'split' attribute is not specified");$.determineSplit(rt[ot],it,st)}const at=[],lt=[0];for(let ut=0;ut<st.length;++ut){ut!==0&&lt.push(lt[ut-1]+st[ut-1]);const ct=rt.slice();ct[ot]=st[ut],at.push(ct)}return[at,lt]}static determineSplit(rt,ot,st){if(rt%ot!=0)throw new Error("cannot split tensor to equal sized parts");for(let it=0;it<ot;++it)st.push(rt/ot)}}e.SplitUtil=$;class et{static calcReduce(rt,ot,st,it,at){const lt=rt.dims.slice(0);ot.length===0&&lt.forEach((ft,wt)=>ot.push(wt));const ut=et.calcReduceShape(lt,ot,!0),ct=c.size(ut),pt=new b.Tensor(ut,rt.type),ht=c.computeStrides(ut),yt=c.computeStrides(lt),xt=new Array(lt.length);for(let ft=0;ft<ct;ft++){const wt=c.offsetToIndices(ft,ht);j.fillIndex(wt,lt,xt),pt.set(wt,et.calcReduceByAxis(rt.numberData,ot,lt,0,c.indicesToOffset(xt,yt),it,at))}return st?pt:new b.Tensor(et.calcReduceShape(lt,ot,st),pt.type,void 0,void 0,pt.data,pt.dataId)}static calcReduceByAxis(rt,ot,st,it,at,lt,ut){let ct=0;if(it>=ot.length)return lt(rt[at]);const pt=ot[it],ht=pt>=st.length?1:c.size(st.slice(pt+1));for(let yt=0;yt<st[pt];yt++)ct=yt===0?et.calcReduceByAxis(rt,ot,st,it+1,at,lt,ut):ut(ct,et.calcReduceByAxis(rt,ot,st,it+1,at,lt,ut)),at+=ht;return ct}static calcReduceShape(rt,ot,st){const it=rt.slice();for(let at=0;at<ot.length;at++)it[ot[at]]=st?1:0;return it.filter(at=>at!==0)}}e.ReduceUtil=et;class tt{static adjustPoolAttributes(rt,ot,st,it,at,lt){if(!rt&&st.length!==ot.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(rt)for(let ut=0;ut<ot.length-2;ut++)ut>=st.length?st.push(ot[ut+2]):st[ut]=ot[ut+2];for(let ut=0;ut<st.length;ut++)if(ut<it.length){if(it[ut]<0)throw new Error("strides should be greater than or equal to 1")}else it.push(1);for(let ut=0;ut<st.length;ut++)if(ut<at.length){if(at[ut]<0)throw new Error("dilations should be greater than or equal to 1")}else at.push(1);for(let ut=0;ut<2*st.length;ut++)if(ut<lt.length){if(lt[ut]<0)throw new Error("pad should be greater than or equal to 1")}else lt.push(0);for(let ut=0;ut<st.length;ut++){if(st[ut]<=0)throw new Error("kernel shapes need to be greater than 0");if(lt[ut]>=st[ut]||lt[ut+st.length]>=st[ut])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(rt,ot,st,it,at,lt){if(lt){if(at.length!==2*(rt.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(ot.length!==rt.length-2)throw new Error("length of strides should be the length of data dimensions");if(it.length!==rt.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let ut=0;ut<rt.length-2;ut++)tt.adjustPadAndReturnShape(rt[ut+2],ot[ut],st[ut],it[ut],at,ut,ut+rt.length-2,lt)}}static computePoolOutputShape(rt,ot,st,it,at,lt,ut){if(ot.length<=0)throw new Error("input shape must be of size greater than 0");const ct=[ot[0],ot[1]];return tt.computeShapeHelper(rt,ot,ct,st,it,at,lt,ut),ct}static computeConvOutputShape(rt,ot,st,it,at,lt,ut){if(rt.length<=0||ot.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const ct=[rt[0],ot[0]];return tt.computeShapeHelper(!1,rt,ct,st,it,at,lt,ut),ct}static computeShapeHelper(rt,ot,st,it,at,lt,ut,ct){if(rt)for(let pt=0;pt<ot.length-2;pt++)st.push(1);else for(let pt=0;pt<ot.length-2;pt++)st.push(tt.adjustPadAndReturnShape(ot[pt+2],it[pt],at[pt],lt[pt],ut,pt,pt+ot.length-2,ct))}static adjustPadAndReturnShape(rt,ot,st,it,at,lt,ut,ct){const pt=st*(it-1)+1;if(!ct||ct==="NOTSET")return Math.floor((rt+at[lt]+at[ut]-pt)/ot+1);switch(ct){case"VALID":return at[lt]=0,at[ut]=0,Math.floor((rt-pt)/ot+1);case"SAME_LOWER":case"SAME_UPPER":if(st!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const ht=((rt+ot-1)/ot-1)*ot+it-rt;return at[lt]=Math.floor(ct==="SAME_LOWER"?(ht+1)/2:ht/2),at[ut]=ht-at[lt],Math.floor((rt+ht-it)/ot+1)}default:throw new Error("Unsupported AutoPad type")}}}e.PoolConvUtil=tt,e.MIN_CLIP=-34028234663852886e22,e.MAX_CLIP=34028234663852886e22,e.decodeUtf8String=function(nt){return new TextDecoder().decode(nt)}},8408:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.version=void 0,e.version="1.16.3"},9544:function(o,e,s){var i,a=this&&this.__createBinding||(Object.create?function(ht,yt,xt,ft){ft===void 0&&(ft=xt);var wt=Object.getOwnPropertyDescriptor(yt,xt);wt&&!("get"in wt?!yt.__esModule:wt.writable||wt.configurable)||(wt={enumerable:!0,get:function(){return yt[xt]}}),Object.defineProperty(ht,ft,wt)}:function(ht,yt,xt,ft){ft===void 0&&(ft=xt),ht[ft]=yt[xt]}),d=this&&this.__setModuleDefault||(Object.create?function(ht,yt){Object.defineProperty(ht,"default",{enumerable:!0,value:yt})}:function(ht,yt){ht.default=yt}),h=this&&this.__importStar||function(ht){if(ht&&ht.__esModule)return ht;var yt={};if(ht!=null)for(var xt in ht)xt!=="default"&&Object.prototype.hasOwnProperty.call(ht,xt)&&a(yt,ht,xt);return d(yt,ht),yt};Object.defineProperty(e,"__esModule",{value:!0}),e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initializeRuntime=e.initializeWebAssemblyInstance=void 0;const b=s(2235),_=h(s(1259)),j=s(263),_e=()=>!!b.env.wasm.proxy&&typeof document<"u";let g,c,$,et=!1,tt=!1,nt=!1;const rt=[],ot=[],st=[],it=[],at=[],lt=[],ut=()=>{if(et||!tt||nt||!g)throw new Error("worker not ready")},ct=ht=>{switch(ht.data.type){case"init-wasm":et=!1,ht.data.err?(nt=!0,c[1](ht.data.err)):(tt=!0,c[0]());break;case"init-ort":ht.data.err?$[1](ht.data.err):$[0]();break;case"create_allocate":ht.data.err?rt.shift()[1](ht.data.err):rt.shift()[0](ht.data.out);break;case"create_finalize":ht.data.err?ot.shift()[1](ht.data.err):ot.shift()[0](ht.data.out);break;case"create":ht.data.err?st.shift()[1](ht.data.err):st.shift()[0](ht.data.out);break;case"release":ht.data.err?it.shift()[1](ht.data.err):it.shift()[0]();break;case"run":ht.data.err?at.shift()[1](ht.data.err):at.shift()[0](ht.data.out);break;case"end-profiling":ht.data.err?lt.shift()[1](ht.data.err):lt.shift()[0]()}},pt=typeof document<"u"?(i=document==null?void 0:document.currentScript)===null||i===void 0?void 0:i.src:void 0;e.initializeWebAssemblyInstance=async()=>{if(_e()){if(tt)return;if(et)throw new Error("multiple calls to 'initWasm()' detected.");if(nt)throw new Error("previous call to 'initWasm()' failed.");return et=!0,b.env.wasm.wasmPaths===void 0&&pt&&pt.indexOf("blob:")!==0&&(b.env.wasm.wasmPaths=pt.substr(0,+pt.lastIndexOf("/")+1)),new Promise((ht,yt)=>{g==null||g.terminate(),g=s(8050).Z(),g.onmessage=ct,c=[ht,yt];const xt={type:"init-wasm",in:b.env.wasm};g.postMessage(xt)})}return(0,j.initializeWebAssembly)(b.env.wasm)},e.initializeRuntime=async ht=>{if(_e())return ut(),new Promise((yt,xt)=>{$=[yt,xt];const ft={type:"init-ort",in:ht};g.postMessage(ft)});await _.initRuntime(ht)},e.createSessionAllocate=async ht=>_e()?(ut(),new Promise((yt,xt)=>{rt.push([yt,xt]);const ft={type:"create_allocate",in:{model:ht}};g.postMessage(ft,[ht.buffer])})):_.createSessionAllocate(ht),e.createSessionFinalize=async(ht,yt)=>_e()?(ut(),new Promise((xt,ft)=>{ot.push([xt,ft]);const wt={type:"create_finalize",in:{modeldata:ht,options:yt}};g.postMessage(wt)})):_.createSessionFinalize(ht,yt),e.createSession=async(ht,yt)=>_e()?(ut(),new Promise((xt,ft)=>{st.push([xt,ft]);const wt={type:"create",in:{model:ht,options:yt}};g.postMessage(wt,[ht.buffer])})):_.createSession(ht,yt),e.releaseSession=async ht=>{if(_e())return ut(),new Promise((yt,xt)=>{it.push([yt,xt]);const ft={type:"release",in:ht};g.postMessage(ft)});_.releaseSession(ht)},e.run=async(ht,yt,xt,ft,wt)=>_e()?(ut(),new Promise((dt,mt)=>{at.push([dt,mt]);const bt={type:"run",in:{sessionId:ht,inputIndices:yt,inputs:xt,outputIndices:ft,options:wt}};g.postMessage(bt,_.extractTransferableBuffers(xt))})):_.run(ht,yt,xt,ft,wt),e.endProfiling=async ht=>{if(_e())return ut(),new Promise((yt,xt)=>{lt.push([yt,xt]);const ft={type:"end-profiling",in:ht};g.postMessage(ft)});_.endProfiling(ht)}},7918:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setRunOptions=void 0;const i=s(263),a=s(1497);e.setRunOptions=d=>{const h=(0,i.getInstance)();let b=0;const _=[],j=d||{};try{if((d==null?void 0:d.logSeverityLevel)===void 0)j.logSeverityLevel=2;else if(typeof d.logSeverityLevel!="number"||!Number.isInteger(d.logSeverityLevel)||d.logSeverityLevel<0||d.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${d.logSeverityLevel}`);if((d==null?void 0:d.logVerbosityLevel)===void 0)j.logVerbosityLevel=0;else if(typeof d.logVerbosityLevel!="number"||!Number.isInteger(d.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${d.logVerbosityLevel}`);(d==null?void 0:d.terminate)===void 0&&(j.terminate=!1);let _e=0;return(d==null?void 0:d.tag)!==void 0&&(_e=(0,a.allocWasmString)(d.tag,_)),b=h._OrtCreateRunOptions(j.logSeverityLevel,j.logVerbosityLevel,!!j.terminate,_e),b===0&&(0,a.checkLastError)("Can't create run options."),(d==null?void 0:d.extra)!==void 0&&(0,a.iterateExtraOptions)(d.extra,"",new WeakSet,(g,c)=>{const $=(0,a.allocWasmString)(g,_),et=(0,a.allocWasmString)(c,_);h._OrtAddRunConfigEntry(b,$,et)!==0&&(0,a.checkLastError)(`Can't set a run config entry: ${g} - ${c}.`)}),[b,_]}catch(_e){throw b!==0&&h._OrtReleaseRunOptions(b),_.forEach(g=>h._free(g)),_e}}},6640:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OnnxruntimeWebAssemblySessionHandler=void 0;const i=s(2806),a=s(2235),d=s(2850),h=s(9544);let b;e.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(_){const j=await fetch(_);if(j.status!==200)throw new Error(`failed to load model: ${_}`);const _e=await j.arrayBuffer();return(0,h.createSessionAllocate)(new Uint8Array(_e))}async loadModel(_,j){if(b||(await(0,h.initializeRuntime)(a.env),b=!0),typeof _=="string")if(typeof process<"u"&&process.versions&&process.versions.node){const _e=await(0,d.promisify)(i.readFile)(_);[this.sessionId,this.inputNames,this.outputNames]=await(0,h.createSession)(_e,j)}else{const _e=await this.createSessionAllocate(_);[this.sessionId,this.inputNames,this.outputNames]=await(0,h.createSessionFinalize)(_e,j)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,h.createSession)(_,j)}async dispose(){return(0,h.releaseSession)(this.sessionId)}async run(_,j,_e){const g=[],c=[];Object.entries(_).forEach(nt=>{const rt=nt[0],ot=nt[1],st=this.inputNames.indexOf(rt);if(st===-1)throw new Error(`invalid input '${rt}'`);g.push(ot),c.push(st)});const $=[];Object.entries(j).forEach(nt=>{const rt=nt[0],ot=this.outputNames.indexOf(rt);if(ot===-1)throw new Error(`invalid output '${rt}'`);$.push(ot)});const et=await(0,h.run)(this.sessionId,c,g.map(nt=>[nt.type,nt.dims,nt.data]),$,_e),tt={};for(let nt=0;nt<et.length;nt++)tt[this.outputNames[$[nt]]]=new a.Tensor(et[nt][0],et[nt][2],et[nt][1]);return tt}startProfiling(){}endProfiling(){(0,h.endProfiling)(this.sessionId)}}},7622:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setSessionOptions=void 0;const i=s(263),a=s(1497);e.setSessionOptions=d=>{var h,b,_,j;const _e=(0,i.getInstance)();let g=0;const c=[],$=d||{};(et=>{et.extra||(et.extra={}),et.extra.session||(et.extra.session={});const tt=et.extra.session;tt.use_ort_model_bytes_directly||(tt.use_ort_model_bytes_directly="1"),et.executionProviders&&et.executionProviders.some(nt=>(typeof nt=="string"?nt:nt.name)==="webgpu")&&(et.enableMemPattern=!1)})($);try{const et=(it=>{switch(it){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${it}`)}})((h=$.graphOptimizationLevel)!==null&&h!==void 0?h:"all"),tt=(it=>{switch(it){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${it}`)}})((b=$.executionMode)!==null&&b!==void 0?b:"sequential"),nt=typeof $.logId=="string"?(0,a.allocWasmString)($.logId,c):0,rt=(_=$.logSeverityLevel)!==null&&_!==void 0?_:2;if(!Number.isInteger(rt)||rt<0||rt>4)throw new Error(`log serverity level is not valid: ${rt}`);const ot=(j=$.logVerbosityLevel)!==null&&j!==void 0?j:0;if(!Number.isInteger(ot)||ot<0||ot>4)throw new Error(`log verbosity level is not valid: ${ot}`);const st=typeof $.optimizedModelFilePath=="string"?(0,a.allocWasmString)($.optimizedModelFilePath,c):0;return g=_e._OrtCreateSessionOptions(et,!!$.enableCpuMemArena,!!$.enableMemPattern,tt,!!$.enableProfiling,0,nt,rt,ot,st),g===0&&(0,a.checkLastError)("Can't create session options."),$.executionProviders&&((it,at,lt)=>{for(const ut of at){let ct=typeof ut=="string"?ut:ut.name;switch(ct){case"xnnpack":ct="XNNPACK";break;case"webnn":if(ct="WEBNN",typeof ut!="string"){const ht=ut;if(ht!=null&&ht.deviceType){const yt=(0,a.allocWasmString)("deviceType",lt),xt=(0,a.allocWasmString)(ht.deviceType,lt);(0,i.getInstance)()._OrtAddSessionConfigEntry(it,yt,xt)!==0&&(0,a.checkLastError)(`Can't set a session config entry: 'deviceType' - ${ht.deviceType}.`)}if(ht!=null&&ht.powerPreference){const yt=(0,a.allocWasmString)("powerPreference",lt),xt=(0,a.allocWasmString)(ht.powerPreference,lt);(0,i.getInstance)()._OrtAddSessionConfigEntry(it,yt,xt)!==0&&(0,a.checkLastError)(`Can't set a session config entry: 'powerPreference' - ${ht.powerPreference}.`)}}break;case"webgpu":ct="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${ct}`)}const pt=(0,a.allocWasmString)(ct,lt);(0,i.getInstance)()._OrtAppendExecutionProvider(it,pt)!==0&&(0,a.checkLastError)(`Can't append execution provider: ${ct}.`)}})(g,$.executionProviders,c),$.extra!==void 0&&(0,a.iterateExtraOptions)($.extra,"",new WeakSet,(it,at)=>{const lt=(0,a.allocWasmString)(it,c),ut=(0,a.allocWasmString)(at,c);_e._OrtAddSessionConfigEntry(g,lt,ut)!==0&&(0,a.checkLastError)(`Can't set a session config entry: ${it} - ${at}.`)}),[g,c]}catch(et){throw g!==0&&_e._OrtReleaseSessionOptions(g),c.forEach(tt=>_e._free(tt)),et}}},7917:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.logLevelStringToEnum=e.tensorTypeToTypedArrayConstructor=e.getTensorElementSize=e.tensorDataTypeEnumToString=e.tensorDataTypeStringToEnum=void 0,e.tensorDataTypeStringToEnum=s=>{switch(s){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${s}`)}},e.tensorDataTypeEnumToString=s=>{switch(s){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${s}`)}},e.getTensorElementSize=s=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][s],e.tensorTypeToTypedArrayConstructor=s=>{switch(s){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${s}`)}},e.logLevelStringToEnum=s=>{switch(s){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${s}`)}}},1259:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initRuntime=void 0;const i=s(7918),a=s(7622),d=s(7917),h=s(263),b=s(1497);e.initRuntime=async j=>{var _e,g;_e=j.wasm.numThreads,g=(0,d.logLevelStringToEnum)(j.logLevel),(0,h.getInstance)()._OrtInit(_e,g)!==0&&(0,b.checkLastError)("Can't initialize onnxruntime.")};const _=new Map;e.createSessionAllocate=j=>{const _e=(0,h.getInstance)(),g=_e._malloc(j.byteLength);if(g===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${j.byteLength}.`);return _e.HEAPU8.set(j,g),[g,j.byteLength]},e.createSessionFinalize=(j,_e)=>{const g=(0,h.getInstance)();let c=0,$=0,et=[];const tt=[],nt=[];try{[$,et]=(0,a.setSessionOptions)(_e),c=g._OrtCreateSession(j[0],j[1],$),c===0&&(0,b.checkLastError)("Can't create a session.");const[rt,ot]=(at=>{const lt=(0,h.getInstance)(),ut=lt.stackSave();try{const ct=lt.stackAlloc(8);return lt._OrtGetInputOutputCount(at,ct,ct+4)!==0&&(0,b.checkLastError)("Can't get session input/output count."),[lt.HEAP32[ct/4],lt.HEAP32[ct/4+1]]}finally{lt.stackRestore(ut)}})(c),st=[],it=[];for(let at=0;at<rt;at++){const lt=g._OrtGetInputName(c,at);lt===0&&(0,b.checkLastError)("Can't get an input name."),tt.push(lt),st.push(g.UTF8ToString(lt))}for(let at=0;at<ot;at++){const lt=g._OrtGetOutputName(c,at);lt===0&&(0,b.checkLastError)("Can't get an output name."),nt.push(lt),it.push(g.UTF8ToString(lt))}return _.set(c,[c,tt,nt]),[c,st,it]}catch(rt){throw tt.forEach(ot=>g._OrtFree(ot)),nt.forEach(ot=>g._OrtFree(ot)),c!==0&&g._OrtReleaseSession(c),rt}finally{g._free(j[0]),$!==0&&g._OrtReleaseSessionOptions($),et.forEach(rt=>g._free(rt))}},e.createSession=(j,_e)=>{const g=(0,e.createSessionAllocate)(j);return(0,e.createSessionFinalize)(g,_e)},e.releaseSession=j=>{const _e=(0,h.getInstance)(),g=_.get(j);if(!g)throw new Error(`cannot release session. invalid session id: ${j}`);const[c,$,et]=g;$.forEach(tt=>_e._OrtFree(tt)),et.forEach(tt=>_e._OrtFree(tt)),_e._OrtReleaseSession(c),_.delete(j)},e.run=async(j,_e,g,c,$)=>{const et=(0,h.getInstance)(),tt=_.get(j);if(!tt)throw new Error(`cannot run inference. invalid session id: ${j}`);const[nt,rt,ot]=tt,st=_e.length,it=c.length;let at=0,lt=[];const ut=[],ct=[];try{[at,lt]=(0,i.setRunOptions)($);for(let wt=0;wt<st;wt++){const dt=g[wt][0],mt=g[wt][1],bt=g[wt][2];let vt,Tt;if(Array.isArray(bt)){Tt=4*bt.length,vt=et._malloc(Tt),ct.push(vt);let kt=vt/4;for(let Dt=0;Dt<bt.length;Dt++){if(typeof bt[Dt]!="string")throw new TypeError(`tensor data at index ${Dt} is not a string`);et.HEAPU32[kt++]=(0,b.allocWasmString)(bt[Dt],ct)}}else Tt=bt.byteLength,vt=et._malloc(Tt),ct.push(vt),et.HEAPU8.set(new Uint8Array(bt.buffer,bt.byteOffset,Tt),vt);const Et=et.stackSave(),Ct=et.stackAlloc(4*mt.length);try{let kt=Ct/4;mt.forEach(Rt=>et.HEAP32[kt++]=Rt);const Dt=et._OrtCreateTensor((0,d.tensorDataTypeStringToEnum)(dt),vt,Tt,Ct,mt.length);Dt===0&&(0,b.checkLastError)(`Can't create tensor for input[${wt}].`),ut.push(Dt)}finally{et.stackRestore(Et)}}const pt=et.stackSave(),ht=et.stackAlloc(4*st),yt=et.stackAlloc(4*st),xt=et.stackAlloc(4*it),ft=et.stackAlloc(4*it);try{let wt=ht/4,dt=yt/4,mt=xt/4,bt=ft/4;for(let Ct=0;Ct<st;Ct++)et.HEAPU32[wt++]=ut[Ct],et.HEAPU32[dt++]=rt[_e[Ct]];for(let Ct=0;Ct<it;Ct++)et.HEAPU32[mt++]=0,et.HEAPU32[bt++]=ot[c[Ct]];let vt=et._OrtRun(nt,yt,ht,st,ft,it,xt,at);const Tt=et.jsepRunPromise;Tt&&Tt.then!==void 0&&(vt=await Tt);const Et=[];vt!==0&&(0,b.checkLastError)("failed to call OrtRun().");for(let Ct=0;Ct<it;Ct++){const kt=et.HEAPU32[xt/4+Ct],Dt=et.stackSave(),Rt=et.stackAlloc(16);let Ot,zt=0;try{vt=et._OrtGetTensorData(kt,Rt,Rt+4,Rt+8,Rt+12),vt!==0&&(0,b.checkLastError)(`Can't access output tensor data on index ${Ct}.`);let Bt=Rt/4;const Gt=et.HEAPU32[Bt++];zt=et.HEAPU32[Bt++];const jt=et.HEAPU32[Bt++],Kt=et.HEAPU32[Bt++],Wt=[];for(let Xt=0;Xt<Kt;Xt++)Wt.push(et.HEAPU32[jt/4+Xt]);et._OrtFree(jt);const Jt=Wt.length===0?1:Wt.reduce((Xt,tn)=>Xt*tn);if(Ot=(0,d.tensorDataTypeEnumToString)(Gt),Ot==="string"){const Xt=[];let tn=zt/4;for(let en=0;en<Jt;en++){const Zt=et.HEAPU32[tn++],nn=en===Jt-1?void 0:et.HEAPU32[tn]-Zt;Xt.push(et.UTF8ToString(Zt,nn))}Et.push([Ot,Wt,Xt])}else{const Xt=new((0,d.tensorTypeToTypedArrayConstructor)(Ot))(Jt);new Uint8Array(Xt.buffer,Xt.byteOffset,Xt.byteLength).set(et.HEAPU8.subarray(zt,zt+Xt.byteLength)),Et.push([Ot,Wt,Xt])}}finally{et.stackRestore(Dt),Ot==="string"&&zt&&et._free(zt),et._OrtReleaseTensor(kt)}}return Et}finally{et.stackRestore(pt)}}finally{ut.forEach(pt=>et._OrtReleaseTensor(pt)),ct.forEach(pt=>et._free(pt)),at!==0&&et._OrtReleaseRunOptions(at),lt.forEach(pt=>et._free(pt))}},e.endProfiling=j=>{const _e=(0,h.getInstance)(),g=_.get(j);if(!g)throw new Error("invalid session id");const c=g[0],$=_e._OrtEndProfiling(c);$===0&&(0,b.checkLastError)("Can't get an profile file name."),_e._OrtFree($)},e.extractTransferableBuffers=j=>{const _e=[];for(const g of j){const c=g[2];!Array.isArray(c)&&c.buffer&&_e.push(c.buffer)}return _e}},263:function(o,e,s){var i=this&&this.__createBinding||(Object.create?function($,et,tt,nt){nt===void 0&&(nt=tt);var rt=Object.getOwnPropertyDescriptor(et,tt);rt&&!("get"in rt?!et.__esModule:rt.writable||rt.configurable)||(rt={enumerable:!0,get:function(){return et[tt]}}),Object.defineProperty($,nt,rt)}:function($,et,tt,nt){nt===void 0&&(nt=tt),$[nt]=et[tt]}),a=this&&this.__setModuleDefault||(Object.create?function($,et){Object.defineProperty($,"default",{enumerable:!0,value:et})}:function($,et){$.default=et}),d=this&&this.__importStar||function($){if($&&$.__esModule)return $;var et={};if($!=null)for(var tt in $)tt!=="default"&&Object.prototype.hasOwnProperty.call($,tt)&&i(et,$,tt);return a(et,$),et};Object.defineProperty(e,"__esModule",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const h=d(s(6449)),b=s(932),_=s(3474);let j,_e=!1,g=!1,c=!1;e.initializeWebAssembly=async $=>{if(_e)return Promise.resolve();if(g)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(c)throw new Error("previous call to 'initializeWebAssembly()' failed.");g=!0;const et=$.initTimeout,tt=$.numThreads,nt=$.simd,rt=tt>1&&(()=>{try{return typeof SharedArrayBuffer<"u"&&(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}})(),ot=nt&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}})(),st=$.wasmPaths,it=typeof st=="string"?st:void 0,at=((pt,ht)=>ht?pt?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":pt?"ort-wasm-simd.wasm":"ort-wasm.wasm")(ot,rt),lt=typeof st=="object"?st[at]:void 0;let ut=!1;const ct=[];if(et>0&&ct.push(new Promise(pt=>{setTimeout(()=>{ut=!0,pt()},et)})),ct.push(new Promise((pt,ht)=>{const yt=rt?_:b,xt={locateFile:(ft,wt)=>rt&&ft.endsWith(".worker.js")&&typeof Blob<"u"?URL.createObjectURL(new Blob([s(4154)],{type:"text/javascript"})):ft.endsWith(".wasm")?lt||(it??wt)+at:wt+ft};if(rt)if(typeof Blob>"u")xt.mainScriptUrlOrBlob=h.join(__dirname,"ort-wasm-threaded.js");else{const ft=`var ortWasmThreaded=(function(){var _scriptDir;return ${yt.toString()}})();`;xt.mainScriptUrlOrBlob=new Blob([ft],{type:"text/javascript"})}yt(xt).then(ft=>{g=!1,_e=!0,j=ft,pt()},ft=>{g=!1,c=!0,ht(ft)})})),await Promise.race(ct),ut)throw new Error(`WebAssembly backend initializing failed due to timeout: ${et}ms`)},e.getInstance=()=>{if(_e&&j)return j;throw new Error("WebAssembly is not initialized yet.")},e.dispose=()=>{var $;!_e||g||c||(g=!0,($=j.PThread)===null||$===void 0||$.terminateAllThreads(),j=void 0,g=!1,_e=!1,c=!0)}},1497:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.checkLastError=e.iterateExtraOptions=e.allocWasmString=void 0;const i=s(263);e.allocWasmString=(a,d)=>{const h=(0,i.getInstance)(),b=h.lengthBytesUTF8(a)+1,_=h._malloc(b);return h.stringToUTF8(a,_,b),d.push(_),_},e.iterateExtraOptions=(a,d,h,b)=>{if(typeof a=="object"&&a!==null){if(h.has(a))throw new Error("Circular reference in options");h.add(a)}Object.entries(a).forEach(([_,j])=>{const _e=d?d+_:_;if(typeof j=="object")(0,e.iterateExtraOptions)(j,_e+".",h,b);else if(typeof j=="string"||typeof j=="number")b(_e,j.toString());else{if(typeof j!="boolean")throw new Error("Can't handle extra config type: "+typeof j);b(_e,j?"1":"0")}})},e.checkLastError=a=>{const d=(0,i.getInstance)(),h=d.stackSave();try{const b=d.stackAlloc(8);d._OrtGetLastError(b,b+4);const _=d.HEAP32[b/4],j=d.HEAPU32[b/4+1],_e=j?d.UTF8ToString(j):"";throw new Error(`${a} ERROR_CODE: ${_}, ERROR_MESSAGE: ${_e}`)}finally{d.stackRestore(h)}}},8050:(o,e,s)=>{s.d(e,{Z:()=>d});var i=s(6614),a=s.n(i);function d(){return a()('/*!\n* ONNX Runtime Web v1.16.3\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var e={918:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const n=r(263),a=r(497);t.setRunOptions=e=>{const t=(0,n.getInstance)();let r=0;const o=[],i=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))i.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))i.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(i.terminate=!1);let n=0;return void 0!==(null==e?void 0:e.tag)&&(n=(0,a.allocWasmString)(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,n),0===r&&(0,a.checkLastError)("Can\'t create run options."),void 0!==(null==e?void 0:e.extra)&&(0,a.iterateExtraOptions)(e.extra,"",new WeakSet,((e,n)=>{const i=(0,a.allocWasmString)(e,o),s=(0,a.allocWasmString)(n,o);0!==t._OrtAddRunConfigEntry(r,i,s)&&(0,a.checkLastError)(`Can\'t set a run config entry: ${e} - ${n}.`)})),[r,o]}catch(e){throw 0!==r&&t._OrtReleaseRunOptions(r),o.forEach((e=>t._free(e))),e}}},622:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const n=r(263),a=r(497);t.setSessionOptions=e=>{var t,r,o,i;const s=(0,n.getInstance)();let u=0;const c=[],l=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(l);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=l.graphOptimizationLevel)&&void 0!==t?t:"all"),f=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(r=l.executionMode)&&void 0!==r?r:"sequential"),d="string"==typeof l.logId?(0,a.allocWasmString)(l.logId,c):0,p=null!==(o=l.logSeverityLevel)&&void 0!==o?o:2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);const g=null!==(i=l.logVerbosityLevel)&&void 0!==i?i:0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log verbosity level is not valid: ${g}`);const h="string"==typeof l.optimizedModelFilePath?(0,a.allocWasmString)(l.optimizedModelFilePath,c):0;return u=s._OrtCreateSessionOptions(e,!!l.enableCpuMemArena,!!l.enableMemPattern,f,!!l.enableProfiling,0,d,p,g,h),0===u&&(0,a.checkLastError)("Can\'t create session options."),l.executionProviders&&((e,t,r)=>{for(const o of t){let t="string"==typeof o?o:o.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof o){const t=o;if(null==t?void 0:t.deviceType){const o=(0,a.allocWasmString)("deviceType",r),i=(0,a.allocWasmString)(t.deviceType,r);0!==(0,n.getInstance)()._OrtAddSessionConfigEntry(e,o,i)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'deviceType\' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const o=(0,a.allocWasmString)("powerPreference",r),i=(0,a.allocWasmString)(t.powerPreference,r);0!==(0,n.getInstance)()._OrtAddSessionConfigEntry(e,o,i)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'powerPreference\' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const i=(0,a.allocWasmString)(t,r);0!==(0,n.getInstance)()._OrtAppendExecutionProvider(e,i)&&(0,a.checkLastError)(`Can\'t append execution provider: ${t}.`)}})(u,l.executionProviders,c),void 0!==l.extra&&(0,a.iterateExtraOptions)(l.extra,"",new WeakSet,((e,t)=>{const r=(0,a.allocWasmString)(e,c),n=(0,a.allocWasmString)(t,c);0!==s._OrtAddSessionConfigEntry(u,r,n)&&(0,a.checkLastError)(`Can\'t set a session config entry: ${e} - ${t}.`)})),[u,c]}catch(e){throw 0!==u&&s._OrtReleaseSessionOptions(u),c.forEach((e=>s._free(e))),e}}},917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},259:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const n=r(918),a=r(622),o=r(917),i=r(263),s=r(497);t.initRuntime=async e=>{var t,r;t=e.wasm.numThreads,r=(0,o.logLevelStringToEnum)(e.logLevel),0!==(0,i.getInstance)()._OrtInit(t,r)&&(0,s.checkLastError)("Can\'t initialize onnxruntime.")};const u=new Map;t.createSessionAllocate=e=>{const t=(0,i.getInstance)(),r=t._malloc(e.byteLength);if(0===r)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},t.createSessionFinalize=(e,t)=>{const r=(0,i.getInstance)();let n=0,o=0,c=[];const l=[],f=[];try{[o,c]=(0,a.setSessionOptions)(t),n=r._OrtCreateSession(e[0],e[1],o),0===n&&(0,s.checkLastError)("Can\'t create a session.");const[d,p]=(e=>{const t=(0,i.getInstance)(),r=t.stackSave();try{const r=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,r,r+4)&&(0,s.checkLastError)("Can\'t get session input/output count."),[t.HEAP32[r/4],t.HEAP32[r/4+1]]}finally{t.stackRestore(r)}})(n),g=[],h=[];for(let e=0;e<d;e++){const t=r._OrtGetInputName(n,e);0===t&&(0,s.checkLastError)("Can\'t get an input name."),l.push(t),g.push(r.UTF8ToString(t))}for(let e=0;e<p;e++){const t=r._OrtGetOutputName(n,e);0===t&&(0,s.checkLastError)("Can\'t get an output name."),f.push(t),h.push(r.UTF8ToString(t))}return u.set(n,[n,l,f]),[n,g,h]}catch(e){throw l.forEach((e=>r._OrtFree(e))),f.forEach((e=>r._OrtFree(e))),0!==n&&r._OrtReleaseSession(n),e}finally{r._free(e[0]),0!==o&&r._OrtReleaseSessionOptions(o),c.forEach((e=>r._free(e)))}},t.createSession=(e,r)=>{const n=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(n,r)},t.releaseSession=e=>{const t=(0,i.getInstance)(),r=u.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);const[n,a,o]=r;a.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(n),u.delete(e)},t.run=async(e,t,r,a,c)=>{const l=(0,i.getInstance)(),f=u.get(e);if(!f)throw new Error(`cannot run inference. invalid session id: ${e}`);const[d,p,g]=f,h=t.length,m=a.length;let y=0,v=[];const b=[],w=[];try{[y,v]=(0,n.setRunOptions)(c);for(let e=0;e<h;e++){const t=r[e][0],n=r[e][1],a=r[e][2];let i,u;if(Array.isArray(a)){u=4*a.length,i=l._malloc(u),w.push(i);let e=i/4;for(let t=0;t<a.length;t++){if("string"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);l.HEAPU32[e++]=(0,s.allocWasmString)(a[t],w)}}else u=a.byteLength,i=l._malloc(u),w.push(i),l.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),i);const c=l.stackSave(),f=l.stackAlloc(4*n.length);try{let r=f/4;n.forEach((e=>l.HEAP32[r++]=e));const a=l._OrtCreateTensor((0,o.tensorDataTypeStringToEnum)(t),i,u,f,n.length);0===a&&(0,s.checkLastError)(`Can\'t create tensor for input[${e}].`),b.push(a)}finally{l.stackRestore(c)}}const e=l.stackSave(),i=l.stackAlloc(4*h),u=l.stackAlloc(4*h),f=l.stackAlloc(4*m),_=l.stackAlloc(4*m);try{let e=i/4,r=u/4,n=f/4,c=_/4;for(let n=0;n<h;n++)l.HEAPU32[e++]=b[n],l.HEAPU32[r++]=p[t[n]];for(let e=0;e<m;e++)l.HEAPU32[n++]=0,l.HEAPU32[c++]=g[a[e]];let v=l._OrtRun(d,u,i,h,_,m,f,y);const w=l.jsepRunPromise;w&&void 0!==w.then&&(v=await w);const O=[];0!==v&&(0,s.checkLastError)("failed to call OrtRun().");for(let e=0;e<m;e++){const t=l.HEAPU32[f/4+e],r=l.stackSave(),n=l.stackAlloc(16);let a,i=0;try{v=l._OrtGetTensorData(t,n,n+4,n+8,n+12),0!==v&&(0,s.checkLastError)(`Can\'t access output tensor data on index ${e}.`);let r=n/4;const u=l.HEAPU32[r++];i=l.HEAPU32[r++];const c=l.HEAPU32[r++],f=l.HEAPU32[r++],d=[];for(let e=0;e<f;e++)d.push(l.HEAPU32[c/4+e]);l._OrtFree(c);const p=0===d.length?1:d.reduce(((e,t)=>e*t));if(a=(0,o.tensorDataTypeEnumToString)(u),"string"===a){const e=[];let t=i/4;for(let r=0;r<p;r++){const n=l.HEAPU32[t++],a=r===p-1?void 0:l.HEAPU32[t]-n;e.push(l.UTF8ToString(n,a))}O.push([a,d,e])}else{const e=new((0,o.tensorTypeToTypedArrayConstructor)(a))(p);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(l.HEAPU8.subarray(i,i+e.byteLength)),O.push([a,d,e])}}finally{l.stackRestore(r),"string"===a&&i&&l._free(i),l._OrtReleaseTensor(t)}}return O}finally{l.stackRestore(e)}}finally{b.forEach((e=>l._OrtReleaseTensor(e))),w.forEach((e=>l._free(e))),0!==y&&l._OrtReleaseRunOptions(y),v.forEach((e=>l._free(e)))}},t.endProfiling=e=>{const t=(0,i.getInstance)(),r=u.get(e);if(!r)throw new Error("invalid session id");const n=r[0],a=t._OrtEndProfiling(n);0===a&&(0,s.checkLastError)("Can\'t get an profile file name."),t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const r of e){const e=r[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const i=o(r(449)),s=r(932),u=r(474);let c,l=!1,f=!1,d=!1;t.initializeWebAssembly=async e=>{if(l)return Promise.resolve();if(f)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(d)throw new Error("previous call to \'initializeWebAssembly()\' failed.");f=!0;const t=e.initTimeout,n=e.numThreads,a=e.simd,o=n>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),p=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),g=e.wasmPaths,h="string"==typeof g?g:void 0,m=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(p,o),y="object"==typeof g?g[m]:void 0;let v=!1;const b=[];if(t>0&&b.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),b.push(new Promise(((e,t)=>{const n=o?u:s,a={locateFile:(e,t)=>o&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob?URL.createObjectURL(new Blob([r(154)],{type:"text/javascript"})):e.endsWith(".wasm")?y||(null!=h?h:t)+m:t+e};if(o)if("undefined"==typeof Blob)a.mainScriptUrlOrBlob=i.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${n.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}n(a).then((t=>{f=!1,l=!0,c=t,e()}),(e=>{f=!1,d=!0,t(e)}))}))),await Promise.race(b),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(l&&c)return c;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!l||f||d||(f=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,f=!1,l=!1,d=!0)}},497:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const n=r(263);t.allocWasmString=(e,t)=>{const r=(0,n.getInstance)(),a=r.lengthBytesUTF8(e)+1,o=r._malloc(a);return r.stringToUTF8(e,o,a),t.push(o),o},t.iterateExtraOptions=(e,r,n,a)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,o])=>{const i=r?r+e:e;if("object"==typeof o)(0,t.iterateExtraOptions)(o,i+".",n,a);else if("string"==typeof o||"number"==typeof o)a(i,o.toString());else{if("boolean"!=typeof o)throw new Error("Can\'t handle extra config type: "+typeof o);a(i,o?"1":"0")}}))},t.checkLastError=e=>{const t=(0,n.getInstance)(),r=t.stackSave();try{const r=t.stackAlloc(8);t._OrtGetLastError(r,r+4);const n=t.HEAP32[r/4],a=t.HEAPU32[r/4+1],o=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}},474:(e,t,r)=>{var _scriptDir,n=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return k.buffer!=x.buffer&&Y(),x}function n(){return k.buffer!=x.buffer&&Y(),I}function a(){return k.buffer!=x.buffer&&Y(),U}function o(){return k.buffer!=x.buffer&&Y(),L}function i(){return k.buffer!=x.buffer&&Y(),W}var s,u,c=e;c.ready=new Promise(((e,t)=>{s=e,u=t}));var l,f,d,p=Object.assign({},c),g="./this.program",h=(e,t)=>{throw t},m="object"==typeof window,y="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=c.ENVIRONMENT_IS_PTHREAD||!1,w="";function _(e){return c.locateFile?c.locateFile(e,w):w+e}if(v){var O=r(384),S=r(908);let t;w=y?S.dirname(w)+"/":__dirname+"/",l=(e,t)=>(e=e.startsWith("file://")?new URL(e):S.normalize(e),O.readFileSync(e,t?void 0:"utf8")),d=e=>((e=l(e,!0)).buffer||(e=new Uint8Array(e)),e),f=(e,t,r,n=!0)=>{e=e.startsWith("file://")?new URL(e):S.normalize(e),O.readFile(e,n?void 0:"utf8",((e,a)=>{e?r(e):t(n?a.buffer:a)}))},!c.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(e,t)=>{throw process.exitCode=e,t},c.inspect=()=>"[Emscripten Module object]";try{t=r(925)}catch(e){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),e}global.Worker=t.Worker}else(m||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)}));v&&"undefined"==typeof performance&&(global.performance=r(953).performance);var E=console.log.bind(console),A=console.error.bind(console);v&&(E=(...e)=>O.writeSync(1,e.join(" ")+"\\n"),A=(...e)=>O.writeSync(2,e.join(" ")+"\\n"));var T,M=c.print||E,R=c.printErr||A;Object.assign(c,p),p=null,c.thisProgram&&(g=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(T=c.wasmBinary);var F=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&te("no native wasm support detected");var k,C,P,D,x,I,U,L,W,H=!1;function Y(){var e=k.buffer;c.HEAP8=x=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=U=new Int32Array(e),c.HEAPU8=I=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=L=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=W=new Float64Array(e)}var j=c.INITIAL_MEMORY||16777216;if(5242880<=j||te("INITIAL_MEMORY should be larger than STACK_SIZE, was "+j+"! (STACK_SIZE=5242880)"),b)k=c.wasmMemory;else if(c.wasmMemory)k=c.wasmMemory;else if(!((k=new WebAssembly.Memory({initial:j/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&R("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Y(),j=k.buffer.byteLength;var z,G=[],N=[],B=[],$=0;function q(){return F||0<$}var V,J,X=0,K=null,Z=null;function Q(){X++,c.monitorRunDependencies&&c.monitorRunDependencies(X)}function ee(){if(X--,c.monitorRunDependencies&&c.monitorRunDependencies(X),0==X&&(null!==K&&(clearInterval(K),K=null),Z)){var e=Z;Z=null,e()}}function te(e){throw c.onAbort&&c.onAbort(e),R(e="Aborted("+e+")"),H=!0,D=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function re(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){if(e==V&&T)return new Uint8Array(T);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}function ae(e,t,r){return function(e){if(!T&&(m||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>ne(e)));if(f)return new Promise(((t,r)=>{f(e,(e=>t(new Uint8Array(e))),r)}))}return Promise.resolve().then((()=>ne(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(r,(e=>{R("failed to asynchronously prepare wasm: "+e),te(e)}))}function oe(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function ie(e){e.terminate(),e.onmessage=()=>{}}function se(e){(e=ge.Fa[e])||te(),ge.fb(e)}function ue(e){var t=ge.Za();if(!t)return 6;ge.Ia.push(t),ge.Fa[e.Ha]=t,t.Ha=e.Ha;var r={cmd:"run",start_routine:e.gb,arg:e.Ya,pthread_ptr:e.Ha};return v&&t.unref(),t.postMessage(r,e.mb),0}re(V="ort-wasm-threaded.wasm")||(V=_(V));var ce="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,le=(e,t,r)=>{var n=(t>>>=0)+r;for(r=t;e[r]&&!(r>=n);)++r;if(16<r-t&&e.buffer&&ce)return ce.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(n="";t<r;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))n+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?n+=String.fromCharCode(a):(a-=65536,n+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else n+=String.fromCharCode(a)}return n},fe=(e,t)=>(e>>>=0)?le(n(),e,t):"";function de(e){if(b)return qe(1,1,e);D=e,q()||(ge.hb(),c.onExit&&c.onExit(e),H=!0),h(e,new oe(e))}var pe=e=>{if(D=e,b)throw me(e),"unwind";de(e)},ge={La:[],Ia:[],Ta:[],Fa:{},Pa:function(){b?ge.ab():ge.$a()},$a:function(){G.unshift((()=>{Q(),ge.bb((()=>ee()))}))},ab:function(){ge.receiveObjectTransfer=ge.eb,ge.threadInitTLS=ge.Sa,ge.setExitStatus=ge.Ra,F=!1},Ra:function(e){D=e},rb:["$terminateWorker"],hb:function(){for(var e of ge.Ia)ie(e);for(e of ge.La)ie(e);ge.La=[],ge.Ia=[],ge.Fa=[]},fb:function(e){var t=e.Ha;delete ge.Fa[t],ge.La.push(e),ge.Ia.splice(ge.Ia.indexOf(e),1),e.Ha=0,yt(t)},eb:function(){},Sa:function(){ge.Ta.forEach((e=>e()))},cb:e=>new Promise((t=>{e.onmessage=r=>{var n=(r=r.data).cmd;if(r.targetThread&&r.targetThread!=dt()){var a=ge.Fa[r.qb];a?a.postMessage(r,r.transferList):R(\'Internal error! Worker sent a message "\'+n+\'" to target pthread \'+r.targetThread+", but that thread no longer exists!")}else"checkMailbox"===n?He():"spawnThread"===n?ue(r):"cleanupThread"===n?se(r.thread):"killThread"===n?(r=r.thread,n=ge.Fa[r],delete ge.Fa[r],ie(n),yt(r),ge.Ia.splice(ge.Ia.indexOf(n),1),n.Ha=0):"cancelThread"===n?ge.Fa[r.thread].postMessage({cmd:"cancel"}):"loaded"===n?(e.loaded=!0,t(e)):"alert"===n?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===n?c[r.handler](...r.args):n&&R("worker sent an unknown command "+n)},e.onerror=e=>{throw R("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var r,n=[];for(r of["onExit","onAbort","print","printErr"])c.hasOwnProperty(r)&&n.push(r);e.postMessage({cmd:"load",handlers:n,urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:k,wasmModule:P})})),bb:function(e){e()},Xa:function(){var e=_("ort-wasm-threaded.worker.js");e=new Worker(e),ge.La.push(e)},Za:function(){return 0==ge.La.length&&(ge.Xa(),ge.cb(ge.La[0])),ge.La.pop()}};c.PThread=ge;var he=e=>{for(;0<e.length;)e.shift()(c)};function me(e){if(b)return qe(2,0,e);pe(e)}c.establishStackSpace=function(){var e=dt(),t=a()[e+52>>2>>>0];e=a()[e+56>>2>>>0],_t(t,t-e),St(t)};var ye=[];function ve(e){this.Oa=e-24,this.Wa=function(e){o()[this.Oa+4>>2>>>0]=e},this.Va=function(e){o()[this.Oa+8>>2>>>0]=e},this.Pa=function(e,t){this.Ua(),this.Wa(e),this.Va(t)},this.Ua=function(){o()[this.Oa+16>>2>>>0]=0}}function be(e,t,r,n){return b?qe(3,1,e,t,r,n):we(e,t,r,n)}function we(e,t,r,n){if(e>>>=0,t>>>=0,r>>>=0,n>>>=0,"undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return b&&0===a.length?be(e,t,r,n):(e={gb:r,Ha:e,Ya:n,mb:a},b?(e.ob="spawnThread",postMessage(e,a),0):ue(e))}function _e(e,t,r){return b?qe(4,1,e,t,r):0}function Oe(e,t){if(b)return qe(5,1,e,t)}c.invokeEntryPoint=function(e,t){var r=ye[e];r||(e>=ye.length&&(ye.length=e+1),ye[e]=r=z.get(e)),e=r(t),q()?ge.Ra(e):vt(e)};var Se=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);127>=n?t++:2047>=n?t+=2:55296<=n&&57343>=n?(t+=4,++r):t+=3}return t},Ee=(e,t,r,n)=>{if(!(0<n))return 0;var a=r>>>=0;n=r+n-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(r>=n)break;t[r++>>>0]=i}else{if(2047>=i){if(r+1>=n)break;t[r++>>>0]=192|i>>6}else{if(65535>=i){if(r+2>=n)break;t[r++>>>0]=224|i>>12}else{if(r+3>=n)break;t[r++>>>0]=240|i>>18,t[r++>>>0]=128|i>>12&63}t[r++>>>0]=128|i>>6&63}t[r++>>>0]=128|63&i}}return t[r>>>0]=0,r-a},Ae=(e,t,r)=>Ee(e,n(),t,r);function Te(e,t){if(b)return qe(6,1,e,t)}function Me(e,t,r){if(b)return qe(7,1,e,t,r)}function Re(e,t,r){return b?qe(8,1,e,t,r):0}function Fe(e,t){if(b)return qe(9,1,e,t)}function ke(e,t,r){if(b)return qe(10,1,e,t,r)}function Ce(e,t,r,n){if(b)return qe(11,1,e,t,r,n)}function Pe(e,t,r,n){if(b)return qe(12,1,e,t,r,n)}function De(e,t,r,n){if(b)return qe(13,1,e,t,r,n)}function xe(e){if(b)return qe(14,1,e)}function Ie(e,t){if(b)return qe(15,1,e,t)}function Ue(e,t,r){if(b)return qe(16,1,e,t,r)}var Le=e=>{if(!H)try{if(e(),!q())try{b?vt(D):pe(D)}catch(e){e instanceof oe||"unwind"==e||h(1,e)}}catch(e){e instanceof oe||"unwind"==e||h(1,e)}};function We(e){e>>>=0,"function"==typeof Atomics.nb&&(Atomics.nb(a(),e>>2,e).value.then(He),e+=128,Atomics.store(a(),e>>2,1))}function He(){var e=dt();e&&(We(e),Le((()=>bt())))}c.__emscripten_thread_mailbox_await=We,c.checkMailbox=He;var Ye=e=>0==e%4&&(0!=e%100||0==e%400),je=[0,31,60,91,121,152,182,213,244,274,305,335],ze=[0,31,59,90,120,151,181,212,243,273,304,334];function Ge(e,t,r,n,a,o,i,s){return b?qe(17,1,e,t,r,n,a,o,i,s):-52}function Ne(e,t,r,n,a,o,i){if(b)return qe(18,1,e,t,r,n,a,o,i)}var Be=e=>{var t=Se(e)+1,r=pt(t);return r&&Ae(e,r,t),r},$e=e=>{var t=Ot();return e=e(),St(t),e};function qe(e,t){var r=arguments.length-2,n=arguments;return $e((()=>{for(var a=Et(8*r),o=a>>3,s=0;s<r;s++){var u=n[2+s];i()[o+s>>>0]=u}return mt(e,r,a,t)}))}var Ve,Je=[],Xe={},Ke=()=>{if(!Ve){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"};for(e in Xe)void 0===Xe[e]?delete t[e]:t[e]=Xe[e];var r=[];for(e in t)r.push(`${e}=${t[e]}`);Ve=r}return Ve};function Ze(e,r){if(b)return qe(19,1,e,r);e>>>=0,r>>>=0;var n=0;return Ke().forEach((function(a,i){var s=r+n;for(i=o()[e+4*i>>2>>>0]=s,s=0;s<a.length;++s)t()[i++>>0>>>0]=a.charCodeAt(s);t()[i>>0>>>0]=0,n+=a.length+1})),0}function Qe(e,t){if(b)return qe(20,1,e,t);e>>>=0,t>>>=0;var r=Ke();o()[e>>2>>>0]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),o()[t>>2>>>0]=n,0}function et(e){return b?qe(21,1,e):52}function tt(e,t,r,n){return b?qe(22,1,e,t,r,n):52}function rt(e,t,r,n,a){return b?qe(23,1,e,t,r,n,a):70}var nt=[null,[],[]];function at(e,t,r,a){if(b)return qe(24,1,e,t,r,a);t>>>=0,r>>>=0,a>>>=0;for(var i=0,s=0;s<r;s++){var u=o()[t>>2>>>0],c=o()[t+4>>2>>>0];t+=8;for(var l=0;l<c;l++){var f=n()[u+l>>>0],d=nt[e];0===f||10===f?((1===e?M:R)(le(d,0)),d.length=0):d.push(f)}i+=c}return o()[a>>2>>>0]=i,0}var ot=e=>(ot=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(v)try{var e=r(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}te("initRandomDevice")})())(e),it=[31,29,31,30,31,30,31,31,30,31,30,31],st=[31,28,31,30,31,30,31,31,30,31,30,31],ut=(e,r)=>{t().set(e,r>>>0)};function ct(e,t,r,n){function o(e,t,r){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=r[0]+e;return e}function i(e,t){return o(e,t,"0")}function s(e,t){function r(e){return 0>e?-1:0<e?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var t=e.Ja;for(e=new Date(new Date(e.Ka+1900,0,1).getTime());0<t;){var r=e.getMonth(),n=(Ye(e.getFullYear())?it:st)[r];if(!(t>n-e.getDate())){e.setDate(e.getDate()+t);break}t-=n-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return r=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),r=u(r),0>=s(t,e)?0>=s(r,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,r>>>=0,n>>>=0;var l=a()[n+40>>2>>>0];for(var f in n={kb:a()[n>>2>>>0],jb:a()[n+4>>2>>>0],Ma:a()[n+8>>2>>>0],Qa:a()[n+12>>2>>>0],Na:a()[n+16>>2>>>0],Ka:a()[n+20>>2>>>0],Ga:a()[n+24>>2>>>0],Ja:a()[n+28>>2>>>0],sb:a()[n+32>>2>>>0],ib:a()[n+36>>2>>>0],lb:l?fe(l):""},r=fe(r),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(f,"g"),l[f]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(f in l={"%a":e=>d[e.Ga].substring(0,3),"%A":e=>d[e.Ga],"%b":e=>p[e.Na].substring(0,3),"%B":e=>p[e.Na],"%C":e=>i((e.Ka+1900)/100|0,2),"%d":e=>i(e.Qa,2),"%e":e=>o(e.Qa,2," "),"%g":e=>c(e).toString().substring(2),"%G":e=>c(e),"%H":e=>i(e.Ma,2),"%I":e=>(0==(e=e.Ma)?e=12:12<e&&(e-=12),i(e,2)),"%j":e=>{for(var t=0,r=0;r<=e.Na-1;t+=(Ye(e.Ka+1900)?it:st)[r++]);return i(e.Qa+t,3)},"%m":e=>i(e.Na+1,2),"%M":e=>i(e.jb,2),"%n":()=>"\\n","%p":e=>0<=e.Ma&&12>e.Ma?"AM":"PM","%S":e=>i(e.kb,2),"%t":()=>"\\t","%u":e=>e.Ga||7,"%U":e=>i(Math.floor((e.Ja+7-e.Ga)/7),2),"%V":e=>{var t=Math.floor((e.Ja+7-(e.Ga+6)%7)/7);if(2>=(e.Ga+371-e.Ja-2)%7&&t++,t)53==t&&(4==(r=(e.Ga+371-e.Ja)%7)||3==r&&Ye(e.Ka)||(t=1));else{t=52;var r=(e.Ga+7-e.Ja-1)%7;(4==r||5==r&&Ye(e.Ka%400-1))&&t++}return i(t,2)},"%w":e=>e.Ga,"%W":e=>i(Math.floor((e.Ja+7-(e.Ga+6)%7)/7),2),"%y":e=>(e.Ka+1900).toString().substring(2),"%Y":e=>e.Ka+1900,"%z":e=>{var t=0<=(e=e.ib);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.lb,"%%":()=>"%"},r=r.replace(/%%/g,"\\0\\0"),l)r.includes(f)&&(r=r.replace(new RegExp(f,"g"),l[f](n)));return f=function(e){var t=Array(Se(e)+1);return Ee(e,t,0,t.length),t}(r=r.replace(/\\0\\0/g,"%")),f.length>t?0:(ut(f,e),f.length-1)}ge.Pa();var lt=[null,de,me,be,_e,Oe,Te,Me,Re,Fe,ke,Ce,Pe,De,xe,Ie,Ue,Ge,Ne,Ze,Qe,et,tt,rt,at],ft={b:function(e,t,r){throw new ve(e>>>=0).Pa(t>>>0,r>>>0),e},N:function(e){gt(e>>>0,!y,1,!m,131072,!1),ge.Sa()},k:function(e){e>>>=0,b?postMessage({cmd:"cleanupThread",thread:e}):se(e)},I:we,h:_e,T:Oe,E:Te,G:Me,U:Re,R:Fe,J:ke,Q:Ce,o:Pe,F:De,C:xe,S:Ie,D:Ue,q:()=>!0,A:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>He())):b?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=ge.Fa[e])&&e.postMessage({cmd:"checkMailbox"})},L:function(){return-1},M:We,p:function(e){v&&ge.Fa[e>>>0].ref()},t:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),a()[r>>2>>>0]=e.getUTCSeconds(),a()[r+4>>2>>>0]=e.getUTCMinutes(),a()[r+8>>2>>>0]=e.getUTCHours(),a()[r+12>>2>>>0]=e.getUTCDate(),a()[r+16>>2>>>0]=e.getUTCMonth(),a()[r+20>>2>>>0]=e.getUTCFullYear()-1900,a()[r+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[r+28>>2>>>0]=e},u:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),a()[r>>2>>>0]=e.getSeconds(),a()[r+4>>2>>>0]=e.getMinutes(),a()[r+8>>2>>>0]=e.getHours(),a()[r+12>>2>>>0]=e.getDate(),a()[r+16>>2>>>0]=e.getMonth(),a()[r+20>>2>>>0]=e.getFullYear()-1900,a()[r+24>>2>>>0]=e.getDay(),t=(Ye(e.getFullYear())?je:ze)[e.getMonth()]+e.getDate()-1|0,a()[r+28>>2>>>0]=t,a()[r+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var n=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=n&&e.getTimezoneOffset()==Math.min(n,t)),a()[r+32>>2>>>0]=e},v:function(e){e>>>=0;var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),r=a()[e+32>>2>>>0],n=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(i,o);return 0>r?a()[e+32>>2>>>0]=Number(o!=i&&s==n):0<r!=(s==n)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<r?s:o)-n))),a()[e+24>>2>>>0]=t.getDay(),r=(Ye(t.getFullYear())?je:ze)[t.getMonth()]+t.getDate()-1|0,a()[e+28>>2>>>0]=r,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,wt((J=e,1<=+Math.abs(J)?0<J?+Math.floor(J/4294967296)>>>0:~~+Math.ceil((J-+(~~J>>>0))/4294967296)>>>0:0)),e>>>0},r:Ge,s:Ne,z:function(e,t,r){function n(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,r>>>=0;var i=(new Date).getFullYear(),s=new Date(i,0,1),u=new Date(i,6,1);i=s.getTimezoneOffset();var c=u.getTimezoneOffset(),l=Math.max(i,c);o()[e>>2>>>0]=60*l,a()[t>>2>>>0]=Number(i!=c),e=n(s),t=n(u),e=Be(e),t=Be(t),c<i?(o()[r>>2>>>0]=e,o()[r+4>>2>>>0]=t):(o()[r>>2>>>0]=t,o()[r+4>>2>>>0]=e)},c:()=>{te("")},l:function(){},i:function(){return Date.now()},V:()=>{throw $+=1,"unwind"},B:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return v?r(993).cpus().length:navigator.hardwareConcurrency},K:function(e,t,r,n){for(ge.pb=t>>>0,Je.length=r,t=n>>>0>>3,n=0;n<r;n++)Je[n]=i()[t+n>>>0];return lt[e].apply(null,Je)},y:function(e){e>>>=0;var t=n().length;if(e<=t||4294901760<e)return!1;for(var r=1;4>=r;r*=2){var a=t*(1+.2/r);a=Math.min(a,e+100663296);var o=Math;a=Math.max(e,a);e:{o=o.min.call(o,4294901760,a+(65536-a%65536)%65536)-k.buffer.byteLength+65535>>>16;try{k.grow(o),Y();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},O:Ze,P:Qe,j:pe,g:et,n:tt,w:rt,m:at,x:function(e,t){return e>>>=0,t>>>=0,ot(n().subarray(e>>>0,e+t>>>0)),0},a:k||c.wasmMemory,H:ct,d:function(e,t,r,n){return ct(e>>>0,t>>>0,r>>>0,n>>>0)}};!function(){function e(e,t){return e=e.exports,C=e=function(e){var t=e=>()=>e()>>>0,r=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=r(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=r(e.stackAlloc),e}(e),ge.Ta.push(C.sa),z=C.ta,N.unshift(C.W),P=t,ee(),e}var t={a:ft};if(Q(),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){R("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var r=V;return T||"function"!=typeof WebAssembly.instantiateStreaming||re(r)||r.startsWith("file://")||v||"function"!=typeof fetch?ae(r,e,t):fetch(r,{credentials:"same-origin"}).then((n=>WebAssembly.instantiateStreaming(n,e).then(t,(function(n){return R("wasm streaming compile failed: "+n),R("falling back to ArrayBuffer instantiation"),ae(r,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),c._OrtInit=(e,t)=>(c._OrtInit=C.X)(e,t),c._OrtGetLastError=(e,t)=>(c._OrtGetLastError=C.Y)(e,t),c._OrtCreateSessionOptions=(e,t,r,n,a,o,i,s,u,l)=>(c._OrtCreateSessionOptions=C.Z)(e,t,r,n,a,o,i,s,u,l),c._OrtAppendExecutionProvider=(e,t)=>(c._OrtAppendExecutionProvider=C._)(e,t),c._OrtAddSessionConfigEntry=(e,t,r)=>(c._OrtAddSessionConfigEntry=C.$)(e,t,r),c._OrtReleaseSessionOptions=e=>(c._OrtReleaseSessionOptions=C.aa)(e),c._OrtCreateSession=(e,t,r)=>(c._OrtCreateSession=C.ba)(e,t,r),c._OrtReleaseSession=e=>(c._OrtReleaseSession=C.ca)(e),c._OrtGetInputOutputCount=(e,t,r)=>(c._OrtGetInputOutputCount=C.da)(e,t,r),c._OrtGetInputName=(e,t)=>(c._OrtGetInputName=C.ea)(e,t),c._OrtGetOutputName=(e,t)=>(c._OrtGetOutputName=C.fa)(e,t),c._OrtFree=e=>(c._OrtFree=C.ga)(e),c._OrtCreateTensor=(e,t,r,n,a)=>(c._OrtCreateTensor=C.ha)(e,t,r,n,a),c._OrtGetTensorData=(e,t,r,n,a)=>(c._OrtGetTensorData=C.ia)(e,t,r,n,a),c._OrtReleaseTensor=e=>(c._OrtReleaseTensor=C.ja)(e),c._OrtCreateRunOptions=(e,t,r,n)=>(c._OrtCreateRunOptions=C.ka)(e,t,r,n),c._OrtAddRunConfigEntry=(e,t,r)=>(c._OrtAddRunConfigEntry=C.la)(e,t,r),c._OrtReleaseRunOptions=e=>(c._OrtReleaseRunOptions=C.ma)(e),c._OrtRun=(e,t,r,n,a,o,i,s)=>(c._OrtRun=C.na)(e,t,r,n,a,o,i,s),c._OrtEndProfiling=e=>(c._OrtEndProfiling=C.oa)(e);var dt=c._pthread_self=()=>(dt=c._pthread_self=C.pa)(),pt=c._malloc=e=>(pt=c._malloc=C.qa)(e);c._free=e=>(c._free=C.ra)(e),c.__emscripten_tls_init=()=>(c.__emscripten_tls_init=C.sa)();var gt=c.__emscripten_thread_init=(e,t,r,n,a,o)=>(gt=c.__emscripten_thread_init=C.ua)(e,t,r,n,a,o);c.__emscripten_thread_crashed=()=>(c.__emscripten_thread_crashed=C.va)();var ht,mt=(e,t,r,n)=>(mt=C.wa)(e,t,r,n),yt=e=>(yt=C.xa)(e),vt=c.__emscripten_thread_exit=e=>(vt=c.__emscripten_thread_exit=C.ya)(e),bt=c.__emscripten_check_mailbox=()=>(bt=c.__emscripten_check_mailbox=C.za)(),wt=e=>(wt=C.Aa)(e),_t=(e,t)=>(_t=C.Ba)(e,t),Ot=()=>(Ot=C.Ca)(),St=e=>(St=C.Da)(e),Et=e=>(Et=C.Ea)(e);function At(){function e(){if(!ht&&(ht=!0,c.calledRun=!0,!H)&&(b||he(N),s(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!b)){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();B.unshift(e)}he(B)}}if(!(0<X))if(b)s(c),b||he(N),startWorker(c);else{if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)G.unshift(c.preRun.shift());he(G),0<X||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),e()}),1)):e())}}if(c.keepRuntimeAlive=q,c.wasmMemory=k,c.stackAlloc=Et,c.stackSave=Ot,c.stackRestore=St,c.UTF8ToString=fe,c.stringToUTF8=Ae,c.lengthBytesUTF8=Se,c.ExitStatus=oe,c.PThread=ge,Z=function e(){ht||At(),ht||(Z=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return At(),e.ready});e.exports=n},932:(e,t,r)=>{var _scriptDir,n=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,n,a=e;a.ready=new Promise(((e,r)=>{t=e,n=r}));var o,i,s,u=Object.assign({},a),c="./this.program",l=(e,t)=>{throw t},f="object"==typeof window,d="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";if(p){var h=r(384),m=r(908);g=d?m.dirname(g)+"/":__dirname+"/",o=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),h.readFileSync(e,t?void 0:"utf8")),s=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),i=(e,t,r,n=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),h.readFile(e,n?void 0:"utf8",((e,a)=>{e?r(e):t(n?a.buffer:a)}))},!a.thisProgram&&1<process.argv.length&&(c=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),l=(e,t)=>{throw process.exitCode=e,t},a.inspect=()=>"[Emscripten Module object]"}else(f||d)&&(d?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),i=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)});var y,v=a.print||console.log.bind(console),b=a.printErr||console.error.bind(console);Object.assign(a,u),u=null,a.thisProgram&&(c=a.thisProgram),a.quit&&(l=a.quit),a.wasmBinary&&(y=a.wasmBinary);var w=a.noExitRuntime||!0;"object"!=typeof WebAssembly&&W("no native wasm support detected");var _,O,S,E,A,T,M=!1;function R(){var e=_.buffer;a.HEAP8=S=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=A=new Int32Array(e),a.HEAPU8=E=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=T=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}var F=[],k=[],C=[];function P(){var e=a.preRun.shift();F.unshift(e)}var D,x,I=0,U=null,L=null;function W(e){throw a.onAbort&&a.onAbort(e),b(e="Aborted("+e+")"),M=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),n(e),e}function H(e){return e.startsWith("data:application/octet-stream;base64,")}if(!H(D="ort-wasm.wasm")){var Y=D;D=a.locateFile?a.locateFile(Y,g):g+Y}function j(e){if(e==D&&y)return new Uint8Array(y);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function z(e,t,r){return function(e){if(!y&&(f||d)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>j(e)));if(i)return new Promise(((t,r)=>{i(e,(e=>t(new Uint8Array(e))),r)}))}return Promise.resolve().then((()=>j(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(r,(e=>{b("failed to asynchronously prepare wasm: "+e),W(e)}))}function G(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var N=e=>{for(;0<e.length;)e.shift()(a)};function B(e){this.qa=e-24,this.va=function(e){T[this.qa+4>>2>>>0]=e},this.ua=function(e){T[this.qa+8>>2>>>0]=e},this.sa=function(e,t){this.ta(),this.va(e),this.ua(t)},this.ta=function(){T[this.qa+16>>2>>>0]=0}}var $,q="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,V=(e,t,r)=>{var n=(t>>>=0)+r;for(r=t;e[r]&&!(r>=n);)++r;if(16<r-t&&e.buffer&&q)return q.decode(e.subarray(t,r));for(n="";t<r;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))n+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?n+=String.fromCharCode(a):(a-=65536,n+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else n+=String.fromCharCode(a)}return n},J=(e,t)=>(e>>>=0)?V(E,e,t):"",X=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);127>=n?t++:2047>=n?t+=2:55296<=n&&57343>=n?(t+=4,++r):t+=3}return t},K=(e,t,r,n)=>{if(!(0<n))return 0;var a=r>>>=0;n=r+n-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(r>=n)break;t[r++>>>0]=i}else{if(2047>=i){if(r+1>=n)break;t[r++>>>0]=192|i>>6}else{if(65535>=i){if(r+2>=n)break;t[r++>>>0]=224|i>>12}else{if(r+3>=n)break;t[r++>>>0]=240|i>>18,t[r++>>>0]=128|i>>12&63}t[r++>>>0]=128|i>>6&63}t[r++>>>0]=128|63&i}}return t[r>>>0]=0,r-a},Z=e=>0==e%4&&(0!=e%100||0==e%400),Q=[0,31,60,91,121,152,182,213,244,274,305,335],ee=[0,31,59,90,120,151,181,212,243,273,304,334],te=e=>{var t=X(e)+1,r=le(t);return r&&K(e,E,r,t),r},re={},ne=()=>{if(!$){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:c||"./this.program"};for(e in re)void 0===re[e]?delete t[e]:t[e]=re[e];var r=[];for(e in t)r.push(`${e}=${t[e]}`);$=r}return $},ae=[null,[],[]],oe=e=>(oe=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>crypto.getRandomValues(e);if(p)try{var e=r(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}W("initRandomDevice")})())(e),ie=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function ue(e,t,r,n){function a(e,t,r){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=r[0]+e;return e}function o(e,t){return a(e,t,"0")}function i(e,t){function r(e){return 0>e?-1:0<e?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.ma;for(e=new Date(new Date(e.na+1900,0,1).getTime());0<t;){var r=e.getMonth(),n=(Z(e.getFullYear())?ie:se)[r];if(!(t>n-e.getDate())){e.setDate(e.getDate()+t);break}t-=n-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return r=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),r=s(r),0>=i(t,e)?0>=i(r,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,r>>>=0;var c=A[40+(n>>>=0)>>2>>>0];for(var l in n={ya:A[n>>2>>>0],xa:A[n+4>>2>>>0],oa:A[n+8>>2>>>0],ra:A[n+12>>2>>>0],pa:A[n+16>>2>>>0],na:A[n+20>>2>>>0],ha:A[n+24>>2>>>0],ma:A[n+28>>2>>>0],Aa:A[n+32>>2>>>0],wa:A[n+36>>2>>>0],za:c?J(c):""},r=J(r),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(l,"g"),c[l]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),d="January February March April May June July August September October November December".split(" ");for(l in c={"%a":e=>f[e.ha].substring(0,3),"%A":e=>f[e.ha],"%b":e=>d[e.pa].substring(0,3),"%B":e=>d[e.pa],"%C":e=>o((e.na+1900)/100|0,2),"%d":e=>o(e.ra,2),"%e":e=>a(e.ra,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>o(e.oa,2),"%I":e=>(0==(e=e.oa)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,r=0;r<=e.pa-1;t+=(Z(e.na+1900)?ie:se)[r++]);return o(e.ra+t,3)},"%m":e=>o(e.pa+1,2),"%M":e=>o(e.xa,2),"%n":()=>"\\n","%p":e=>0<=e.oa&&12>e.oa?"AM":"PM","%S":e=>o(e.ya,2),"%t":()=>"\\t","%u":e=>e.ha||7,"%U":e=>o(Math.floor((e.ma+7-e.ha)/7),2),"%V":e=>{var t=Math.floor((e.ma+7-(e.ha+6)%7)/7);if(2>=(e.ha+371-e.ma-2)%7&&t++,t)53==t&&(4==(r=(e.ha+371-e.ma)%7)||3==r&&Z(e.na)||(t=1));else{t=52;var r=(e.ha+7-e.ma-1)%7;(4==r||5==r&&Z(e.na%400-1))&&t++}return o(t,2)},"%w":e=>e.ha,"%W":e=>o(Math.floor((e.ma+7-(e.ha+6)%7)/7),2),"%y":e=>(e.na+1900).toString().substring(2),"%Y":e=>e.na+1900,"%z":e=>{var t=0<=(e=e.wa);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.za,"%%":()=>"%"},r=r.replace(/%%/g,"\\0\\0"),c)r.includes(l)&&(r=r.replace(new RegExp(l,"g"),c[l](n)));return l=function(e){var t=Array(X(e)+1);return K(e,t,0,t.length),t}(r=r.replace(/\\0\\0/g,"%")),l.length>t?0:(S.set(l,e>>>0),l.length-1)}var ce={a:function(e,t,r){throw new B(e>>>=0).sa(t>>>0,r>>>0),e},e:function(){return 0},I:function(){},y:function(){},A:function(){},K:function(){return 0},G:function(){},B:function(){},F:function(){},g:function(){},z:function(){},w:function(){},H:function(){},x:function(){},k:()=>!0,n:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),A[r>>2>>>0]=e.getUTCSeconds(),A[r+4>>2>>>0]=e.getUTCMinutes(),A[r+8>>2>>>0]=e.getUTCHours(),A[r+12>>2>>>0]=e.getUTCDate(),A[r+16>>2>>>0]=e.getUTCMonth(),A[r+20>>2>>>0]=e.getUTCFullYear()-1900,A[r+24>>2>>>0]=e.getUTCDay(),A[r+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(e,t,r){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,r>>>=0,e=new Date(1e3*e),A[r>>2>>>0]=e.getSeconds(),A[r+4>>2>>>0]=e.getMinutes(),A[r+8>>2>>>0]=e.getHours(),A[r+12>>2>>>0]=e.getDate(),A[r+16>>2>>>0]=e.getMonth(),A[r+20>>2>>>0]=e.getFullYear()-1900,A[r+24>>2>>>0]=e.getDay(),A[r+28>>2>>>0]=(Z(e.getFullYear())?Q:ee)[e.getMonth()]+e.getDate()-1|0,A[r+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var n=new Date(e.getFullYear(),0,1).getTimezoneOffset();A[r+32>>2>>>0]=0|(t!=n&&e.getTimezoneOffset()==Math.min(n,t))},p:function(e){e>>>=0;var t=new Date(A[e+20>>2>>>0]+1900,A[e+16>>2>>>0],A[e+12>>2>>>0],A[e+8>>2>>>0],A[e+4>>2>>>0],A[e>>2>>>0],0),r=A[e+32>>2>>>0],n=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(o,a);return 0>r?A[e+32>>2>>>0]=Number(a!=o&&i==n):0<r!=(i==n)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<r?i:a)-n))),A[e+24>>2>>>0]=t.getDay(),A[e+28>>2>>>0]=(Z(t.getFullYear())?Q:ee)[t.getMonth()]+t.getDate()-1|0,A[e>>2>>>0]=t.getSeconds(),A[e+4>>2>>>0]=t.getMinutes(),A[e+8>>2>>>0]=t.getHours(),A[e+12>>2>>>0]=t.getDate(),A[e+16>>2>>>0]=t.getMonth(),A[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,de((x=e,1<=+Math.abs(x)?0<x?+Math.floor(x/4294967296)>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)),e>>>0},l:function(){return-52},m:function(){},u:function(e,t,r){function n(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}r>>>=0;var a=(new Date).getFullYear(),o=new Date(a,0,1),i=new Date(a,6,1);a=o.getTimezoneOffset();var s=i.getTimezoneOffset();T[e>>>0>>2>>>0]=60*Math.max(a,s),A[t>>>0>>2>>>0]=Number(a!=s),e=n(o),t=n(i),e=te(e),t=te(t),s<a?(T[r>>2>>>0]=e,T[r+4>>2>>>0]=t):(T[r>>2>>>0]=t,T[r+4>>2>>>0]=e)},d:()=>{W("")},h:function(){return Date.now()},v:function(){return 4294901760},b:()=>performance.now(),J:function(e,t,r){return t>>>=0,E.copyWithin(e>>>0>>>0,t>>>0,t+(r>>>0)>>>0)},t:function(e){e>>>=0;var t=E.length;if(4294901760<e)return!1;for(var r=1;4>=r;r*=2){var n=t*(1+.2/r);n=Math.min(n,e+100663296);var a=Math;n=Math.max(e,n);e:{a=a.min.call(a,4294901760,n+(65536-n%65536)%65536)-_.buffer.byteLength+65535>>>16;try{_.grow(a),R();var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},D:function(e,t){e>>>=0,t>>>=0;var r=0;return ne().forEach((function(n,a){var o=t+r;for(a=T[e+4*a>>2>>>0]=o,o=0;o<n.length;++o)S[a++>>0>>>0]=n.charCodeAt(o);S[a>>0>>>0]=0,r+=n.length+1})),0},E:function(e,t){e>>>=0,t>>>=0;var r=ne();T[e>>2>>>0]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),T[t>>2>>>0]=n,0},s:e=>{w||(a.onExit&&a.onExit(e),M=!0),l(e,new G(e))},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(e,t,r,n){t>>>=0,r>>>=0,n>>>=0;for(var a=0,o=0;o<r;o++){var i=T[t>>2>>>0],s=T[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var c=E[i+u>>>0],l=ae[e];0===c||10===c?((1===e?v:b)(V(l,0)),l.length=0):l.push(c)}a+=s}return T[n>>2>>>0]=a,0},r:function(e,t){return e>>>=0,oe(E.subarray(e>>>0,e+(t>>>0)>>>0)),0},C:ue,c:function(e,t,r,n){return ue(e>>>0,t>>>0,r>>>0,n>>>0)}};!function(){function e(e){if(e=e.exports,O=e=function(e){var t=e=>()=>e()>>>0,r=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=r(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=r(e.stackAlloc),e}(e),_=O.L,R(),k.unshift(O.M),I--,a.monitorRunDependencies&&a.monitorRunDependencies(I),0==I&&(null!==U&&(clearInterval(U),U=null),L)){var t=L;L=null,t()}return e}var t={a:ce};if(I++,a.monitorRunDependencies&&a.monitorRunDependencies(I),a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(e){b("Module.instantiateWasm callback failed with error: "+e),n(e)}(function(e,t){var r=D;return y||"function"!=typeof WebAssembly.instantiateStreaming||H(r)||r.startsWith("file://")||p||"function"!=typeof fetch?z(r,e,t):fetch(r,{credentials:"same-origin"}).then((n=>WebAssembly.instantiateStreaming(n,e).then(t,(function(n){return b("wasm streaming compile failed: "+n),b("falling back to ArrayBuffer instantiation"),z(r,e,t)}))))})(t,(function(t){e(t.instance)})).catch(n)}(),a._OrtInit=(e,t)=>(a._OrtInit=O.N)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=O.O)(e,t),a._OrtCreateSessionOptions=(e,t,r,n,o,i,s,u,c,l)=>(a._OrtCreateSessionOptions=O.P)(e,t,r,n,o,i,s,u,c,l),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=O.Q)(e,t),a._OrtAddSessionConfigEntry=(e,t,r)=>(a._OrtAddSessionConfigEntry=O.R)(e,t,r),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=O.S)(e),a._OrtCreateSession=(e,t,r)=>(a._OrtCreateSession=O.T)(e,t,r),a._OrtReleaseSession=e=>(a._OrtReleaseSession=O.U)(e),a._OrtGetInputOutputCount=(e,t,r)=>(a._OrtGetInputOutputCount=O.V)(e,t,r),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=O.W)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=O.X)(e,t),a._OrtFree=e=>(a._OrtFree=O.Y)(e),a._OrtCreateTensor=(e,t,r,n,o)=>(a._OrtCreateTensor=O.Z)(e,t,r,n,o),a._OrtGetTensorData=(e,t,r,n,o)=>(a._OrtGetTensorData=O._)(e,t,r,n,o),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=O.$)(e),a._OrtCreateRunOptions=(e,t,r,n)=>(a._OrtCreateRunOptions=O.aa)(e,t,r,n),a._OrtAddRunConfigEntry=(e,t,r)=>(a._OrtAddRunConfigEntry=O.ba)(e,t,r),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=O.ca)(e),a._OrtRun=(e,t,r,n,o,i,s,u)=>(a._OrtRun=O.da)(e,t,r,n,o,i,s,u),a._OrtEndProfiling=e=>(a._OrtEndProfiling=O.ea)(e);var le=a._malloc=e=>(le=a._malloc=O.fa)(e);a._free=e=>(a._free=O.ga)(e);var fe,de=e=>(de=O.ia)(e),pe=()=>(pe=O.ja)(),ge=e=>(ge=O.ka)(e),he=e=>(he=O.la)(e);function me(){function e(){if(!fe&&(fe=!0,a.calledRun=!0,!M)){if(N(k),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;){var e=a.postRun.shift();C.unshift(e)}N(C)}}if(!(0<I)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)P();N(F),0<I||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),e()}),1)):e())}}if(a.stackAlloc=he,a.stackSave=pe,a.stackRestore=ge,a.UTF8ToString=J,a.stringToUTF8=(e,t,r)=>K(e,E,t,r),a.lengthBytesUTF8=X,L=function e(){fe||me(),fe||(L=e)},a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return me(),e.ready});e.exports=n},154:e=>{"use strict";e.exports=\'"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\n\'},760:()=>{},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(()=>{"use strict";const e=r(259),t=r(263);self.onmessage=r=>{switch(r.data.type){case"init-wasm":try{(0,t.initializeWebAssembly)(r.data.in).then((()=>postMessage({type:"init-wasm"})),(e=>postMessage({type:"init-wasm",err:e})))}catch(e){postMessage({type:"init-wasm",err:e})}break;case"init-ort":try{(0,e.initRuntime)(r.data.in).then((()=>postMessage({type:"init-ort"})),(e=>postMessage({type:"init-ort",err:e}))),postMessage({type:"init-ort"})}catch(e){postMessage({type:"init-ort",err:e})}break;case"create_allocate":try{const{model:t}=r.data.in,n=(0,e.createSessionAllocate)(t);postMessage({type:"create_allocate",out:n})}catch(e){postMessage({type:"create_allocate",err:e})}break;case"create_finalize":try{const{modeldata:t,options:n}=r.data.in,a=(0,e.createSessionFinalize)(t,n);postMessage({type:"create_finalize",out:a})}catch(e){postMessage({type:"create_finalize",err:e})}break;case"create":try{const{model:t,options:n}=r.data.in,a=(0,e.createSession)(t,n);postMessage({type:"create",out:a})}catch(e){postMessage({type:"create",err:e})}break;case"release":try{const t=r.data.in;(0,e.releaseSession)(t),postMessage({type:"release"})}catch(e){postMessage({type:"release",err:e})}break;case"run":try{const{sessionId:t,inputIndices:n,inputs:a,outputIndices:o,options:i}=r.data.in;(0,e.run)(t,n,a,o,i).then((t=>{postMessage({type:"run",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:"run",err:e})}))}catch(e){postMessage({type:"run",err:e})}break;case"end-profiling":try{const t=r.data.in;(0,e.endProfiling)(t),postMessage({type:"end-profiling"})}catch(e){postMessage({type:"end-profiling",err:e})}}}})()})();\n',"Worker",void 0,void 0)}},6614:o=>{o.exports=function(e,s,i,a){var d=self||window;try{try{var h;try{h=new d.Blob([e])}catch{(h=new(d.BlobBuilder||d.WebKitBlobBuilder||d.MozBlobBuilder||d.MSBlobBuilder)).append(e),h=h.getBlob()}var b=d.URL||d.webkitURL,_=b.createObjectURL(h),j=new d[s](_,i);return b.revokeObjectURL(_),j}catch{return new d[s]("data:application/javascript,".concat(encodeURIComponent(e)),i)}}catch{if(!a)throw Error("Inline worker is not supported");return new d[s](a,i)}}},2446:(o,e,s)=>{var i,a,d,h=s(2100),b=h.Reader,_=h.Writer,j=h.util,_e=h.roots.default||(h.roots.default={});_e.onnx=((d={}).Version=(i={},(a=Object.create(i))[i[0]="_START_VERSION"]=0,a[i[1]="IR_VERSION_2017_10_10"]=1,a[i[2]="IR_VERSION_2017_10_30"]=2,a[i[3]="IR_VERSION_2017_11_3"]=3,a[i[4]="IR_VERSION_2019_1_22"]=4,a[i[5]="IR_VERSION_2019_3_18"]=5,a[i[6]="IR_VERSION_2019_9_19"]=6,a[i[7]="IR_VERSION_2020_5_8"]=7,a[i[8]="IR_VERSION_2021_7_30"]=8,a[i[9]="IR_VERSION"]=9,a),d.AttributeProto=function(){function g(c){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.name="",g.prototype.refAttrName="",g.prototype.docString="",g.prototype.type=0,g.prototype.f=0,g.prototype.i=j.Long?j.Long.fromBits(0,0,!1):0,g.prototype.s=j.newBuffer([]),g.prototype.t=null,g.prototype.g=null,g.prototype.sparseTensor=null,g.prototype.tp=null,g.prototype.floats=j.emptyArray,g.prototype.ints=j.emptyArray,g.prototype.strings=j.emptyArray,g.prototype.tensors=j.emptyArray,g.prototype.graphs=j.emptyArray,g.prototype.sparseTensors=j.emptyArray,g.prototype.typeProtos=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(10).string(c.name),c.f!=null&&Object.hasOwnProperty.call(c,"f")&&$.uint32(21).float(c.f),c.i!=null&&Object.hasOwnProperty.call(c,"i")&&$.uint32(24).int64(c.i),c.s!=null&&Object.hasOwnProperty.call(c,"s")&&$.uint32(34).bytes(c.s),c.t!=null&&Object.hasOwnProperty.call(c,"t")&&_e.onnx.TensorProto.encode(c.t,$.uint32(42).fork()).ldelim(),c.g!=null&&Object.hasOwnProperty.call(c,"g")&&_e.onnx.GraphProto.encode(c.g,$.uint32(50).fork()).ldelim(),c.floats!=null&&c.floats.length){$.uint32(58).fork();for(var et=0;et<c.floats.length;++et)$.float(c.floats[et]);$.ldelim()}if(c.ints!=null&&c.ints.length){for($.uint32(66).fork(),et=0;et<c.ints.length;++et)$.int64(c.ints[et]);$.ldelim()}if(c.strings!=null&&c.strings.length)for(et=0;et<c.strings.length;++et)$.uint32(74).bytes(c.strings[et]);if(c.tensors!=null&&c.tensors.length)for(et=0;et<c.tensors.length;++et)_e.onnx.TensorProto.encode(c.tensors[et],$.uint32(82).fork()).ldelim();if(c.graphs!=null&&c.graphs.length)for(et=0;et<c.graphs.length;++et)_e.onnx.GraphProto.encode(c.graphs[et],$.uint32(90).fork()).ldelim();if(c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(106).string(c.docString),c.tp!=null&&Object.hasOwnProperty.call(c,"tp")&&_e.onnx.TypeProto.encode(c.tp,$.uint32(114).fork()).ldelim(),c.typeProtos!=null&&c.typeProtos.length)for(et=0;et<c.typeProtos.length;++et)_e.onnx.TypeProto.encode(c.typeProtos[et],$.uint32(122).fork()).ldelim();if(c.type!=null&&Object.hasOwnProperty.call(c,"type")&&$.uint32(160).int32(c.type),c.refAttrName!=null&&Object.hasOwnProperty.call(c,"refAttrName")&&$.uint32(170).string(c.refAttrName),c.sparseTensor!=null&&Object.hasOwnProperty.call(c,"sparseTensor")&&_e.onnx.SparseTensorProto.encode(c.sparseTensor,$.uint32(178).fork()).ldelim(),c.sparseTensors!=null&&c.sparseTensors.length)for(et=0;et<c.sparseTensors.length;++et)_e.onnx.SparseTensorProto.encode(c.sparseTensors[et],$.uint32(186).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.AttributeProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.name=c.string();break;case 21:tt.refAttrName=c.string();break;case 13:tt.docString=c.string();break;case 20:tt.type=c.int32();break;case 2:tt.f=c.float();break;case 3:tt.i=c.int64();break;case 4:tt.s=c.bytes();break;case 5:tt.t=_e.onnx.TensorProto.decode(c,c.uint32());break;case 6:tt.g=_e.onnx.GraphProto.decode(c,c.uint32());break;case 22:tt.sparseTensor=_e.onnx.SparseTensorProto.decode(c,c.uint32());break;case 14:tt.tp=_e.onnx.TypeProto.decode(c,c.uint32());break;case 7:if(tt.floats&&tt.floats.length||(tt.floats=[]),(7&nt)==2)for(var rt=c.uint32()+c.pos;c.pos<rt;)tt.floats.push(c.float());else tt.floats.push(c.float());break;case 8:if(tt.ints&&tt.ints.length||(tt.ints=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.ints.push(c.int64());else tt.ints.push(c.int64());break;case 9:tt.strings&&tt.strings.length||(tt.strings=[]),tt.strings.push(c.bytes());break;case 10:tt.tensors&&tt.tensors.length||(tt.tensors=[]),tt.tensors.push(_e.onnx.TensorProto.decode(c,c.uint32()));break;case 11:tt.graphs&&tt.graphs.length||(tt.graphs=[]),tt.graphs.push(_e.onnx.GraphProto.decode(c,c.uint32()));break;case 23:tt.sparseTensors&&tt.sparseTensors.length||(tt.sparseTensors=[]),tt.sparseTensors.push(_e.onnx.SparseTensorProto.decode(c,c.uint32()));break;case 15:tt.typeProtos&&tt.typeProtos.length||(tt.typeProtos=[]),tt.typeProtos.push(_e.onnx.TypeProto.decode(c,c.uint32()));break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.refAttrName!=null&&c.hasOwnProperty("refAttrName")&&!j.isString(c.refAttrName))return"refAttrName: string expected";if(c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString))return"docString: string expected";if(c.type!=null&&c.hasOwnProperty("type"))switch(c.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:}if(c.f!=null&&c.hasOwnProperty("f")&&typeof c.f!="number")return"f: number expected";if(c.i!=null&&c.hasOwnProperty("i")&&!(j.isInteger(c.i)||c.i&&j.isInteger(c.i.low)&&j.isInteger(c.i.high)))return"i: integer|Long expected";if(c.s!=null&&c.hasOwnProperty("s")&&!(c.s&&typeof c.s.length=="number"||j.isString(c.s)))return"s: buffer expected";if(c.t!=null&&c.hasOwnProperty("t")&&(et=_e.onnx.TensorProto.verify(c.t)))return"t."+et;if(c.g!=null&&c.hasOwnProperty("g")&&(et=_e.onnx.GraphProto.verify(c.g)))return"g."+et;if(c.sparseTensor!=null&&c.hasOwnProperty("sparseTensor")&&(et=_e.onnx.SparseTensorProto.verify(c.sparseTensor)))return"sparseTensor."+et;if(c.tp!=null&&c.hasOwnProperty("tp")&&(et=_e.onnx.TypeProto.verify(c.tp)))return"tp."+et;if(c.floats!=null&&c.hasOwnProperty("floats")){if(!Array.isArray(c.floats))return"floats: array expected";for(var $=0;$<c.floats.length;++$)if(typeof c.floats[$]!="number")return"floats: number[] expected"}if(c.ints!=null&&c.hasOwnProperty("ints")){if(!Array.isArray(c.ints))return"ints: array expected";for($=0;$<c.ints.length;++$)if(!(j.isInteger(c.ints[$])||c.ints[$]&&j.isInteger(c.ints[$].low)&&j.isInteger(c.ints[$].high)))return"ints: integer|Long[] expected"}if(c.strings!=null&&c.hasOwnProperty("strings")){if(!Array.isArray(c.strings))return"strings: array expected";for($=0;$<c.strings.length;++$)if(!(c.strings[$]&&typeof c.strings[$].length=="number"||j.isString(c.strings[$])))return"strings: buffer[] expected"}if(c.tensors!=null&&c.hasOwnProperty("tensors")){if(!Array.isArray(c.tensors))return"tensors: array expected";for($=0;$<c.tensors.length;++$)if(et=_e.onnx.TensorProto.verify(c.tensors[$]))return"tensors."+et}if(c.graphs!=null&&c.hasOwnProperty("graphs")){if(!Array.isArray(c.graphs))return"graphs: array expected";for($=0;$<c.graphs.length;++$)if(et=_e.onnx.GraphProto.verify(c.graphs[$]))return"graphs."+et}if(c.sparseTensors!=null&&c.hasOwnProperty("sparseTensors")){if(!Array.isArray(c.sparseTensors))return"sparseTensors: array expected";for($=0;$<c.sparseTensors.length;++$)if(et=_e.onnx.SparseTensorProto.verify(c.sparseTensors[$]))return"sparseTensors."+et}if(c.typeProtos!=null&&c.hasOwnProperty("typeProtos")){if(!Array.isArray(c.typeProtos))return"typeProtos: array expected";for($=0;$<c.typeProtos.length;++$){var et;if(et=_e.onnx.TypeProto.verify(c.typeProtos[$]))return"typeProtos."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.AttributeProto)return c;var $=new _e.onnx.AttributeProto;switch(c.name!=null&&($.name=String(c.name)),c.refAttrName!=null&&($.refAttrName=String(c.refAttrName)),c.docString!=null&&($.docString=String(c.docString)),c.type){default:if(typeof c.type=="number"){$.type=c.type;break}break;case"UNDEFINED":case 0:$.type=0;break;case"FLOAT":case 1:$.type=1;break;case"INT":case 2:$.type=2;break;case"STRING":case 3:$.type=3;break;case"TENSOR":case 4:$.type=4;break;case"GRAPH":case 5:$.type=5;break;case"SPARSE_TENSOR":case 11:$.type=11;break;case"TYPE_PROTO":case 13:$.type=13;break;case"FLOATS":case 6:$.type=6;break;case"INTS":case 7:$.type=7;break;case"STRINGS":case 8:$.type=8;break;case"TENSORS":case 9:$.type=9;break;case"GRAPHS":case 10:$.type=10;break;case"SPARSE_TENSORS":case 12:$.type=12;break;case"TYPE_PROTOS":case 14:$.type=14}if(c.f!=null&&($.f=Number(c.f)),c.i!=null&&(j.Long?($.i=j.Long.fromValue(c.i)).unsigned=!1:typeof c.i=="string"?$.i=parseInt(c.i,10):typeof c.i=="number"?$.i=c.i:typeof c.i=="object"&&($.i=new j.LongBits(c.i.low>>>0,c.i.high>>>0).toNumber())),c.s!=null&&(typeof c.s=="string"?j.base64.decode(c.s,$.s=j.newBuffer(j.base64.length(c.s)),0):c.s.length>=0&&($.s=c.s)),c.t!=null){if(typeof c.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");$.t=_e.onnx.TensorProto.fromObject(c.t)}if(c.g!=null){if(typeof c.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");$.g=_e.onnx.GraphProto.fromObject(c.g)}if(c.sparseTensor!=null){if(typeof c.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");$.sparseTensor=_e.onnx.SparseTensorProto.fromObject(c.sparseTensor)}if(c.tp!=null){if(typeof c.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");$.tp=_e.onnx.TypeProto.fromObject(c.tp)}if(c.floats){if(!Array.isArray(c.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");$.floats=[];for(var et=0;et<c.floats.length;++et)$.floats[et]=Number(c.floats[et])}if(c.ints){if(!Array.isArray(c.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for($.ints=[],et=0;et<c.ints.length;++et)j.Long?($.ints[et]=j.Long.fromValue(c.ints[et])).unsigned=!1:typeof c.ints[et]=="string"?$.ints[et]=parseInt(c.ints[et],10):typeof c.ints[et]=="number"?$.ints[et]=c.ints[et]:typeof c.ints[et]=="object"&&($.ints[et]=new j.LongBits(c.ints[et].low>>>0,c.ints[et].high>>>0).toNumber())}if(c.strings){if(!Array.isArray(c.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for($.strings=[],et=0;et<c.strings.length;++et)typeof c.strings[et]=="string"?j.base64.decode(c.strings[et],$.strings[et]=j.newBuffer(j.base64.length(c.strings[et])),0):c.strings[et].length>=0&&($.strings[et]=c.strings[et])}if(c.tensors){if(!Array.isArray(c.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for($.tensors=[],et=0;et<c.tensors.length;++et){if(typeof c.tensors[et]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");$.tensors[et]=_e.onnx.TensorProto.fromObject(c.tensors[et])}}if(c.graphs){if(!Array.isArray(c.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for($.graphs=[],et=0;et<c.graphs.length;++et){if(typeof c.graphs[et]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");$.graphs[et]=_e.onnx.GraphProto.fromObject(c.graphs[et])}}if(c.sparseTensors){if(!Array.isArray(c.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");for($.sparseTensors=[],et=0;et<c.sparseTensors.length;++et){if(typeof c.sparseTensors[et]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");$.sparseTensors[et]=_e.onnx.SparseTensorProto.fromObject(c.sparseTensors[et])}}if(c.typeProtos){if(!Array.isArray(c.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");for($.typeProtos=[],et=0;et<c.typeProtos.length;++et){if(typeof c.typeProtos[et]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");$.typeProtos[et]=_e.onnx.TypeProto.fromObject(c.typeProtos[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.floats=[],et.ints=[],et.strings=[],et.tensors=[],et.graphs=[],et.typeProtos=[],et.sparseTensors=[]),$.defaults){if(et.name="",et.f=0,j.Long){var tt=new j.Long(0,0,!1);et.i=$.longs===String?tt.toString():$.longs===Number?tt.toNumber():tt}else et.i=$.longs===String?"0":0;$.bytes===String?et.s="":(et.s=[],$.bytes!==Array&&(et.s=j.newBuffer(et.s))),et.t=null,et.g=null,et.docString="",et.tp=null,et.type=$.enums===String?"UNDEFINED":0,et.refAttrName="",et.sparseTensor=null}if(c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.f!=null&&c.hasOwnProperty("f")&&(et.f=$.json&&!isFinite(c.f)?String(c.f):c.f),c.i!=null&&c.hasOwnProperty("i")&&(typeof c.i=="number"?et.i=$.longs===String?String(c.i):c.i:et.i=$.longs===String?j.Long.prototype.toString.call(c.i):$.longs===Number?new j.LongBits(c.i.low>>>0,c.i.high>>>0).toNumber():c.i),c.s!=null&&c.hasOwnProperty("s")&&(et.s=$.bytes===String?j.base64.encode(c.s,0,c.s.length):$.bytes===Array?Array.prototype.slice.call(c.s):c.s),c.t!=null&&c.hasOwnProperty("t")&&(et.t=_e.onnx.TensorProto.toObject(c.t,$)),c.g!=null&&c.hasOwnProperty("g")&&(et.g=_e.onnx.GraphProto.toObject(c.g,$)),c.floats&&c.floats.length){et.floats=[];for(var nt=0;nt<c.floats.length;++nt)et.floats[nt]=$.json&&!isFinite(c.floats[nt])?String(c.floats[nt]):c.floats[nt]}if(c.ints&&c.ints.length)for(et.ints=[],nt=0;nt<c.ints.length;++nt)typeof c.ints[nt]=="number"?et.ints[nt]=$.longs===String?String(c.ints[nt]):c.ints[nt]:et.ints[nt]=$.longs===String?j.Long.prototype.toString.call(c.ints[nt]):$.longs===Number?new j.LongBits(c.ints[nt].low>>>0,c.ints[nt].high>>>0).toNumber():c.ints[nt];if(c.strings&&c.strings.length)for(et.strings=[],nt=0;nt<c.strings.length;++nt)et.strings[nt]=$.bytes===String?j.base64.encode(c.strings[nt],0,c.strings[nt].length):$.bytes===Array?Array.prototype.slice.call(c.strings[nt]):c.strings[nt];if(c.tensors&&c.tensors.length)for(et.tensors=[],nt=0;nt<c.tensors.length;++nt)et.tensors[nt]=_e.onnx.TensorProto.toObject(c.tensors[nt],$);if(c.graphs&&c.graphs.length)for(et.graphs=[],nt=0;nt<c.graphs.length;++nt)et.graphs[nt]=_e.onnx.GraphProto.toObject(c.graphs[nt],$);if(c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.tp!=null&&c.hasOwnProperty("tp")&&(et.tp=_e.onnx.TypeProto.toObject(c.tp,$)),c.typeProtos&&c.typeProtos.length)for(et.typeProtos=[],nt=0;nt<c.typeProtos.length;++nt)et.typeProtos[nt]=_e.onnx.TypeProto.toObject(c.typeProtos[nt],$);if(c.type!=null&&c.hasOwnProperty("type")&&(et.type=$.enums===String?_e.onnx.AttributeProto.AttributeType[c.type]===void 0?c.type:_e.onnx.AttributeProto.AttributeType[c.type]:c.type),c.refAttrName!=null&&c.hasOwnProperty("refAttrName")&&(et.refAttrName=c.refAttrName),c.sparseTensor!=null&&c.hasOwnProperty("sparseTensor")&&(et.sparseTensor=_e.onnx.SparseTensorProto.toObject(c.sparseTensor,$)),c.sparseTensors&&c.sparseTensors.length)for(et.sparseTensors=[],nt=0;nt<c.sparseTensors.length;++nt)et.sparseTensors[nt]=_e.onnx.SparseTensorProto.toObject(c.sparseTensors[nt],$);return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.AttributeProto"},g.AttributeType=function(){var c={},$=Object.create(c);return $[c[0]="UNDEFINED"]=0,$[c[1]="FLOAT"]=1,$[c[2]="INT"]=2,$[c[3]="STRING"]=3,$[c[4]="TENSOR"]=4,$[c[5]="GRAPH"]=5,$[c[11]="SPARSE_TENSOR"]=11,$[c[13]="TYPE_PROTO"]=13,$[c[6]="FLOATS"]=6,$[c[7]="INTS"]=7,$[c[8]="STRINGS"]=8,$[c[9]="TENSORS"]=9,$[c[10]="GRAPHS"]=10,$[c[12]="SPARSE_TENSORS"]=12,$[c[14]="TYPE_PROTOS"]=14,$}(),g}(),d.ValueInfoProto=function(){function g(c){if(c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.name="",g.prototype.type=null,g.prototype.docString="",g.create=function(c){return new g(c)},g.encode=function(c,$){return $||($=_.create()),c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(10).string(c.name),c.type!=null&&Object.hasOwnProperty.call(c,"type")&&_e.onnx.TypeProto.encode(c.type,$.uint32(18).fork()).ldelim(),c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(26).string(c.docString),$},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.ValueInfoProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.name=c.string();break;case 2:tt.type=_e.onnx.TypeProto.decode(c,c.uint32());break;case 3:tt.docString=c.string();break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.type!=null&&c.hasOwnProperty("type")){var $=_e.onnx.TypeProto.verify(c.type);if($)return"type."+$}return c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString)?"docString: string expected":null},g.fromObject=function(c){if(c instanceof _e.onnx.ValueInfoProto)return c;var $=new _e.onnx.ValueInfoProto;if(c.name!=null&&($.name=String(c.name)),c.type!=null){if(typeof c.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");$.type=_e.onnx.TypeProto.fromObject(c.type)}return c.docString!=null&&($.docString=String(c.docString)),$},g.toObject=function(c,$){$||($={});var et={};return $.defaults&&(et.name="",et.type=null,et.docString=""),c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.type!=null&&c.hasOwnProperty("type")&&(et.type=_e.onnx.TypeProto.toObject(c.type,$)),c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.ValueInfoProto"},g}(),d.NodeProto=function(){function g(c){if(this.input=[],this.output=[],this.attribute=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.input=j.emptyArray,g.prototype.output=j.emptyArray,g.prototype.name="",g.prototype.opType="",g.prototype.domain="",g.prototype.attribute=j.emptyArray,g.prototype.docString="",g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.input!=null&&c.input.length)for(var et=0;et<c.input.length;++et)$.uint32(10).string(c.input[et]);if(c.output!=null&&c.output.length)for(et=0;et<c.output.length;++et)$.uint32(18).string(c.output[et]);if(c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(26).string(c.name),c.opType!=null&&Object.hasOwnProperty.call(c,"opType")&&$.uint32(34).string(c.opType),c.attribute!=null&&c.attribute.length)for(et=0;et<c.attribute.length;++et)_e.onnx.AttributeProto.encode(c.attribute[et],$.uint32(42).fork()).ldelim();return c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(50).string(c.docString),c.domain!=null&&Object.hasOwnProperty.call(c,"domain")&&$.uint32(58).string(c.domain),$},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.NodeProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.input&&tt.input.length||(tt.input=[]),tt.input.push(c.string());break;case 2:tt.output&&tt.output.length||(tt.output=[]),tt.output.push(c.string());break;case 3:tt.name=c.string();break;case 4:tt.opType=c.string();break;case 7:tt.domain=c.string();break;case 5:tt.attribute&&tt.attribute.length||(tt.attribute=[]),tt.attribute.push(_e.onnx.AttributeProto.decode(c,c.uint32()));break;case 6:tt.docString=c.string();break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.input!=null&&c.hasOwnProperty("input")){if(!Array.isArray(c.input))return"input: array expected";for(var $=0;$<c.input.length;++$)if(!j.isString(c.input[$]))return"input: string[] expected"}if(c.output!=null&&c.hasOwnProperty("output")){if(!Array.isArray(c.output))return"output: array expected";for($=0;$<c.output.length;++$)if(!j.isString(c.output[$]))return"output: string[] expected"}if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.opType!=null&&c.hasOwnProperty("opType")&&!j.isString(c.opType))return"opType: string expected";if(c.domain!=null&&c.hasOwnProperty("domain")&&!j.isString(c.domain))return"domain: string expected";if(c.attribute!=null&&c.hasOwnProperty("attribute")){if(!Array.isArray(c.attribute))return"attribute: array expected";for($=0;$<c.attribute.length;++$){var et=_e.onnx.AttributeProto.verify(c.attribute[$]);if(et)return"attribute."+et}}return c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString)?"docString: string expected":null},g.fromObject=function(c){if(c instanceof _e.onnx.NodeProto)return c;var $=new _e.onnx.NodeProto;if(c.input){if(!Array.isArray(c.input))throw TypeError(".onnx.NodeProto.input: array expected");$.input=[];for(var et=0;et<c.input.length;++et)$.input[et]=String(c.input[et])}if(c.output){if(!Array.isArray(c.output))throw TypeError(".onnx.NodeProto.output: array expected");for($.output=[],et=0;et<c.output.length;++et)$.output[et]=String(c.output[et])}if(c.name!=null&&($.name=String(c.name)),c.opType!=null&&($.opType=String(c.opType)),c.domain!=null&&($.domain=String(c.domain)),c.attribute){if(!Array.isArray(c.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for($.attribute=[],et=0;et<c.attribute.length;++et){if(typeof c.attribute[et]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");$.attribute[et]=_e.onnx.AttributeProto.fromObject(c.attribute[et])}}return c.docString!=null&&($.docString=String(c.docString)),$},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.input=[],et.output=[],et.attribute=[]),$.defaults&&(et.name="",et.opType="",et.docString="",et.domain=""),c.input&&c.input.length){et.input=[];for(var tt=0;tt<c.input.length;++tt)et.input[tt]=c.input[tt]}if(c.output&&c.output.length)for(et.output=[],tt=0;tt<c.output.length;++tt)et.output[tt]=c.output[tt];if(c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.opType!=null&&c.hasOwnProperty("opType")&&(et.opType=c.opType),c.attribute&&c.attribute.length)for(et.attribute=[],tt=0;tt<c.attribute.length;++tt)et.attribute[tt]=_e.onnx.AttributeProto.toObject(c.attribute[tt],$);return c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.domain!=null&&c.hasOwnProperty("domain")&&(et.domain=c.domain),et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.NodeProto"},g}(),d.TrainingInfoProto=function(){function g(c){if(this.initializationBinding=[],this.updateBinding=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.initialization=null,g.prototype.algorithm=null,g.prototype.initializationBinding=j.emptyArray,g.prototype.updateBinding=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.initialization!=null&&Object.hasOwnProperty.call(c,"initialization")&&_e.onnx.GraphProto.encode(c.initialization,$.uint32(10).fork()).ldelim(),c.algorithm!=null&&Object.hasOwnProperty.call(c,"algorithm")&&_e.onnx.GraphProto.encode(c.algorithm,$.uint32(18).fork()).ldelim(),c.initializationBinding!=null&&c.initializationBinding.length)for(var et=0;et<c.initializationBinding.length;++et)_e.onnx.StringStringEntryProto.encode(c.initializationBinding[et],$.uint32(26).fork()).ldelim();if(c.updateBinding!=null&&c.updateBinding.length)for(et=0;et<c.updateBinding.length;++et)_e.onnx.StringStringEntryProto.encode(c.updateBinding[et],$.uint32(34).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.TrainingInfoProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.initialization=_e.onnx.GraphProto.decode(c,c.uint32());break;case 2:tt.algorithm=_e.onnx.GraphProto.decode(c,c.uint32());break;case 3:tt.initializationBinding&&tt.initializationBinding.length||(tt.initializationBinding=[]),tt.initializationBinding.push(_e.onnx.StringStringEntryProto.decode(c,c.uint32()));break;case 4:tt.updateBinding&&tt.updateBinding.length||(tt.updateBinding=[]),tt.updateBinding.push(_e.onnx.StringStringEntryProto.decode(c,c.uint32()));break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.initialization!=null&&c.hasOwnProperty("initialization")&&(et=_e.onnx.GraphProto.verify(c.initialization)))return"initialization."+et;if(c.algorithm!=null&&c.hasOwnProperty("algorithm")&&(et=_e.onnx.GraphProto.verify(c.algorithm)))return"algorithm."+et;if(c.initializationBinding!=null&&c.hasOwnProperty("initializationBinding")){if(!Array.isArray(c.initializationBinding))return"initializationBinding: array expected";for(var $=0;$<c.initializationBinding.length;++$)if(et=_e.onnx.StringStringEntryProto.verify(c.initializationBinding[$]))return"initializationBinding."+et}if(c.updateBinding!=null&&c.hasOwnProperty("updateBinding")){if(!Array.isArray(c.updateBinding))return"updateBinding: array expected";for($=0;$<c.updateBinding.length;++$){var et;if(et=_e.onnx.StringStringEntryProto.verify(c.updateBinding[$]))return"updateBinding."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.TrainingInfoProto)return c;var $=new _e.onnx.TrainingInfoProto;if(c.initialization!=null){if(typeof c.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");$.initialization=_e.onnx.GraphProto.fromObject(c.initialization)}if(c.algorithm!=null){if(typeof c.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");$.algorithm=_e.onnx.GraphProto.fromObject(c.algorithm)}if(c.initializationBinding){if(!Array.isArray(c.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");$.initializationBinding=[];for(var et=0;et<c.initializationBinding.length;++et){if(typeof c.initializationBinding[et]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");$.initializationBinding[et]=_e.onnx.StringStringEntryProto.fromObject(c.initializationBinding[et])}}if(c.updateBinding){if(!Array.isArray(c.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");for($.updateBinding=[],et=0;et<c.updateBinding.length;++et){if(typeof c.updateBinding[et]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");$.updateBinding[et]=_e.onnx.StringStringEntryProto.fromObject(c.updateBinding[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.initializationBinding=[],et.updateBinding=[]),$.defaults&&(et.initialization=null,et.algorithm=null),c.initialization!=null&&c.hasOwnProperty("initialization")&&(et.initialization=_e.onnx.GraphProto.toObject(c.initialization,$)),c.algorithm!=null&&c.hasOwnProperty("algorithm")&&(et.algorithm=_e.onnx.GraphProto.toObject(c.algorithm,$)),c.initializationBinding&&c.initializationBinding.length){et.initializationBinding=[];for(var tt=0;tt<c.initializationBinding.length;++tt)et.initializationBinding[tt]=_e.onnx.StringStringEntryProto.toObject(c.initializationBinding[tt],$)}if(c.updateBinding&&c.updateBinding.length)for(et.updateBinding=[],tt=0;tt<c.updateBinding.length;++tt)et.updateBinding[tt]=_e.onnx.StringStringEntryProto.toObject(c.updateBinding[tt],$);return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.TrainingInfoProto"},g}(),d.ModelProto=function(){function g(c){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.irVersion=j.Long?j.Long.fromBits(0,0,!1):0,g.prototype.opsetImport=j.emptyArray,g.prototype.producerName="",g.prototype.producerVersion="",g.prototype.domain="",g.prototype.modelVersion=j.Long?j.Long.fromBits(0,0,!1):0,g.prototype.docString="",g.prototype.graph=null,g.prototype.metadataProps=j.emptyArray,g.prototype.trainingInfo=j.emptyArray,g.prototype.functions=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.irVersion!=null&&Object.hasOwnProperty.call(c,"irVersion")&&$.uint32(8).int64(c.irVersion),c.producerName!=null&&Object.hasOwnProperty.call(c,"producerName")&&$.uint32(18).string(c.producerName),c.producerVersion!=null&&Object.hasOwnProperty.call(c,"producerVersion")&&$.uint32(26).string(c.producerVersion),c.domain!=null&&Object.hasOwnProperty.call(c,"domain")&&$.uint32(34).string(c.domain),c.modelVersion!=null&&Object.hasOwnProperty.call(c,"modelVersion")&&$.uint32(40).int64(c.modelVersion),c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(50).string(c.docString),c.graph!=null&&Object.hasOwnProperty.call(c,"graph")&&_e.onnx.GraphProto.encode(c.graph,$.uint32(58).fork()).ldelim(),c.opsetImport!=null&&c.opsetImport.length)for(var et=0;et<c.opsetImport.length;++et)_e.onnx.OperatorSetIdProto.encode(c.opsetImport[et],$.uint32(66).fork()).ldelim();if(c.metadataProps!=null&&c.metadataProps.length)for(et=0;et<c.metadataProps.length;++et)_e.onnx.StringStringEntryProto.encode(c.metadataProps[et],$.uint32(114).fork()).ldelim();if(c.trainingInfo!=null&&c.trainingInfo.length)for(et=0;et<c.trainingInfo.length;++et)_e.onnx.TrainingInfoProto.encode(c.trainingInfo[et],$.uint32(162).fork()).ldelim();if(c.functions!=null&&c.functions.length)for(et=0;et<c.functions.length;++et)_e.onnx.FunctionProto.encode(c.functions[et],$.uint32(202).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.ModelProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.irVersion=c.int64();break;case 8:tt.opsetImport&&tt.opsetImport.length||(tt.opsetImport=[]),tt.opsetImport.push(_e.onnx.OperatorSetIdProto.decode(c,c.uint32()));break;case 2:tt.producerName=c.string();break;case 3:tt.producerVersion=c.string();break;case 4:tt.domain=c.string();break;case 5:tt.modelVersion=c.int64();break;case 6:tt.docString=c.string();break;case 7:tt.graph=_e.onnx.GraphProto.decode(c,c.uint32());break;case 14:tt.metadataProps&&tt.metadataProps.length||(tt.metadataProps=[]),tt.metadataProps.push(_e.onnx.StringStringEntryProto.decode(c,c.uint32()));break;case 20:tt.trainingInfo&&tt.trainingInfo.length||(tt.trainingInfo=[]),tt.trainingInfo.push(_e.onnx.TrainingInfoProto.decode(c,c.uint32()));break;case 25:tt.functions&&tt.functions.length||(tt.functions=[]),tt.functions.push(_e.onnx.FunctionProto.decode(c,c.uint32()));break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.irVersion!=null&&c.hasOwnProperty("irVersion")&&!(j.isInteger(c.irVersion)||c.irVersion&&j.isInteger(c.irVersion.low)&&j.isInteger(c.irVersion.high)))return"irVersion: integer|Long expected";if(c.opsetImport!=null&&c.hasOwnProperty("opsetImport")){if(!Array.isArray(c.opsetImport))return"opsetImport: array expected";for(var $=0;$<c.opsetImport.length;++$)if(et=_e.onnx.OperatorSetIdProto.verify(c.opsetImport[$]))return"opsetImport."+et}if(c.producerName!=null&&c.hasOwnProperty("producerName")&&!j.isString(c.producerName))return"producerName: string expected";if(c.producerVersion!=null&&c.hasOwnProperty("producerVersion")&&!j.isString(c.producerVersion))return"producerVersion: string expected";if(c.domain!=null&&c.hasOwnProperty("domain")&&!j.isString(c.domain))return"domain: string expected";if(c.modelVersion!=null&&c.hasOwnProperty("modelVersion")&&!(j.isInteger(c.modelVersion)||c.modelVersion&&j.isInteger(c.modelVersion.low)&&j.isInteger(c.modelVersion.high)))return"modelVersion: integer|Long expected";if(c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString))return"docString: string expected";if(c.graph!=null&&c.hasOwnProperty("graph")&&(et=_e.onnx.GraphProto.verify(c.graph)))return"graph."+et;if(c.metadataProps!=null&&c.hasOwnProperty("metadataProps")){if(!Array.isArray(c.metadataProps))return"metadataProps: array expected";for($=0;$<c.metadataProps.length;++$)if(et=_e.onnx.StringStringEntryProto.verify(c.metadataProps[$]))return"metadataProps."+et}if(c.trainingInfo!=null&&c.hasOwnProperty("trainingInfo")){if(!Array.isArray(c.trainingInfo))return"trainingInfo: array expected";for($=0;$<c.trainingInfo.length;++$)if(et=_e.onnx.TrainingInfoProto.verify(c.trainingInfo[$]))return"trainingInfo."+et}if(c.functions!=null&&c.hasOwnProperty("functions")){if(!Array.isArray(c.functions))return"functions: array expected";for($=0;$<c.functions.length;++$){var et;if(et=_e.onnx.FunctionProto.verify(c.functions[$]))return"functions."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.ModelProto)return c;var $=new _e.onnx.ModelProto;if(c.irVersion!=null&&(j.Long?($.irVersion=j.Long.fromValue(c.irVersion)).unsigned=!1:typeof c.irVersion=="string"?$.irVersion=parseInt(c.irVersion,10):typeof c.irVersion=="number"?$.irVersion=c.irVersion:typeof c.irVersion=="object"&&($.irVersion=new j.LongBits(c.irVersion.low>>>0,c.irVersion.high>>>0).toNumber())),c.opsetImport){if(!Array.isArray(c.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");$.opsetImport=[];for(var et=0;et<c.opsetImport.length;++et){if(typeof c.opsetImport[et]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");$.opsetImport[et]=_e.onnx.OperatorSetIdProto.fromObject(c.opsetImport[et])}}if(c.producerName!=null&&($.producerName=String(c.producerName)),c.producerVersion!=null&&($.producerVersion=String(c.producerVersion)),c.domain!=null&&($.domain=String(c.domain)),c.modelVersion!=null&&(j.Long?($.modelVersion=j.Long.fromValue(c.modelVersion)).unsigned=!1:typeof c.modelVersion=="string"?$.modelVersion=parseInt(c.modelVersion,10):typeof c.modelVersion=="number"?$.modelVersion=c.modelVersion:typeof c.modelVersion=="object"&&($.modelVersion=new j.LongBits(c.modelVersion.low>>>0,c.modelVersion.high>>>0).toNumber())),c.docString!=null&&($.docString=String(c.docString)),c.graph!=null){if(typeof c.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");$.graph=_e.onnx.GraphProto.fromObject(c.graph)}if(c.metadataProps){if(!Array.isArray(c.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for($.metadataProps=[],et=0;et<c.metadataProps.length;++et){if(typeof c.metadataProps[et]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");$.metadataProps[et]=_e.onnx.StringStringEntryProto.fromObject(c.metadataProps[et])}}if(c.trainingInfo){if(!Array.isArray(c.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");for($.trainingInfo=[],et=0;et<c.trainingInfo.length;++et){if(typeof c.trainingInfo[et]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");$.trainingInfo[et]=_e.onnx.TrainingInfoProto.fromObject(c.trainingInfo[et])}}if(c.functions){if(!Array.isArray(c.functions))throw TypeError(".onnx.ModelProto.functions: array expected");for($.functions=[],et=0;et<c.functions.length;++et){if(typeof c.functions[et]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");$.functions[et]=_e.onnx.FunctionProto.fromObject(c.functions[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.opsetImport=[],et.metadataProps=[],et.trainingInfo=[],et.functions=[]),$.defaults){if(j.Long){var tt=new j.Long(0,0,!1);et.irVersion=$.longs===String?tt.toString():$.longs===Number?tt.toNumber():tt}else et.irVersion=$.longs===String?"0":0;et.producerName="",et.producerVersion="",et.domain="",j.Long?(tt=new j.Long(0,0,!1),et.modelVersion=$.longs===String?tt.toString():$.longs===Number?tt.toNumber():tt):et.modelVersion=$.longs===String?"0":0,et.docString="",et.graph=null}if(c.irVersion!=null&&c.hasOwnProperty("irVersion")&&(typeof c.irVersion=="number"?et.irVersion=$.longs===String?String(c.irVersion):c.irVersion:et.irVersion=$.longs===String?j.Long.prototype.toString.call(c.irVersion):$.longs===Number?new j.LongBits(c.irVersion.low>>>0,c.irVersion.high>>>0).toNumber():c.irVersion),c.producerName!=null&&c.hasOwnProperty("producerName")&&(et.producerName=c.producerName),c.producerVersion!=null&&c.hasOwnProperty("producerVersion")&&(et.producerVersion=c.producerVersion),c.domain!=null&&c.hasOwnProperty("domain")&&(et.domain=c.domain),c.modelVersion!=null&&c.hasOwnProperty("modelVersion")&&(typeof c.modelVersion=="number"?et.modelVersion=$.longs===String?String(c.modelVersion):c.modelVersion:et.modelVersion=$.longs===String?j.Long.prototype.toString.call(c.modelVersion):$.longs===Number?new j.LongBits(c.modelVersion.low>>>0,c.modelVersion.high>>>0).toNumber():c.modelVersion),c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.graph!=null&&c.hasOwnProperty("graph")&&(et.graph=_e.onnx.GraphProto.toObject(c.graph,$)),c.opsetImport&&c.opsetImport.length){et.opsetImport=[];for(var nt=0;nt<c.opsetImport.length;++nt)et.opsetImport[nt]=_e.onnx.OperatorSetIdProto.toObject(c.opsetImport[nt],$)}if(c.metadataProps&&c.metadataProps.length)for(et.metadataProps=[],nt=0;nt<c.metadataProps.length;++nt)et.metadataProps[nt]=_e.onnx.StringStringEntryProto.toObject(c.metadataProps[nt],$);if(c.trainingInfo&&c.trainingInfo.length)for(et.trainingInfo=[],nt=0;nt<c.trainingInfo.length;++nt)et.trainingInfo[nt]=_e.onnx.TrainingInfoProto.toObject(c.trainingInfo[nt],$);if(c.functions&&c.functions.length)for(et.functions=[],nt=0;nt<c.functions.length;++nt)et.functions[nt]=_e.onnx.FunctionProto.toObject(c.functions[nt],$);return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.ModelProto"},g}(),d.StringStringEntryProto=function(){function g(c){if(c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.key="",g.prototype.value="",g.create=function(c){return new g(c)},g.encode=function(c,$){return $||($=_.create()),c.key!=null&&Object.hasOwnProperty.call(c,"key")&&$.uint32(10).string(c.key),c.value!=null&&Object.hasOwnProperty.call(c,"value")&&$.uint32(18).string(c.value),$},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.StringStringEntryProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.key=c.string();break;case 2:tt.value=c.string();break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){return typeof c!="object"||c===null?"object expected":c.key!=null&&c.hasOwnProperty("key")&&!j.isString(c.key)?"key: string expected":c.value!=null&&c.hasOwnProperty("value")&&!j.isString(c.value)?"value: string expected":null},g.fromObject=function(c){if(c instanceof _e.onnx.StringStringEntryProto)return c;var $=new _e.onnx.StringStringEntryProto;return c.key!=null&&($.key=String(c.key)),c.value!=null&&($.value=String(c.value)),$},g.toObject=function(c,$){$||($={});var et={};return $.defaults&&(et.key="",et.value=""),c.key!=null&&c.hasOwnProperty("key")&&(et.key=c.key),c.value!=null&&c.hasOwnProperty("value")&&(et.value=c.value),et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.StringStringEntryProto"},g}(),d.TensorAnnotation=function(){function g(c){if(this.quantParameterTensorNames=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.tensorName="",g.prototype.quantParameterTensorNames=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.tensorName!=null&&Object.hasOwnProperty.call(c,"tensorName")&&$.uint32(10).string(c.tensorName),c.quantParameterTensorNames!=null&&c.quantParameterTensorNames.length)for(var et=0;et<c.quantParameterTensorNames.length;++et)_e.onnx.StringStringEntryProto.encode(c.quantParameterTensorNames[et],$.uint32(18).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.TensorAnnotation;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.tensorName=c.string();break;case 2:tt.quantParameterTensorNames&&tt.quantParameterTensorNames.length||(tt.quantParameterTensorNames=[]),tt.quantParameterTensorNames.push(_e.onnx.StringStringEntryProto.decode(c,c.uint32()));break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.tensorName!=null&&c.hasOwnProperty("tensorName")&&!j.isString(c.tensorName))return"tensorName: string expected";if(c.quantParameterTensorNames!=null&&c.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(c.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var $=0;$<c.quantParameterTensorNames.length;++$){var et=_e.onnx.StringStringEntryProto.verify(c.quantParameterTensorNames[$]);if(et)return"quantParameterTensorNames."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.TensorAnnotation)return c;var $=new _e.onnx.TensorAnnotation;if(c.tensorName!=null&&($.tensorName=String(c.tensorName)),c.quantParameterTensorNames){if(!Array.isArray(c.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");$.quantParameterTensorNames=[];for(var et=0;et<c.quantParameterTensorNames.length;++et){if(typeof c.quantParameterTensorNames[et]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");$.quantParameterTensorNames[et]=_e.onnx.StringStringEntryProto.fromObject(c.quantParameterTensorNames[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.quantParameterTensorNames=[]),$.defaults&&(et.tensorName=""),c.tensorName!=null&&c.hasOwnProperty("tensorName")&&(et.tensorName=c.tensorName),c.quantParameterTensorNames&&c.quantParameterTensorNames.length){et.quantParameterTensorNames=[];for(var tt=0;tt<c.quantParameterTensorNames.length;++tt)et.quantParameterTensorNames[tt]=_e.onnx.StringStringEntryProto.toObject(c.quantParameterTensorNames[tt],$)}return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.TensorAnnotation"},g}(),d.GraphProto=function(){function g(c){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.node=j.emptyArray,g.prototype.name="",g.prototype.initializer=j.emptyArray,g.prototype.sparseInitializer=j.emptyArray,g.prototype.docString="",g.prototype.input=j.emptyArray,g.prototype.output=j.emptyArray,g.prototype.valueInfo=j.emptyArray,g.prototype.quantizationAnnotation=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.node!=null&&c.node.length)for(var et=0;et<c.node.length;++et)_e.onnx.NodeProto.encode(c.node[et],$.uint32(10).fork()).ldelim();if(c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(18).string(c.name),c.initializer!=null&&c.initializer.length)for(et=0;et<c.initializer.length;++et)_e.onnx.TensorProto.encode(c.initializer[et],$.uint32(42).fork()).ldelim();if(c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(82).string(c.docString),c.input!=null&&c.input.length)for(et=0;et<c.input.length;++et)_e.onnx.ValueInfoProto.encode(c.input[et],$.uint32(90).fork()).ldelim();if(c.output!=null&&c.output.length)for(et=0;et<c.output.length;++et)_e.onnx.ValueInfoProto.encode(c.output[et],$.uint32(98).fork()).ldelim();if(c.valueInfo!=null&&c.valueInfo.length)for(et=0;et<c.valueInfo.length;++et)_e.onnx.ValueInfoProto.encode(c.valueInfo[et],$.uint32(106).fork()).ldelim();if(c.quantizationAnnotation!=null&&c.quantizationAnnotation.length)for(et=0;et<c.quantizationAnnotation.length;++et)_e.onnx.TensorAnnotation.encode(c.quantizationAnnotation[et],$.uint32(114).fork()).ldelim();if(c.sparseInitializer!=null&&c.sparseInitializer.length)for(et=0;et<c.sparseInitializer.length;++et)_e.onnx.SparseTensorProto.encode(c.sparseInitializer[et],$.uint32(122).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.GraphProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.node&&tt.node.length||(tt.node=[]),tt.node.push(_e.onnx.NodeProto.decode(c,c.uint32()));break;case 2:tt.name=c.string();break;case 5:tt.initializer&&tt.initializer.length||(tt.initializer=[]),tt.initializer.push(_e.onnx.TensorProto.decode(c,c.uint32()));break;case 15:tt.sparseInitializer&&tt.sparseInitializer.length||(tt.sparseInitializer=[]),tt.sparseInitializer.push(_e.onnx.SparseTensorProto.decode(c,c.uint32()));break;case 10:tt.docString=c.string();break;case 11:tt.input&&tt.input.length||(tt.input=[]),tt.input.push(_e.onnx.ValueInfoProto.decode(c,c.uint32()));break;case 12:tt.output&&tt.output.length||(tt.output=[]),tt.output.push(_e.onnx.ValueInfoProto.decode(c,c.uint32()));break;case 13:tt.valueInfo&&tt.valueInfo.length||(tt.valueInfo=[]),tt.valueInfo.push(_e.onnx.ValueInfoProto.decode(c,c.uint32()));break;case 14:tt.quantizationAnnotation&&tt.quantizationAnnotation.length||(tt.quantizationAnnotation=[]),tt.quantizationAnnotation.push(_e.onnx.TensorAnnotation.decode(c,c.uint32()));break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.node!=null&&c.hasOwnProperty("node")){if(!Array.isArray(c.node))return"node: array expected";for(var $=0;$<c.node.length;++$)if(et=_e.onnx.NodeProto.verify(c.node[$]))return"node."+et}if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.initializer!=null&&c.hasOwnProperty("initializer")){if(!Array.isArray(c.initializer))return"initializer: array expected";for($=0;$<c.initializer.length;++$)if(et=_e.onnx.TensorProto.verify(c.initializer[$]))return"initializer."+et}if(c.sparseInitializer!=null&&c.hasOwnProperty("sparseInitializer")){if(!Array.isArray(c.sparseInitializer))return"sparseInitializer: array expected";for($=0;$<c.sparseInitializer.length;++$)if(et=_e.onnx.SparseTensorProto.verify(c.sparseInitializer[$]))return"sparseInitializer."+et}if(c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString))return"docString: string expected";if(c.input!=null&&c.hasOwnProperty("input")){if(!Array.isArray(c.input))return"input: array expected";for($=0;$<c.input.length;++$)if(et=_e.onnx.ValueInfoProto.verify(c.input[$]))return"input."+et}if(c.output!=null&&c.hasOwnProperty("output")){if(!Array.isArray(c.output))return"output: array expected";for($=0;$<c.output.length;++$)if(et=_e.onnx.ValueInfoProto.verify(c.output[$]))return"output."+et}if(c.valueInfo!=null&&c.hasOwnProperty("valueInfo")){if(!Array.isArray(c.valueInfo))return"valueInfo: array expected";for($=0;$<c.valueInfo.length;++$)if(et=_e.onnx.ValueInfoProto.verify(c.valueInfo[$]))return"valueInfo."+et}if(c.quantizationAnnotation!=null&&c.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(c.quantizationAnnotation))return"quantizationAnnotation: array expected";for($=0;$<c.quantizationAnnotation.length;++$){var et;if(et=_e.onnx.TensorAnnotation.verify(c.quantizationAnnotation[$]))return"quantizationAnnotation."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.GraphProto)return c;var $=new _e.onnx.GraphProto;if(c.node){if(!Array.isArray(c.node))throw TypeError(".onnx.GraphProto.node: array expected");$.node=[];for(var et=0;et<c.node.length;++et){if(typeof c.node[et]!="object")throw TypeError(".onnx.GraphProto.node: object expected");$.node[et]=_e.onnx.NodeProto.fromObject(c.node[et])}}if(c.name!=null&&($.name=String(c.name)),c.initializer){if(!Array.isArray(c.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for($.initializer=[],et=0;et<c.initializer.length;++et){if(typeof c.initializer[et]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");$.initializer[et]=_e.onnx.TensorProto.fromObject(c.initializer[et])}}if(c.sparseInitializer){if(!Array.isArray(c.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");for($.sparseInitializer=[],et=0;et<c.sparseInitializer.length;++et){if(typeof c.sparseInitializer[et]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");$.sparseInitializer[et]=_e.onnx.SparseTensorProto.fromObject(c.sparseInitializer[et])}}if(c.docString!=null&&($.docString=String(c.docString)),c.input){if(!Array.isArray(c.input))throw TypeError(".onnx.GraphProto.input: array expected");for($.input=[],et=0;et<c.input.length;++et){if(typeof c.input[et]!="object")throw TypeError(".onnx.GraphProto.input: object expected");$.input[et]=_e.onnx.ValueInfoProto.fromObject(c.input[et])}}if(c.output){if(!Array.isArray(c.output))throw TypeError(".onnx.GraphProto.output: array expected");for($.output=[],et=0;et<c.output.length;++et){if(typeof c.output[et]!="object")throw TypeError(".onnx.GraphProto.output: object expected");$.output[et]=_e.onnx.ValueInfoProto.fromObject(c.output[et])}}if(c.valueInfo){if(!Array.isArray(c.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for($.valueInfo=[],et=0;et<c.valueInfo.length;++et){if(typeof c.valueInfo[et]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");$.valueInfo[et]=_e.onnx.ValueInfoProto.fromObject(c.valueInfo[et])}}if(c.quantizationAnnotation){if(!Array.isArray(c.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for($.quantizationAnnotation=[],et=0;et<c.quantizationAnnotation.length;++et){if(typeof c.quantizationAnnotation[et]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");$.quantizationAnnotation[et]=_e.onnx.TensorAnnotation.fromObject(c.quantizationAnnotation[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.node=[],et.initializer=[],et.input=[],et.output=[],et.valueInfo=[],et.quantizationAnnotation=[],et.sparseInitializer=[]),$.defaults&&(et.name="",et.docString=""),c.node&&c.node.length){et.node=[];for(var tt=0;tt<c.node.length;++tt)et.node[tt]=_e.onnx.NodeProto.toObject(c.node[tt],$)}if(c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.initializer&&c.initializer.length)for(et.initializer=[],tt=0;tt<c.initializer.length;++tt)et.initializer[tt]=_e.onnx.TensorProto.toObject(c.initializer[tt],$);if(c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.input&&c.input.length)for(et.input=[],tt=0;tt<c.input.length;++tt)et.input[tt]=_e.onnx.ValueInfoProto.toObject(c.input[tt],$);if(c.output&&c.output.length)for(et.output=[],tt=0;tt<c.output.length;++tt)et.output[tt]=_e.onnx.ValueInfoProto.toObject(c.output[tt],$);if(c.valueInfo&&c.valueInfo.length)for(et.valueInfo=[],tt=0;tt<c.valueInfo.length;++tt)et.valueInfo[tt]=_e.onnx.ValueInfoProto.toObject(c.valueInfo[tt],$);if(c.quantizationAnnotation&&c.quantizationAnnotation.length)for(et.quantizationAnnotation=[],tt=0;tt<c.quantizationAnnotation.length;++tt)et.quantizationAnnotation[tt]=_e.onnx.TensorAnnotation.toObject(c.quantizationAnnotation[tt],$);if(c.sparseInitializer&&c.sparseInitializer.length)for(et.sparseInitializer=[],tt=0;tt<c.sparseInitializer.length;++tt)et.sparseInitializer[tt]=_e.onnx.SparseTensorProto.toObject(c.sparseInitializer[tt],$);return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.GraphProto"},g}(),d.TensorProto=function(){function g(c){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.dims=j.emptyArray,g.prototype.dataType=0,g.prototype.segment=null,g.prototype.floatData=j.emptyArray,g.prototype.int32Data=j.emptyArray,g.prototype.stringData=j.emptyArray,g.prototype.int64Data=j.emptyArray,g.prototype.name="",g.prototype.docString="",g.prototype.rawData=j.newBuffer([]),g.prototype.externalData=j.emptyArray,g.prototype.dataLocation=0,g.prototype.doubleData=j.emptyArray,g.prototype.uint64Data=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.dims!=null&&c.dims.length){$.uint32(10).fork();for(var et=0;et<c.dims.length;++et)$.int64(c.dims[et]);$.ldelim()}if(c.dataType!=null&&Object.hasOwnProperty.call(c,"dataType")&&$.uint32(16).int32(c.dataType),c.segment!=null&&Object.hasOwnProperty.call(c,"segment")&&_e.onnx.TensorProto.Segment.encode(c.segment,$.uint32(26).fork()).ldelim(),c.floatData!=null&&c.floatData.length){for($.uint32(34).fork(),et=0;et<c.floatData.length;++et)$.float(c.floatData[et]);$.ldelim()}if(c.int32Data!=null&&c.int32Data.length){for($.uint32(42).fork(),et=0;et<c.int32Data.length;++et)$.int32(c.int32Data[et]);$.ldelim()}if(c.stringData!=null&&c.stringData.length)for(et=0;et<c.stringData.length;++et)$.uint32(50).bytes(c.stringData[et]);if(c.int64Data!=null&&c.int64Data.length){for($.uint32(58).fork(),et=0;et<c.int64Data.length;++et)$.int64(c.int64Data[et]);$.ldelim()}if(c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(66).string(c.name),c.rawData!=null&&Object.hasOwnProperty.call(c,"rawData")&&$.uint32(74).bytes(c.rawData),c.doubleData!=null&&c.doubleData.length){for($.uint32(82).fork(),et=0;et<c.doubleData.length;++et)$.double(c.doubleData[et]);$.ldelim()}if(c.uint64Data!=null&&c.uint64Data.length){for($.uint32(90).fork(),et=0;et<c.uint64Data.length;++et)$.uint64(c.uint64Data[et]);$.ldelim()}if(c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(98).string(c.docString),c.externalData!=null&&c.externalData.length)for(et=0;et<c.externalData.length;++et)_e.onnx.StringStringEntryProto.encode(c.externalData[et],$.uint32(106).fork()).ldelim();return c.dataLocation!=null&&Object.hasOwnProperty.call(c,"dataLocation")&&$.uint32(112).int32(c.dataLocation),$},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.TensorProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:if(tt.dims&&tt.dims.length||(tt.dims=[]),(7&nt)==2)for(var rt=c.uint32()+c.pos;c.pos<rt;)tt.dims.push(c.int64());else tt.dims.push(c.int64());break;case 2:tt.dataType=c.int32();break;case 3:tt.segment=_e.onnx.TensorProto.Segment.decode(c,c.uint32());break;case 4:if(tt.floatData&&tt.floatData.length||(tt.floatData=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.floatData.push(c.float());else tt.floatData.push(c.float());break;case 5:if(tt.int32Data&&tt.int32Data.length||(tt.int32Data=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.int32Data.push(c.int32());else tt.int32Data.push(c.int32());break;case 6:tt.stringData&&tt.stringData.length||(tt.stringData=[]),tt.stringData.push(c.bytes());break;case 7:if(tt.int64Data&&tt.int64Data.length||(tt.int64Data=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.int64Data.push(c.int64());else tt.int64Data.push(c.int64());break;case 8:tt.name=c.string();break;case 12:tt.docString=c.string();break;case 9:tt.rawData=c.bytes();break;case 13:tt.externalData&&tt.externalData.length||(tt.externalData=[]),tt.externalData.push(_e.onnx.StringStringEntryProto.decode(c,c.uint32()));break;case 14:tt.dataLocation=c.int32();break;case 10:if(tt.doubleData&&tt.doubleData.length||(tt.doubleData=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.doubleData.push(c.double());else tt.doubleData.push(c.double());break;case 11:if(tt.uint64Data&&tt.uint64Data.length||(tt.uint64Data=[]),(7&nt)==2)for(rt=c.uint32()+c.pos;c.pos<rt;)tt.uint64Data.push(c.uint64());else tt.uint64Data.push(c.uint64());break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.dims!=null&&c.hasOwnProperty("dims")){if(!Array.isArray(c.dims))return"dims: array expected";for(var $=0;$<c.dims.length;++$)if(!(j.isInteger(c.dims[$])||c.dims[$]&&j.isInteger(c.dims[$].low)&&j.isInteger(c.dims[$].high)))return"dims: integer|Long[] expected"}if(c.dataType!=null&&c.hasOwnProperty("dataType")&&!j.isInteger(c.dataType))return"dataType: integer expected";if(c.segment!=null&&c.hasOwnProperty("segment")&&(et=_e.onnx.TensorProto.Segment.verify(c.segment)))return"segment."+et;if(c.floatData!=null&&c.hasOwnProperty("floatData")){if(!Array.isArray(c.floatData))return"floatData: array expected";for($=0;$<c.floatData.length;++$)if(typeof c.floatData[$]!="number")return"floatData: number[] expected"}if(c.int32Data!=null&&c.hasOwnProperty("int32Data")){if(!Array.isArray(c.int32Data))return"int32Data: array expected";for($=0;$<c.int32Data.length;++$)if(!j.isInteger(c.int32Data[$]))return"int32Data: integer[] expected"}if(c.stringData!=null&&c.hasOwnProperty("stringData")){if(!Array.isArray(c.stringData))return"stringData: array expected";for($=0;$<c.stringData.length;++$)if(!(c.stringData[$]&&typeof c.stringData[$].length=="number"||j.isString(c.stringData[$])))return"stringData: buffer[] expected"}if(c.int64Data!=null&&c.hasOwnProperty("int64Data")){if(!Array.isArray(c.int64Data))return"int64Data: array expected";for($=0;$<c.int64Data.length;++$)if(!(j.isInteger(c.int64Data[$])||c.int64Data[$]&&j.isInteger(c.int64Data[$].low)&&j.isInteger(c.int64Data[$].high)))return"int64Data: integer|Long[] expected"}if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString))return"docString: string expected";if(c.rawData!=null&&c.hasOwnProperty("rawData")&&!(c.rawData&&typeof c.rawData.length=="number"||j.isString(c.rawData)))return"rawData: buffer expected";if(c.externalData!=null&&c.hasOwnProperty("externalData")){if(!Array.isArray(c.externalData))return"externalData: array expected";for($=0;$<c.externalData.length;++$){var et;if(et=_e.onnx.StringStringEntryProto.verify(c.externalData[$]))return"externalData."+et}}if(c.dataLocation!=null&&c.hasOwnProperty("dataLocation"))switch(c.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(c.doubleData!=null&&c.hasOwnProperty("doubleData")){if(!Array.isArray(c.doubleData))return"doubleData: array expected";for($=0;$<c.doubleData.length;++$)if(typeof c.doubleData[$]!="number")return"doubleData: number[] expected"}if(c.uint64Data!=null&&c.hasOwnProperty("uint64Data")){if(!Array.isArray(c.uint64Data))return"uint64Data: array expected";for($=0;$<c.uint64Data.length;++$)if(!(j.isInteger(c.uint64Data[$])||c.uint64Data[$]&&j.isInteger(c.uint64Data[$].low)&&j.isInteger(c.uint64Data[$].high)))return"uint64Data: integer|Long[] expected"}return null},g.fromObject=function(c){if(c instanceof _e.onnx.TensorProto)return c;var $=new _e.onnx.TensorProto;if(c.dims){if(!Array.isArray(c.dims))throw TypeError(".onnx.TensorProto.dims: array expected");$.dims=[];for(var et=0;et<c.dims.length;++et)j.Long?($.dims[et]=j.Long.fromValue(c.dims[et])).unsigned=!1:typeof c.dims[et]=="string"?$.dims[et]=parseInt(c.dims[et],10):typeof c.dims[et]=="number"?$.dims[et]=c.dims[et]:typeof c.dims[et]=="object"&&($.dims[et]=new j.LongBits(c.dims[et].low>>>0,c.dims[et].high>>>0).toNumber())}if(c.dataType!=null&&($.dataType=0|c.dataType),c.segment!=null){if(typeof c.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");$.segment=_e.onnx.TensorProto.Segment.fromObject(c.segment)}if(c.floatData){if(!Array.isArray(c.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for($.floatData=[],et=0;et<c.floatData.length;++et)$.floatData[et]=Number(c.floatData[et])}if(c.int32Data){if(!Array.isArray(c.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for($.int32Data=[],et=0;et<c.int32Data.length;++et)$.int32Data[et]=0|c.int32Data[et]}if(c.stringData){if(!Array.isArray(c.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for($.stringData=[],et=0;et<c.stringData.length;++et)typeof c.stringData[et]=="string"?j.base64.decode(c.stringData[et],$.stringData[et]=j.newBuffer(j.base64.length(c.stringData[et])),0):c.stringData[et].length>=0&&($.stringData[et]=c.stringData[et])}if(c.int64Data){if(!Array.isArray(c.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for($.int64Data=[],et=0;et<c.int64Data.length;++et)j.Long?($.int64Data[et]=j.Long.fromValue(c.int64Data[et])).unsigned=!1:typeof c.int64Data[et]=="string"?$.int64Data[et]=parseInt(c.int64Data[et],10):typeof c.int64Data[et]=="number"?$.int64Data[et]=c.int64Data[et]:typeof c.int64Data[et]=="object"&&($.int64Data[et]=new j.LongBits(c.int64Data[et].low>>>0,c.int64Data[et].high>>>0).toNumber())}if(c.name!=null&&($.name=String(c.name)),c.docString!=null&&($.docString=String(c.docString)),c.rawData!=null&&(typeof c.rawData=="string"?j.base64.decode(c.rawData,$.rawData=j.newBuffer(j.base64.length(c.rawData)),0):c.rawData.length>=0&&($.rawData=c.rawData)),c.externalData){if(!Array.isArray(c.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for($.externalData=[],et=0;et<c.externalData.length;++et){if(typeof c.externalData[et]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");$.externalData[et]=_e.onnx.StringStringEntryProto.fromObject(c.externalData[et])}}switch(c.dataLocation){default:if(typeof c.dataLocation=="number"){$.dataLocation=c.dataLocation;break}break;case"DEFAULT":case 0:$.dataLocation=0;break;case"EXTERNAL":case 1:$.dataLocation=1}if(c.doubleData){if(!Array.isArray(c.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for($.doubleData=[],et=0;et<c.doubleData.length;++et)$.doubleData[et]=Number(c.doubleData[et])}if(c.uint64Data){if(!Array.isArray(c.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for($.uint64Data=[],et=0;et<c.uint64Data.length;++et)j.Long?($.uint64Data[et]=j.Long.fromValue(c.uint64Data[et])).unsigned=!0:typeof c.uint64Data[et]=="string"?$.uint64Data[et]=parseInt(c.uint64Data[et],10):typeof c.uint64Data[et]=="number"?$.uint64Data[et]=c.uint64Data[et]:typeof c.uint64Data[et]=="object"&&($.uint64Data[et]=new j.LongBits(c.uint64Data[et].low>>>0,c.uint64Data[et].high>>>0).toNumber(!0))}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.dims=[],et.floatData=[],et.int32Data=[],et.stringData=[],et.int64Data=[],et.doubleData=[],et.uint64Data=[],et.externalData=[]),$.defaults&&(et.dataType=0,et.segment=null,et.name="",$.bytes===String?et.rawData="":(et.rawData=[],$.bytes!==Array&&(et.rawData=j.newBuffer(et.rawData))),et.docString="",et.dataLocation=$.enums===String?"DEFAULT":0),c.dims&&c.dims.length){et.dims=[];for(var tt=0;tt<c.dims.length;++tt)typeof c.dims[tt]=="number"?et.dims[tt]=$.longs===String?String(c.dims[tt]):c.dims[tt]:et.dims[tt]=$.longs===String?j.Long.prototype.toString.call(c.dims[tt]):$.longs===Number?new j.LongBits(c.dims[tt].low>>>0,c.dims[tt].high>>>0).toNumber():c.dims[tt]}if(c.dataType!=null&&c.hasOwnProperty("dataType")&&(et.dataType=c.dataType),c.segment!=null&&c.hasOwnProperty("segment")&&(et.segment=_e.onnx.TensorProto.Segment.toObject(c.segment,$)),c.floatData&&c.floatData.length)for(et.floatData=[],tt=0;tt<c.floatData.length;++tt)et.floatData[tt]=$.json&&!isFinite(c.floatData[tt])?String(c.floatData[tt]):c.floatData[tt];if(c.int32Data&&c.int32Data.length)for(et.int32Data=[],tt=0;tt<c.int32Data.length;++tt)et.int32Data[tt]=c.int32Data[tt];if(c.stringData&&c.stringData.length)for(et.stringData=[],tt=0;tt<c.stringData.length;++tt)et.stringData[tt]=$.bytes===String?j.base64.encode(c.stringData[tt],0,c.stringData[tt].length):$.bytes===Array?Array.prototype.slice.call(c.stringData[tt]):c.stringData[tt];if(c.int64Data&&c.int64Data.length)for(et.int64Data=[],tt=0;tt<c.int64Data.length;++tt)typeof c.int64Data[tt]=="number"?et.int64Data[tt]=$.longs===String?String(c.int64Data[tt]):c.int64Data[tt]:et.int64Data[tt]=$.longs===String?j.Long.prototype.toString.call(c.int64Data[tt]):$.longs===Number?new j.LongBits(c.int64Data[tt].low>>>0,c.int64Data[tt].high>>>0).toNumber():c.int64Data[tt];if(c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.rawData!=null&&c.hasOwnProperty("rawData")&&(et.rawData=$.bytes===String?j.base64.encode(c.rawData,0,c.rawData.length):$.bytes===Array?Array.prototype.slice.call(c.rawData):c.rawData),c.doubleData&&c.doubleData.length)for(et.doubleData=[],tt=0;tt<c.doubleData.length;++tt)et.doubleData[tt]=$.json&&!isFinite(c.doubleData[tt])?String(c.doubleData[tt]):c.doubleData[tt];if(c.uint64Data&&c.uint64Data.length)for(et.uint64Data=[],tt=0;tt<c.uint64Data.length;++tt)typeof c.uint64Data[tt]=="number"?et.uint64Data[tt]=$.longs===String?String(c.uint64Data[tt]):c.uint64Data[tt]:et.uint64Data[tt]=$.longs===String?j.Long.prototype.toString.call(c.uint64Data[tt]):$.longs===Number?new j.LongBits(c.uint64Data[tt].low>>>0,c.uint64Data[tt].high>>>0).toNumber(!0):c.uint64Data[tt];if(c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.externalData&&c.externalData.length)for(et.externalData=[],tt=0;tt<c.externalData.length;++tt)et.externalData[tt]=_e.onnx.StringStringEntryProto.toObject(c.externalData[tt],$);return c.dataLocation!=null&&c.hasOwnProperty("dataLocation")&&(et.dataLocation=$.enums===String?_e.onnx.TensorProto.DataLocation[c.dataLocation]===void 0?c.dataLocation:_e.onnx.TensorProto.DataLocation[c.dataLocation]:c.dataLocation),et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.TensorProto"},g.DataType=function(){var c={},$=Object.create(c);return $[c[0]="UNDEFINED"]=0,$[c[1]="FLOAT"]=1,$[c[2]="UINT8"]=2,$[c[3]="INT8"]=3,$[c[4]="UINT16"]=4,$[c[5]="INT16"]=5,$[c[6]="INT32"]=6,$[c[7]="INT64"]=7,$[c[8]="STRING"]=8,$[c[9]="BOOL"]=9,$[c[10]="FLOAT16"]=10,$[c[11]="DOUBLE"]=11,$[c[12]="UINT32"]=12,$[c[13]="UINT64"]=13,$[c[14]="COMPLEX64"]=14,$[c[15]="COMPLEX128"]=15,$[c[16]="BFLOAT16"]=16,$[c[17]="FLOAT8E4M3FN"]=17,$[c[18]="FLOAT8E4M3FNUZ"]=18,$[c[19]="FLOAT8E5M2"]=19,$[c[20]="FLOAT8E5M2FNUZ"]=20,$}(),g.Segment=function(){function c($){if($)for(var et=Object.keys($),tt=0;tt<et.length;++tt)$[et[tt]]!=null&&(this[et[tt]]=$[et[tt]])}return c.prototype.begin=j.Long?j.Long.fromBits(0,0,!1):0,c.prototype.end=j.Long?j.Long.fromBits(0,0,!1):0,c.create=function($){return new c($)},c.encode=function($,et){return et||(et=_.create()),$.begin!=null&&Object.hasOwnProperty.call($,"begin")&&et.uint32(8).int64($.begin),$.end!=null&&Object.hasOwnProperty.call($,"end")&&et.uint32(16).int64($.end),et},c.encodeDelimited=function($,et){return this.encode($,et).ldelim()},c.decode=function($,et){$ instanceof b||($=b.create($));for(var tt=et===void 0?$.len:$.pos+et,nt=new _e.onnx.TensorProto.Segment;$.pos<tt;){var rt=$.uint32();switch(rt>>>3){case 1:nt.begin=$.int64();break;case 2:nt.end=$.int64();break;default:$.skipType(7&rt)}}return nt},c.decodeDelimited=function($){return $ instanceof b||($=new b($)),this.decode($,$.uint32())},c.verify=function($){return typeof $!="object"||$===null?"object expected":$.begin!=null&&$.hasOwnProperty("begin")&&!(j.isInteger($.begin)||$.begin&&j.isInteger($.begin.low)&&j.isInteger($.begin.high))?"begin: integer|Long expected":$.end!=null&&$.hasOwnProperty("end")&&!(j.isInteger($.end)||$.end&&j.isInteger($.end.low)&&j.isInteger($.end.high))?"end: integer|Long expected":null},c.fromObject=function($){if($ instanceof _e.onnx.TensorProto.Segment)return $;var et=new _e.onnx.TensorProto.Segment;return $.begin!=null&&(j.Long?(et.begin=j.Long.fromValue($.begin)).unsigned=!1:typeof $.begin=="string"?et.begin=parseInt($.begin,10):typeof $.begin=="number"?et.begin=$.begin:typeof $.begin=="object"&&(et.begin=new j.LongBits($.begin.low>>>0,$.begin.high>>>0).toNumber())),$.end!=null&&(j.Long?(et.end=j.Long.fromValue($.end)).unsigned=!1:typeof $.end=="string"?et.end=parseInt($.end,10):typeof $.end=="number"?et.end=$.end:typeof $.end=="object"&&(et.end=new j.LongBits($.end.low>>>0,$.end.high>>>0).toNumber())),et},c.toObject=function($,et){et||(et={});var tt={};if(et.defaults){if(j.Long){var nt=new j.Long(0,0,!1);tt.begin=et.longs===String?nt.toString():et.longs===Number?nt.toNumber():nt}else tt.begin=et.longs===String?"0":0;j.Long?(nt=new j.Long(0,0,!1),tt.end=et.longs===String?nt.toString():et.longs===Number?nt.toNumber():nt):tt.end=et.longs===String?"0":0}return $.begin!=null&&$.hasOwnProperty("begin")&&(typeof $.begin=="number"?tt.begin=et.longs===String?String($.begin):$.begin:tt.begin=et.longs===String?j.Long.prototype.toString.call($.begin):et.longs===Number?new j.LongBits($.begin.low>>>0,$.begin.high>>>0).toNumber():$.begin),$.end!=null&&$.hasOwnProperty("end")&&(typeof $.end=="number"?tt.end=et.longs===String?String($.end):$.end:tt.end=et.longs===String?j.Long.prototype.toString.call($.end):et.longs===Number?new j.LongBits($.end.low>>>0,$.end.high>>>0).toNumber():$.end),tt},c.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},c.getTypeUrl=function($){return $===void 0&&($="type.googleapis.com"),$+"/onnx.TensorProto.Segment"},c}(),g.DataLocation=function(){var c={},$=Object.create(c);return $[c[0]="DEFAULT"]=0,$[c[1]="EXTERNAL"]=1,$}(),g}(),d.SparseTensorProto=function(){function g(c){if(this.dims=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.values=null,g.prototype.indices=null,g.prototype.dims=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.values!=null&&Object.hasOwnProperty.call(c,"values")&&_e.onnx.TensorProto.encode(c.values,$.uint32(10).fork()).ldelim(),c.indices!=null&&Object.hasOwnProperty.call(c,"indices")&&_e.onnx.TensorProto.encode(c.indices,$.uint32(18).fork()).ldelim(),c.dims!=null&&c.dims.length){$.uint32(26).fork();for(var et=0;et<c.dims.length;++et)$.int64(c.dims[et]);$.ldelim()}return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.SparseTensorProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.values=_e.onnx.TensorProto.decode(c,c.uint32());break;case 2:tt.indices=_e.onnx.TensorProto.decode(c,c.uint32());break;case 3:if(tt.dims&&tt.dims.length||(tt.dims=[]),(7&nt)==2)for(var rt=c.uint32()+c.pos;c.pos<rt;)tt.dims.push(c.int64());else tt.dims.push(c.int64());break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";var $;if(c.values!=null&&c.hasOwnProperty("values")&&($=_e.onnx.TensorProto.verify(c.values)))return"values."+$;if(c.indices!=null&&c.hasOwnProperty("indices")&&($=_e.onnx.TensorProto.verify(c.indices)))return"indices."+$;if(c.dims!=null&&c.hasOwnProperty("dims")){if(!Array.isArray(c.dims))return"dims: array expected";for(var et=0;et<c.dims.length;++et)if(!(j.isInteger(c.dims[et])||c.dims[et]&&j.isInteger(c.dims[et].low)&&j.isInteger(c.dims[et].high)))return"dims: integer|Long[] expected"}return null},g.fromObject=function(c){if(c instanceof _e.onnx.SparseTensorProto)return c;var $=new _e.onnx.SparseTensorProto;if(c.values!=null){if(typeof c.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");$.values=_e.onnx.TensorProto.fromObject(c.values)}if(c.indices!=null){if(typeof c.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");$.indices=_e.onnx.TensorProto.fromObject(c.indices)}if(c.dims){if(!Array.isArray(c.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");$.dims=[];for(var et=0;et<c.dims.length;++et)j.Long?($.dims[et]=j.Long.fromValue(c.dims[et])).unsigned=!1:typeof c.dims[et]=="string"?$.dims[et]=parseInt(c.dims[et],10):typeof c.dims[et]=="number"?$.dims[et]=c.dims[et]:typeof c.dims[et]=="object"&&($.dims[et]=new j.LongBits(c.dims[et].low>>>0,c.dims[et].high>>>0).toNumber())}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.dims=[]),$.defaults&&(et.values=null,et.indices=null),c.values!=null&&c.hasOwnProperty("values")&&(et.values=_e.onnx.TensorProto.toObject(c.values,$)),c.indices!=null&&c.hasOwnProperty("indices")&&(et.indices=_e.onnx.TensorProto.toObject(c.indices,$)),c.dims&&c.dims.length){et.dims=[];for(var tt=0;tt<c.dims.length;++tt)typeof c.dims[tt]=="number"?et.dims[tt]=$.longs===String?String(c.dims[tt]):c.dims[tt]:et.dims[tt]=$.longs===String?j.Long.prototype.toString.call(c.dims[tt]):$.longs===Number?new j.LongBits(c.dims[tt].low>>>0,c.dims[tt].high>>>0).toNumber():c.dims[tt]}return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.SparseTensorProto"},g}(),d.TensorShapeProto=function(){function g(c){if(this.dim=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.dim=j.emptyArray,g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.dim!=null&&c.dim.length)for(var et=0;et<c.dim.length;++et)_e.onnx.TensorShapeProto.Dimension.encode(c.dim[et],$.uint32(10).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.TensorShapeProto;c.pos<et;){var nt=c.uint32();nt>>>3==1?(tt.dim&&tt.dim.length||(tt.dim=[]),tt.dim.push(_e.onnx.TensorShapeProto.Dimension.decode(c,c.uint32()))):c.skipType(7&nt)}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.dim!=null&&c.hasOwnProperty("dim")){if(!Array.isArray(c.dim))return"dim: array expected";for(var $=0;$<c.dim.length;++$){var et=_e.onnx.TensorShapeProto.Dimension.verify(c.dim[$]);if(et)return"dim."+et}}return null},g.fromObject=function(c){if(c instanceof _e.onnx.TensorShapeProto)return c;var $=new _e.onnx.TensorShapeProto;if(c.dim){if(!Array.isArray(c.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");$.dim=[];for(var et=0;et<c.dim.length;++et){if(typeof c.dim[et]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");$.dim[et]=_e.onnx.TensorShapeProto.Dimension.fromObject(c.dim[et])}}return $},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.dim=[]),c.dim&&c.dim.length){et.dim=[];for(var tt=0;tt<c.dim.length;++tt)et.dim[tt]=_e.onnx.TensorShapeProto.Dimension.toObject(c.dim[tt],$)}return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.TensorShapeProto"},g.Dimension=function(){function c(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}var $;return c.prototype.dimValue=null,c.prototype.dimParam=null,c.prototype.denotation="",Object.defineProperty(c.prototype,"value",{get:j.oneOfGetter($=["dimValue","dimParam"]),set:j.oneOfSetter($)}),c.create=function(et){return new c(et)},c.encode=function(et,tt){return tt||(tt=_.create()),et.dimValue!=null&&Object.hasOwnProperty.call(et,"dimValue")&&tt.uint32(8).int64(et.dimValue),et.dimParam!=null&&Object.hasOwnProperty.call(et,"dimParam")&&tt.uint32(18).string(et.dimParam),et.denotation!=null&&Object.hasOwnProperty.call(et,"denotation")&&tt.uint32(26).string(et.denotation),tt},c.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},c.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TensorShapeProto.Dimension;et.pos<nt;){var ot=et.uint32();switch(ot>>>3){case 1:rt.dimValue=et.int64();break;case 2:rt.dimParam=et.string();break;case 3:rt.denotation=et.string();break;default:et.skipType(7&ot)}}return rt},c.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},c.verify=function(et){if(typeof et!="object"||et===null)return"object expected";var tt={};if(et.dimValue!=null&&et.hasOwnProperty("dimValue")&&(tt.value=1,!(j.isInteger(et.dimValue)||et.dimValue&&j.isInteger(et.dimValue.low)&&j.isInteger(et.dimValue.high))))return"dimValue: integer|Long expected";if(et.dimParam!=null&&et.hasOwnProperty("dimParam")){if(tt.value===1)return"value: multiple values";if(tt.value=1,!j.isString(et.dimParam))return"dimParam: string expected"}return et.denotation!=null&&et.hasOwnProperty("denotation")&&!j.isString(et.denotation)?"denotation: string expected":null},c.fromObject=function(et){if(et instanceof _e.onnx.TensorShapeProto.Dimension)return et;var tt=new _e.onnx.TensorShapeProto.Dimension;return et.dimValue!=null&&(j.Long?(tt.dimValue=j.Long.fromValue(et.dimValue)).unsigned=!1:typeof et.dimValue=="string"?tt.dimValue=parseInt(et.dimValue,10):typeof et.dimValue=="number"?tt.dimValue=et.dimValue:typeof et.dimValue=="object"&&(tt.dimValue=new j.LongBits(et.dimValue.low>>>0,et.dimValue.high>>>0).toNumber())),et.dimParam!=null&&(tt.dimParam=String(et.dimParam)),et.denotation!=null&&(tt.denotation=String(et.denotation)),tt},c.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.denotation=""),et.dimValue!=null&&et.hasOwnProperty("dimValue")&&(typeof et.dimValue=="number"?nt.dimValue=tt.longs===String?String(et.dimValue):et.dimValue:nt.dimValue=tt.longs===String?j.Long.prototype.toString.call(et.dimValue):tt.longs===Number?new j.LongBits(et.dimValue.low>>>0,et.dimValue.high>>>0).toNumber():et.dimValue,tt.oneofs&&(nt.value="dimValue")),et.dimParam!=null&&et.hasOwnProperty("dimParam")&&(nt.dimParam=et.dimParam,tt.oneofs&&(nt.value="dimParam")),et.denotation!=null&&et.hasOwnProperty("denotation")&&(nt.denotation=et.denotation),nt},c.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},c.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TensorShapeProto.Dimension"},c}(),g}(),d.TypeProto=function(){function g($){if($)for(var et=Object.keys($),tt=0;tt<et.length;++tt)$[et[tt]]!=null&&(this[et[tt]]=$[et[tt]])}var c;return g.prototype.tensorType=null,g.prototype.sequenceType=null,g.prototype.mapType=null,g.prototype.optionalType=null,g.prototype.sparseTensorType=null,g.prototype.denotation="",Object.defineProperty(g.prototype,"value",{get:j.oneOfGetter(c=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:j.oneOfSetter(c)}),g.create=function($){return new g($)},g.encode=function($,et){return et||(et=_.create()),$.tensorType!=null&&Object.hasOwnProperty.call($,"tensorType")&&_e.onnx.TypeProto.Tensor.encode($.tensorType,et.uint32(10).fork()).ldelim(),$.sequenceType!=null&&Object.hasOwnProperty.call($,"sequenceType")&&_e.onnx.TypeProto.Sequence.encode($.sequenceType,et.uint32(34).fork()).ldelim(),$.mapType!=null&&Object.hasOwnProperty.call($,"mapType")&&_e.onnx.TypeProto.Map.encode($.mapType,et.uint32(42).fork()).ldelim(),$.denotation!=null&&Object.hasOwnProperty.call($,"denotation")&&et.uint32(50).string($.denotation),$.sparseTensorType!=null&&Object.hasOwnProperty.call($,"sparseTensorType")&&_e.onnx.TypeProto.SparseTensor.encode($.sparseTensorType,et.uint32(66).fork()).ldelim(),$.optionalType!=null&&Object.hasOwnProperty.call($,"optionalType")&&_e.onnx.TypeProto.Optional.encode($.optionalType,et.uint32(74).fork()).ldelim(),et},g.encodeDelimited=function($,et){return this.encode($,et).ldelim()},g.decode=function($,et){$ instanceof b||($=b.create($));for(var tt=et===void 0?$.len:$.pos+et,nt=new _e.onnx.TypeProto;$.pos<tt;){var rt=$.uint32();switch(rt>>>3){case 1:nt.tensorType=_e.onnx.TypeProto.Tensor.decode($,$.uint32());break;case 4:nt.sequenceType=_e.onnx.TypeProto.Sequence.decode($,$.uint32());break;case 5:nt.mapType=_e.onnx.TypeProto.Map.decode($,$.uint32());break;case 9:nt.optionalType=_e.onnx.TypeProto.Optional.decode($,$.uint32());break;case 8:nt.sparseTensorType=_e.onnx.TypeProto.SparseTensor.decode($,$.uint32());break;case 6:nt.denotation=$.string();break;default:$.skipType(7&rt)}}return nt},g.decodeDelimited=function($){return $ instanceof b||($=new b($)),this.decode($,$.uint32())},g.verify=function($){if(typeof $!="object"||$===null)return"object expected";var et={};if($.tensorType!=null&&$.hasOwnProperty("tensorType")&&(et.value=1,tt=_e.onnx.TypeProto.Tensor.verify($.tensorType)))return"tensorType."+tt;if($.sequenceType!=null&&$.hasOwnProperty("sequenceType")){if(et.value===1)return"value: multiple values";if(et.value=1,tt=_e.onnx.TypeProto.Sequence.verify($.sequenceType))return"sequenceType."+tt}if($.mapType!=null&&$.hasOwnProperty("mapType")){if(et.value===1)return"value: multiple values";if(et.value=1,tt=_e.onnx.TypeProto.Map.verify($.mapType))return"mapType."+tt}if($.optionalType!=null&&$.hasOwnProperty("optionalType")){if(et.value===1)return"value: multiple values";if(et.value=1,tt=_e.onnx.TypeProto.Optional.verify($.optionalType))return"optionalType."+tt}if($.sparseTensorType!=null&&$.hasOwnProperty("sparseTensorType")){if(et.value===1)return"value: multiple values";var tt;if(et.value=1,tt=_e.onnx.TypeProto.SparseTensor.verify($.sparseTensorType))return"sparseTensorType."+tt}return $.denotation!=null&&$.hasOwnProperty("denotation")&&!j.isString($.denotation)?"denotation: string expected":null},g.fromObject=function($){if($ instanceof _e.onnx.TypeProto)return $;var et=new _e.onnx.TypeProto;if($.tensorType!=null){if(typeof $.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");et.tensorType=_e.onnx.TypeProto.Tensor.fromObject($.tensorType)}if($.sequenceType!=null){if(typeof $.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");et.sequenceType=_e.onnx.TypeProto.Sequence.fromObject($.sequenceType)}if($.mapType!=null){if(typeof $.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");et.mapType=_e.onnx.TypeProto.Map.fromObject($.mapType)}if($.optionalType!=null){if(typeof $.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");et.optionalType=_e.onnx.TypeProto.Optional.fromObject($.optionalType)}if($.sparseTensorType!=null){if(typeof $.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");et.sparseTensorType=_e.onnx.TypeProto.SparseTensor.fromObject($.sparseTensorType)}return $.denotation!=null&&(et.denotation=String($.denotation)),et},g.toObject=function($,et){et||(et={});var tt={};return et.defaults&&(tt.denotation=""),$.tensorType!=null&&$.hasOwnProperty("tensorType")&&(tt.tensorType=_e.onnx.TypeProto.Tensor.toObject($.tensorType,et),et.oneofs&&(tt.value="tensorType")),$.sequenceType!=null&&$.hasOwnProperty("sequenceType")&&(tt.sequenceType=_e.onnx.TypeProto.Sequence.toObject($.sequenceType,et),et.oneofs&&(tt.value="sequenceType")),$.mapType!=null&&$.hasOwnProperty("mapType")&&(tt.mapType=_e.onnx.TypeProto.Map.toObject($.mapType,et),et.oneofs&&(tt.value="mapType")),$.denotation!=null&&$.hasOwnProperty("denotation")&&(tt.denotation=$.denotation),$.sparseTensorType!=null&&$.hasOwnProperty("sparseTensorType")&&(tt.sparseTensorType=_e.onnx.TypeProto.SparseTensor.toObject($.sparseTensorType,et),et.oneofs&&(tt.value="sparseTensorType")),$.optionalType!=null&&$.hasOwnProperty("optionalType")&&(tt.optionalType=_e.onnx.TypeProto.Optional.toObject($.optionalType,et),et.oneofs&&(tt.value="optionalType")),tt},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function($){return $===void 0&&($="type.googleapis.com"),$+"/onnx.TypeProto"},g.Tensor=function(){function $(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}return $.prototype.elemType=0,$.prototype.shape=null,$.create=function(et){return new $(et)},$.encode=function(et,tt){return tt||(tt=_.create()),et.elemType!=null&&Object.hasOwnProperty.call(et,"elemType")&&tt.uint32(8).int32(et.elemType),et.shape!=null&&Object.hasOwnProperty.call(et,"shape")&&_e.onnx.TensorShapeProto.encode(et.shape,tt.uint32(18).fork()).ldelim(),tt},$.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},$.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TypeProto.Tensor;et.pos<nt;){var ot=et.uint32();switch(ot>>>3){case 1:rt.elemType=et.int32();break;case 2:rt.shape=_e.onnx.TensorShapeProto.decode(et,et.uint32());break;default:et.skipType(7&ot)}}return rt},$.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},$.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.elemType!=null&&et.hasOwnProperty("elemType")&&!j.isInteger(et.elemType))return"elemType: integer expected";if(et.shape!=null&&et.hasOwnProperty("shape")){var tt=_e.onnx.TensorShapeProto.verify(et.shape);if(tt)return"shape."+tt}return null},$.fromObject=function(et){if(et instanceof _e.onnx.TypeProto.Tensor)return et;var tt=new _e.onnx.TypeProto.Tensor;if(et.elemType!=null&&(tt.elemType=0|et.elemType),et.shape!=null){if(typeof et.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");tt.shape=_e.onnx.TensorShapeProto.fromObject(et.shape)}return tt},$.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.elemType=0,nt.shape=null),et.elemType!=null&&et.hasOwnProperty("elemType")&&(nt.elemType=et.elemType),et.shape!=null&&et.hasOwnProperty("shape")&&(nt.shape=_e.onnx.TensorShapeProto.toObject(et.shape,tt)),nt},$.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},$.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TypeProto.Tensor"},$}(),g.Sequence=function(){function $(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}return $.prototype.elemType=null,$.create=function(et){return new $(et)},$.encode=function(et,tt){return tt||(tt=_.create()),et.elemType!=null&&Object.hasOwnProperty.call(et,"elemType")&&_e.onnx.TypeProto.encode(et.elemType,tt.uint32(10).fork()).ldelim(),tt},$.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},$.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TypeProto.Sequence;et.pos<nt;){var ot=et.uint32();ot>>>3==1?rt.elemType=_e.onnx.TypeProto.decode(et,et.uint32()):et.skipType(7&ot)}return rt},$.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},$.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.elemType!=null&&et.hasOwnProperty("elemType")){var tt=_e.onnx.TypeProto.verify(et.elemType);if(tt)return"elemType."+tt}return null},$.fromObject=function(et){if(et instanceof _e.onnx.TypeProto.Sequence)return et;var tt=new _e.onnx.TypeProto.Sequence;if(et.elemType!=null){if(typeof et.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");tt.elemType=_e.onnx.TypeProto.fromObject(et.elemType)}return tt},$.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.elemType=null),et.elemType!=null&&et.hasOwnProperty("elemType")&&(nt.elemType=_e.onnx.TypeProto.toObject(et.elemType,tt)),nt},$.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},$.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TypeProto.Sequence"},$}(),g.Map=function(){function $(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}return $.prototype.keyType=0,$.prototype.valueType=null,$.create=function(et){return new $(et)},$.encode=function(et,tt){return tt||(tt=_.create()),et.keyType!=null&&Object.hasOwnProperty.call(et,"keyType")&&tt.uint32(8).int32(et.keyType),et.valueType!=null&&Object.hasOwnProperty.call(et,"valueType")&&_e.onnx.TypeProto.encode(et.valueType,tt.uint32(18).fork()).ldelim(),tt},$.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},$.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TypeProto.Map;et.pos<nt;){var ot=et.uint32();switch(ot>>>3){case 1:rt.keyType=et.int32();break;case 2:rt.valueType=_e.onnx.TypeProto.decode(et,et.uint32());break;default:et.skipType(7&ot)}}return rt},$.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},$.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.keyType!=null&&et.hasOwnProperty("keyType")&&!j.isInteger(et.keyType))return"keyType: integer expected";if(et.valueType!=null&&et.hasOwnProperty("valueType")){var tt=_e.onnx.TypeProto.verify(et.valueType);if(tt)return"valueType."+tt}return null},$.fromObject=function(et){if(et instanceof _e.onnx.TypeProto.Map)return et;var tt=new _e.onnx.TypeProto.Map;if(et.keyType!=null&&(tt.keyType=0|et.keyType),et.valueType!=null){if(typeof et.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");tt.valueType=_e.onnx.TypeProto.fromObject(et.valueType)}return tt},$.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.keyType=0,nt.valueType=null),et.keyType!=null&&et.hasOwnProperty("keyType")&&(nt.keyType=et.keyType),et.valueType!=null&&et.hasOwnProperty("valueType")&&(nt.valueType=_e.onnx.TypeProto.toObject(et.valueType,tt)),nt},$.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},$.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TypeProto.Map"},$}(),g.Optional=function(){function $(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}return $.prototype.elemType=null,$.create=function(et){return new $(et)},$.encode=function(et,tt){return tt||(tt=_.create()),et.elemType!=null&&Object.hasOwnProperty.call(et,"elemType")&&_e.onnx.TypeProto.encode(et.elemType,tt.uint32(10).fork()).ldelim(),tt},$.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},$.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TypeProto.Optional;et.pos<nt;){var ot=et.uint32();ot>>>3==1?rt.elemType=_e.onnx.TypeProto.decode(et,et.uint32()):et.skipType(7&ot)}return rt},$.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},$.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.elemType!=null&&et.hasOwnProperty("elemType")){var tt=_e.onnx.TypeProto.verify(et.elemType);if(tt)return"elemType."+tt}return null},$.fromObject=function(et){if(et instanceof _e.onnx.TypeProto.Optional)return et;var tt=new _e.onnx.TypeProto.Optional;if(et.elemType!=null){if(typeof et.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");tt.elemType=_e.onnx.TypeProto.fromObject(et.elemType)}return tt},$.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.elemType=null),et.elemType!=null&&et.hasOwnProperty("elemType")&&(nt.elemType=_e.onnx.TypeProto.toObject(et.elemType,tt)),nt},$.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},$.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TypeProto.Optional"},$}(),g.SparseTensor=function(){function $(et){if(et)for(var tt=Object.keys(et),nt=0;nt<tt.length;++nt)et[tt[nt]]!=null&&(this[tt[nt]]=et[tt[nt]])}return $.prototype.elemType=0,$.prototype.shape=null,$.create=function(et){return new $(et)},$.encode=function(et,tt){return tt||(tt=_.create()),et.elemType!=null&&Object.hasOwnProperty.call(et,"elemType")&&tt.uint32(8).int32(et.elemType),et.shape!=null&&Object.hasOwnProperty.call(et,"shape")&&_e.onnx.TensorShapeProto.encode(et.shape,tt.uint32(18).fork()).ldelim(),tt},$.encodeDelimited=function(et,tt){return this.encode(et,tt).ldelim()},$.decode=function(et,tt){et instanceof b||(et=b.create(et));for(var nt=tt===void 0?et.len:et.pos+tt,rt=new _e.onnx.TypeProto.SparseTensor;et.pos<nt;){var ot=et.uint32();switch(ot>>>3){case 1:rt.elemType=et.int32();break;case 2:rt.shape=_e.onnx.TensorShapeProto.decode(et,et.uint32());break;default:et.skipType(7&ot)}}return rt},$.decodeDelimited=function(et){return et instanceof b||(et=new b(et)),this.decode(et,et.uint32())},$.verify=function(et){if(typeof et!="object"||et===null)return"object expected";if(et.elemType!=null&&et.hasOwnProperty("elemType")&&!j.isInteger(et.elemType))return"elemType: integer expected";if(et.shape!=null&&et.hasOwnProperty("shape")){var tt=_e.onnx.TensorShapeProto.verify(et.shape);if(tt)return"shape."+tt}return null},$.fromObject=function(et){if(et instanceof _e.onnx.TypeProto.SparseTensor)return et;var tt=new _e.onnx.TypeProto.SparseTensor;if(et.elemType!=null&&(tt.elemType=0|et.elemType),et.shape!=null){if(typeof et.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");tt.shape=_e.onnx.TensorShapeProto.fromObject(et.shape)}return tt},$.toObject=function(et,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.elemType=0,nt.shape=null),et.elemType!=null&&et.hasOwnProperty("elemType")&&(nt.elemType=et.elemType),et.shape!=null&&et.hasOwnProperty("shape")&&(nt.shape=_e.onnx.TensorShapeProto.toObject(et.shape,tt)),nt},$.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},$.getTypeUrl=function(et){return et===void 0&&(et="type.googleapis.com"),et+"/onnx.TypeProto.SparseTensor"},$}(),g}(),d.OperatorSetIdProto=function(){function g(c){if(c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.domain="",g.prototype.version=j.Long?j.Long.fromBits(0,0,!1):0,g.create=function(c){return new g(c)},g.encode=function(c,$){return $||($=_.create()),c.domain!=null&&Object.hasOwnProperty.call(c,"domain")&&$.uint32(10).string(c.domain),c.version!=null&&Object.hasOwnProperty.call(c,"version")&&$.uint32(16).int64(c.version),$},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.OperatorSetIdProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.domain=c.string();break;case 2:tt.version=c.int64();break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){return typeof c!="object"||c===null?"object expected":c.domain!=null&&c.hasOwnProperty("domain")&&!j.isString(c.domain)?"domain: string expected":c.version!=null&&c.hasOwnProperty("version")&&!(j.isInteger(c.version)||c.version&&j.isInteger(c.version.low)&&j.isInteger(c.version.high))?"version: integer|Long expected":null},g.fromObject=function(c){if(c instanceof _e.onnx.OperatorSetIdProto)return c;var $=new _e.onnx.OperatorSetIdProto;return c.domain!=null&&($.domain=String(c.domain)),c.version!=null&&(j.Long?($.version=j.Long.fromValue(c.version)).unsigned=!1:typeof c.version=="string"?$.version=parseInt(c.version,10):typeof c.version=="number"?$.version=c.version:typeof c.version=="object"&&($.version=new j.LongBits(c.version.low>>>0,c.version.high>>>0).toNumber())),$},g.toObject=function(c,$){$||($={});var et={};if($.defaults)if(et.domain="",j.Long){var tt=new j.Long(0,0,!1);et.version=$.longs===String?tt.toString():$.longs===Number?tt.toNumber():tt}else et.version=$.longs===String?"0":0;return c.domain!=null&&c.hasOwnProperty("domain")&&(et.domain=c.domain),c.version!=null&&c.hasOwnProperty("version")&&(typeof c.version=="number"?et.version=$.longs===String?String(c.version):c.version:et.version=$.longs===String?j.Long.prototype.toString.call(c.version):$.longs===Number?new j.LongBits(c.version.low>>>0,c.version.high>>>0).toNumber():c.version),et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.OperatorSetIdProto"},g}(),d.OperatorStatus=function(){var g={},c=Object.create(g);return c[g[0]="EXPERIMENTAL"]=0,c[g[1]="STABLE"]=1,c}(),d.FunctionProto=function(){function g(c){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],c)for(var $=Object.keys(c),et=0;et<$.length;++et)c[$[et]]!=null&&(this[$[et]]=c[$[et]])}return g.prototype.name="",g.prototype.input=j.emptyArray,g.prototype.output=j.emptyArray,g.prototype.attribute=j.emptyArray,g.prototype.attributeProto=j.emptyArray,g.prototype.node=j.emptyArray,g.prototype.docString="",g.prototype.opsetImport=j.emptyArray,g.prototype.domain="",g.create=function(c){return new g(c)},g.encode=function(c,$){if($||($=_.create()),c.name!=null&&Object.hasOwnProperty.call(c,"name")&&$.uint32(10).string(c.name),c.input!=null&&c.input.length)for(var et=0;et<c.input.length;++et)$.uint32(34).string(c.input[et]);if(c.output!=null&&c.output.length)for(et=0;et<c.output.length;++et)$.uint32(42).string(c.output[et]);if(c.attribute!=null&&c.attribute.length)for(et=0;et<c.attribute.length;++et)$.uint32(50).string(c.attribute[et]);if(c.node!=null&&c.node.length)for(et=0;et<c.node.length;++et)_e.onnx.NodeProto.encode(c.node[et],$.uint32(58).fork()).ldelim();if(c.docString!=null&&Object.hasOwnProperty.call(c,"docString")&&$.uint32(66).string(c.docString),c.opsetImport!=null&&c.opsetImport.length)for(et=0;et<c.opsetImport.length;++et)_e.onnx.OperatorSetIdProto.encode(c.opsetImport[et],$.uint32(74).fork()).ldelim();if(c.domain!=null&&Object.hasOwnProperty.call(c,"domain")&&$.uint32(82).string(c.domain),c.attributeProto!=null&&c.attributeProto.length)for(et=0;et<c.attributeProto.length;++et)_e.onnx.AttributeProto.encode(c.attributeProto[et],$.uint32(90).fork()).ldelim();return $},g.encodeDelimited=function(c,$){return this.encode(c,$).ldelim()},g.decode=function(c,$){c instanceof b||(c=b.create(c));for(var et=$===void 0?c.len:c.pos+$,tt=new _e.onnx.FunctionProto;c.pos<et;){var nt=c.uint32();switch(nt>>>3){case 1:tt.name=c.string();break;case 4:tt.input&&tt.input.length||(tt.input=[]),tt.input.push(c.string());break;case 5:tt.output&&tt.output.length||(tt.output=[]),tt.output.push(c.string());break;case 6:tt.attribute&&tt.attribute.length||(tt.attribute=[]),tt.attribute.push(c.string());break;case 11:tt.attributeProto&&tt.attributeProto.length||(tt.attributeProto=[]),tt.attributeProto.push(_e.onnx.AttributeProto.decode(c,c.uint32()));break;case 7:tt.node&&tt.node.length||(tt.node=[]),tt.node.push(_e.onnx.NodeProto.decode(c,c.uint32()));break;case 8:tt.docString=c.string();break;case 9:tt.opsetImport&&tt.opsetImport.length||(tt.opsetImport=[]),tt.opsetImport.push(_e.onnx.OperatorSetIdProto.decode(c,c.uint32()));break;case 10:tt.domain=c.string();break;default:c.skipType(7&nt)}}return tt},g.decodeDelimited=function(c){return c instanceof b||(c=new b(c)),this.decode(c,c.uint32())},g.verify=function(c){if(typeof c!="object"||c===null)return"object expected";if(c.name!=null&&c.hasOwnProperty("name")&&!j.isString(c.name))return"name: string expected";if(c.input!=null&&c.hasOwnProperty("input")){if(!Array.isArray(c.input))return"input: array expected";for(var $=0;$<c.input.length;++$)if(!j.isString(c.input[$]))return"input: string[] expected"}if(c.output!=null&&c.hasOwnProperty("output")){if(!Array.isArray(c.output))return"output: array expected";for($=0;$<c.output.length;++$)if(!j.isString(c.output[$]))return"output: string[] expected"}if(c.attribute!=null&&c.hasOwnProperty("attribute")){if(!Array.isArray(c.attribute))return"attribute: array expected";for($=0;$<c.attribute.length;++$)if(!j.isString(c.attribute[$]))return"attribute: string[] expected"}if(c.attributeProto!=null&&c.hasOwnProperty("attributeProto")){if(!Array.isArray(c.attributeProto))return"attributeProto: array expected";for($=0;$<c.attributeProto.length;++$)if(et=_e.onnx.AttributeProto.verify(c.attributeProto[$]))return"attributeProto."+et}if(c.node!=null&&c.hasOwnProperty("node")){if(!Array.isArray(c.node))return"node: array expected";for($=0;$<c.node.length;++$)if(et=_e.onnx.NodeProto.verify(c.node[$]))return"node."+et}if(c.docString!=null&&c.hasOwnProperty("docString")&&!j.isString(c.docString))return"docString: string expected";if(c.opsetImport!=null&&c.hasOwnProperty("opsetImport")){if(!Array.isArray(c.opsetImport))return"opsetImport: array expected";for($=0;$<c.opsetImport.length;++$){var et;if(et=_e.onnx.OperatorSetIdProto.verify(c.opsetImport[$]))return"opsetImport."+et}}return c.domain!=null&&c.hasOwnProperty("domain")&&!j.isString(c.domain)?"domain: string expected":null},g.fromObject=function(c){if(c instanceof _e.onnx.FunctionProto)return c;var $=new _e.onnx.FunctionProto;if(c.name!=null&&($.name=String(c.name)),c.input){if(!Array.isArray(c.input))throw TypeError(".onnx.FunctionProto.input: array expected");$.input=[];for(var et=0;et<c.input.length;++et)$.input[et]=String(c.input[et])}if(c.output){if(!Array.isArray(c.output))throw TypeError(".onnx.FunctionProto.output: array expected");for($.output=[],et=0;et<c.output.length;++et)$.output[et]=String(c.output[et])}if(c.attribute){if(!Array.isArray(c.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");for($.attribute=[],et=0;et<c.attribute.length;++et)$.attribute[et]=String(c.attribute[et])}if(c.attributeProto){if(!Array.isArray(c.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");for($.attributeProto=[],et=0;et<c.attributeProto.length;++et){if(typeof c.attributeProto[et]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");$.attributeProto[et]=_e.onnx.AttributeProto.fromObject(c.attributeProto[et])}}if(c.node){if(!Array.isArray(c.node))throw TypeError(".onnx.FunctionProto.node: array expected");for($.node=[],et=0;et<c.node.length;++et){if(typeof c.node[et]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");$.node[et]=_e.onnx.NodeProto.fromObject(c.node[et])}}if(c.docString!=null&&($.docString=String(c.docString)),c.opsetImport){if(!Array.isArray(c.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");for($.opsetImport=[],et=0;et<c.opsetImport.length;++et){if(typeof c.opsetImport[et]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");$.opsetImport[et]=_e.onnx.OperatorSetIdProto.fromObject(c.opsetImport[et])}}return c.domain!=null&&($.domain=String(c.domain)),$},g.toObject=function(c,$){$||($={});var et={};if(($.arrays||$.defaults)&&(et.input=[],et.output=[],et.attribute=[],et.node=[],et.opsetImport=[],et.attributeProto=[]),$.defaults&&(et.name="",et.docString="",et.domain=""),c.name!=null&&c.hasOwnProperty("name")&&(et.name=c.name),c.input&&c.input.length){et.input=[];for(var tt=0;tt<c.input.length;++tt)et.input[tt]=c.input[tt]}if(c.output&&c.output.length)for(et.output=[],tt=0;tt<c.output.length;++tt)et.output[tt]=c.output[tt];if(c.attribute&&c.attribute.length)for(et.attribute=[],tt=0;tt<c.attribute.length;++tt)et.attribute[tt]=c.attribute[tt];if(c.node&&c.node.length)for(et.node=[],tt=0;tt<c.node.length;++tt)et.node[tt]=_e.onnx.NodeProto.toObject(c.node[tt],$);if(c.docString!=null&&c.hasOwnProperty("docString")&&(et.docString=c.docString),c.opsetImport&&c.opsetImport.length)for(et.opsetImport=[],tt=0;tt<c.opsetImport.length;++tt)et.opsetImport[tt]=_e.onnx.OperatorSetIdProto.toObject(c.opsetImport[tt],$);if(c.domain!=null&&c.hasOwnProperty("domain")&&(et.domain=c.domain),c.attributeProto&&c.attributeProto.length)for(et.attributeProto=[],tt=0;tt<c.attributeProto.length;++tt)et.attributeProto[tt]=_e.onnx.AttributeProto.toObject(c.attributeProto[tt],$);return et},g.prototype.toJSON=function(){return this.constructor.toObject(this,h.util.toJSONOptions)},g.getTypeUrl=function(c){return c===void 0&&(c="type.googleapis.com"),c+"/onnx.FunctionProto"},g}(),d),o.exports=_e},3474:(o,e,s)=>{var i,a=(i=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(i=i||__filename),function(d={}){function h(){return vt.buffer!=kt.buffer&&Gt(),kt}function b(){return vt.buffer!=kt.buffer&&Gt(),Dt}function _(){return vt.buffer!=kt.buffer&&Gt(),Rt}function j(){return vt.buffer!=kt.buffer&&Gt(),Ot}function _e(){return vt.buffer!=kt.buffer&&Gt(),zt}var g,c,$=d;$.ready=new Promise((gt,$t)=>{g=gt,c=$t});var et,tt,nt,rt=Object.assign({},$),ot="./this.program",st=(gt,$t)=>{throw $t},it=typeof window=="object",at=typeof importScripts=="function",lt=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",ut=$.ENVIRONMENT_IS_PTHREAD||!1,ct="";function pt(gt){return $.locateFile?$.locateFile(gt,ct):ct+gt}if(lt){var ht=s(1384),yt=s(908);let gt;ct=at?yt.dirname(ct)+"/":__dirname+"/",et=($t,It)=>($t=$t.startsWith("file://")?new URL($t):yt.normalize($t),ht.readFileSync($t,It?void 0:"utf8")),nt=$t=>(($t=et($t,!0)).buffer||($t=new Uint8Array($t)),$t),tt=($t,It,Nt,Pt=!0)=>{$t=$t.startsWith("file://")?new URL($t):yt.normalize($t),ht.readFile($t,Pt?void 0:"utf8",(Ut,qt)=>{Ut?Nt(Ut):It(Pt?qt.buffer:qt)})},!$.thisProgram&&1<process.argv.length&&(ot=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),st=($t,It)=>{throw process.exitCode=$t,It},$.inspect=()=>"[Emscripten Module object]";try{gt=s(9925)}catch($t){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),$t}commonjsGlobal.Worker=gt.Worker}else(it||at)&&(at?ct=self.location.href:typeof document<"u"&&document.currentScript&&(ct=document.currentScript.src),i&&(ct=i),ct=ct.indexOf("blob:")!==0?ct.substr(0,ct.replace(/[?#].*/,"").lastIndexOf("/")+1):"",lt||(et=gt=>{var $t=new XMLHttpRequest;return $t.open("GET",gt,!1),$t.send(null),$t.responseText},at&&(nt=gt=>{var $t=new XMLHttpRequest;return $t.open("GET",gt,!1),$t.responseType="arraybuffer",$t.send(null),new Uint8Array($t.response)}),tt=(gt,$t,It)=>{var Nt=new XMLHttpRequest;Nt.open("GET",gt,!0),Nt.responseType="arraybuffer",Nt.onload=()=>{Nt.status==200||Nt.status==0&&Nt.response?$t(Nt.response):It()},Nt.onerror=It,Nt.send(null)}));lt&&typeof performance>"u"&&(commonjsGlobal.performance=s(6953).performance);var xt=console.log.bind(console),ft=console.error.bind(console);lt&&(xt=(...gt)=>ht.writeSync(1,gt.join(" ")+`
`),ft=(...gt)=>ht.writeSync(2,gt.join(" ")+`
`));var wt,dt=$.print||xt,mt=$.printErr||ft;Object.assign($,rt),rt=null,$.thisProgram&&(ot=$.thisProgram),$.quit&&(st=$.quit),$.wasmBinary&&(wt=$.wasmBinary);var bt=$.noExitRuntime||!0;typeof WebAssembly!="object"&&an("no native wasm support detected");var vt,Tt,Et,Ct,kt,Dt,Rt,Ot,zt,Bt=!1;function Gt(){var gt=vt.buffer;$.HEAP8=kt=new Int8Array(gt),$.HEAP16=new Int16Array(gt),$.HEAP32=Rt=new Int32Array(gt),$.HEAPU8=Dt=new Uint8Array(gt),$.HEAPU16=new Uint16Array(gt),$.HEAPU32=Ot=new Uint32Array(gt),$.HEAPF32=new Float32Array(gt),$.HEAPF64=zt=new Float64Array(gt)}var jt=$.INITIAL_MEMORY||16777216;if(5242880<=jt||an("INITIAL_MEMORY should be larger than STACK_SIZE, was "+jt+"! (STACK_SIZE=5242880)"),ut)vt=$.wasmMemory;else if($.wasmMemory)vt=$.wasmMemory;else if(!((vt=new WebAssembly.Memory({initial:jt/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw mt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),lt&&mt("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Gt(),jt=vt.buffer.byteLength;var Kt,Wt=[],Jt=[],Xt=[],tn=0;function en(){return bt||0<tn}var Zt,nn,rn=0,un=null;function ln(){rn++,$.monitorRunDependencies&&$.monitorRunDependencies(rn)}function mn(){if(rn--,$.monitorRunDependencies&&$.monitorRunDependencies(rn),rn==0&&un){var gt=un;un=null,gt()}}function an(gt){throw $.onAbort&&$.onAbort(gt),mt(gt="Aborted("+gt+")"),Bt=!0,Ct=1,gt=new WebAssembly.RuntimeError(gt+". Build with -sASSERTIONS for more info."),c(gt),gt}function gn(gt){return gt.startsWith("data:application/octet-stream;base64,")}function yn(gt){if(gt==Zt&&wt)return new Uint8Array(wt);if(nt)return nt(gt);throw"both async and sync fetching of the wasm failed"}function Sn(gt,$t,It){return function(Nt){if(!wt&&(it||at)){if(typeof fetch=="function"&&!Nt.startsWith("file://"))return fetch(Nt,{credentials:"same-origin"}).then(Pt=>{if(!Pt.ok)throw"failed to load wasm binary file at '"+Nt+"'";return Pt.arrayBuffer()}).catch(()=>yn(Nt));if(tt)return new Promise((Pt,Ut)=>{tt(Nt,qt=>Pt(new Uint8Array(qt)),Ut)})}return Promise.resolve().then(()=>yn(Nt))}(gt).then(Nt=>WebAssembly.instantiate(Nt,$t)).then(Nt=>Nt).then(It,Nt=>{mt("failed to asynchronously prepare wasm: "+Nt),an(Nt)})}function wn(gt){this.name="ExitStatus",this.message=`Program terminated with exit(${gt})`,this.status=gt}function $n(gt){gt.terminate(),gt.onmessage=()=>{}}function In(gt){(gt=Yt.Fa[gt])||an(),Yt.fb(gt)}function kn(gt){var $t=Yt.Za();if(!$t)return 6;Yt.Ia.push($t),Yt.Fa[gt.Ha]=$t,$t.Ha=gt.Ha;var It={cmd:"run",start_routine:gt.gb,arg:gt.Ya,pthread_ptr:gt.Ha};return lt&&$t.unref(),$t.postMessage(It,gt.mb),0}gn(Zt="ort-wasm-threaded.wasm")||(Zt=pt(Zt));var On=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Dn=(gt,$t,It)=>{var Nt=($t>>>=0)+It;for(It=$t;gt[It]&&!(It>=Nt);)++It;if(16<It-$t&&gt.buffer&&On)return On.decode(gt.buffer instanceof SharedArrayBuffer?gt.slice($t,It):gt.subarray($t,It));for(Nt="";$t<It;){var Pt=gt[$t++];if(128&Pt){var Ut=63&gt[$t++];if((224&Pt)==192)Nt+=String.fromCharCode((31&Pt)<<6|Ut);else{var qt=63&gt[$t++];65536>(Pt=(240&Pt)==224?(15&Pt)<<12|Ut<<6|qt:(7&Pt)<<18|Ut<<12|qt<<6|63&gt[$t++])?Nt+=String.fromCharCode(Pt):(Pt-=65536,Nt+=String.fromCharCode(55296|Pt>>10,56320|1023&Pt))}}else Nt+=String.fromCharCode(Pt)}return Nt},_n=(gt,$t)=>(gt>>>=0)?Dn(b(),gt,$t):"";function Nn(gt){if(ut)return dn(1,1,gt);Ct=gt,en()||(Yt.hb(),$.onExit&&$.onExit(gt),Bt=!0),st(gt,new wn(gt))}var Rn=gt=>{if(Ct=gt,ut)throw Mn(gt),"unwind";Nn(gt)},Yt={La:[],Ia:[],Ta:[],Fa:{},Pa:function(){ut?Yt.ab():Yt.$a()},$a:function(){Wt.unshift(()=>{ln(),Yt.bb(()=>mn())})},ab:function(){Yt.receiveObjectTransfer=Yt.eb,Yt.threadInitTLS=Yt.Sa,Yt.setExitStatus=Yt.Ra,bt=!1},Ra:function(gt){Ct=gt},rb:["$terminateWorker"],hb:function(){for(var gt of Yt.Ia)$n(gt);for(gt of Yt.La)$n(gt);Yt.La=[],Yt.Ia=[],Yt.Fa=[]},fb:function(gt){var $t=gt.Ha;delete Yt.Fa[$t],Yt.La.push(gt),Yt.Ia.splice(Yt.Ia.indexOf(gt),1),gt.Ha=0,Yn($t)},eb:function(){},Sa:function(){Yt.Ta.forEach(gt=>gt())},cb:gt=>new Promise($t=>{gt.onmessage=Pt=>{var Ut=(Pt=Pt.data).cmd;if(Pt.targetThread&&Pt.targetThread!=Gn()){var qt=Yt.Fa[Pt.qb];qt?qt.postMessage(Pt,Pt.transferList):mt('Internal error! Worker sent a message "'+Ut+'" to target pthread '+Pt.targetThread+", but that thread no longer exists!")}else Ut==="checkMailbox"?Un():Ut==="spawnThread"?kn(Pt):Ut==="cleanupThread"?In(Pt.thread):Ut==="killThread"?(Pt=Pt.thread,Ut=Yt.Fa[Pt],delete Yt.Fa[Pt],$n(Ut),Yn(Pt),Yt.Ia.splice(Yt.Ia.indexOf(Ut),1),Ut.Ha=0):Ut==="cancelThread"?Yt.Fa[Pt.thread].postMessage({cmd:"cancel"}):Ut==="loaded"?(gt.loaded=!0,$t(gt)):Ut==="alert"?alert("Thread "+Pt.threadId+": "+Pt.text):Pt.target==="setimmediate"?gt.postMessage(Pt):Ut==="callHandler"?$[Pt.handler](...Pt.args):Ut&&mt("worker sent an unknown command "+Ut)},gt.onerror=Pt=>{throw mt("worker sent an error! "+Pt.filename+":"+Pt.lineno+": "+Pt.message),Pt},lt&&(gt.on("message",function(Pt){gt.onmessage({data:Pt})}),gt.on("error",function(Pt){gt.onerror(Pt)}));var It,Nt=[];for(It of["onExit","onAbort","print","printErr"])$.hasOwnProperty(It)&&Nt.push(It);gt.postMessage({cmd:"load",handlers:Nt,urlOrBlob:$.mainScriptUrlOrBlob||i,wasmMemory:vt,wasmModule:Et})}),bb:function(gt){gt()},Xa:function(){var gt=pt("ort-wasm-threaded.worker.js");gt=new Worker(gt),Yt.La.push(gt)},Za:function(){return Yt.La.length==0&&(Yt.Xa(),Yt.cb(Yt.La[0])),Yt.La.pop()}};$.PThread=Yt;var Pn=gt=>{for(;0<gt.length;)gt.shift()($)};function Mn(gt){if(ut)return dn(2,0,gt);Rn(gt)}$.establishStackSpace=function(){var gt=Gn(),$t=_()[gt+52>>2>>>0];gt=_()[gt+56>>2>>>0],Sr($t,$t-gt),Wn($t)};var St=[];function _t(gt){this.Oa=gt-24,this.Wa=function($t){j()[this.Oa+4>>2>>>0]=$t},this.Va=function($t){j()[this.Oa+8>>2>>>0]=$t},this.Pa=function($t,It){this.Ua(),this.Wa($t),this.Va(It)},this.Ua=function(){j()[this.Oa+16>>2>>>0]=0}}function At(gt,$t,It,Nt){return ut?dn(3,1,gt,$t,It,Nt):Mt(gt,$t,It,Nt)}function Mt(gt,$t,It,Nt){if(gt>>>=0,$t>>>=0,It>>>=0,Nt>>>=0,typeof SharedArrayBuffer>"u")return mt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Pt=[];return ut&&Pt.length===0?At(gt,$t,It,Nt):(gt={gb:It,Ha:gt,Ya:Nt,mb:Pt},ut?(gt.ob="spawnThread",postMessage(gt,Pt),0):kn(gt))}function Vt(gt,$t,It){return ut?dn(4,1,gt,$t,It):0}function Ht(gt,$t){if(ut)return dn(5,1,gt,$t)}$.invokeEntryPoint=function(gt,$t){var It=St[gt];It||(gt>=St.length&&(St.length=gt+1),St[gt]=It=Kt.get(gt)),gt=It($t),en()?Yt.Ra(gt):Zn(gt)};var Qt=gt=>{for(var $t=0,It=0;It<gt.length;++It){var Nt=gt.charCodeAt(It);127>=Nt?$t++:2047>=Nt?$t+=2:55296<=Nt&&57343>=Nt?($t+=4,++It):$t+=3}return $t},fn=(gt,$t,It,Nt)=>{if(!(0<Nt))return 0;var Pt=It>>>=0;Nt=It+Nt-1;for(var Ut=0;Ut<gt.length;++Ut){var qt=gt.charCodeAt(Ut);if(55296<=qt&&57343>=qt&&(qt=65536+((1023&qt)<<10)|1023&gt.charCodeAt(++Ut)),127>=qt){if(It>=Nt)break;$t[It++>>>0]=qt}else{if(2047>=qt){if(It+1>=Nt)break;$t[It++>>>0]=192|qt>>6}else{if(65535>=qt){if(It+2>=Nt)break;$t[It++>>>0]=224|qt>>12}else{if(It+3>=Nt)break;$t[It++>>>0]=240|qt>>18,$t[It++>>>0]=128|qt>>12&63}$t[It++>>>0]=128|qt>>6&63}$t[It++>>>0]=128|63&qt}}return $t[It>>>0]=0,It-Pt},bn=(gt,$t,It)=>fn(gt,b(),$t,It);function Tn(gt,$t){if(ut)return dn(6,1,gt,$t)}function xn(gt,$t,It){if(ut)return dn(7,1,gt,$t,It)}function zn(gt,$t,It){return ut?dn(8,1,gt,$t,It):0}function Bn(gt,$t){if(ut)return dn(9,1,gt,$t)}function Ft(gt,$t,It){if(ut)return dn(10,1,gt,$t,It)}function on(gt,$t,It,Nt){if(ut)return dn(11,1,gt,$t,It,Nt)}function cn(gt,$t,It,Nt){if(ut)return dn(12,1,gt,$t,It,Nt)}function An(gt,$t,It,Nt){if(ut)return dn(13,1,gt,$t,It,Nt)}function Vn(gt){if(ut)return dn(14,1,gt)}function er(gt,$t){if(ut)return dn(15,1,gt,$t)}function tr(gt,$t,It){if(ut)return dn(16,1,gt,$t,It)}var _r=gt=>{if(!Bt)try{if(gt(),!en())try{ut?Zn(Ct):Rn(Ct)}catch($t){$t instanceof wn||$t=="unwind"||st(1,$t)}}catch($t){$t instanceof wn||$t=="unwind"||st(1,$t)}};function Hn(gt){gt>>>=0,typeof Atomics.nb=="function"&&(Atomics.nb(_(),gt>>2,gt).value.then(Un),gt+=128,Atomics.store(_(),gt>>2,1))}function Un(){var gt=Gn();gt&&(Hn(gt),_r(()=>Tr()))}$.__emscripten_thread_mailbox_await=Hn,$.checkMailbox=Un;var Ln=gt=>gt%4==0&&(gt%100!=0||gt%400==0),nr=[0,31,60,91,121,152,182,213,244,274,305,335],rr=[0,31,59,90,120,151,181,212,243,273,304,334];function or(gt,$t,It,Nt,Pt,Ut,qt,pn){return ut?dn(17,1,gt,$t,It,Nt,Pt,Ut,qt,pn):-52}function ir(gt,$t,It,Nt,Pt,Ut,qt){if(ut)return dn(18,1,gt,$t,It,Nt,Pt,Ut,qt)}var ar=gt=>{var $t=Qt(gt)+1,It=xr($t);return It&&bn(gt,It,$t),It},Nr=gt=>{var $t=Qn();return gt=gt(),Wn($t),gt};function dn(gt,$t){var It=arguments.length-2,Nt=arguments;return Nr(()=>{for(var Pt=Jn(8*It),Ut=Pt>>3,qt=0;qt<It;qt++){var pn=Nt[2+qt];_e()[Ut+qt>>>0]=pn}return wr(gt,It,Pt,$t)})}var qn,Kn=[],Xn={},lr=()=>{if(!qn){var gt,$t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:ot||"./this.program"};for(gt in Xn)Xn[gt]===void 0?delete $t[gt]:$t[gt]=Xn[gt];var It=[];for(gt in $t)It.push(`${gt}=${$t[gt]}`);qn=It}return qn};function ur(gt,$t){if(ut)return dn(19,1,gt,$t);gt>>>=0,$t>>>=0;var It=0;return lr().forEach(function(Nt,Pt){var Ut=$t+It;for(Pt=j()[gt+4*Pt>>2>>>0]=Ut,Ut=0;Ut<Nt.length;++Ut)h()[Pt++>>0>>>0]=Nt.charCodeAt(Ut);h()[Pt>>0>>>0]=0,It+=Nt.length+1}),0}function cr(gt,$t){if(ut)return dn(20,1,gt,$t);gt>>>=0,$t>>>=0;var It=lr();j()[gt>>2>>>0]=It.length;var Nt=0;return It.forEach(function(Pt){Nt+=Pt.length+1}),j()[$t>>2>>>0]=Nt,0}function dr(gt){return ut?dn(21,1,gt):52}function pr(gt,$t,It,Nt){return ut?dn(22,1,gt,$t,It,Nt):52}function hr(gt,$t,It,Nt,Pt){return ut?dn(23,1,gt,$t,It,Nt,Pt):70}var Ar=[null,[],[]];function fr(gt,$t,It,Nt){if(ut)return dn(24,1,gt,$t,It,Nt);$t>>>=0,It>>>=0,Nt>>>=0;for(var Pt=0,Ut=0;Ut<It;Ut++){var qt=j()[$t>>2>>>0],pn=j()[$t+4>>2>>>0];$t+=8;for(var En=0;En<pn;En++){var vn=b()[qt+En>>>0],Cn=Ar[gt];vn===0||vn===10?((gt===1?dt:mt)(Dn(Cn,0)),Cn.length=0):Cn.push(vn)}Pt+=pn}return j()[Nt>>2>>>0]=Pt,0}var gr=gt=>(gr=(()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return Nt=>(Nt.set(crypto.getRandomValues(new Uint8Array(Nt.byteLength))),Nt);if(lt)try{var $t=s(760);if($t.randomFillSync)return Nt=>$t.randomFillSync(Nt);var It=$t.randomBytes;return Nt=>(Nt.set(It(Nt.byteLength)),Nt)}catch{}an("initRandomDevice")})())(gt),mr=[31,29,31,30,31,30,31,31,30,31,30,31],yr=[31,28,31,30,31,30,31,31,30,31,30,31],Dr=(gt,$t)=>{h().set(gt,$t>>>0)};function br(gt,$t,It,Nt){function Pt(Lt,sn,hn){for(Lt=typeof Lt=="number"?Lt.toString():Lt||"";Lt.length<sn;)Lt=hn[0]+Lt;return Lt}function Ut(Lt,sn){return Pt(Lt,sn,"0")}function qt(Lt,sn){function hn(kr){return 0>kr?-1:0<kr?1:0}var Fn;return(Fn=hn(Lt.getFullYear()-sn.getFullYear()))===0&&(Fn=hn(Lt.getMonth()-sn.getMonth()))===0&&(Fn=hn(Lt.getDate()-sn.getDate())),Fn}function pn(Lt){switch(Lt.getDay()){case 0:return new Date(Lt.getFullYear()-1,11,29);case 1:return Lt;case 2:return new Date(Lt.getFullYear(),0,3);case 3:return new Date(Lt.getFullYear(),0,2);case 4:return new Date(Lt.getFullYear(),0,1);case 5:return new Date(Lt.getFullYear()-1,11,31);case 6:return new Date(Lt.getFullYear()-1,11,30)}}function En(Lt){var sn=Lt.Ja;for(Lt=new Date(new Date(Lt.Ka+1900,0,1).getTime());0<sn;){var hn=Lt.getMonth(),Fn=(Ln(Lt.getFullYear())?mr:yr)[hn];if(!(sn>Fn-Lt.getDate())){Lt.setDate(Lt.getDate()+sn);break}sn-=Fn-Lt.getDate()+1,Lt.setDate(1),11>hn?Lt.setMonth(hn+1):(Lt.setMonth(0),Lt.setFullYear(Lt.getFullYear()+1))}return hn=new Date(Lt.getFullYear()+1,0,4),sn=pn(new Date(Lt.getFullYear(),0,4)),hn=pn(hn),0>=qt(sn,Lt)?0>=qt(hn,Lt)?Lt.getFullYear()+1:Lt.getFullYear():Lt.getFullYear()-1}gt>>>=0,$t>>>=0,It>>>=0,Nt>>>=0;var vn=_()[Nt+40>>2>>>0];for(var Cn in Nt={kb:_()[Nt>>2>>>0],jb:_()[Nt+4>>2>>>0],Ma:_()[Nt+8>>2>>>0],Qa:_()[Nt+12>>2>>>0],Na:_()[Nt+16>>2>>>0],Ka:_()[Nt+20>>2>>>0],Ga:_()[Nt+24>>2>>>0],Ja:_()[Nt+28>>2>>>0],sb:_()[Nt+32>>2>>>0],ib:_()[Nt+36>>2>>>0],lb:vn?_n(vn):""},It=_n(It),vn={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})It=It.replace(new RegExp(Cn,"g"),vn[Cn]);var Cr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Er="January February March April May June July August September October November December".split(" ");for(Cn in vn={"%a":Lt=>Cr[Lt.Ga].substring(0,3),"%A":Lt=>Cr[Lt.Ga],"%b":Lt=>Er[Lt.Na].substring(0,3),"%B":Lt=>Er[Lt.Na],"%C":Lt=>Ut((Lt.Ka+1900)/100|0,2),"%d":Lt=>Ut(Lt.Qa,2),"%e":Lt=>Pt(Lt.Qa,2," "),"%g":Lt=>En(Lt).toString().substring(2),"%G":Lt=>En(Lt),"%H":Lt=>Ut(Lt.Ma,2),"%I":Lt=>((Lt=Lt.Ma)==0?Lt=12:12<Lt&&(Lt-=12),Ut(Lt,2)),"%j":Lt=>{for(var sn=0,hn=0;hn<=Lt.Na-1;sn+=(Ln(Lt.Ka+1900)?mr:yr)[hn++]);return Ut(Lt.Qa+sn,3)},"%m":Lt=>Ut(Lt.Na+1,2),"%M":Lt=>Ut(Lt.jb,2),"%n":()=>`
`,"%p":Lt=>0<=Lt.Ma&&12>Lt.Ma?"AM":"PM","%S":Lt=>Ut(Lt.kb,2),"%t":()=>"	","%u":Lt=>Lt.Ga||7,"%U":Lt=>Ut(Math.floor((Lt.Ja+7-Lt.Ga)/7),2),"%V":Lt=>{var sn=Math.floor((Lt.Ja+7-(Lt.Ga+6)%7)/7);if(2>=(Lt.Ga+371-Lt.Ja-2)%7&&sn++,sn)sn==53&&((hn=(Lt.Ga+371-Lt.Ja)%7)==4||hn==3&&Ln(Lt.Ka)||(sn=1));else{sn=52;var hn=(Lt.Ga+7-Lt.Ja-1)%7;(hn==4||hn==5&&Ln(Lt.Ka%400-1))&&sn++}return Ut(sn,2)},"%w":Lt=>Lt.Ga,"%W":Lt=>Ut(Math.floor((Lt.Ja+7-(Lt.Ga+6)%7)/7),2),"%y":Lt=>(Lt.Ka+1900).toString().substring(2),"%Y":Lt=>Lt.Ka+1900,"%z":Lt=>{var sn=0<=(Lt=Lt.ib);return Lt=Math.abs(Lt)/60,(sn?"+":"-")+("0000"+(Lt/60*100+Lt%60)).slice(-4)},"%Z":Lt=>Lt.lb,"%%":()=>"%"},It=It.replace(/%%/g,"\0\0"),vn)It.includes(Cn)&&(It=It.replace(new RegExp(Cn,"g"),vn[Cn](Nt)));return Cn=function(Lt){var sn=Array(Qt(Lt)+1);return fn(Lt,sn,0,sn.length),sn}(It=It.replace(/\0\0/g,"%")),Cn.length>$t?0:(Dr(Cn,gt),Cn.length-1)}Yt.Pa();var Or=[null,Nn,Mn,At,Vt,Ht,Tn,xn,zn,Bn,Ft,on,cn,An,Vn,er,tr,or,ir,ur,cr,dr,pr,hr,fr],Rr={b:function(gt,$t,It){throw new _t(gt>>>=0).Pa($t>>>0,It>>>0),gt},N:function(gt){vr(gt>>>0,!at,1,!it,131072,!1),Yt.Sa()},k:function(gt){gt>>>=0,ut?postMessage({cmd:"cleanupThread",thread:gt}):In(gt)},I:Mt,h:Vt,T:Ht,E:Tn,G:xn,U:zn,R:Bn,J:Ft,Q:on,o:cn,F:An,C:Vn,S:er,D:tr,q:()=>!0,A:function(gt,$t){(gt>>>=0)==$t>>>0?setTimeout(()=>Un()):ut?postMessage({targetThread:gt,cmd:"checkMailbox"}):(gt=Yt.Fa[gt])&&gt.postMessage({cmd:"checkMailbox"})},L:function(){return-1},M:Hn,p:function(gt){lt&&Yt.Fa[gt>>>0].ref()},t:function(gt,$t,It){gt=$t+2097152>>>0<4194305-!!gt?(gt>>>0)+4294967296*$t:NaN,It>>>=0,gt=new Date(1e3*gt),_()[It>>2>>>0]=gt.getUTCSeconds(),_()[It+4>>2>>>0]=gt.getUTCMinutes(),_()[It+8>>2>>>0]=gt.getUTCHours(),_()[It+12>>2>>>0]=gt.getUTCDate(),_()[It+16>>2>>>0]=gt.getUTCMonth(),_()[It+20>>2>>>0]=gt.getUTCFullYear()-1900,_()[It+24>>2>>>0]=gt.getUTCDay(),gt=(gt.getTime()-Date.UTC(gt.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,_()[It+28>>2>>>0]=gt},u:function(gt,$t,It){gt=$t+2097152>>>0<4194305-!!gt?(gt>>>0)+4294967296*$t:NaN,It>>>=0,gt=new Date(1e3*gt),_()[It>>2>>>0]=gt.getSeconds(),_()[It+4>>2>>>0]=gt.getMinutes(),_()[It+8>>2>>>0]=gt.getHours(),_()[It+12>>2>>>0]=gt.getDate(),_()[It+16>>2>>>0]=gt.getMonth(),_()[It+20>>2>>>0]=gt.getFullYear()-1900,_()[It+24>>2>>>0]=gt.getDay(),$t=(Ln(gt.getFullYear())?nr:rr)[gt.getMonth()]+gt.getDate()-1|0,_()[It+28>>2>>>0]=$t,_()[It+36>>2>>>0]=-60*gt.getTimezoneOffset(),$t=new Date(gt.getFullYear(),6,1).getTimezoneOffset();var Nt=new Date(gt.getFullYear(),0,1).getTimezoneOffset();gt=0|($t!=Nt&&gt.getTimezoneOffset()==Math.min(Nt,$t)),_()[It+32>>2>>>0]=gt},v:function(gt){gt>>>=0;var $t=new Date(_()[gt+20>>2>>>0]+1900,_()[gt+16>>2>>>0],_()[gt+12>>2>>>0],_()[gt+8>>2>>>0],_()[gt+4>>2>>>0],_()[gt>>2>>>0],0),It=_()[gt+32>>2>>>0],Nt=$t.getTimezoneOffset(),Pt=new Date($t.getFullYear(),6,1).getTimezoneOffset(),Ut=new Date($t.getFullYear(),0,1).getTimezoneOffset(),qt=Math.min(Ut,Pt);return 0>It?_()[gt+32>>2>>>0]=+(Pt!=Ut&&qt==Nt):0<It!=(qt==Nt)&&(Pt=Math.max(Ut,Pt),$t.setTime($t.getTime()+6e4*((0<It?qt:Pt)-Nt))),_()[gt+24>>2>>>0]=$t.getDay(),It=(Ln($t.getFullYear())?nr:rr)[$t.getMonth()]+$t.getDate()-1|0,_()[gt+28>>2>>>0]=It,_()[gt>>2>>>0]=$t.getSeconds(),_()[gt+4>>2>>>0]=$t.getMinutes(),_()[gt+8>>2>>>0]=$t.getHours(),_()[gt+12>>2>>>0]=$t.getDate(),_()[gt+16>>2>>>0]=$t.getMonth(),_()[gt+20>>2>>>0]=$t.getYear(),gt=$t.getTime()/1e3,$r((nn=gt,1<=+Math.abs(nn)?0<nn?+Math.floor(nn/4294967296)>>>0:~~+Math.ceil((nn-+(~~nn>>>0))/4294967296)>>>0:0)),gt>>>0},r:or,s:ir,z:function(gt,$t,It){function Nt(vn){return(vn=vn.toTimeString().match(/\(([A-Za-z ]+)\)$/))?vn[1]:"GMT"}gt>>>=0,$t>>>=0,It>>>=0;var Pt=new Date().getFullYear(),Ut=new Date(Pt,0,1),qt=new Date(Pt,6,1);Pt=Ut.getTimezoneOffset();var pn=qt.getTimezoneOffset(),En=Math.max(Pt,pn);j()[gt>>2>>>0]=60*En,_()[$t>>2>>>0]=+(Pt!=pn),gt=Nt(Ut),$t=Nt(qt),gt=ar(gt),$t=ar($t),pn<Pt?(j()[It>>2>>>0]=gt,j()[It+4>>2>>>0]=$t):(j()[It>>2>>>0]=$t,j()[It+4>>2>>>0]=gt)},c:()=>{an("")},l:function(){},i:function(){return Date.now()},V:()=>{throw tn+=1,"unwind"},B:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return lt?s(3993).cpus().length:navigator.hardwareConcurrency},K:function(gt,$t,It,Nt){for(Yt.pb=$t>>>0,Kn.length=It,$t=Nt>>>0>>3,Nt=0;Nt<It;Nt++)Kn[Nt]=_e()[$t+Nt>>>0];return Or[gt].apply(null,Kn)},y:function(gt){gt>>>=0;var $t=b().length;if(gt<=$t||4294901760<gt)return!1;for(var It=1;4>=It;It*=2){var Nt=$t*(1+.2/It);Nt=Math.min(Nt,gt+100663296);var Pt=Math;Nt=Math.max(gt,Nt);e:{Pt=Pt.min.call(Pt,4294901760,Nt+(65536-Nt%65536)%65536)-vt.buffer.byteLength+65535>>>16;try{vt.grow(Pt),Gt();var Ut=1;break e}catch{}Ut=void 0}if(Ut)return!0}return!1},O:ur,P:cr,j:Rn,g:dr,n:pr,w:hr,m:fr,x:function(gt,$t){return gt>>>=0,$t>>>=0,gr(b().subarray(gt>>>0,gt+$t>>>0)),0},a:vt||$.wasmMemory,H:br,d:function(gt,$t,It,Nt){return br(gt>>>0,$t>>>0,It>>>0,Nt>>>0)}};(function(){function gt(It,Nt){return It=It.exports,Tt=It=function(Pt){var Ut=pn=>()=>pn()>>>0,qt=pn=>En=>pn(En)>>>0;return(Pt=Object.assign({},Pt)).__errno_location=Ut(Pt.__errno_location),Pt.pthread_self=Ut(Pt.pthread_self),Pt.malloc=qt(Pt.malloc),Pt.stackSave=Ut(Pt.stackSave),Pt.stackAlloc=qt(Pt.stackAlloc),Pt}(It),Yt.Ta.push(Tt.sa),Kt=Tt.ta,Jt.unshift(Tt.W),Et=Nt,mn(),It}var $t={a:Rr};if(ln(),$.instantiateWasm)try{return $.instantiateWasm($t,gt)}catch(It){mt("Module.instantiateWasm callback failed with error: "+It),c(It)}(function(It,Nt){var Pt=Zt;return wt||typeof WebAssembly.instantiateStreaming!="function"||gn(Pt)||Pt.startsWith("file://")||lt||typeof fetch!="function"?Sn(Pt,It,Nt):fetch(Pt,{credentials:"same-origin"}).then(Ut=>WebAssembly.instantiateStreaming(Ut,It).then(Nt,function(qt){return mt("wasm streaming compile failed: "+qt),mt("falling back to ArrayBuffer instantiation"),Sn(Pt,It,Nt)}))})($t,function(It){gt(It.instance,It.module)}).catch(c)})(),$._OrtInit=(gt,$t)=>($._OrtInit=Tt.X)(gt,$t),$._OrtGetLastError=(gt,$t)=>($._OrtGetLastError=Tt.Y)(gt,$t),$._OrtCreateSessionOptions=(gt,$t,It,Nt,Pt,Ut,qt,pn,En,vn)=>($._OrtCreateSessionOptions=Tt.Z)(gt,$t,It,Nt,Pt,Ut,qt,pn,En,vn),$._OrtAppendExecutionProvider=(gt,$t)=>($._OrtAppendExecutionProvider=Tt._)(gt,$t),$._OrtAddSessionConfigEntry=(gt,$t,It)=>($._OrtAddSessionConfigEntry=Tt.$)(gt,$t,It),$._OrtReleaseSessionOptions=gt=>($._OrtReleaseSessionOptions=Tt.aa)(gt),$._OrtCreateSession=(gt,$t,It)=>($._OrtCreateSession=Tt.ba)(gt,$t,It),$._OrtReleaseSession=gt=>($._OrtReleaseSession=Tt.ca)(gt),$._OrtGetInputOutputCount=(gt,$t,It)=>($._OrtGetInputOutputCount=Tt.da)(gt,$t,It),$._OrtGetInputName=(gt,$t)=>($._OrtGetInputName=Tt.ea)(gt,$t),$._OrtGetOutputName=(gt,$t)=>($._OrtGetOutputName=Tt.fa)(gt,$t),$._OrtFree=gt=>($._OrtFree=Tt.ga)(gt),$._OrtCreateTensor=(gt,$t,It,Nt,Pt)=>($._OrtCreateTensor=Tt.ha)(gt,$t,It,Nt,Pt),$._OrtGetTensorData=(gt,$t,It,Nt,Pt)=>($._OrtGetTensorData=Tt.ia)(gt,$t,It,Nt,Pt),$._OrtReleaseTensor=gt=>($._OrtReleaseTensor=Tt.ja)(gt),$._OrtCreateRunOptions=(gt,$t,It,Nt)=>($._OrtCreateRunOptions=Tt.ka)(gt,$t,It,Nt),$._OrtAddRunConfigEntry=(gt,$t,It)=>($._OrtAddRunConfigEntry=Tt.la)(gt,$t,It),$._OrtReleaseRunOptions=gt=>($._OrtReleaseRunOptions=Tt.ma)(gt),$._OrtRun=(gt,$t,It,Nt,Pt,Ut,qt,pn)=>($._OrtRun=Tt.na)(gt,$t,It,Nt,Pt,Ut,qt,pn),$._OrtEndProfiling=gt=>($._OrtEndProfiling=Tt.oa)(gt);var Gn=$._pthread_self=()=>(Gn=$._pthread_self=Tt.pa)(),xr=$._malloc=gt=>(xr=$._malloc=Tt.qa)(gt);$._free=gt=>($._free=Tt.ra)(gt),$.__emscripten_tls_init=()=>($.__emscripten_tls_init=Tt.sa)();var vr=$.__emscripten_thread_init=(gt,$t,It,Nt,Pt,Ut)=>(vr=$.__emscripten_thread_init=Tt.ua)(gt,$t,It,Nt,Pt,Ut);$.__emscripten_thread_crashed=()=>($.__emscripten_thread_crashed=Tt.va)();var jn,wr=(gt,$t,It,Nt)=>(wr=Tt.wa)(gt,$t,It,Nt),Yn=gt=>(Yn=Tt.xa)(gt),Zn=$.__emscripten_thread_exit=gt=>(Zn=$.__emscripten_thread_exit=Tt.ya)(gt),Tr=$.__emscripten_check_mailbox=()=>(Tr=$.__emscripten_check_mailbox=Tt.za)(),$r=gt=>($r=Tt.Aa)(gt),Sr=(gt,$t)=>(Sr=Tt.Ba)(gt,$t),Qn=()=>(Qn=Tt.Ca)(),Wn=gt=>(Wn=Tt.Da)(gt),Jn=gt=>(Jn=Tt.Ea)(gt);function Ir(){function gt(){if(!jn&&(jn=!0,$.calledRun=!0,!Bt)&&(ut||Pn(Jt),g($),$.onRuntimeInitialized&&$.onRuntimeInitialized(),!ut)){if($.postRun)for(typeof $.postRun=="function"&&($.postRun=[$.postRun]);$.postRun.length;){var $t=$.postRun.shift();Xt.unshift($t)}Pn(Xt)}}if(!(0<rn))if(ut)g($),ut||Pn(Jt),startWorker($);else{if($.preRun)for(typeof $.preRun=="function"&&($.preRun=[$.preRun]);$.preRun.length;)Wt.unshift($.preRun.shift());Pn(Wt),0<rn||($.setStatus?($.setStatus("Running..."),setTimeout(function(){setTimeout(function(){$.setStatus("")},1),gt()},1)):gt())}}if($.keepRuntimeAlive=en,$.wasmMemory=vt,$.stackAlloc=Jn,$.stackSave=Qn,$.stackRestore=Wn,$.UTF8ToString=_n,$.stringToUTF8=bn,$.lengthBytesUTF8=Qt,$.ExitStatus=wn,$.PThread=Yt,un=function gt(){jn||Ir(),jn||(un=gt)},$.preInit)for(typeof $.preInit=="function"&&($.preInit=[$.preInit]);0<$.preInit.length;)$.preInit.pop()();return Ir(),d.ready});o.exports=a},932:(o,e,s)=>{var i,a=(i=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(i=i||__filename),function(d={}){var h,b,_=d;_.ready=new Promise((St,_t)=>{h=St,b=_t});var j,_e,g,c=Object.assign({},_),$="./this.program",et=(St,_t)=>{throw _t},tt=typeof window=="object",nt=typeof importScripts=="function",rt=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",ot="";if(rt){var st=s(1384),it=s(908);ot=nt?it.dirname(ot)+"/":__dirname+"/",j=(St,_t)=>(St=St.startsWith("file://")?new URL(St):it.normalize(St),st.readFileSync(St,_t?void 0:"utf8")),g=St=>((St=j(St,!0)).buffer||(St=new Uint8Array(St)),St),_e=(St,_t,At,Mt=!0)=>{St=St.startsWith("file://")?new URL(St):it.normalize(St),st.readFile(St,Mt?void 0:"utf8",(Vt,Ht)=>{Vt?At(Vt):_t(Mt?Ht.buffer:Ht)})},!_.thisProgram&&1<process.argv.length&&($=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),et=(St,_t)=>{throw process.exitCode=St,_t},_.inspect=()=>"[Emscripten Module object]"}else(tt||nt)&&(nt?ot=self.location.href:typeof document<"u"&&document.currentScript&&(ot=document.currentScript.src),i&&(ot=i),ot=ot.indexOf("blob:")!==0?ot.substr(0,ot.replace(/[?#].*/,"").lastIndexOf("/")+1):"",j=St=>{var _t=new XMLHttpRequest;return _t.open("GET",St,!1),_t.send(null),_t.responseText},nt&&(g=St=>{var _t=new XMLHttpRequest;return _t.open("GET",St,!1),_t.responseType="arraybuffer",_t.send(null),new Uint8Array(_t.response)}),_e=(St,_t,At)=>{var Mt=new XMLHttpRequest;Mt.open("GET",St,!0),Mt.responseType="arraybuffer",Mt.onload=()=>{Mt.status==200||Mt.status==0&&Mt.response?_t(Mt.response):At()},Mt.onerror=At,Mt.send(null)});var at,lt=_.print||console.log.bind(console),ut=_.printErr||console.error.bind(console);Object.assign(_,c),c=null,_.thisProgram&&($=_.thisProgram),_.quit&&(et=_.quit),_.wasmBinary&&(at=_.wasmBinary);var ct=_.noExitRuntime||!0;typeof WebAssembly!="object"&&Ot("no native wasm support detected");var pt,ht,yt,xt,ft,wt,dt=!1;function mt(){var St=pt.buffer;_.HEAP8=yt=new Int8Array(St),_.HEAP16=new Int16Array(St),_.HEAP32=ft=new Int32Array(St),_.HEAPU8=xt=new Uint8Array(St),_.HEAPU16=new Uint16Array(St),_.HEAPU32=wt=new Uint32Array(St),_.HEAPF32=new Float32Array(St),_.HEAPF64=new Float64Array(St)}var bt=[],vt=[],Tt=[];function Et(){var St=_.preRun.shift();bt.unshift(St)}var Ct,kt,Dt=0,Rt=null;function Ot(St){throw _.onAbort&&_.onAbort(St),ut(St="Aborted("+St+")"),dt=!0,St=new WebAssembly.RuntimeError(St+". Build with -sASSERTIONS for more info."),b(St),St}function zt(St){return St.startsWith("data:application/octet-stream;base64,")}if(!zt(Ct="ort-wasm.wasm")){var Bt=Ct;Ct=_.locateFile?_.locateFile(Bt,ot):ot+Bt}function Gt(St){if(St==Ct&&at)return new Uint8Array(at);if(g)return g(St);throw"both async and sync fetching of the wasm failed"}function jt(St,_t,At){return function(Mt){if(!at&&(tt||nt)){if(typeof fetch=="function"&&!Mt.startsWith("file://"))return fetch(Mt,{credentials:"same-origin"}).then(Vt=>{if(!Vt.ok)throw"failed to load wasm binary file at '"+Mt+"'";return Vt.arrayBuffer()}).catch(()=>Gt(Mt));if(_e)return new Promise((Vt,Ht)=>{_e(Mt,Qt=>Vt(new Uint8Array(Qt)),Ht)})}return Promise.resolve().then(()=>Gt(Mt))}(St).then(Mt=>WebAssembly.instantiate(Mt,_t)).then(Mt=>Mt).then(At,Mt=>{ut("failed to asynchronously prepare wasm: "+Mt),Ot(Mt)})}function Kt(St){this.name="ExitStatus",this.message=`Program terminated with exit(${St})`,this.status=St}var Wt=St=>{for(;0<St.length;)St.shift()(_)};function Jt(St){this.qa=St-24,this.va=function(_t){wt[this.qa+4>>2>>>0]=_t},this.ua=function(_t){wt[this.qa+8>>2>>>0]=_t},this.sa=function(_t,At){this.ta(),this.va(_t),this.ua(At)},this.ta=function(){wt[this.qa+16>>2>>>0]=0}}var Xt,tn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,en=(St,_t,At)=>{var Mt=(_t>>>=0)+At;for(At=_t;St[At]&&!(At>=Mt);)++At;if(16<At-_t&&St.buffer&&tn)return tn.decode(St.subarray(_t,At));for(Mt="";_t<At;){var Vt=St[_t++];if(128&Vt){var Ht=63&St[_t++];if((224&Vt)==192)Mt+=String.fromCharCode((31&Vt)<<6|Ht);else{var Qt=63&St[_t++];65536>(Vt=(240&Vt)==224?(15&Vt)<<12|Ht<<6|Qt:(7&Vt)<<18|Ht<<12|Qt<<6|63&St[_t++])?Mt+=String.fromCharCode(Vt):(Vt-=65536,Mt+=String.fromCharCode(55296|Vt>>10,56320|1023&Vt))}}else Mt+=String.fromCharCode(Vt)}return Mt},Zt=(St,_t)=>(St>>>=0)?en(xt,St,_t):"",nn=St=>{for(var _t=0,At=0;At<St.length;++At){var Mt=St.charCodeAt(At);127>=Mt?_t++:2047>=Mt?_t+=2:55296<=Mt&&57343>=Mt?(_t+=4,++At):_t+=3}return _t},rn=(St,_t,At,Mt)=>{if(!(0<Mt))return 0;var Vt=At>>>=0;Mt=At+Mt-1;for(var Ht=0;Ht<St.length;++Ht){var Qt=St.charCodeAt(Ht);if(55296<=Qt&&57343>=Qt&&(Qt=65536+((1023&Qt)<<10)|1023&St.charCodeAt(++Ht)),127>=Qt){if(At>=Mt)break;_t[At++>>>0]=Qt}else{if(2047>=Qt){if(At+1>=Mt)break;_t[At++>>>0]=192|Qt>>6}else{if(65535>=Qt){if(At+2>=Mt)break;_t[At++>>>0]=224|Qt>>12}else{if(At+3>=Mt)break;_t[At++>>>0]=240|Qt>>18,_t[At++>>>0]=128|Qt>>12&63}_t[At++>>>0]=128|Qt>>6&63}_t[At++>>>0]=128|63&Qt}}return _t[At>>>0]=0,At-Vt},un=St=>St%4==0&&(St%100!=0||St%400==0),ln=[0,31,60,91,121,152,182,213,244,274,305,335],mn=[0,31,59,90,120,151,181,212,243,273,304,334],an=St=>{var _t=nn(St)+1,At=Dn(_t);return At&&rn(St,xt,At,_t),At},gn={},yn=()=>{if(!Xt){var St,_t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:$||"./this.program"};for(St in gn)gn[St]===void 0?delete _t[St]:_t[St]=gn[St];var At=[];for(St in _t)At.push(`${St}=${_t[St]}`);Xt=At}return Xt},Sn=[null,[],[]],wn=St=>(wn=(()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return Mt=>crypto.getRandomValues(Mt);if(rt)try{var _t=s(760);if(_t.randomFillSync)return Mt=>_t.randomFillSync(Mt);var At=_t.randomBytes;return Mt=>(Mt.set(At(Mt.byteLength)),Mt)}catch{}Ot("initRandomDevice")})())(St),$n=[31,29,31,30,31,30,31,31,30,31,30,31],In=[31,28,31,30,31,30,31,31,30,31,30,31];function kn(St,_t,At,Mt){function Vt(Ft,on,cn){for(Ft=typeof Ft=="number"?Ft.toString():Ft||"";Ft.length<on;)Ft=cn[0]+Ft;return Ft}function Ht(Ft,on){return Vt(Ft,on,"0")}function Qt(Ft,on){function cn(Vn){return 0>Vn?-1:0<Vn?1:0}var An;return(An=cn(Ft.getFullYear()-on.getFullYear()))===0&&(An=cn(Ft.getMonth()-on.getMonth()))===0&&(An=cn(Ft.getDate()-on.getDate())),An}function fn(Ft){switch(Ft.getDay()){case 0:return new Date(Ft.getFullYear()-1,11,29);case 1:return Ft;case 2:return new Date(Ft.getFullYear(),0,3);case 3:return new Date(Ft.getFullYear(),0,2);case 4:return new Date(Ft.getFullYear(),0,1);case 5:return new Date(Ft.getFullYear()-1,11,31);case 6:return new Date(Ft.getFullYear()-1,11,30)}}function bn(Ft){var on=Ft.ma;for(Ft=new Date(new Date(Ft.na+1900,0,1).getTime());0<on;){var cn=Ft.getMonth(),An=(un(Ft.getFullYear())?$n:In)[cn];if(!(on>An-Ft.getDate())){Ft.setDate(Ft.getDate()+on);break}on-=An-Ft.getDate()+1,Ft.setDate(1),11>cn?Ft.setMonth(cn+1):(Ft.setMonth(0),Ft.setFullYear(Ft.getFullYear()+1))}return cn=new Date(Ft.getFullYear()+1,0,4),on=fn(new Date(Ft.getFullYear(),0,4)),cn=fn(cn),0>=Qt(on,Ft)?0>=Qt(cn,Ft)?Ft.getFullYear()+1:Ft.getFullYear():Ft.getFullYear()-1}St>>>=0,_t>>>=0,At>>>=0;var Tn=ft[40+(Mt>>>=0)>>2>>>0];for(var xn in Mt={ya:ft[Mt>>2>>>0],xa:ft[Mt+4>>2>>>0],oa:ft[Mt+8>>2>>>0],ra:ft[Mt+12>>2>>>0],pa:ft[Mt+16>>2>>>0],na:ft[Mt+20>>2>>>0],ha:ft[Mt+24>>2>>>0],ma:ft[Mt+28>>2>>>0],Aa:ft[Mt+32>>2>>>0],wa:ft[Mt+36>>2>>>0],za:Tn?Zt(Tn):""},At=Zt(At),Tn={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})At=At.replace(new RegExp(xn,"g"),Tn[xn]);var zn="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Bn="January February March April May June July August September October November December".split(" ");for(xn in Tn={"%a":Ft=>zn[Ft.ha].substring(0,3),"%A":Ft=>zn[Ft.ha],"%b":Ft=>Bn[Ft.pa].substring(0,3),"%B":Ft=>Bn[Ft.pa],"%C":Ft=>Ht((Ft.na+1900)/100|0,2),"%d":Ft=>Ht(Ft.ra,2),"%e":Ft=>Vt(Ft.ra,2," "),"%g":Ft=>bn(Ft).toString().substring(2),"%G":Ft=>bn(Ft),"%H":Ft=>Ht(Ft.oa,2),"%I":Ft=>((Ft=Ft.oa)==0?Ft=12:12<Ft&&(Ft-=12),Ht(Ft,2)),"%j":Ft=>{for(var on=0,cn=0;cn<=Ft.pa-1;on+=(un(Ft.na+1900)?$n:In)[cn++]);return Ht(Ft.ra+on,3)},"%m":Ft=>Ht(Ft.pa+1,2),"%M":Ft=>Ht(Ft.xa,2),"%n":()=>`
`,"%p":Ft=>0<=Ft.oa&&12>Ft.oa?"AM":"PM","%S":Ft=>Ht(Ft.ya,2),"%t":()=>"	","%u":Ft=>Ft.ha||7,"%U":Ft=>Ht(Math.floor((Ft.ma+7-Ft.ha)/7),2),"%V":Ft=>{var on=Math.floor((Ft.ma+7-(Ft.ha+6)%7)/7);if(2>=(Ft.ha+371-Ft.ma-2)%7&&on++,on)on==53&&((cn=(Ft.ha+371-Ft.ma)%7)==4||cn==3&&un(Ft.na)||(on=1));else{on=52;var cn=(Ft.ha+7-Ft.ma-1)%7;(cn==4||cn==5&&un(Ft.na%400-1))&&on++}return Ht(on,2)},"%w":Ft=>Ft.ha,"%W":Ft=>Ht(Math.floor((Ft.ma+7-(Ft.ha+6)%7)/7),2),"%y":Ft=>(Ft.na+1900).toString().substring(2),"%Y":Ft=>Ft.na+1900,"%z":Ft=>{var on=0<=(Ft=Ft.wa);return Ft=Math.abs(Ft)/60,(on?"+":"-")+("0000"+(Ft/60*100+Ft%60)).slice(-4)},"%Z":Ft=>Ft.za,"%%":()=>"%"},At=At.replace(/%%/g,"\0\0"),Tn)At.includes(xn)&&(At=At.replace(new RegExp(xn,"g"),Tn[xn](Mt)));return xn=function(Ft){var on=Array(nn(Ft)+1);return rn(Ft,on,0,on.length),on}(At=At.replace(/\0\0/g,"%")),xn.length>_t?0:(yt.set(xn,St>>>0),xn.length-1)}var On={a:function(St,_t,At){throw new Jt(St>>>=0).sa(_t>>>0,At>>>0),St},e:function(){return 0},I:function(){},y:function(){},A:function(){},K:function(){return 0},G:function(){},B:function(){},F:function(){},g:function(){},z:function(){},w:function(){},H:function(){},x:function(){},k:()=>!0,n:function(St,_t,At){St=_t+2097152>>>0<4194305-!!St?(St>>>0)+4294967296*_t:NaN,At>>>=0,St=new Date(1e3*St),ft[At>>2>>>0]=St.getUTCSeconds(),ft[At+4>>2>>>0]=St.getUTCMinutes(),ft[At+8>>2>>>0]=St.getUTCHours(),ft[At+12>>2>>>0]=St.getUTCDate(),ft[At+16>>2>>>0]=St.getUTCMonth(),ft[At+20>>2>>>0]=St.getUTCFullYear()-1900,ft[At+24>>2>>>0]=St.getUTCDay(),ft[At+28>>2>>>0]=(St.getTime()-Date.UTC(St.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(St,_t,At){St=_t+2097152>>>0<4194305-!!St?(St>>>0)+4294967296*_t:NaN,At>>>=0,St=new Date(1e3*St),ft[At>>2>>>0]=St.getSeconds(),ft[At+4>>2>>>0]=St.getMinutes(),ft[At+8>>2>>>0]=St.getHours(),ft[At+12>>2>>>0]=St.getDate(),ft[At+16>>2>>>0]=St.getMonth(),ft[At+20>>2>>>0]=St.getFullYear()-1900,ft[At+24>>2>>>0]=St.getDay(),ft[At+28>>2>>>0]=(un(St.getFullYear())?ln:mn)[St.getMonth()]+St.getDate()-1|0,ft[At+36>>2>>>0]=-60*St.getTimezoneOffset(),_t=new Date(St.getFullYear(),6,1).getTimezoneOffset();var Mt=new Date(St.getFullYear(),0,1).getTimezoneOffset();ft[At+32>>2>>>0]=0|(_t!=Mt&&St.getTimezoneOffset()==Math.min(Mt,_t))},p:function(St){St>>>=0;var _t=new Date(ft[St+20>>2>>>0]+1900,ft[St+16>>2>>>0],ft[St+12>>2>>>0],ft[St+8>>2>>>0],ft[St+4>>2>>>0],ft[St>>2>>>0],0),At=ft[St+32>>2>>>0],Mt=_t.getTimezoneOffset(),Vt=new Date(_t.getFullYear(),6,1).getTimezoneOffset(),Ht=new Date(_t.getFullYear(),0,1).getTimezoneOffset(),Qt=Math.min(Ht,Vt);return 0>At?ft[St+32>>2>>>0]=+(Vt!=Ht&&Qt==Mt):0<At!=(Qt==Mt)&&(Vt=Math.max(Ht,Vt),_t.setTime(_t.getTime()+6e4*((0<At?Qt:Vt)-Mt))),ft[St+24>>2>>>0]=_t.getDay(),ft[St+28>>2>>>0]=(un(_t.getFullYear())?ln:mn)[_t.getMonth()]+_t.getDate()-1|0,ft[St>>2>>>0]=_t.getSeconds(),ft[St+4>>2>>>0]=_t.getMinutes(),ft[St+8>>2>>>0]=_t.getHours(),ft[St+12>>2>>>0]=_t.getDate(),ft[St+16>>2>>>0]=_t.getMonth(),ft[St+20>>2>>>0]=_t.getYear(),St=_t.getTime()/1e3,Nn((kt=St,1<=+Math.abs(kt)?0<kt?+Math.floor(kt/4294967296)>>>0:~~+Math.ceil((kt-+(~~kt>>>0))/4294967296)>>>0:0)),St>>>0},l:function(){return-52},m:function(){},u:function(St,_t,At){function Mt(bn){return(bn=bn.toTimeString().match(/\(([A-Za-z ]+)\)$/))?bn[1]:"GMT"}At>>>=0;var Vt=new Date().getFullYear(),Ht=new Date(Vt,0,1),Qt=new Date(Vt,6,1);Vt=Ht.getTimezoneOffset();var fn=Qt.getTimezoneOffset();wt[St>>>0>>2>>>0]=60*Math.max(Vt,fn),ft[_t>>>0>>2>>>0]=+(Vt!=fn),St=Mt(Ht),_t=Mt(Qt),St=an(St),_t=an(_t),fn<Vt?(wt[At>>2>>>0]=St,wt[At+4>>2>>>0]=_t):(wt[At>>2>>>0]=_t,wt[At+4>>2>>>0]=St)},d:()=>{Ot("")},h:function(){return Date.now()},v:function(){return 4294901760},b:()=>performance.now(),J:function(St,_t,At){return _t>>>=0,xt.copyWithin(St>>>0>>>0,_t>>>0,_t+(At>>>0)>>>0)},t:function(St){St>>>=0;var _t=xt.length;if(4294901760<St)return!1;for(var At=1;4>=At;At*=2){var Mt=_t*(1+.2/At);Mt=Math.min(Mt,St+100663296);var Vt=Math;Mt=Math.max(St,Mt);e:{Vt=Vt.min.call(Vt,4294901760,Mt+(65536-Mt%65536)%65536)-pt.buffer.byteLength+65535>>>16;try{pt.grow(Vt),mt();var Ht=1;break e}catch{}Ht=void 0}if(Ht)return!0}return!1},D:function(St,_t){St>>>=0,_t>>>=0;var At=0;return yn().forEach(function(Mt,Vt){var Ht=_t+At;for(Vt=wt[St+4*Vt>>2>>>0]=Ht,Ht=0;Ht<Mt.length;++Ht)yt[Vt++>>0>>>0]=Mt.charCodeAt(Ht);yt[Vt>>0>>>0]=0,At+=Mt.length+1}),0},E:function(St,_t){St>>>=0,_t>>>=0;var At=yn();wt[St>>2>>>0]=At.length;var Mt=0;return At.forEach(function(Vt){Mt+=Vt.length+1}),wt[_t>>2>>>0]=Mt,0},s:St=>{ct||(_.onExit&&_.onExit(St),dt=!0),et(St,new Kt(St))},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(St,_t,At,Mt){_t>>>=0,At>>>=0,Mt>>>=0;for(var Vt=0,Ht=0;Ht<At;Ht++){var Qt=wt[_t>>2>>>0],fn=wt[_t+4>>2>>>0];_t+=8;for(var bn=0;bn<fn;bn++){var Tn=xt[Qt+bn>>>0],xn=Sn[St];Tn===0||Tn===10?((St===1?lt:ut)(en(xn,0)),xn.length=0):xn.push(Tn)}Vt+=fn}return wt[Mt>>2>>>0]=Vt,0},r:function(St,_t){return St>>>=0,wn(xt.subarray(St>>>0,St+(_t>>>0)>>>0)),0},C:kn,c:function(St,_t,At,Mt){return kn(St>>>0,_t>>>0,At>>>0,Mt>>>0)}};(function(){function St(At){if(At=At.exports,ht=At=function(Vt){var Ht=fn=>()=>fn()>>>0,Qt=fn=>bn=>fn(bn)>>>0;return(Vt=Object.assign({},Vt)).__errno_location=Ht(Vt.__errno_location),Vt.malloc=Qt(Vt.malloc),Vt.stackSave=Ht(Vt.stackSave),Vt.stackAlloc=Qt(Vt.stackAlloc),Vt}(At),pt=ht.L,mt(),vt.unshift(ht.M),Dt--,_.monitorRunDependencies&&_.monitorRunDependencies(Dt),Dt==0&&Rt){var Mt=Rt;Rt=null,Mt()}return At}var _t={a:On};if(Dt++,_.monitorRunDependencies&&_.monitorRunDependencies(Dt),_.instantiateWasm)try{return _.instantiateWasm(_t,St)}catch(At){ut("Module.instantiateWasm callback failed with error: "+At),b(At)}(function(At,Mt){var Vt=Ct;return at||typeof WebAssembly.instantiateStreaming!="function"||zt(Vt)||Vt.startsWith("file://")||rt||typeof fetch!="function"?jt(Vt,At,Mt):fetch(Vt,{credentials:"same-origin"}).then(Ht=>WebAssembly.instantiateStreaming(Ht,At).then(Mt,function(Qt){return ut("wasm streaming compile failed: "+Qt),ut("falling back to ArrayBuffer instantiation"),jt(Vt,At,Mt)}))})(_t,function(At){St(At.instance)}).catch(b)})(),_._OrtInit=(St,_t)=>(_._OrtInit=ht.N)(St,_t),_._OrtGetLastError=(St,_t)=>(_._OrtGetLastError=ht.O)(St,_t),_._OrtCreateSessionOptions=(St,_t,At,Mt,Vt,Ht,Qt,fn,bn,Tn)=>(_._OrtCreateSessionOptions=ht.P)(St,_t,At,Mt,Vt,Ht,Qt,fn,bn,Tn),_._OrtAppendExecutionProvider=(St,_t)=>(_._OrtAppendExecutionProvider=ht.Q)(St,_t),_._OrtAddSessionConfigEntry=(St,_t,At)=>(_._OrtAddSessionConfigEntry=ht.R)(St,_t,At),_._OrtReleaseSessionOptions=St=>(_._OrtReleaseSessionOptions=ht.S)(St),_._OrtCreateSession=(St,_t,At)=>(_._OrtCreateSession=ht.T)(St,_t,At),_._OrtReleaseSession=St=>(_._OrtReleaseSession=ht.U)(St),_._OrtGetInputOutputCount=(St,_t,At)=>(_._OrtGetInputOutputCount=ht.V)(St,_t,At),_._OrtGetInputName=(St,_t)=>(_._OrtGetInputName=ht.W)(St,_t),_._OrtGetOutputName=(St,_t)=>(_._OrtGetOutputName=ht.X)(St,_t),_._OrtFree=St=>(_._OrtFree=ht.Y)(St),_._OrtCreateTensor=(St,_t,At,Mt,Vt)=>(_._OrtCreateTensor=ht.Z)(St,_t,At,Mt,Vt),_._OrtGetTensorData=(St,_t,At,Mt,Vt)=>(_._OrtGetTensorData=ht._)(St,_t,At,Mt,Vt),_._OrtReleaseTensor=St=>(_._OrtReleaseTensor=ht.$)(St),_._OrtCreateRunOptions=(St,_t,At,Mt)=>(_._OrtCreateRunOptions=ht.aa)(St,_t,At,Mt),_._OrtAddRunConfigEntry=(St,_t,At)=>(_._OrtAddRunConfigEntry=ht.ba)(St,_t,At),_._OrtReleaseRunOptions=St=>(_._OrtReleaseRunOptions=ht.ca)(St),_._OrtRun=(St,_t,At,Mt,Vt,Ht,Qt,fn)=>(_._OrtRun=ht.da)(St,_t,At,Mt,Vt,Ht,Qt,fn),_._OrtEndProfiling=St=>(_._OrtEndProfiling=ht.ea)(St);var Dn=_._malloc=St=>(Dn=_._malloc=ht.fa)(St);_._free=St=>(_._free=ht.ga)(St);var _n,Nn=St=>(Nn=ht.ia)(St),Rn=()=>(Rn=ht.ja)(),Yt=St=>(Yt=ht.ka)(St),Pn=St=>(Pn=ht.la)(St);function Mn(){function St(){if(!_n&&(_n=!0,_.calledRun=!0,!dt)){if(Wt(vt),h(_),_.onRuntimeInitialized&&_.onRuntimeInitialized(),_.postRun)for(typeof _.postRun=="function"&&(_.postRun=[_.postRun]);_.postRun.length;){var _t=_.postRun.shift();Tt.unshift(_t)}Wt(Tt)}}if(!(0<Dt)){if(_.preRun)for(typeof _.preRun=="function"&&(_.preRun=[_.preRun]);_.preRun.length;)Et();Wt(bt),0<Dt||(_.setStatus?(_.setStatus("Running..."),setTimeout(function(){setTimeout(function(){_.setStatus("")},1),St()},1)):St())}}if(_.stackAlloc=Pn,_.stackSave=Rn,_.stackRestore=Yt,_.UTF8ToString=Zt,_.stringToUTF8=(St,_t,At)=>rn(St,xt,_t,At),_.lengthBytesUTF8=nn,Rt=function St(){_n||Mn(),_n||(Rt=St)},_.preInit)for(typeof _.preInit=="function"&&(_.preInit=[_.preInit]);0<_.preInit.length;)_.preInit.pop()();return Mn(),d.ready});o.exports=a},4537:o=>{o.exports=function(e,s){for(var i=new Array(arguments.length-1),a=0,d=2,h=!0;d<arguments.length;)i[a++]=arguments[d++];return new Promise(function(b,_){i[a]=function(j){if(h)if(h=!1,j)_(j);else{for(var _e=new Array(arguments.length-1),g=0;g<_e.length;)_e[g++]=arguments[g];b.apply(null,_e)}};try{e.apply(s||null,i)}catch(j){h&&(h=!1,_(j))}})}},7419:(o,e)=>{var s=e;s.length=function(b){var _=b.length;if(!_)return 0;for(var j=0;--_%4>1&&b.charAt(_)==="=";)++j;return Math.ceil(3*b.length)/4-j};for(var i=new Array(64),a=new Array(123),d=0;d<64;)a[i[d]=d<26?d+65:d<52?d+71:d<62?d-4:d-59|43]=d++;s.encode=function(b,_,j){for(var _e,g=null,c=[],$=0,et=0;_<j;){var tt=b[_++];switch(et){case 0:c[$++]=i[tt>>2],_e=(3&tt)<<4,et=1;break;case 1:c[$++]=i[_e|tt>>4],_e=(15&tt)<<2,et=2;break;case 2:c[$++]=i[_e|tt>>6],c[$++]=i[63&tt],et=0}$>8191&&((g||(g=[])).push(String.fromCharCode.apply(String,c)),$=0)}return et&&(c[$++]=i[_e],c[$++]=61,et===1&&(c[$++]=61)),g?($&&g.push(String.fromCharCode.apply(String,c.slice(0,$))),g.join("")):String.fromCharCode.apply(String,c.slice(0,$))};var h="invalid encoding";s.decode=function(b,_,j){for(var _e,g=j,c=0,$=0;$<b.length;){var et=b.charCodeAt($++);if(et===61&&c>1)break;if((et=a[et])===void 0)throw Error(h);switch(c){case 0:_e=et,c=1;break;case 1:_[j++]=_e<<2|(48&et)>>4,_e=et,c=2;break;case 2:_[j++]=(15&_e)<<4|(60&et)>>2,_e=et,c=3;break;case 3:_[j++]=(3&_e)<<6|et,c=0}}if(c===1)throw Error(h);return j-g},s.test=function(b){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(b)}},9211:o=>{function e(){this._listeners={}}o.exports=e,e.prototype.on=function(s,i,a){return(this._listeners[s]||(this._listeners[s]=[])).push({fn:i,ctx:a||this}),this},e.prototype.off=function(s,i){if(s===void 0)this._listeners={};else if(i===void 0)this._listeners[s]=[];else for(var a=this._listeners[s],d=0;d<a.length;)a[d].fn===i?a.splice(d,1):++d;return this},e.prototype.emit=function(s){var i=this._listeners[s];if(i){for(var a=[],d=1;d<arguments.length;)a.push(arguments[d++]);for(d=0;d<i.length;)i[d].fn.apply(i[d++].ctx,a)}return this}},945:o=>{function e(h){return typeof Float32Array<"u"?function(){var b=new Float32Array([-0]),_=new Uint8Array(b.buffer),j=_[3]===128;function _e(et,tt,nt){b[0]=et,tt[nt]=_[0],tt[nt+1]=_[1],tt[nt+2]=_[2],tt[nt+3]=_[3]}function g(et,tt,nt){b[0]=et,tt[nt]=_[3],tt[nt+1]=_[2],tt[nt+2]=_[1],tt[nt+3]=_[0]}function c(et,tt){return _[0]=et[tt],_[1]=et[tt+1],_[2]=et[tt+2],_[3]=et[tt+3],b[0]}function $(et,tt){return _[3]=et[tt],_[2]=et[tt+1],_[1]=et[tt+2],_[0]=et[tt+3],b[0]}h.writeFloatLE=j?_e:g,h.writeFloatBE=j?g:_e,h.readFloatLE=j?c:$,h.readFloatBE=j?$:c}():function(){function b(j,_e,g,c){var $=_e<0?1:0;if($&&(_e=-_e),_e===0)j(1/_e>0?0:2147483648,g,c);else if(isNaN(_e))j(2143289344,g,c);else if(_e>34028234663852886e22)j(($<<31|2139095040)>>>0,g,c);else if(_e<11754943508222875e-54)j(($<<31|Math.round(_e/1401298464324817e-60))>>>0,g,c);else{var et=Math.floor(Math.log(_e)/Math.LN2);j(($<<31|et+127<<23|8388607&Math.round(_e*Math.pow(2,-et)*8388608))>>>0,g,c)}}function _(j,_e,g){var c=j(_e,g),$=2*(c>>31)+1,et=c>>>23&255,tt=8388607&c;return et===255?tt?NaN:$*(1/0):et===0?1401298464324817e-60*$*tt:$*Math.pow(2,et-150)*(tt+8388608)}h.writeFloatLE=b.bind(null,s),h.writeFloatBE=b.bind(null,i),h.readFloatLE=_.bind(null,a),h.readFloatBE=_.bind(null,d)}(),typeof Float64Array<"u"?function(){var b=new Float64Array([-0]),_=new Uint8Array(b.buffer),j=_[7]===128;function _e(et,tt,nt){b[0]=et,tt[nt]=_[0],tt[nt+1]=_[1],tt[nt+2]=_[2],tt[nt+3]=_[3],tt[nt+4]=_[4],tt[nt+5]=_[5],tt[nt+6]=_[6],tt[nt+7]=_[7]}function g(et,tt,nt){b[0]=et,tt[nt]=_[7],tt[nt+1]=_[6],tt[nt+2]=_[5],tt[nt+3]=_[4],tt[nt+4]=_[3],tt[nt+5]=_[2],tt[nt+6]=_[1],tt[nt+7]=_[0]}function c(et,tt){return _[0]=et[tt],_[1]=et[tt+1],_[2]=et[tt+2],_[3]=et[tt+3],_[4]=et[tt+4],_[5]=et[tt+5],_[6]=et[tt+6],_[7]=et[tt+7],b[0]}function $(et,tt){return _[7]=et[tt],_[6]=et[tt+1],_[5]=et[tt+2],_[4]=et[tt+3],_[3]=et[tt+4],_[2]=et[tt+5],_[1]=et[tt+6],_[0]=et[tt+7],b[0]}h.writeDoubleLE=j?_e:g,h.writeDoubleBE=j?g:_e,h.readDoubleLE=j?c:$,h.readDoubleBE=j?$:c}():function(){function b(j,_e,g,c,$,et){var tt=c<0?1:0;if(tt&&(c=-c),c===0)j(0,$,et+_e),j(1/c>0?0:2147483648,$,et+g);else if(isNaN(c))j(0,$,et+_e),j(2146959360,$,et+g);else if(c>17976931348623157e292)j(0,$,et+_e),j((tt<<31|2146435072)>>>0,$,et+g);else{var nt;if(c<22250738585072014e-324)j((nt=c/5e-324)>>>0,$,et+_e),j((tt<<31|nt/4294967296)>>>0,$,et+g);else{var rt=Math.floor(Math.log(c)/Math.LN2);rt===1024&&(rt=1023),j(4503599627370496*(nt=c*Math.pow(2,-rt))>>>0,$,et+_e),j((tt<<31|rt+1023<<20|1048576*nt&1048575)>>>0,$,et+g)}}}function _(j,_e,g,c,$){var et=j(c,$+_e),tt=j(c,$+g),nt=2*(tt>>31)+1,rt=tt>>>20&2047,ot=4294967296*(1048575&tt)+et;return rt===2047?ot?NaN:nt*(1/0):rt===0?5e-324*nt*ot:nt*Math.pow(2,rt-1075)*(ot+4503599627370496)}h.writeDoubleLE=b.bind(null,s,0,4),h.writeDoubleBE=b.bind(null,i,4,0),h.readDoubleLE=_.bind(null,a,0,4),h.readDoubleBE=_.bind(null,d,4,0)}(),h}function s(h,b,_){b[_]=255&h,b[_+1]=h>>>8&255,b[_+2]=h>>>16&255,b[_+3]=h>>>24}function i(h,b,_){b[_]=h>>>24,b[_+1]=h>>>16&255,b[_+2]=h>>>8&255,b[_+3]=255&h}function a(h,b){return(h[b]|h[b+1]<<8|h[b+2]<<16|h[b+3]<<24)>>>0}function d(h,b){return(h[b]<<24|h[b+1]<<16|h[b+2]<<8|h[b+3])>>>0}o.exports=e(e)},7199:module=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(o){}return null}module.exports=inquire},6662:o=>{o.exports=function(e,s,i){var a=i||8192,d=a>>>1,h=null,b=a;return function(_){if(_<1||_>d)return e(_);b+_>a&&(h=e(a),b=0);var j=s.call(h,b,b+=_);return 7&b&&(b=1+(7|b)),j}}},4997:(o,e)=>{var s=e;s.length=function(i){for(var a=0,d=0,h=0;h<i.length;++h)(d=i.charCodeAt(h))<128?a+=1:d<2048?a+=2:(64512&d)==55296&&(64512&i.charCodeAt(h+1))==56320?(++h,a+=4):a+=3;return a},s.read=function(i,a,d){if(d-a<1)return"";for(var h,b=null,_=[],j=0;a<d;)(h=i[a++])<128?_[j++]=h:h>191&&h<224?_[j++]=(31&h)<<6|63&i[a++]:h>239&&h<365?(h=((7&h)<<18|(63&i[a++])<<12|(63&i[a++])<<6|63&i[a++])-65536,_[j++]=55296+(h>>10),_[j++]=56320+(1023&h)):_[j++]=(15&h)<<12|(63&i[a++])<<6|63&i[a++],j>8191&&((b||(b=[])).push(String.fromCharCode.apply(String,_)),j=0);return b?(j&&b.push(String.fromCharCode.apply(String,_.slice(0,j))),b.join("")):String.fromCharCode.apply(String,_.slice(0,j))},s.write=function(i,a,d){for(var h,b,_=d,j=0;j<i.length;++j)(h=i.charCodeAt(j))<128?a[d++]=h:h<2048?(a[d++]=h>>6|192,a[d++]=63&h|128):(64512&h)==55296&&(64512&(b=i.charCodeAt(j+1)))==56320?(h=65536+((1023&h)<<10)+(1023&b),++j,a[d++]=h>>18|240,a[d++]=h>>12&63|128,a[d++]=h>>6&63|128,a[d++]=63&h|128):(a[d++]=h>>12|224,a[d++]=h>>6&63|128,a[d++]=63&h|128);return d-_}},3442:(o,e)=>{e.__esModule=!0;var s=function(){function i(a){if(!a)throw new TypeError("Invalid argument; `value` has no value.");this.value=i.EMPTY,a&&i.isGuid(a)&&(this.value=a)}return i.isGuid=function(a){var d=a.toString();return a&&(a instanceof i||i.validator.test(d))},i.create=function(){return new i([i.gen(2),i.gen(1),i.gen(1),i.gen(1),i.gen(3)].join("-"))},i.createEmpty=function(){return new i("emptyguid")},i.parse=function(a){return new i(a)},i.raw=function(){return[i.gen(2),i.gen(1),i.gen(1),i.gen(1),i.gen(3)].join("-")},i.gen=function(a){for(var d="",h=0;h<a;h++)d+=(65536*(1+Math.random())|0).toString(16).substring(1);return d},i.prototype.equals=function(a){return i.isGuid(a)&&this.value===a.toString()},i.prototype.isEmpty=function(){return this.value===i.EMPTY},i.prototype.toString=function(){return this.value},i.prototype.toJSON=function(){return{value:this.value}},i.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),i.EMPTY="00000000-0000-0000-0000-000000000000",i}();e.Guid=s},2100:(o,e,s)=>{o.exports=s(9482)},9482:(o,e,s)=>{var i=e;function a(){i.util._configure(),i.Writer._configure(i.BufferWriter),i.Reader._configure(i.BufferReader)}i.build="minimal",i.Writer=s(1173),i.BufferWriter=s(3155),i.Reader=s(1408),i.BufferReader=s(593),i.util=s(9693),i.rpc=s(5994),i.roots=s(5054),i.configure=a,a()},1408:(o,e,s)=>{o.exports=_;var i,a=s(9693),d=a.LongBits,h=a.utf8;function b(tt,nt){return RangeError("index out of range: "+tt.pos+" + "+(nt||1)+" > "+tt.len)}function _(tt){this.buf=tt,this.pos=0,this.len=tt.length}var j,_e=typeof Uint8Array<"u"?function(tt){if(tt instanceof Uint8Array||Array.isArray(tt))return new _(tt);throw Error("illegal buffer")}:function(tt){if(Array.isArray(tt))return new _(tt);throw Error("illegal buffer")},g=function(){return a.Buffer?function(tt){return(_.create=function(nt){return a.Buffer.isBuffer(nt)?new i(nt):_e(nt)})(tt)}:_e};function c(){var tt=new d(0,0),nt=0;if(!(this.len-this.pos>4)){for(;nt<3;++nt){if(this.pos>=this.len)throw b(this);if(tt.lo=(tt.lo|(127&this.buf[this.pos])<<7*nt)>>>0,this.buf[this.pos++]<128)return tt}return tt.lo=(tt.lo|(127&this.buf[this.pos++])<<7*nt)>>>0,tt}for(;nt<4;++nt)if(tt.lo=(tt.lo|(127&this.buf[this.pos])<<7*nt)>>>0,this.buf[this.pos++]<128)return tt;if(tt.lo=(tt.lo|(127&this.buf[this.pos])<<28)>>>0,tt.hi=(tt.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return tt;if(nt=0,this.len-this.pos>4){for(;nt<5;++nt)if(tt.hi=(tt.hi|(127&this.buf[this.pos])<<7*nt+3)>>>0,this.buf[this.pos++]<128)return tt}else for(;nt<5;++nt){if(this.pos>=this.len)throw b(this);if(tt.hi=(tt.hi|(127&this.buf[this.pos])<<7*nt+3)>>>0,this.buf[this.pos++]<128)return tt}throw Error("invalid varint encoding")}function $(tt,nt){return(tt[nt-4]|tt[nt-3]<<8|tt[nt-2]<<16|tt[nt-1]<<24)>>>0}function et(){if(this.pos+8>this.len)throw b(this,8);return new d($(this.buf,this.pos+=4),$(this.buf,this.pos+=4))}_.create=g(),_.prototype._slice=a.Array.prototype.subarray||a.Array.prototype.slice,_.prototype.uint32=(j=4294967295,function(){if(j=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(j=(j|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(j=(j|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(j=(j|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(j=(j|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return j;if((this.pos+=5)>this.len)throw this.pos=this.len,b(this,10);return j}),_.prototype.int32=function(){return 0|this.uint32()},_.prototype.sint32=function(){var tt=this.uint32();return tt>>>1^-(1&tt)|0},_.prototype.bool=function(){return this.uint32()!==0},_.prototype.fixed32=function(){if(this.pos+4>this.len)throw b(this,4);return $(this.buf,this.pos+=4)},_.prototype.sfixed32=function(){if(this.pos+4>this.len)throw b(this,4);return 0|$(this.buf,this.pos+=4)},_.prototype.float=function(){if(this.pos+4>this.len)throw b(this,4);var tt=a.float.readFloatLE(this.buf,this.pos);return this.pos+=4,tt},_.prototype.double=function(){if(this.pos+8>this.len)throw b(this,4);var tt=a.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,tt},_.prototype.bytes=function(){var tt=this.uint32(),nt=this.pos,rt=this.pos+tt;if(rt>this.len)throw b(this,tt);return this.pos+=tt,Array.isArray(this.buf)?this.buf.slice(nt,rt):nt===rt?new this.buf.constructor(0):this._slice.call(this.buf,nt,rt)},_.prototype.string=function(){var tt=this.bytes();return h.read(tt,0,tt.length)},_.prototype.skip=function(tt){if(typeof tt=="number"){if(this.pos+tt>this.len)throw b(this,tt);this.pos+=tt}else do if(this.pos>=this.len)throw b(this);while(128&this.buf[this.pos++]);return this},_.prototype.skipType=function(tt){switch(tt){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(tt=7&this.uint32())!=4;)this.skipType(tt);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+tt+" at offset "+this.pos)}return this},_._configure=function(tt){i=tt,_.create=g(),i._configure();var nt=a.Long?"toLong":"toNumber";a.merge(_.prototype,{int64:function(){return c.call(this)[nt](!1)},uint64:function(){return c.call(this)[nt](!0)},sint64:function(){return c.call(this).zzDecode()[nt](!1)},fixed64:function(){return et.call(this)[nt](!0)},sfixed64:function(){return et.call(this)[nt](!1)}})}},593:(o,e,s)=>{o.exports=d;var i=s(1408);(d.prototype=Object.create(i.prototype)).constructor=d;var a=s(9693);function d(h){i.call(this,h)}d._configure=function(){a.Buffer&&(d.prototype._slice=a.Buffer.prototype.slice)},d.prototype.string=function(){var h=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+h,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+h,this.len))},d._configure()},5054:o=>{o.exports={}},5994:(o,e,s)=>{e.Service=s(7948)},7948:(o,e,s)=>{o.exports=a;var i=s(9693);function a(d,h,b){if(typeof d!="function")throw TypeError("rpcImpl must be a function");i.EventEmitter.call(this),this.rpcImpl=d,this.requestDelimited=!!h,this.responseDelimited=!!b}(a.prototype=Object.create(i.EventEmitter.prototype)).constructor=a,a.prototype.rpcCall=function d(h,b,_,j,_e){if(!j)throw TypeError("request must be specified");var g=this;if(!_e)return i.asPromise(d,g,h,b,_,j);if(g.rpcImpl)try{return g.rpcImpl(h,b[g.requestDelimited?"encodeDelimited":"encode"](j).finish(),function(c,$){if(c)return g.emit("error",c,h),_e(c);if($!==null){if(!($ instanceof _))try{$=_[g.responseDelimited?"decodeDelimited":"decode"]($)}catch(et){return g.emit("error",et,h),_e(et)}return g.emit("data",$,h),_e(null,$)}g.end(!0)})}catch(c){return g.emit("error",c,h),void setTimeout(function(){_e(c)},0)}else setTimeout(function(){_e(Error("already ended"))},0)},a.prototype.end=function(d){return this.rpcImpl&&(d||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},1945:(o,e,s)=>{o.exports=a;var i=s(9693);function a(_,j){this.lo=_>>>0,this.hi=j>>>0}var d=a.zero=new a(0,0);d.toNumber=function(){return 0},d.zzEncode=d.zzDecode=function(){return this},d.length=function(){return 1};var h=a.zeroHash="\0\0\0\0\0\0\0\0";a.fromNumber=function(_){if(_===0)return d;var j=_<0;j&&(_=-_);var _e=_>>>0,g=(_-_e)/4294967296>>>0;return j&&(g=~g>>>0,_e=~_e>>>0,++_e>4294967295&&(_e=0,++g>4294967295&&(g=0))),new a(_e,g)},a.from=function(_){if(typeof _=="number")return a.fromNumber(_);if(i.isString(_)){if(!i.Long)return a.fromNumber(parseInt(_,10));_=i.Long.fromString(_)}return _.low||_.high?new a(_.low>>>0,_.high>>>0):d},a.prototype.toNumber=function(_){if(!_&&this.hi>>>31){var j=1+~this.lo>>>0,_e=~this.hi>>>0;return j||(_e=_e+1>>>0),-(j+4294967296*_e)}return this.lo+4294967296*this.hi},a.prototype.toLong=function(_){return i.Long?new i.Long(0|this.lo,0|this.hi,!!_):{low:0|this.lo,high:0|this.hi,unsigned:!!_}};var b=String.prototype.charCodeAt;a.fromHash=function(_){return _===h?d:new a((b.call(_,0)|b.call(_,1)<<8|b.call(_,2)<<16|b.call(_,3)<<24)>>>0,(b.call(_,4)|b.call(_,5)<<8|b.call(_,6)<<16|b.call(_,7)<<24)>>>0)},a.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},a.prototype.zzEncode=function(){var _=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^_)>>>0,this.lo=(this.lo<<1^_)>>>0,this},a.prototype.zzDecode=function(){var _=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^_)>>>0,this.hi=(this.hi>>>1^_)>>>0,this},a.prototype.length=function(){var _=this.lo,j=(this.lo>>>28|this.hi<<4)>>>0,_e=this.hi>>>24;return _e===0?j===0?_<16384?_<128?1:2:_<2097152?3:4:j<16384?j<128?5:6:j<2097152?7:8:_e<128?9:10}},9693:function(o,e,s){var i=e;function a(h,b,_){for(var j=Object.keys(b),_e=0;_e<j.length;++_e)h[j[_e]]!==void 0&&_||(h[j[_e]]=b[j[_e]]);return h}function d(h){function b(_,j){if(!(this instanceof b))return new b(_,j);Object.defineProperty(this,"message",{get:function(){return _}}),Error.captureStackTrace?Error.captureStackTrace(this,b):Object.defineProperty(this,"stack",{value:new Error().stack||""}),j&&a(this,j)}return b.prototype=Object.create(Error.prototype,{constructor:{value:b,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return h},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),b}i.asPromise=s(4537),i.base64=s(7419),i.EventEmitter=s(9211),i.float=s(945),i.inquire=s(7199),i.utf8=s(4997),i.pool=s(6662),i.LongBits=s(1945),i.isNode=!!(typeof commonjsGlobal<"u"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),i.global=i.isNode&&commonjsGlobal||typeof window<"u"&&window||typeof self<"u"&&self||this,i.emptyArray=Object.freeze?Object.freeze([]):[],i.emptyObject=Object.freeze?Object.freeze({}):{},i.isInteger=Number.isInteger||function(h){return typeof h=="number"&&isFinite(h)&&Math.floor(h)===h},i.isString=function(h){return typeof h=="string"||h instanceof String},i.isObject=function(h){return h&&typeof h=="object"},i.isset=i.isSet=function(h,b){var _=h[b];return!(_==null||!h.hasOwnProperty(b))&&(typeof _!="object"||(Array.isArray(_)?_.length:Object.keys(_).length)>0)},i.Buffer=function(){try{var h=i.inquire("buffer").Buffer;return h.prototype.utf8Write?h:null}catch{return null}}(),i._Buffer_from=null,i._Buffer_allocUnsafe=null,i.newBuffer=function(h){return typeof h=="number"?i.Buffer?i._Buffer_allocUnsafe(h):new i.Array(h):i.Buffer?i._Buffer_from(h):typeof Uint8Array>"u"?h:new Uint8Array(h)},i.Array=typeof Uint8Array<"u"?Uint8Array:Array,i.Long=i.global.dcodeIO&&i.global.dcodeIO.Long||i.global.Long||i.inquire("long"),i.key2Re=/^true|false|0|1$/,i.key32Re=/^-?(?:0|[1-9][0-9]*)$/,i.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,i.longToHash=function(h){return h?i.LongBits.from(h).toHash():i.LongBits.zeroHash},i.longFromHash=function(h,b){var _=i.LongBits.fromHash(h);return i.Long?i.Long.fromBits(_.lo,_.hi,b):_.toNumber(!!b)},i.merge=a,i.lcFirst=function(h){return h.charAt(0).toLowerCase()+h.substring(1)},i.newError=d,i.ProtocolError=d("ProtocolError"),i.oneOfGetter=function(h){for(var b={},_=0;_<h.length;++_)b[h[_]]=1;return function(){for(var j=Object.keys(this),_e=j.length-1;_e>-1;--_e)if(b[j[_e]]===1&&this[j[_e]]!==void 0&&this[j[_e]]!==null)return j[_e]}},i.oneOfSetter=function(h){return function(b){for(var _=0;_<h.length;++_)h[_]!==b&&delete this[h[_]]}},i.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},i._configure=function(){var h=i.Buffer;h?(i._Buffer_from=h.from!==Uint8Array.from&&h.from||function(b,_){return new h(b,_)},i._Buffer_allocUnsafe=h.allocUnsafe||function(b){return new h(b)}):i._Buffer_from=i._Buffer_allocUnsafe=null}},1173:(o,e,s)=>{o.exports=g;var i,a=s(9693),d=a.LongBits,h=a.base64,b=a.utf8;function _(ot,st,it){this.fn=ot,this.len=st,this.next=void 0,this.val=it}function j(){}function _e(ot){this.head=ot.head,this.tail=ot.tail,this.len=ot.len,this.next=ot.states}function g(){this.len=0,this.head=new _(j,0,0),this.tail=this.head,this.states=null}var c=function(){return a.Buffer?function(){return(g.create=function(){return new i})()}:function(){return new g}};function $(ot,st,it){st[it]=255&ot}function et(ot,st){this.len=ot,this.next=void 0,this.val=st}function tt(ot,st,it){for(;ot.hi;)st[it++]=127&ot.lo|128,ot.lo=(ot.lo>>>7|ot.hi<<25)>>>0,ot.hi>>>=7;for(;ot.lo>127;)st[it++]=127&ot.lo|128,ot.lo=ot.lo>>>7;st[it++]=ot.lo}function nt(ot,st,it){st[it]=255&ot,st[it+1]=ot>>>8&255,st[it+2]=ot>>>16&255,st[it+3]=ot>>>24}g.create=c(),g.alloc=function(ot){return new a.Array(ot)},a.Array!==Array&&(g.alloc=a.pool(g.alloc,a.Array.prototype.subarray)),g.prototype._push=function(ot,st,it){return this.tail=this.tail.next=new _(ot,st,it),this.len+=st,this},et.prototype=Object.create(_.prototype),et.prototype.fn=function(ot,st,it){for(;ot>127;)st[it++]=127&ot|128,ot>>>=7;st[it]=ot},g.prototype.uint32=function(ot){return this.len+=(this.tail=this.tail.next=new et((ot>>>=0)<128?1:ot<16384?2:ot<2097152?3:ot<268435456?4:5,ot)).len,this},g.prototype.int32=function(ot){return ot<0?this._push(tt,10,d.fromNumber(ot)):this.uint32(ot)},g.prototype.sint32=function(ot){return this.uint32((ot<<1^ot>>31)>>>0)},g.prototype.uint64=function(ot){var st=d.from(ot);return this._push(tt,st.length(),st)},g.prototype.int64=g.prototype.uint64,g.prototype.sint64=function(ot){var st=d.from(ot).zzEncode();return this._push(tt,st.length(),st)},g.prototype.bool=function(ot){return this._push($,1,ot?1:0)},g.prototype.fixed32=function(ot){return this._push(nt,4,ot>>>0)},g.prototype.sfixed32=g.prototype.fixed32,g.prototype.fixed64=function(ot){var st=d.from(ot);return this._push(nt,4,st.lo)._push(nt,4,st.hi)},g.prototype.sfixed64=g.prototype.fixed64,g.prototype.float=function(ot){return this._push(a.float.writeFloatLE,4,ot)},g.prototype.double=function(ot){return this._push(a.float.writeDoubleLE,8,ot)};var rt=a.Array.prototype.set?function(ot,st,it){st.set(ot,it)}:function(ot,st,it){for(var at=0;at<ot.length;++at)st[it+at]=ot[at]};g.prototype.bytes=function(ot){var st=ot.length>>>0;if(!st)return this._push($,1,0);if(a.isString(ot)){var it=g.alloc(st=h.length(ot));h.decode(ot,it,0),ot=it}return this.uint32(st)._push(rt,st,ot)},g.prototype.string=function(ot){var st=b.length(ot);return st?this.uint32(st)._push(b.write,st,ot):this._push($,1,0)},g.prototype.fork=function(){return this.states=new _e(this),this.head=this.tail=new _(j,0,0),this.len=0,this},g.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new _(j,0,0),this.len=0),this},g.prototype.ldelim=function(){var ot=this.head,st=this.tail,it=this.len;return this.reset().uint32(it),it&&(this.tail.next=ot.next,this.tail=st,this.len+=it),this},g.prototype.finish=function(){for(var ot=this.head.next,st=this.constructor.alloc(this.len),it=0;ot;)ot.fn(ot.val,st,it),it+=ot.len,ot=ot.next;return st},g._configure=function(ot){i=ot,g.create=c(),i._configure()}},3155:(o,e,s)=>{o.exports=d;var i=s(1173);(d.prototype=Object.create(i.prototype)).constructor=d;var a=s(9693);function d(){i.call(this)}function h(b,_,j){b.length<40?a.utf8.write(b,_,j):_.utf8Write?_.utf8Write(b,j):_.write(b,j)}d._configure=function(){d.alloc=a._Buffer_allocUnsafe,d.writeBytesBuffer=a.Buffer&&a.Buffer.prototype instanceof Uint8Array&&a.Buffer.prototype.set.name==="set"?function(b,_,j){_.set(b,j)}:function(b,_,j){if(b.copy)b.copy(_,j,0,b.length);else for(var _e=0;_e<b.length;)_[j++]=b[_e++]}},d.prototype.bytes=function(b){a.isString(b)&&(b=a._Buffer_from(b,"base64"));var _=b.length>>>0;return this.uint32(_),_&&this._push(d.writeBytesBuffer,_,b),this},d.prototype.string=function(b){var _=a.Buffer.byteLength(b);return this.uint32(_),_&&this._push(h,_,b),this},d._configure()},4154:o=>{o.exports=`"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};
`},7067:()=>{},1296:()=>{},760:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},2806:()=>{},6449:()=>{},2850:()=>{},5381:()=>{},685:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.resolveBackend=e.registerBackend=void 0;const s={},i=[];e.registerBackend=(a,d,h)=>{if(!d||typeof d.init!="function"||typeof d.createSessionHandler!="function")throw new TypeError("not a valid backend");{const b=s[a];if(b===void 0)s[a]={backend:d,priority:h};else{if(b.priority>h)return;if(b.priority===h&&b.backend!==d)throw new Error(`cannot register backend "${a}" using priority ${h}`)}if(h>=0){const _=i.indexOf(a);_!==-1&&i.splice(_,1);for(let j=0;j<i.length;j++)if(s[i[j]].priority<=h)return void i.splice(j,0,a);i.push(a)}}},e.resolveBackend=async a=>{const d=a.length===0?i:a,h=[];for(const b of d){const _=s[b];if(_){if(_.initialized)return _.backend;if(_.aborted)continue;const j=!!_.initPromise;try{return j||(_.initPromise=_.backend.init()),await _.initPromise,_.initialized=!0,_.backend}catch(_e){j||h.push({name:b,err:_e}),_.aborted=!0}finally{delete _.initPromise}}}throw new Error(`no available backend found. ERR: ${h.map(b=>`[${b.name}] ${b.err}`).join(", ")}`)}},4798:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.registerBackend=void 0;var i=s(685);Object.defineProperty(e,"registerBackend",{enumerable:!0,get:function(){return i.registerBackend}})},3121:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.env=void 0;const i=s(9104);let a="warning";e.env={wasm:{},webgl:{},webgpu:{},versions:{common:i.version},set logLevel(d){if(d!==void 0){if(typeof d!="string"||["verbose","info","warning","error","fatal"].indexOf(d)===-1)throw new Error(`Unsupported logging level: ${d}`);a=d}},get logLevel(){return a}},Object.defineProperty(e.env,"logLevel",{enumerable:!0})},2457:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.env=void 0;const i=s(3121);e.env=i.env},2235:function(o,e,s){var i=this&&this.__createBinding||(Object.create?function(d,h,b,_){_===void 0&&(_=b);var j=Object.getOwnPropertyDescriptor(h,b);j&&!("get"in j?!h.__esModule:j.writable||j.configurable)||(j={enumerable:!0,get:function(){return h[b]}}),Object.defineProperty(d,_,j)}:function(d,h,b,_){_===void 0&&(_=b),d[_]=h[b]}),a=this&&this.__exportStar||function(d,h){for(var b in d)b==="default"||Object.prototype.hasOwnProperty.call(h,b)||i(h,d,b)};Object.defineProperty(e,"__esModule",{value:!0}),a(s(4798),e),a(s(2457),e),a(s(3974),e),a(s(963),e),a(s(7852),e)},8036:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.InferenceSession=void 0;const i=s(685),a=s(963);class d{constructor(b){this.handler=b}async run(b,_,j){const _e={};let g={};if(typeof b!="object"||b===null||b instanceof a.Tensor||Array.isArray(b))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let c=!0;if(typeof _=="object"){if(_===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(_ instanceof a.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(_)){if(_.length===0)throw new TypeError("'fetches' cannot be an empty array.");c=!1;for(const tt of _){if(typeof tt!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(tt)===-1)throw new RangeError(`'fetches' contains invalid output name: ${tt}.`);_e[tt]=null}if(typeof j=="object"&&j!==null)g=j;else if(j!==void 0)throw new TypeError("'options' must be an object.")}else{let tt=!1;const nt=Object.getOwnPropertyNames(_);for(const rt of this.outputNames)if(nt.indexOf(rt)!==-1){const ot=_[rt];(ot===null||ot instanceof a.Tensor)&&(tt=!0,c=!1,_e[rt]=ot)}if(tt){if(typeof j=="object"&&j!==null)g=j;else if(j!==void 0)throw new TypeError("'options' must be an object.")}else g=_}}else if(_!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const tt of this.inputNames)if(b[tt]===void 0)throw new Error(`input '${tt}' is missing in 'feeds'.`);if(c)for(const tt of this.outputNames)_e[tt]=null;const $=await this.handler.run(b,_e,g),et={};for(const tt in $)Object.hasOwnProperty.call($,tt)&&(et[tt]=new a.Tensor($[tt].type,$[tt].data,$[tt].dims));return et}async release(){return this.handler.dispose()}static async create(b,_,j,_e){let g,c={};if(typeof b=="string"){if(g=b,typeof _=="object"&&_!==null)c=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else if(b instanceof Uint8Array){if(g=b,typeof _=="object"&&_!==null)c=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else{if(!(b instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&b instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const nt=b;let rt=0,ot=b.byteLength;if(typeof _=="object"&&_!==null)c=_;else if(typeof _=="number"){if(rt=_,!Number.isSafeInteger(rt))throw new RangeError("'byteOffset' must be an integer.");if(rt<0||rt>=nt.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${nt.byteLength}).`);if(ot=b.byteLength-rt,typeof j=="number"){if(ot=j,!Number.isSafeInteger(ot))throw new RangeError("'byteLength' must be an integer.");if(ot<=0||rt+ot>nt.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${nt.byteLength-rt}].`);if(typeof _e=="object"&&_e!==null)c=_e;else if(_e!==void 0)throw new TypeError("'options' must be an object.")}else if(j!==void 0)throw new TypeError("'byteLength' must be a number.")}else if(_!==void 0)throw new TypeError("'options' must be an object.");g=new Uint8Array(nt,rt,ot)}}const $=(c.executionProviders||[]).map(nt=>typeof nt=="string"?nt:nt.name),et=await(0,i.resolveBackend)($),tt=await et.createSessionHandler(g,c);return new d(tt)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}e.InferenceSession=d},3974:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.InferenceSession=void 0;const i=s(8036);e.InferenceSession=i.InferenceSession},7852:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},2350:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tensorToImageData=e.tensorToDataURL=void 0,e.tensorToDataURL=(s,i)=>{const a=document.createElement("canvas");a.width=s.dims[3],a.height=s.dims[2];const d=a.getContext("2d");if(d!=null){let h,b;(i==null?void 0:i.tensorLayout)!==void 0&&i.tensorLayout==="NHWC"?(h=s.dims[2],b=s.dims[3]):(h=s.dims[3],b=s.dims[2]);const _=(i==null?void 0:i.format)!==void 0?i.format:"RGB",j=i==null?void 0:i.norm;let _e,g;j===void 0||j.mean===void 0?_e=[255,255,255,255]:typeof j.mean=="number"?_e=[j.mean,j.mean,j.mean,j.mean]:(_e=[j.mean[0],j.mean[1],j.mean[2],0],j.mean[3]!==void 0&&(_e[3]=j.mean[3])),j===void 0||j.bias===void 0?g=[0,0,0,0]:typeof j.bias=="number"?g=[j.bias,j.bias,j.bias,j.bias]:(g=[j.bias[0],j.bias[1],j.bias[2],0],j.bias[3]!==void 0&&(g[3]=j.bias[3]));const c=b*h;let $=0,et=c,tt=2*c,nt=-1;_==="RGBA"?($=0,et=c,tt=2*c,nt=3*c):_==="RGB"?($=0,et=c,tt=2*c):_==="RBG"&&($=0,tt=c,et=2*c);for(let rt=0;rt<b;rt++)for(let ot=0;ot<h;ot++){const st=(s.data[$++]-g[0])*_e[0],it=(s.data[et++]-g[1])*_e[1],at=(s.data[tt++]-g[2])*_e[2],lt=nt===-1?255:(s.data[nt++]-g[3])*_e[3];d.fillStyle="rgba("+st+","+it+","+at+","+lt+")",d.fillRect(ot,rt,1,1)}return a.toDataURL()}throw new Error("Can not access image data")},e.tensorToImageData=(s,i)=>{const a=document.createElement("canvas").getContext("2d");let d;if(a==null)throw new Error("Can not access image data");{let h,b,_;(i==null?void 0:i.tensorLayout)!==void 0&&i.tensorLayout==="NHWC"?(h=s.dims[2],b=s.dims[1],_=s.dims[3]):(h=s.dims[3],b=s.dims[2],_=s.dims[1]);const j=i!==void 0&&i.format!==void 0?i.format:"RGB",_e=i==null?void 0:i.norm;let g,c;_e===void 0||_e.mean===void 0?g=[255,255,255,255]:typeof _e.mean=="number"?g=[_e.mean,_e.mean,_e.mean,_e.mean]:(g=[_e.mean[0],_e.mean[1],_e.mean[2],255],_e.mean[3]!==void 0&&(g[3]=_e.mean[3])),_e===void 0||_e.bias===void 0?c=[0,0,0,0]:typeof _e.bias=="number"?c=[_e.bias,_e.bias,_e.bias,_e.bias]:(c=[_e.bias[0],_e.bias[1],_e.bias[2],0],_e.bias[3]!==void 0&&(c[3]=_e.bias[3]));const $=b*h;if(i!==void 0&&(i.format!==void 0&&_===4&&i.format!=="RGBA"||_===3&&i.format!=="RGB"&&i.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const et=4;let tt=0,nt=1,rt=2,ot=3,st=0,it=$,at=2*$,lt=-1;j==="RGBA"?(st=0,it=$,at=2*$,lt=3*$):j==="RGB"?(st=0,it=$,at=2*$):j==="RBG"&&(st=0,at=$,it=2*$),d=a.createImageData(h,b);for(let ut=0;ut<b*h;tt+=et,nt+=et,rt+=et,ot+=et,ut++)d.data[tt]=(s.data[st++]-c[0])*g[0],d.data[nt]=(s.data[it++]-c[1])*g[1],d.data[rt]=(s.data[at++]-c[2])*g[2],d.data[ot]=lt===-1?255:(s.data[lt++]-c[3])*g[3]}return d}},4866:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tensorFromImage=e.bufferToTensor=void 0;const i=s(963);e.bufferToTensor=(a,d)=>{if(a===void 0)throw new Error("Image buffer must be defined");if(d.height===void 0||d.width===void 0)throw new Error("Image height and width must be defined");if(d.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:h,width:b}=d,_=d.norm??{mean:255,bias:0};let j,_e;j=typeof _.mean=="number"?[_.mean,_.mean,_.mean,_.mean]:[_.mean[0],_.mean[1],_.mean[2],_.mean[3]??255],_e=typeof _.bias=="number"?[_.bias,_.bias,_.bias,_.bias]:[_.bias[0],_.bias[1],_.bias[2],_.bias[3]??0];const g=d.format!==void 0?d.format:"RGBA",c=d.tensorFormat!==void 0&&d.tensorFormat!==void 0?d.tensorFormat:"RGB",$=h*b,et=c==="RGBA"?new Float32Array(4*$):new Float32Array(3*$);let tt=4,nt=0,rt=1,ot=2,st=3,it=0,at=$,lt=2*$,ut=-1;g==="RGB"&&(tt=3,nt=0,rt=1,ot=2,st=-1),c==="RGBA"?ut=3*$:c==="RBG"?(it=0,lt=$,at=2*$):c==="BGR"&&(lt=0,at=$,it=2*$);for(let ct=0;ct<$;ct++,nt+=tt,ot+=tt,rt+=tt,st+=tt)et[it++]=(a[nt]+_e[0])/j[0],et[at++]=(a[rt]+_e[1])/j[1],et[lt++]=(a[ot]+_e[2])/j[2],ut!==-1&&st!==-1&&(et[ut++]=(a[st]+_e[3])/j[3]);return c==="RGBA"?new i.Tensor("float32",et,[1,4,h,b]):new i.Tensor("float32",et,[1,3,h,b])},e.tensorFromImage=async(a,d)=>{const h=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,b=typeof ImageData<"u"&&a instanceof ImageData,_=typeof ImageBitmap<"u"&&a instanceof ImageBitmap,j=typeof a=="string";let _e,g=d??{};if(h){const c=document.createElement("canvas");c.width=a.width,c.height=a.height;const $=c.getContext("2d");if($==null)throw new Error("Can not access image data");{let et=a.height,tt=a.width;if(d!==void 0&&d.resizedHeight!==void 0&&d.resizedWidth!==void 0&&(et=d.resizedHeight,tt=d.resizedWidth),d!==void 0){if(g=d,d.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");g.tensorFormat="RGBA",g.height=et,g.width=tt}else g.tensorFormat="RGBA",g.height=et,g.width=tt;$.drawImage(a,0,0),_e=$.getImageData(0,0,tt,et).data}}else{if(!b){if(_){if(d===void 0)throw new Error("Please provide image config with format for Imagebitmap");const c=document.createElement("canvas");c.width=a.width,c.height=a.height;const $=c.getContext("2d");if($!=null){const et=a.height,tt=a.width;return $.drawImage(a,0,0,tt,et),_e=$.getImageData(0,0,tt,et).data,g.height=et,g.width=tt,(0,e.bufferToTensor)(_e,g)}throw new Error("Can not access image data")}if(j)return new Promise((c,$)=>{const et=document.createElement("canvas"),tt=et.getContext("2d");if(!a||!tt)return $();const nt=new Image;nt.crossOrigin="Anonymous",nt.src=a,nt.onload=()=>{et.width=nt.width,et.height=nt.height,tt.drawImage(nt,0,0,et.width,et.height);const rt=tt.getImageData(0,0,et.width,et.height);g.height=et.height,g.width=et.width,c((0,e.bufferToTensor)(rt.data,g))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let c,$;if(d!==void 0&&d.resizedWidth!==void 0&&d.resizedHeight!==void 0?(c=d.resizedHeight,$=d.resizedWidth):(c=a.height,$=a.width),d!==void 0&&(g=d),g.format="RGBA",g.height=c,g.width=$,d!==void 0){const et=document.createElement("canvas");et.width=$,et.height=c;const tt=et.getContext("2d");if(tt==null)throw new Error("Can not access image data");tt.putImageData(a,0,0),_e=tt.getImageData(0,0,$,c).data}else _e=a.data}}if(_e!==void 0)return(0,e.bufferToTensor)(_e,g);throw new Error("Input data provided is not supported - aborted tensor creation")}},5957:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Tensor=void 0;const i=s(2350),a=s(4866),d=s(106),h=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),b=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let _=!1;e.Tensor=class{constructor(j,_e,g){let c,$,et;if((()=>{if(!_){_=!0;const nt=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",rt=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";nt&&(h.set("int64",BigInt64Array),b.set(BigInt64Array,"int64")),rt&&(h.set("uint64",BigUint64Array),b.set(BigUint64Array,"uint64"))}})(),typeof j=="string")if(c=j,et=g,j==="string"){if(!Array.isArray(_e))throw new TypeError("A string tensor's data must be a string array.");$=_e}else{const nt=h.get(j);if(nt===void 0)throw new TypeError(`Unsupported tensor type: ${j}.`);if(Array.isArray(_e)){if(j==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");$=j==="uint64"||j==="int64"?nt.from(_e,BigInt):nt.from(_e)}else{if(!(_e instanceof nt))throw new TypeError(`A ${c} tensor's data must be type of ${nt}`);$=_e}}else if(et=_e,Array.isArray(j)){if(j.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const nt=typeof j[0];if(nt==="string")c="string",$=j;else{if(nt!=="boolean")throw new TypeError(`Invalid element type of data array: ${nt}.`);c="bool",$=Uint8Array.from(j)}}else{const nt=b.get(j.constructor);if(nt===void 0)throw new TypeError(`Unsupported type for tensor data: ${j.constructor}.`);c=nt,$=j}if(et===void 0)et=[$.length];else if(!Array.isArray(et))throw new TypeError("A tensor's dims must be a number array");const tt=(0,d.calculateSize)(et);if(tt!==$.length)throw new Error(`Tensor's size(${tt}) does not match data length(${$.length}).`);this.dims=et,this.type=c,this.data=$,this.size=tt}static async fromImage(j,_e){return(0,a.tensorFromImage)(j,_e)}toDataURL(j){return(0,i.tensorToDataURL)(this,j)}toImageData(j){return(0,i.tensorToImageData)(this,j)}reshape(j){return(0,d.tensorReshape)(this,j)}}},106:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tensorReshape=e.calculateSize=void 0;const i=s(963);e.calculateSize=a=>{let d=1;for(let h=0;h<a.length;h++){const b=a[h];if(typeof b!="number"||!Number.isSafeInteger(b))throw new TypeError(`dims[${h}] must be an integer, got: ${b}`);if(b<0)throw new RangeError(`dims[${h}] must be a non-negative integer, got: ${b}`);d*=b}return d},e.tensorReshape=(a,d)=>new i.Tensor(a.type,a.data,d)},963:(o,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Tensor=void 0;const i=s(5957);e.Tensor=i.Tensor},9104:(o,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.version=void 0,e.version="1.16.3"},1583:(o,e)=>{var s,i=function(a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var d=null;try{d=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function h(dt,mt,bt){this.low=0|dt,this.high=0|mt,this.unsigned=!!bt}function b(dt){return(dt&&dt.__isLong__)===!0}function _(dt){var mt=Math.clz32(dt&-dt);return dt?31-mt:mt}h.prototype.__isLong__,Object.defineProperty(h.prototype,"__isLong__",{value:!0}),h.isLong=b;var j={},_e={};function g(dt,mt){var bt,vt,Tt;return mt?(Tt=0<=(dt>>>=0)&&dt<256)&&(vt=_e[dt])?vt:(bt=$(dt,0,!0),Tt&&(_e[dt]=bt),bt):(Tt=-128<=(dt|=0)&&dt<128)&&(vt=j[dt])?vt:(bt=$(dt,dt<0?-1:0,!1),Tt&&(j[dt]=bt),bt)}function c(dt,mt){if(isNaN(dt))return mt?lt:at;if(mt){if(dt<0)return lt;if(dt>=ot)return yt}else{if(dt<=-st)return xt;if(dt+1>=st)return ht}return dt<0?c(-dt,mt).neg():$(dt%rt|0,dt/rt|0,mt)}function $(dt,mt,bt){return new h(dt,mt,bt)}h.fromInt=g,h.fromNumber=c,h.fromBits=$;var et=Math.pow;function tt(dt,mt,bt){if(dt.length===0)throw Error("empty string");if(typeof mt=="number"?(bt=mt,mt=!1):mt=!!mt,dt==="NaN"||dt==="Infinity"||dt==="+Infinity"||dt==="-Infinity")return mt?lt:at;if((bt=bt||10)<2||36<bt)throw RangeError("radix");var vt;if((vt=dt.indexOf("-"))>0)throw Error("interior hyphen");if(vt===0)return tt(dt.substring(1),mt,bt).neg();for(var Tt=c(et(bt,8)),Et=at,Ct=0;Ct<dt.length;Ct+=8){var kt=Math.min(8,dt.length-Ct),Dt=parseInt(dt.substring(Ct,Ct+kt),bt);if(kt<8){var Rt=c(et(bt,kt));Et=Et.mul(Rt).add(c(Dt))}else Et=(Et=Et.mul(Tt)).add(c(Dt))}return Et.unsigned=mt,Et}function nt(dt,mt){return typeof dt=="number"?c(dt,mt):typeof dt=="string"?tt(dt,mt):$(dt.low,dt.high,typeof mt=="boolean"?mt:dt.unsigned)}h.fromString=tt,h.fromValue=nt;var rt=4294967296,ot=rt*rt,st=ot/2,it=g(1<<24),at=g(0);h.ZERO=at;var lt=g(0,!0);h.UZERO=lt;var ut=g(1);h.ONE=ut;var ct=g(1,!0);h.UONE=ct;var pt=g(-1);h.NEG_ONE=pt;var ht=$(-1,2147483647,!1);h.MAX_VALUE=ht;var yt=$(-1,-1,!0);h.MAX_UNSIGNED_VALUE=yt;var xt=$(0,-2147483648,!1);h.MIN_VALUE=xt;var ft=h.prototype;ft.toInt=function(){return this.unsigned?this.low>>>0:this.low},ft.toNumber=function(){return this.unsigned?(this.high>>>0)*rt+(this.low>>>0):this.high*rt+(this.low>>>0)},ft.toString=function(dt){if((dt=dt||10)<2||36<dt)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(xt)){var mt=c(dt),bt=this.div(mt),vt=bt.mul(mt).sub(this);return bt.toString(dt)+vt.toInt().toString(dt)}return"-"+this.neg().toString(dt)}for(var Tt=c(et(dt,6),this.unsigned),Et=this,Ct="";;){var kt=Et.div(Tt),Dt=(Et.sub(kt.mul(Tt)).toInt()>>>0).toString(dt);if((Et=kt).isZero())return Dt+Ct;for(;Dt.length<6;)Dt="0"+Dt;Ct=""+Dt+Ct}},ft.getHighBits=function(){return this.high},ft.getHighBitsUnsigned=function(){return this.high>>>0},ft.getLowBits=function(){return this.low},ft.getLowBitsUnsigned=function(){return this.low>>>0},ft.getNumBitsAbs=function(){if(this.isNegative())return this.eq(xt)?64:this.neg().getNumBitsAbs();for(var dt=this.high!=0?this.high:this.low,mt=31;mt>0&&!(dt&1<<mt);mt--);return this.high!=0?mt+33:mt+1},ft.isZero=function(){return this.high===0&&this.low===0},ft.eqz=ft.isZero,ft.isNegative=function(){return!this.unsigned&&this.high<0},ft.isPositive=function(){return this.unsigned||this.high>=0},ft.isOdd=function(){return(1&this.low)==1},ft.isEven=function(){return(1&this.low)==0},ft.equals=function(dt){return b(dt)||(dt=nt(dt)),(this.unsigned===dt.unsigned||this.high>>>31!=1||dt.high>>>31!=1)&&this.high===dt.high&&this.low===dt.low},ft.eq=ft.equals,ft.notEquals=function(dt){return!this.eq(dt)},ft.neq=ft.notEquals,ft.ne=ft.notEquals,ft.lessThan=function(dt){return this.comp(dt)<0},ft.lt=ft.lessThan,ft.lessThanOrEqual=function(dt){return this.comp(dt)<=0},ft.lte=ft.lessThanOrEqual,ft.le=ft.lessThanOrEqual,ft.greaterThan=function(dt){return this.comp(dt)>0},ft.gt=ft.greaterThan,ft.greaterThanOrEqual=function(dt){return this.comp(dt)>=0},ft.gte=ft.greaterThanOrEqual,ft.ge=ft.greaterThanOrEqual,ft.compare=function(dt){if(b(dt)||(dt=nt(dt)),this.eq(dt))return 0;var mt=this.isNegative(),bt=dt.isNegative();return mt&&!bt?-1:!mt&&bt?1:this.unsigned?dt.high>>>0>this.high>>>0||dt.high===this.high&&dt.low>>>0>this.low>>>0?-1:1:this.sub(dt).isNegative()?-1:1},ft.comp=ft.compare,ft.negate=function(){return!this.unsigned&&this.eq(xt)?xt:this.not().add(ut)},ft.neg=ft.negate,ft.add=function(dt){b(dt)||(dt=nt(dt));var mt=this.high>>>16,bt=65535&this.high,vt=this.low>>>16,Tt=65535&this.low,Et=dt.high>>>16,Ct=65535&dt.high,kt=dt.low>>>16,Dt=0,Rt=0,Ot=0,zt=0;return Ot+=(zt+=Tt+(65535&dt.low))>>>16,Rt+=(Ot+=vt+kt)>>>16,Dt+=(Rt+=bt+Ct)>>>16,Dt+=mt+Et,$((Ot&=65535)<<16|(zt&=65535),(Dt&=65535)<<16|(Rt&=65535),this.unsigned)},ft.subtract=function(dt){return b(dt)||(dt=nt(dt)),this.add(dt.neg())},ft.sub=ft.subtract,ft.multiply=function(dt){if(this.isZero())return this;if(b(dt)||(dt=nt(dt)),d)return $(d.mul(this.low,this.high,dt.low,dt.high),d.get_high(),this.unsigned);if(dt.isZero())return this.unsigned?lt:at;if(this.eq(xt))return dt.isOdd()?xt:at;if(dt.eq(xt))return this.isOdd()?xt:at;if(this.isNegative())return dt.isNegative()?this.neg().mul(dt.neg()):this.neg().mul(dt).neg();if(dt.isNegative())return this.mul(dt.neg()).neg();if(this.lt(it)&&dt.lt(it))return c(this.toNumber()*dt.toNumber(),this.unsigned);var mt=this.high>>>16,bt=65535&this.high,vt=this.low>>>16,Tt=65535&this.low,Et=dt.high>>>16,Ct=65535&dt.high,kt=dt.low>>>16,Dt=65535&dt.low,Rt=0,Ot=0,zt=0,Bt=0;return zt+=(Bt+=Tt*Dt)>>>16,Ot+=(zt+=vt*Dt)>>>16,zt&=65535,Ot+=(zt+=Tt*kt)>>>16,Rt+=(Ot+=bt*Dt)>>>16,Ot&=65535,Rt+=(Ot+=vt*kt)>>>16,Ot&=65535,Rt+=(Ot+=Tt*Ct)>>>16,Rt+=mt*Dt+bt*kt+vt*Ct+Tt*Et,$((zt&=65535)<<16|(Bt&=65535),(Rt&=65535)<<16|(Ot&=65535),this.unsigned)},ft.mul=ft.multiply,ft.divide=function(dt){if(b(dt)||(dt=nt(dt)),dt.isZero())throw Error("division by zero");var mt,bt,vt;if(d)return this.unsigned||this.high!==-2147483648||dt.low!==-1||dt.high!==-1?$((this.unsigned?d.div_u:d.div_s)(this.low,this.high,dt.low,dt.high),d.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?lt:at;if(this.unsigned){if(dt.unsigned||(dt=dt.toUnsigned()),dt.gt(this))return lt;if(dt.gt(this.shru(1)))return ct;vt=lt}else{if(this.eq(xt))return dt.eq(ut)||dt.eq(pt)?xt:dt.eq(xt)?ut:(mt=this.shr(1).div(dt).shl(1)).eq(at)?dt.isNegative()?ut:pt:(bt=this.sub(dt.mul(mt)),vt=mt.add(bt.div(dt)));if(dt.eq(xt))return this.unsigned?lt:at;if(this.isNegative())return dt.isNegative()?this.neg().div(dt.neg()):this.neg().div(dt).neg();if(dt.isNegative())return this.div(dt.neg()).neg();vt=at}for(bt=this;bt.gte(dt);){mt=Math.max(1,Math.floor(bt.toNumber()/dt.toNumber()));for(var Tt=Math.ceil(Math.log(mt)/Math.LN2),Et=Tt<=48?1:et(2,Tt-48),Ct=c(mt),kt=Ct.mul(dt);kt.isNegative()||kt.gt(bt);)kt=(Ct=c(mt-=Et,this.unsigned)).mul(dt);Ct.isZero()&&(Ct=ut),vt=vt.add(Ct),bt=bt.sub(kt)}return vt},ft.div=ft.divide,ft.modulo=function(dt){return b(dt)||(dt=nt(dt)),d?$((this.unsigned?d.rem_u:d.rem_s)(this.low,this.high,dt.low,dt.high),d.get_high(),this.unsigned):this.sub(this.div(dt).mul(dt))},ft.mod=ft.modulo,ft.rem=ft.modulo,ft.not=function(){return $(~this.low,~this.high,this.unsigned)},ft.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},ft.clz=ft.countLeadingZeros,ft.countTrailingZeros=function(){return this.low?_(this.low):_(this.high)+32},ft.ctz=ft.countTrailingZeros,ft.and=function(dt){return b(dt)||(dt=nt(dt)),$(this.low&dt.low,this.high&dt.high,this.unsigned)},ft.or=function(dt){return b(dt)||(dt=nt(dt)),$(this.low|dt.low,this.high|dt.high,this.unsigned)},ft.xor=function(dt){return b(dt)||(dt=nt(dt)),$(this.low^dt.low,this.high^dt.high,this.unsigned)},ft.shiftLeft=function(dt){return b(dt)&&(dt=dt.toInt()),(dt&=63)==0?this:dt<32?$(this.low<<dt,this.high<<dt|this.low>>>32-dt,this.unsigned):$(0,this.low<<dt-32,this.unsigned)},ft.shl=ft.shiftLeft,ft.shiftRight=function(dt){return b(dt)&&(dt=dt.toInt()),(dt&=63)==0?this:dt<32?$(this.low>>>dt|this.high<<32-dt,this.high>>dt,this.unsigned):$(this.high>>dt-32,this.high>=0?0:-1,this.unsigned)},ft.shr=ft.shiftRight,ft.shiftRightUnsigned=function(dt){return b(dt)&&(dt=dt.toInt()),(dt&=63)==0?this:dt<32?$(this.low>>>dt|this.high<<32-dt,this.high>>>dt,this.unsigned):$(dt===32?this.high:this.high>>>dt-32,0,this.unsigned)},ft.shru=ft.shiftRightUnsigned,ft.shr_u=ft.shiftRightUnsigned,ft.rotateLeft=function(dt){var mt;return b(dt)&&(dt=dt.toInt()),(dt&=63)==0?this:dt===32?$(this.high,this.low,this.unsigned):dt<32?(mt=32-dt,$(this.low<<dt|this.high>>>mt,this.high<<dt|this.low>>>mt,this.unsigned)):(mt=32-(dt-=32),$(this.high<<dt|this.low>>>mt,this.low<<dt|this.high>>>mt,this.unsigned))},ft.rotl=ft.rotateLeft,ft.rotateRight=function(dt){var mt;return b(dt)&&(dt=dt.toInt()),(dt&=63)==0?this:dt===32?$(this.high,this.low,this.unsigned):dt<32?(mt=32-dt,$(this.high<<mt|this.low>>>dt,this.low<<mt|this.high>>>dt,this.unsigned)):(mt=32-(dt-=32),$(this.low<<mt|this.high>>>dt,this.high<<mt|this.low>>>dt,this.unsigned))},ft.rotr=ft.rotateRight,ft.toSigned=function(){return this.unsigned?$(this.low,this.high,!1):this},ft.toUnsigned=function(){return this.unsigned?this:$(this.low,this.high,!0)},ft.toBytes=function(dt){return dt?this.toBytesLE():this.toBytesBE()},ft.toBytesLE=function(){var dt=this.high,mt=this.low;return[255&mt,mt>>>8&255,mt>>>16&255,mt>>>24,255&dt,dt>>>8&255,dt>>>16&255,dt>>>24]},ft.toBytesBE=function(){var dt=this.high,mt=this.low;return[dt>>>24,dt>>>16&255,dt>>>8&255,255&dt,mt>>>24,mt>>>16&255,mt>>>8&255,255&mt]},h.fromBytes=function(dt,mt,bt){return bt?h.fromBytesLE(dt,mt):h.fromBytesBE(dt,mt)},h.fromBytesLE=function(dt,mt){return new h(dt[0]|dt[1]<<8|dt[2]<<16|dt[3]<<24,dt[4]|dt[5]<<8|dt[6]<<16|dt[7]<<24,mt)},h.fromBytesBE=function(dt,mt){return new h(dt[4]<<24|dt[5]<<16|dt[6]<<8|dt[7],dt[0]<<24|dt[1]<<16|dt[2]<<8|dt[3],mt)};var wt=h;return a.default=wt,"default"in a?a.default:a}({});(s=(function(){return i}).apply(e,[]))===void 0||(o.exports=s)},5686:(o,e,s)=>{s.r(e),s.d(e,{flatbuffers:()=>i});var i={};i.Offset,i.Table,i.SIZEOF_SHORT=2,i.SIZEOF_INT=4,i.FILE_IDENTIFIER_LENGTH=4,i.SIZE_PREFIX_LENGTH=4,i.Encoding={UTF8_BYTES:1,UTF16_STRING:2},i.int32=new Int32Array(2),i.float32=new Float32Array(i.int32.buffer),i.float64=new Float64Array(i.int32.buffer),i.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1,i.Long=function(a,d){this.low=0|a,this.high=0|d},i.Long.create=function(a,d){return a==0&&d==0?i.Long.ZERO:new i.Long(a,d)},i.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},i.Long.prototype.equals=function(a){return this.low==a.low&&this.high==a.high},i.Long.ZERO=new i.Long(0,0),i.Builder=function(a){if(a)d=a;else var d=1024;this.bb=i.ByteBuffer.allocate(d),this.space=d,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},i.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},i.Builder.prototype.forceDefaults=function(a){this.force_defaults=a},i.Builder.prototype.dataBuffer=function(){return this.bb},i.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},i.Builder.prototype.prep=function(a,d){a>this.minalign&&(this.minalign=a);for(var h=1+~(this.bb.capacity()-this.space+d)&a-1;this.space<h+a+d;){var b=this.bb.capacity();this.bb=i.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-b}this.pad(h)},i.Builder.prototype.pad=function(a){for(var d=0;d<a;d++)this.bb.writeInt8(--this.space,0)},i.Builder.prototype.writeInt8=function(a){this.bb.writeInt8(this.space-=1,a)},i.Builder.prototype.writeInt16=function(a){this.bb.writeInt16(this.space-=2,a)},i.Builder.prototype.writeInt32=function(a){this.bb.writeInt32(this.space-=4,a)},i.Builder.prototype.writeInt64=function(a){this.bb.writeInt64(this.space-=8,a)},i.Builder.prototype.writeFloat32=function(a){this.bb.writeFloat32(this.space-=4,a)},i.Builder.prototype.writeFloat64=function(a){this.bb.writeFloat64(this.space-=8,a)},i.Builder.prototype.addInt8=function(a){this.prep(1,0),this.writeInt8(a)},i.Builder.prototype.addInt16=function(a){this.prep(2,0),this.writeInt16(a)},i.Builder.prototype.addInt32=function(a){this.prep(4,0),this.writeInt32(a)},i.Builder.prototype.addInt64=function(a){this.prep(8,0),this.writeInt64(a)},i.Builder.prototype.addFloat32=function(a){this.prep(4,0),this.writeFloat32(a)},i.Builder.prototype.addFloat64=function(a){this.prep(8,0),this.writeFloat64(a)},i.Builder.prototype.addFieldInt8=function(a,d,h){(this.force_defaults||d!=h)&&(this.addInt8(d),this.slot(a))},i.Builder.prototype.addFieldInt16=function(a,d,h){(this.force_defaults||d!=h)&&(this.addInt16(d),this.slot(a))},i.Builder.prototype.addFieldInt32=function(a,d,h){(this.force_defaults||d!=h)&&(this.addInt32(d),this.slot(a))},i.Builder.prototype.addFieldInt64=function(a,d,h){!this.force_defaults&&d.equals(h)||(this.addInt64(d),this.slot(a))},i.Builder.prototype.addFieldFloat32=function(a,d,h){(this.force_defaults||d!=h)&&(this.addFloat32(d),this.slot(a))},i.Builder.prototype.addFieldFloat64=function(a,d,h){(this.force_defaults||d!=h)&&(this.addFloat64(d),this.slot(a))},i.Builder.prototype.addFieldOffset=function(a,d,h){(this.force_defaults||d!=h)&&(this.addOffset(d),this.slot(a))},i.Builder.prototype.addFieldStruct=function(a,d,h){d!=h&&(this.nested(d),this.slot(a))},i.Builder.prototype.nested=function(a){if(a!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},i.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},i.Builder.prototype.slot=function(a){this.vtable[a]=this.offset()},i.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},i.Builder.growByteBuffer=function(a){var d=a.capacity();if(3221225472&d)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var h=d<<1,b=i.ByteBuffer.allocate(h);return b.setPosition(h-d),b.bytes().set(a.bytes(),h-d),b},i.Builder.prototype.addOffset=function(a){this.prep(i.SIZEOF_INT,0),this.writeInt32(this.offset()-a+i.SIZEOF_INT)},i.Builder.prototype.startObject=function(a){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=a;for(var d=0;d<a;d++)this.vtable[d]=0;this.isNested=!0,this.object_start=this.offset()},i.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var a=this.offset(),d=this.vtable_in_use-1;d>=0&&this.vtable[d]==0;d--);for(var h=d+1;d>=0;d--)this.addInt16(this.vtable[d]!=0?a-this.vtable[d]:0);this.addInt16(a-this.object_start);var b=(h+2)*i.SIZEOF_SHORT;this.addInt16(b);var _=0,j=this.space;e:for(d=0;d<this.vtables.length;d++){var _e=this.bb.capacity()-this.vtables[d];if(b==this.bb.readInt16(_e)){for(var g=i.SIZEOF_SHORT;g<b;g+=i.SIZEOF_SHORT)if(this.bb.readInt16(j+g)!=this.bb.readInt16(_e+g))continue e;_=this.vtables[d];break}}return _?(this.space=this.bb.capacity()-a,this.bb.writeInt32(this.space,_-a)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-a,this.offset()-a)),this.isNested=!1,a},i.Builder.prototype.finish=function(a,d,h){var b=h?i.SIZE_PREFIX_LENGTH:0;if(d){var _=d;if(this.prep(this.minalign,i.SIZEOF_INT+i.FILE_IDENTIFIER_LENGTH+b),_.length!=i.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+i.FILE_IDENTIFIER_LENGTH);for(var j=i.FILE_IDENTIFIER_LENGTH-1;j>=0;j--)this.writeInt8(_.charCodeAt(j))}this.prep(this.minalign,i.SIZEOF_INT+b),this.addOffset(a),b&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},i.Builder.prototype.finishSizePrefixed=function(a,d){this.finish(a,d,!0)},i.Builder.prototype.requiredField=function(a,d){var h=this.bb.capacity()-a,b=h-this.bb.readInt32(h);if(this.bb.readInt16(b+d)==0)throw new Error("FlatBuffers: field "+d+" must be set")},i.Builder.prototype.startVector=function(a,d,h){this.notNested(),this.vector_num_elems=d,this.prep(i.SIZEOF_INT,a*d),this.prep(h,a*d)},i.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},i.Builder.prototype.createString=function(a){if(a instanceof Uint8Array)var d=a;else{d=[];for(var h=0;h<a.length;){var b,_=a.charCodeAt(h++);(b=_<55296||_>=56320?_:(_<<10)+a.charCodeAt(h++)+-56613888)<128?d.push(b):(b<2048?d.push(b>>6&31|192):(b<65536?d.push(b>>12&15|224):d.push(b>>18&7|240,b>>12&63|128),d.push(b>>6&63|128)),d.push(63&b|128))}}this.addInt8(0),this.startVector(1,d.length,1),this.bb.setPosition(this.space-=d.length),h=0;for(var j=this.space,_e=this.bb.bytes();h<d.length;h++)_e[j++]=d[h];return this.endVector()},i.Builder.prototype.createLong=function(a,d){return i.Long.create(a,d)},i.ByteBuffer=function(a){this.bytes_=a,this.position_=0},i.ByteBuffer.allocate=function(a){return new i.ByteBuffer(new Uint8Array(a))},i.ByteBuffer.prototype.clear=function(){this.position_=0},i.ByteBuffer.prototype.bytes=function(){return this.bytes_},i.ByteBuffer.prototype.position=function(){return this.position_},i.ByteBuffer.prototype.setPosition=function(a){this.position_=a},i.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},i.ByteBuffer.prototype.readInt8=function(a){return this.readUint8(a)<<24>>24},i.ByteBuffer.prototype.readUint8=function(a){return this.bytes_[a]},i.ByteBuffer.prototype.readInt16=function(a){return this.readUint16(a)<<16>>16},i.ByteBuffer.prototype.readUint16=function(a){return this.bytes_[a]|this.bytes_[a+1]<<8},i.ByteBuffer.prototype.readInt32=function(a){return this.bytes_[a]|this.bytes_[a+1]<<8|this.bytes_[a+2]<<16|this.bytes_[a+3]<<24},i.ByteBuffer.prototype.readUint32=function(a){return this.readInt32(a)>>>0},i.ByteBuffer.prototype.readInt64=function(a){return new i.Long(this.readInt32(a),this.readInt32(a+4))},i.ByteBuffer.prototype.readUint64=function(a){return new i.Long(this.readUint32(a),this.readUint32(a+4))},i.ByteBuffer.prototype.readFloat32=function(a){return i.int32[0]=this.readInt32(a),i.float32[0]},i.ByteBuffer.prototype.readFloat64=function(a){return i.int32[i.isLittleEndian?0:1]=this.readInt32(a),i.int32[i.isLittleEndian?1:0]=this.readInt32(a+4),i.float64[0]},i.ByteBuffer.prototype.writeInt8=function(a,d){this.bytes_[a]=d},i.ByteBuffer.prototype.writeUint8=function(a,d){this.bytes_[a]=d},i.ByteBuffer.prototype.writeInt16=function(a,d){this.bytes_[a]=d,this.bytes_[a+1]=d>>8},i.ByteBuffer.prototype.writeUint16=function(a,d){this.bytes_[a]=d,this.bytes_[a+1]=d>>8},i.ByteBuffer.prototype.writeInt32=function(a,d){this.bytes_[a]=d,this.bytes_[a+1]=d>>8,this.bytes_[a+2]=d>>16,this.bytes_[a+3]=d>>24},i.ByteBuffer.prototype.writeUint32=function(a,d){this.bytes_[a]=d,this.bytes_[a+1]=d>>8,this.bytes_[a+2]=d>>16,this.bytes_[a+3]=d>>24},i.ByteBuffer.prototype.writeInt64=function(a,d){this.writeInt32(a,d.low),this.writeInt32(a+4,d.high)},i.ByteBuffer.prototype.writeUint64=function(a,d){this.writeUint32(a,d.low),this.writeUint32(a+4,d.high)},i.ByteBuffer.prototype.writeFloat32=function(a,d){i.float32[0]=d,this.writeInt32(a,i.int32[0])},i.ByteBuffer.prototype.writeFloat64=function(a,d){i.float64[0]=d,this.writeInt32(a,i.int32[i.isLittleEndian?0:1]),this.writeInt32(a+4,i.int32[i.isLittleEndian?1:0])},i.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+i.SIZEOF_INT+i.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var a="",d=0;d<i.FILE_IDENTIFIER_LENGTH;d++)a+=String.fromCharCode(this.readInt8(this.position_+i.SIZEOF_INT+d));return a},i.ByteBuffer.prototype.__offset=function(a,d){var h=a-this.readInt32(a);return d<this.readInt16(h)?this.readInt16(h+d):0},i.ByteBuffer.prototype.__union=function(a,d){return a.bb_pos=d+this.readInt32(d),a.bb=this,a},i.ByteBuffer.prototype.__string=function(a,d){a+=this.readInt32(a);var h=this.readInt32(a),b="",_=0;if(a+=i.SIZEOF_INT,d===i.Encoding.UTF8_BYTES)return this.bytes_.subarray(a,a+h);for(;_<h;){var j,_e=this.readUint8(a+_++);if(_e<192)j=_e;else{var g=this.readUint8(a+_++);if(_e<224)j=(31&_e)<<6|63&g;else{var c=this.readUint8(a+_++);j=_e<240?(15&_e)<<12|(63&g)<<6|63&c:(7&_e)<<18|(63&g)<<12|(63&c)<<6|63&this.readUint8(a+_++)}}j<65536?b+=String.fromCharCode(j):(j-=65536,b+=String.fromCharCode(55296+(j>>10),56320+(1023&j)))}return b},i.ByteBuffer.prototype.__indirect=function(a){return a+this.readInt32(a)},i.ByteBuffer.prototype.__vector=function(a){return a+this.readInt32(a)+i.SIZEOF_INT},i.ByteBuffer.prototype.__vector_len=function(a){return this.readInt32(a+this.readInt32(a))},i.ByteBuffer.prototype.__has_identifier=function(a){if(a.length!=i.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+i.FILE_IDENTIFIER_LENGTH);for(var d=0;d<i.FILE_IDENTIFIER_LENGTH;d++)if(a.charCodeAt(d)!=this.readInt8(this.position_+i.SIZEOF_INT+d))return!1;return!0},i.ByteBuffer.prototype.createLong=function(a,d){return i.Long.create(a,d)}}},__webpack_module_cache__={};function __webpack_require__(o){var e=__webpack_module_cache__[o];if(e!==void 0)return e.exports;var s=__webpack_module_cache__[o]={exports:{}};return __webpack_modules__[o].call(s.exports,s,s.exports,__webpack_require__),s.exports}__webpack_require__.n=o=>{var e=o&&o.__esModule?()=>o.default:()=>o;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(o,e)=>{for(var s in e)__webpack_require__.o(e,s)&&!__webpack_require__.o(o,s)&&Object.defineProperty(o,s,{enumerable:!0,get:e[s]})},__webpack_require__.o=(o,e)=>Object.prototype.hasOwnProperty.call(o,e),__webpack_require__.r=o=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(1057);return __webpack_exports__})())})(ort_min);var ort_minExports=ort_min.exports;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EPSILON_FLOAT32$1=1e-7,EPSILON_FLOAT16$1=1e-4;class DataStorage{constructor(e,s){this.backend=e,this.dataMover=s,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,s){this.dataIdsCount++,this.data.set(e,s)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class KernelBackend{refCount(e){return notYetImplemented("refCount")}incRef(e){return notYetImplemented("incRef")}timerAvailable(){return!0}time(e){return notYetImplemented("time")}read(e){return notYetImplemented("read")}readSync(e){return notYetImplemented("readSync")}readToGPU(e,s){return notYetImplemented("readToGPU")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(e,s){return notYetImplemented("disposeData")}write(e,s,i){return notYetImplemented("write")}move(e,s,i,a,d){return notYetImplemented("move")}createTensorFromGPUData(e,s,i){return notYetImplemented("createTensorFromGPUData")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32$1:EPSILON_FLOAT16$1}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(o){throw new Error(`'${o}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shuffle(o){let e=o.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,swap(o,e,s)}function clamp(o,e,s){return Math.max(o,Math.min(e,s))}function nearestLargerEven(o){return o%2===0?o:o+1}function swap(o,e,s){const i=o[e];o[e]=o[s],o[s]=i}function sum$3(o){let e=0;for(let s=0;s<o.length;s++)e+=o[s];return e}function assert$1(o,e){if(!o)throw new Error(typeof e=="string"?e:e())}function assertShapesMatch(o,e,s=""){assert$1(arraysEqual(o,e),()=>s+` Shapes ${o} and ${e} must match`)}function assertNonNull(o){assert$1(o!=null,()=>"The input to the tensor constructor must be a non-null value.")}function sizeFromShape(o){if(o.length===0)return 1;let e=o[0];for(let s=1;s<o.length;s++)e*=o[s];return e}function arraysEqual(o,e){if(o===e)return!0;if(o==null||e==null||o.length!==e.length)return!1;for(let s=0;s<o.length;s++)if(o[s]!==e[s])return!1;return!0}function isInt(o){return o%1===0}function sizeToSquarishShape(o){const e=Math.ceil(Math.sqrt(o));return[e,Math.ceil(o/e)]}function rightPad(o,e){return e<=o.length?o:o+" ".repeat(e-o.length)}function repeatedTry(o,e=a=>0,s,i){return new Promise((a,d)=>{let h=0;const b=()=>{if(o()){a();return}h++;const _=e(h);if(s!=null&&h>=s){d();return}i!=null?i(b,_):setTimeout(b,_)};b()})}function inferFromImplicitShape(o,e){let s=1,i=-1;for(let d=0;d<o.length;++d)if(o[d]>=0)s*=o[d];else if(o[d]===-1){if(i!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${i} and dim ${d}`);i=d}else if(o[d]<0)throw Error(`Shapes can not be < 0. Found ${o[d]} at dim ${d}`);if(i===-1){if(e>0&&e!==s)throw Error(`Size(${e}) must match the product of shape ${o}`);return o}if(s===0)throw Error(`Cannot infer the missing size in [${o}] when there are 0 elements`);if(e%s!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${s}`);const a=o.slice();return a[i]=e/s,a}function parseAxisParam(o,e){const s=e.length;return o=o==null?e.map((i,a)=>a):[].concat(o),assert$1(o.every(i=>i>=-s&&i<s),()=>`All values in axis param must be in range [-${s}, ${s}) but got axis ${o}`),assert$1(o.every(i=>isInt(i)),()=>`All values in axis param must be integers but got axis ${o}`),o.map(i=>i<0?s+i:i)}function squeezeShape(o,e){const s=[],i=[],a=e!=null&&Array.isArray(e)&&e.length===0,d=e==null||a?null:parseAxisParam(e,o).sort();let h=0;for(let b=0;b<o.length;++b){if(d!=null){if(d[h]===b&&o[b]!==1)throw new Error(`Can't squeeze axis ${b} since its dim '${o[b]}' is not 1`);(d[h]==null||d[h]>b)&&o[b]===1&&(s.push(o[b]),i.push(b)),d[h]<=b&&h++}o[b]!==1&&(s.push(o[b]),i.push(b))}return{newShape:s,keptDims:i}}function getTypedArrayFromDType(o,e){return getArrayFromDType(o,e)}function getArrayFromDType(o,e){let s=null;if(o==null||o==="float32")s=new Float32Array(e);else if(o==="int32")s=new Int32Array(e);else if(o==="bool")s=new Uint8Array(e);else if(o==="string")s=new Array(e);else throw new Error(`Unknown data type ${o}`);return s}function checkConversionForErrors(o,e){for(let s=0;s<o.length;s++){const i=o[s];if(isNaN(i)||!isFinite(i))throw Error(`A tensor of type ${e} being uploaded contains ${i}.`)}}function isValidDtype(o){return o==="bool"||o==="complex64"||o==="float32"||o==="int32"||o==="string"}function hasEncodingLoss(o,e){return!(e==="complex64"||e==="float32"&&o!=="complex64"||e==="int32"&&o!=="float32"&&o!=="complex64"||e==="bool"&&o==="bool")}function bytesPerElement(o){if(o==="float32"||o==="int32")return 4;if(o==="complex64")return 8;if(o==="bool")return 1;throw new Error(`Unknown dtype ${o}`)}function bytesFromStringArray(o){if(o==null)return 0;let e=0;return o.forEach(s=>e+=s.length),e}function isString(o){return typeof o=="string"||o instanceof String}function isBoolean(o){return typeof o=="boolean"}function isNumber(o){return typeof o=="number"}function inferDtype(o){return Array.isArray(o)?inferDtype(o[0]):o instanceof Float32Array?"float32":o instanceof Int32Array||o instanceof Uint8Array||o instanceof Uint8ClampedArray?"int32":isNumber(o)?"float32":isString(o)?"string":isBoolean(o)?"bool":"float32"}function isFunction(o){return!!(o&&o.constructor&&o.call&&o.apply)}function nearestDivisor(o,e){for(let s=e;s<o;++s)if(o%s===0)return s;return o}function computeStrides(o){const e=o.length;if(e<2)return[];const s=new Array(e-1);s[e-2]=o[e-1];for(let i=e-3;i>=0;--i)s[i]=s[i+1]*o[i+1];return s}function createNestedArray(o,e,s,i=!1){const a=new Array;if(e.length===1){const d=e[0]*(i?2:1);for(let h=0;h<d;h++)a[h]=s[o+h]}else{const d=e[0],h=e.slice(1),b=h.reduce((_,j)=>_*j)*(i?2:1);for(let _=0;_<d;_++)a[_]=createNestedArray(o+_*b,h,s,i)}return a}function toNestedArray(o,e,s=!1){if(o.length===0)return e[0];const i=o.reduce((a,d)=>a*d)*(s?2:1);if(i===0)return[];if(i!==e.length)throw new Error(`[${o}] does not match the input size ${e.length}${s?" for a complex tensor":""}.`);return createNestedArray(0,o,e,s)}function convertBackendValuesAndArrayBuffer(o,e){if(Array.isArray(o))return o;if(e==="float32")return o instanceof Float32Array?o:new Float32Array(o);if(e==="int32")return o instanceof Int32Array?o:new Int32Array(o);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(o));throw new Error(`Unknown dtype ${e}`)}function makeOnesTypedArray(o,e){const s=makeZerosTypedArray(o,e);for(let i=0;i<s.length;i++)s[i]=1;return s}function makeZerosTypedArray(o,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(o);if(e==="int32")return new Int32Array(o);if(e==="bool")return new Uint8Array(o);throw new Error(`Unknown data type ${e}`)}function makeZerosNestedTypedArray(o,e){const s=o.reduce((i,a)=>i*a,1);if(e==null||e==="float32")return toNestedArray(o,new Float32Array(s));if(e==="int32")return toNestedArray(o,new Int32Array(s));if(e==="bool")return toNestedArray(o,new Uint8Array(s));throw new Error(`Unknown data type ${e}`)}function assertNonNegativeIntegerDimensions(o){o.forEach(e=>{assert$1(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${o}].`)})}function locToIndex(o,e,s){if(e===0)return 0;if(e===1)return o[0];let i=o[o.length-1];for(let a=0;a<o.length-1;++a)i+=s[a]*o[a];return i}function indexToLoc(o,e,s){if(e===0)return[];if(e===1)return[o];const i=new Array(e);for(let a=0;a<i.length-1;++a)i[a]=Math.floor(o/s[a]),o-=i[a]*s[a];return i[i.length-1]=o,i}function isPromise(o){return o&&o.then&&typeof o.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TENSORFLOWJS_FLAGS_PREFIX="tfjsflags";class Environment{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=getQueryParams,this.populateURLFlags()}setPlatform(e,s){this.platform!=null&&(env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=s}registerFlag(e,s,i){if(this.flagRegistry[e]={evaluationFn:s,setHook:i},this.urlFlags[e]!=null){const a=this.urlFlags[e];env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const s=this.evaluateFlag(e);if(isPromise(s))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=s,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,s){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=s,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(s)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);TENSORFLOWJS_FLAGS_PREFIX in e&&e[TENSORFLOWJS_FLAGS_PREFIX].split(",").forEach(i=>{const[a,d]=i.split(":");this.urlFlags[a]=parseValue(a,d)})}}function getQueryParams(o){const e={};return o.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(s,...i)=>(decodeParam(e,i[0],i[1]),i.join("="))),e}function decodeParam(o,e,s){o[decodeURIComponent(e)]=decodeURIComponent(s||"")}function parseValue(o,e){const s=e.toLowerCase();return s==="true"||s==="false"?s==="true":`${+s}`===s?+s:e}function env(){return ENV$4}let ENV$4=null;function setEnvironmentGlobal(o){ENV$4=o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let globalNameSpace;function getGlobalNamespace(){if(globalNameSpace==null){let o;if(typeof window<"u")o=window;else if(typeof global<"u")o=global;else if(typeof process<"u")o=process;else if(typeof self<"u")o=self;else throw new Error("Could not find a global object");globalNameSpace=o}return globalNameSpace}function getGlobalMap(){const o=getGlobalNamespace();return o._tfGlobals==null&&(o._tfGlobals=new Map),o._tfGlobals}function getGlobal(o,e){const s=getGlobalMap();if(s.has(o))return s.get(o);{const i=e();return s.set(o,i),s.get(o)}}const Abs="Abs",Acos="Acos",Acosh="Acosh",Add$1="Add",AddN="AddN",All="All",Any="Any",ArgMax="ArgMax",ArgMin="ArgMin",Asin="Asin",Asinh="Asinh",Atan="Atan",Atanh="Atanh",Atan2="Atan2",AvgPool="AvgPool",AvgPoolGrad="AvgPoolGrad",AvgPool3D="AvgPool3D",AvgPool3DGrad="AvgPool3DGrad",BatchMatMul="BatchMatMul",BatchToSpaceND="BatchToSpaceND",Bincount="Bincount",BitwiseAnd="BitwiseAnd",BroadcastTo="BroadcastTo",BroadcastArgs="BroadcastArgs",Cast="Cast",Ceil="Ceil",ClipByValue="ClipByValue",Complex="Complex",ComplexAbs="ComplexAbs",Concat="Concat",Conv2D$1="Conv2D",Conv2DBackpropFilter="Conv2DBackpropFilter",Conv2DBackpropInput="Conv2DBackpropInput",Conv3D$1="Conv3D",Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",Conv3DBackpropInputV2="Conv3DBackpropInputV2",Cos="Cos",Cosh="Cosh",Cumprod="Cumprod",Cumsum="Cumsum",CropAndResize="CropAndResize",DenseBincount="DenseBincount",DepthToSpace="DepthToSpace",DepthwiseConv2dNative="DepthwiseConv2dNative",DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",Diag="Diag",Dilation2D="Dilation2D",Dilation2DBackpropInput="Dilation2DBackpropInput",Dilation2DBackpropFilter="Dilation2DBackpropFilter",Draw="Draw",RealDiv="RealDiv",Einsum="Einsum",Elu$1="Elu",EluGrad="EluGrad",Erf="Erf",Equal="Equal",Exp="Exp",ExpandDims="ExpandDims",Expm1="Expm1",FFT="FFT",Fill="Fill",FlipLeftRight="FlipLeftRight",Floor="Floor",FloorDiv="FloorDiv",FusedBatchNorm="FusedBatchNorm",GatherV2="GatherV2",GatherNd="GatherNd",Greater="Greater",GreaterEqual="GreaterEqual",Identity$1="Identity",IFFT="IFFT",Imag="Imag",IsFinite="IsFinite",IsInf="IsInf",IsNan="IsNan",LeakyRelu="LeakyRelu",Less="Less",LessEqual="LessEqual",LinSpace="LinSpace",Log="Log",Log1p="Log1p",LogicalAnd="LogicalAnd",LogicalNot="LogicalNot",LogicalOr="LogicalOr",LogSoftmax$1="LogSoftmax",LRN="LRN",LRNGrad="LRNGrad",Max="Max",Maximum$1="Maximum",MaxPool="MaxPool",MaxPoolGrad="MaxPoolGrad",MaxPool3D="MaxPool3D",MaxPool3DGrad="MaxPool3DGrad",MaxPoolWithArgmax="MaxPoolWithArgmax",Mean="Mean",Min="Min",Minimum$1="Minimum",MirrorPad="MirrorPad",Mod="Mod",Multinomial="Multinomial",Multiply$1="Multiply",Neg="Neg",NotEqual="NotEqual",NonMaxSuppressionV3="NonMaxSuppressionV3",NonMaxSuppressionV4="NonMaxSuppressionV4",NonMaxSuppressionV5="NonMaxSuppressionV5",OnesLike="OnesLike",OneHot="OneHot",Pack="Pack",PadV2="PadV2",Pow="Pow",Prelu="Prelu",Prod="Prod",RaggedGather="RaggedGather",RaggedRange="RaggedRange",RaggedTensorToTensor="RaggedTensorToTensor",Range="Range",Real="Real",Reciprocal="Reciprocal",Relu$1="Relu",Reshape$1="Reshape",ResizeNearestNeighbor="ResizeNearestNeighbor",ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",ResizeBilinear="ResizeBilinear",ResizeBilinearGrad="ResizeBilinearGrad",Relu6$1="Relu6",Reverse="Reverse",Round="Round",Rsqrt="Rsqrt",ScatterNd="ScatterNd",TensorScatterUpdate="TensorScatterUpdate",SearchSorted="SearchSorted",Select="Select",Selu$1="Selu",Slice="Slice",Sin="Sin",Sinh="Sinh",Sign="Sign",Sigmoid$1="Sigmoid",Softplus$1="Softplus",Sqrt="Sqrt",Sum="Sum",SpaceToBatchND="SpaceToBatchND",SplitV="SplitV",Softmax$2="Softmax",SparseFillEmptyRows="SparseFillEmptyRows",SparseReshape="SparseReshape",SparseSegmentMean="SparseSegmentMean",SparseSegmentSum="SparseSegmentSum",SparseToDense="SparseToDense",SquaredDifference="SquaredDifference",Square="Square",StaticRegexReplace="StaticRegexReplace",StridedSlice="StridedSlice",StringNGrams="StringNGrams",StringSplit="StringSplit",StringToHashBucketFast="StringToHashBucketFast",Sub="Sub",Tan="Tan",Tanh$1="Tanh",Tile="Tile",TopK="TopK",Transform="Transform",Transpose="Transpose",Unique="Unique",Unpack="Unpack",UnsortedSegmentSum="UnsortedSegmentSum",ZerosLike="ZerosLike",Step="Step",FromPixels="FromPixels",RotateWithOffset="RotateWithOffset",_FusedMatMul="_FusedMatMul",FusedConv2D="FusedConv2D",FusedDepthwiseConv2D="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function warn(...o){env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(...o)}function log$3(...o){env().getBool("IS_TEST")||env().getBool("PROD")||console.log(...o)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelRegistry=getGlobal("kernelRegistry",()=>new Map),gradRegistry=getGlobal("gradRegistry",()=>new Map);function getKernel(o,e){const s=makeKey(o,e);return kernelRegistry.get(s)}function getGradient(o){return gradRegistry.get(o)}function getKernelsForBackend(o){const e=kernelRegistry.entries(),s=[];for(;;){const{done:i,value:a}=e.next();if(i)break;const[d,h]=a,[b]=d.split("_");b===o&&s.push(h)}return s}function registerKernel(o){const{kernelName:e,backendName:s}=o,i=makeKey(e,s);kernelRegistry.has(i)&&warn(`The kernel '${e}' for backend '${s}' is already registered`),kernelRegistry.set(i,o)}function registerGradient(o){const{kernelName:e}=o;gradRegistry.has(e)&&env().getBool("DEBUG")&&warn(`Overriding the gradient for '${e}'`),gradRegistry.set(e,o)}function makeKey(o,e){return`${e}_${o}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isTypedArrayBrowser(o){return o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array||o instanceof Uint8ClampedArray}var long=Long$1,wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(o){}function Long$1(o,e,s){this.low=o|0,this.high=e|0,this.unsigned=!!s}Long$1.prototype.__isLong__;Object.defineProperty(Long$1.prototype,"__isLong__",{value:!0});function isLong(o){return(o&&o.__isLong__)===!0}Long$1.isLong=isLong;var INT_CACHE={},UINT_CACHE={};function fromInt(o,e){var s,i,a;return e?(o>>>=0,(a=0<=o&&o<256)&&(i=UINT_CACHE[o],i)?i:(s=fromBits(o,(o|0)<0?-1:0,!0),a&&(UINT_CACHE[o]=s),s)):(o|=0,(a=-128<=o&&o<128)&&(i=INT_CACHE[o],i)?i:(s=fromBits(o,o<0?-1:0,!1),a&&(INT_CACHE[o]=s),s))}Long$1.fromInt=fromInt;function fromNumber(o,e){if(isNaN(o))return e?UZERO:ZERO;if(e){if(o<0)return UZERO;if(o>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(o<=-TWO_PWR_63_DBL)return MIN_VALUE;if(o+1>=TWO_PWR_63_DBL)return MAX_VALUE}return o<0?fromNumber(-o,e).neg():fromBits(o%TWO_PWR_32_DBL|0,o/TWO_PWR_32_DBL|0,e)}Long$1.fromNumber=fromNumber;function fromBits(o,e,s){return new Long$1(o,e,s)}Long$1.fromBits=fromBits;var pow_dbl=Math.pow;function fromString(o,e,s){if(o.length===0)throw Error("empty string");if(o==="NaN"||o==="Infinity"||o==="+Infinity"||o==="-Infinity")return ZERO;if(typeof e=="number"?(s=e,e=!1):e=!!e,s=s||10,s<2||36<s)throw RangeError("radix");var i;if((i=o.indexOf("-"))>0)throw Error("interior hyphen");if(i===0)return fromString(o.substring(1),e,s).neg();for(var a=fromNumber(pow_dbl(s,8)),d=ZERO,h=0;h<o.length;h+=8){var b=Math.min(8,o.length-h),_=parseInt(o.substring(h,h+b),s);if(b<8){var j=fromNumber(pow_dbl(s,b));d=d.mul(j).add(fromNumber(_))}else d=d.mul(a),d=d.add(fromNumber(_))}return d.unsigned=e,d}Long$1.fromString=fromString;function fromValue(o,e){return typeof o=="number"?fromNumber(o,e):typeof o=="string"?fromString(o,e):fromBits(o.low,o.high,typeof e=="boolean"?e:o.unsigned)}Long$1.fromValue=fromValue;var TWO_PWR_16_DBL=65536,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL),ZERO=fromInt(0);Long$1.ZERO=ZERO;var UZERO=fromInt(0,!0);Long$1.UZERO=UZERO;var ONE=fromInt(1);Long$1.ONE=ONE;var UONE=fromInt(1,!0);Long$1.UONE=UONE;var NEG_ONE=fromInt(-1);Long$1.NEG_ONE=NEG_ONE;var MAX_VALUE=fromBits(-1,2147483647,!1);Long$1.MAX_VALUE=MAX_VALUE;var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);Long$1.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE;var MIN_VALUE=fromBits(0,-2147483648,!1);Long$1.MIN_VALUE=MIN_VALUE;var LongPrototype=Long$1.prototype;LongPrototype.toInt=function o(){return this.unsigned?this.low>>>0:this.low};LongPrototype.toNumber=function o(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL+(this.low>>>0):this.high*TWO_PWR_32_DBL+(this.low>>>0)};LongPrototype.toString=function o(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(MIN_VALUE)){var s=fromNumber(e),i=this.div(s),a=i.mul(s).sub(this);return i.toString(e)+a.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var d=fromNumber(pow_dbl(e,6),this.unsigned),h=this,b="";;){var _=h.div(d),j=h.sub(_.mul(d)).toInt()>>>0,_e=j.toString(e);if(h=_,h.isZero())return _e+b;for(;_e.length<6;)_e="0"+_e;b=""+_e+b}};LongPrototype.getHighBits=function o(){return this.high};LongPrototype.getHighBitsUnsigned=function o(){return this.high>>>0};LongPrototype.getLowBits=function o(){return this.low};LongPrototype.getLowBitsUnsigned=function o(){return this.low>>>0};LongPrototype.getNumBitsAbs=function o(){if(this.isNegative())return this.eq(MIN_VALUE)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,s=31;s>0&&!(e&1<<s);s--);return this.high!=0?s+33:s+1};LongPrototype.isZero=function o(){return this.high===0&&this.low===0};LongPrototype.eqz=LongPrototype.isZero;LongPrototype.isNegative=function o(){return!this.unsigned&&this.high<0};LongPrototype.isPositive=function o(){return this.unsigned||this.high>=0};LongPrototype.isOdd=function o(){return(this.low&1)===1};LongPrototype.isEven=function o(){return(this.low&1)===0};LongPrototype.equals=function o(e){return isLong(e)||(e=fromValue(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};LongPrototype.eq=LongPrototype.equals;LongPrototype.notEquals=function o(e){return!this.eq(e)};LongPrototype.neq=LongPrototype.notEquals;LongPrototype.ne=LongPrototype.notEquals;LongPrototype.lessThan=function o(e){return this.comp(e)<0};LongPrototype.lt=LongPrototype.lessThan;LongPrototype.lessThanOrEqual=function o(e){return this.comp(e)<=0};LongPrototype.lte=LongPrototype.lessThanOrEqual;LongPrototype.le=LongPrototype.lessThanOrEqual;LongPrototype.greaterThan=function o(e){return this.comp(e)>0};LongPrototype.gt=LongPrototype.greaterThan;LongPrototype.greaterThanOrEqual=function o(e){return this.comp(e)>=0};LongPrototype.gte=LongPrototype.greaterThanOrEqual;LongPrototype.ge=LongPrototype.greaterThanOrEqual;LongPrototype.compare=function o(e){if(isLong(e)||(e=fromValue(e)),this.eq(e))return 0;var s=this.isNegative(),i=e.isNegative();return s&&!i?-1:!s&&i?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};LongPrototype.comp=LongPrototype.compare;LongPrototype.negate=function o(){return!this.unsigned&&this.eq(MIN_VALUE)?MIN_VALUE:this.not().add(ONE)};LongPrototype.neg=LongPrototype.negate;LongPrototype.add=function o(e){isLong(e)||(e=fromValue(e));var s=this.high>>>16,i=this.high&65535,a=this.low>>>16,d=this.low&65535,h=e.high>>>16,b=e.high&65535,_=e.low>>>16,j=e.low&65535,_e=0,g=0,c=0,$=0;return $+=d+j,c+=$>>>16,$&=65535,c+=a+_,g+=c>>>16,c&=65535,g+=i+b,_e+=g>>>16,g&=65535,_e+=s+h,_e&=65535,fromBits(c<<16|$,_e<<16|g,this.unsigned)};LongPrototype.subtract=function o(e){return isLong(e)||(e=fromValue(e)),this.add(e.neg())};LongPrototype.sub=LongPrototype.subtract;LongPrototype.multiply=function o(e){if(this.isZero())return ZERO;if(isLong(e)||(e=fromValue(e)),wasm){var s=wasm.mul(this.low,this.high,e.low,e.high);return fromBits(s,wasm.get_high(),this.unsigned)}if(e.isZero())return ZERO;if(this.eq(MIN_VALUE))return e.isOdd()?MIN_VALUE:ZERO;if(e.eq(MIN_VALUE))return this.isOdd()?MIN_VALUE:ZERO;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(TWO_PWR_24)&&e.lt(TWO_PWR_24))return fromNumber(this.toNumber()*e.toNumber(),this.unsigned);var i=this.high>>>16,a=this.high&65535,d=this.low>>>16,h=this.low&65535,b=e.high>>>16,_=e.high&65535,j=e.low>>>16,_e=e.low&65535,g=0,c=0,$=0,et=0;return et+=h*_e,$+=et>>>16,et&=65535,$+=d*_e,c+=$>>>16,$&=65535,$+=h*j,c+=$>>>16,$&=65535,c+=a*_e,g+=c>>>16,c&=65535,c+=d*j,g+=c>>>16,c&=65535,c+=h*_,g+=c>>>16,c&=65535,g+=i*_e+a*j+d*_+h*b,g&=65535,fromBits($<<16|et,g<<16|c,this.unsigned)};LongPrototype.mul=LongPrototype.multiply;LongPrototype.divide=function o(e){if(isLong(e)||(e=fromValue(e)),e.isZero())throw Error("division by zero");if(wasm){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var s=(this.unsigned?wasm.div_u:wasm.div_s)(this.low,this.high,e.low,e.high);return fromBits(s,wasm.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?UZERO:ZERO;var i,a,d;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return UZERO;if(e.gt(this.shru(1)))return UONE;d=UZERO}else{if(this.eq(MIN_VALUE)){if(e.eq(ONE)||e.eq(NEG_ONE))return MIN_VALUE;if(e.eq(MIN_VALUE))return ONE;var h=this.shr(1);return i=h.div(e).shl(1),i.eq(ZERO)?e.isNegative()?ONE:NEG_ONE:(a=this.sub(e.mul(i)),d=i.add(a.div(e)),d)}else if(e.eq(MIN_VALUE))return this.unsigned?UZERO:ZERO;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();d=ZERO}for(a=this;a.gte(e);){i=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var b=Math.ceil(Math.log(i)/Math.LN2),_=b<=48?1:pow_dbl(2,b-48),j=fromNumber(i),_e=j.mul(e);_e.isNegative()||_e.gt(a);)i-=_,j=fromNumber(i,this.unsigned),_e=j.mul(e);j.isZero()&&(j=ONE),d=d.add(j),a=a.sub(_e)}return d};LongPrototype.div=LongPrototype.divide;LongPrototype.modulo=function o(e){if(isLong(e)||(e=fromValue(e)),wasm){var s=(this.unsigned?wasm.rem_u:wasm.rem_s)(this.low,this.high,e.low,e.high);return fromBits(s,wasm.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};LongPrototype.mod=LongPrototype.modulo;LongPrototype.rem=LongPrototype.modulo;LongPrototype.not=function o(){return fromBits(~this.low,~this.high,this.unsigned)};LongPrototype.and=function o(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low&e.low,this.high&e.high,this.unsigned)};LongPrototype.or=function o(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low|e.low,this.high|e.high,this.unsigned)};LongPrototype.xor=function o(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low^e.low,this.high^e.high,this.unsigned)};LongPrototype.shiftLeft=function o(e){return isLong(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?fromBits(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):fromBits(0,this.low<<e-32,this.unsigned)};LongPrototype.shl=LongPrototype.shiftLeft;LongPrototype.shiftRight=function o(e){return isLong(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?fromBits(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):fromBits(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};LongPrototype.shr=LongPrototype.shiftRight;LongPrototype.shiftRightUnsigned=function o(e){if(isLong(e)&&(e=e.toInt()),e&=63,e===0)return this;var s=this.high;if(e<32){var i=this.low;return fromBits(i>>>e|s<<32-e,s>>>e,this.unsigned)}else return e===32?fromBits(s,0,this.unsigned):fromBits(s>>>e-32,0,this.unsigned)};LongPrototype.shru=LongPrototype.shiftRightUnsigned;LongPrototype.shr_u=LongPrototype.shiftRightUnsigned;LongPrototype.toSigned=function o(){return this.unsigned?fromBits(this.low,this.high,!1):this};LongPrototype.toUnsigned=function o(){return this.unsigned?this:fromBits(this.low,this.high,!0)};LongPrototype.toBytes=function o(e){return e?this.toBytesLE():this.toBytesBE()};LongPrototype.toBytesLE=function o(){var e=this.high,s=this.low;return[s&255,s>>>8&255,s>>>16&255,s>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};LongPrototype.toBytesBE=function o(){var e=this.high,s=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,s>>>24,s>>>16&255,s>>>8&255,s&255]};Long$1.fromBytes=function o(e,s,i){return i?Long$1.fromBytesLE(e,s):Long$1.fromBytesBE(e,s)};Long$1.fromBytesLE=function o(e,s){return new Long$1(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,s)};Long$1.fromBytesBE=function o(e,s){return new Long$1(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],s)};const long$1=getDefaultExportFromCjs(long),LongExports=_mergeNamespaces({__proto__:null,default:long$1},[long]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Long=long$1||LongExports;function hexToLong(o){return Long.fromString(o,!0,16)}const k0=hexToLong("c3a5c85c97cb3127"),k1=hexToLong("b492b66fbe98f273"),k2=hexToLong("9ae16a3b2f90404f");function shiftMix(o){return o.xor(o.shru(47))}function fetch$1(o,e,s){const i=o.slice(e,e+s);return Long.fromBytes(Array.from(i),!0,!0)}function fetch64(o,e){return fetch$1(o,e,8)}function fetch32(o,e){return fetch$1(o,e,4)}function rotate64(o,e){return e===0?o:o.shru(e).or(o.shl(64-e))}function hashLen16(o,e,s=hexToLong("9ddfea08eb382d69")){let i=o.xor(e).mul(s);i=i.xor(i.shru(47));let a=e.xor(i).mul(s);return a=a.xor(a.shru(47)),a=a.mul(s),a}function weakHashLen32WithSeeds(o,e,s,i,a,d){a=a.add(o),d=rotate64(d.add(a).add(i),21);const h=a;return a=a.add(e),a=a.add(s),d=d.add(rotate64(a,44)),[a.add(i),d.add(h)]}function weakHashLen32WithSeedsStr(o,e,s,i){return weakHashLen32WithSeeds(fetch64(o,e),fetch64(o,e+8),fetch64(o,e+16),fetch64(o,e+24),s,i)}function hashLen0to16(o,e=o.length){if(e>=8){const s=k2.add(e*2),i=fetch64(o,0).add(k2),a=fetch64(o,e-8),d=rotate64(a,37).mul(s).add(i),h=rotate64(i,25).add(a).mul(s);return hashLen16(d,h,s)}if(e>=4){const s=k2.add(e*2),i=fetch32(o,0);return hashLen16(i.shl(3).add(e),fetch32(o,e-4),s)}if(e>0){const s=o[0],i=o[e>>1],a=o[e-1],d=s+(i<<8),h=e+(a<<2);return shiftMix(k2.mul(d).xor(k0.mul(h))).mul(k2)}return k2}function hashLen17to32(o,e=o.length){const s=k2.add(e*2),i=fetch64(o,0).mul(k1),a=fetch64(o,8),d=fetch64(o,e-8).mul(s),h=fetch64(o,e-16).mul(k2);return hashLen16(rotate64(i.add(a),43).add(rotate64(d,30)).add(h),i.add(rotate64(a.add(k2),18)).add(d),s)}function hashLen33to64(o,e=o.length){const s=k2.add(e*2),i=fetch64(o,0).mul(k2),a=fetch64(o,8),d=fetch64(o,e-8).mul(s),h=fetch64(o,e-16).mul(k2),b=rotate64(i.add(a),43).add(rotate64(d,30)).add(h),_=hashLen16(b,i.add(rotate64(a.add(k2),18)).add(d),s),j=fetch64(o,16).mul(s),_e=fetch64(o,24),g=b.add(fetch64(o,e-32)).mul(s),c=_.add(fetch64(o,e-24)).mul(s);return hashLen16(rotate64(j.add(_e),43).add(rotate64(g,30)).add(c),j.add(rotate64(_e.add(i),18)).add(g),s)}function fingerPrint64(o,e=o.length){const s=Long.fromNumber(81,!0);if(e<=32)return e<=16?hashLen0to16(o,e):hashLen17to32(o,e);if(e<=64)return hashLen33to64(o,e);let i=s,a=s.mul(k1).add(113),d=shiftMix(a.mul(k2).add(113)).mul(k2),h=[Long.UZERO,Long.UZERO],b=[Long.UZERO,Long.UZERO];i=i.mul(k2).add(fetch64(o,0));let _=0;const j=(e-1>>6)*64,_e=j+(e-1&63)-63;do i=rotate64(i.add(a).add(h[0]).add(fetch64(o,_+8)),37).mul(k1),a=rotate64(a.add(h[1]).add(fetch64(o,_+48)),42).mul(k1),i=i.xor(b[1]),a=a.add(h[0]).add(fetch64(o,_+40)),d=rotate64(d.add(b[0]),33).mul(k1),h=weakHashLen32WithSeedsStr(o,_,h[1].mul(k1),i.add(b[0])),b=weakHashLen32WithSeedsStr(o,_+32,d.add(b[1]),a.add(fetch64(o,_+16))),[d,i]=[i,d],_+=64;while(_!==j);const g=k1.add(d.and(255).shl(1));return _=_e,b[0]=b[0].add(e-1&63),h[0]=h[0].add(b[0]),b[0]=b[0].add(h[0]),i=rotate64(i.add(a).add(h[0]).add(fetch64(o,_+8)),37).mul(g),a=rotate64(a.add(h[1]).add(fetch64(o,_+48)),42).mul(g),i=i.xor(b[1].mul(9)),a=a.add(h[0].mul(9).add(fetch64(o,_+40))),d=rotate64(d.add(b[0]),33).mul(g),h=weakHashLen32WithSeedsStr(o,_,h[1].mul(g),i.add(b[0])),b=weakHashLen32WithSeedsStr(o,_+32,d.add(b[1]),a.add(fetch64(o,_+16))),[d,i]=[i,d],hashLen16(hashLen16(h[0],b[0],g).add(shiftMix(a).mul(k0)).add(d),hashLen16(h[1],b[1],g).add(i),g)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createScalarValue(o,e){return e==="string"?encodeString(o):toTypedArray([o],e)}function noConversionNeeded(o,e){return o instanceof Float32Array&&e==="float32"||o instanceof Int32Array&&e==="int32"||o instanceof Uint8Array&&e==="bool"}function toTypedArray(o,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(o)&&(o=flatten$1(o)),env().getBool("DEBUG")&&checkConversionForErrors(o,e),noConversionNeeded(o,e))return o;if(e==null||e==="float32"||e==="complex64")return new Float32Array(o);if(e==="int32")return new Int32Array(o);if(e==="bool"){const s=new Uint8Array(o.length);for(let i=0;i<s.length;++i)Math.round(o[i])!==0&&(s[i]=1);return s}else throw new Error(`Unknown data type ${e}`)}function now(){return env().platform.now()}function encodeString(o,e="utf-8"){return e=e||"utf-8",env().platform.encode(o,e)}function decodeString(o,e="utf-8"){return e=e||"utf-8",env().platform.decode(o,e)}function isTypedArray(o){return env().platform.isTypedArray!=null?env().platform.isTypedArray(o):isTypedArrayBrowser(o)}function flatten$1(o,e=[],s=!1){if(e==null&&(e=[]),typeof o=="boolean"||typeof o=="number"||typeof o=="string"||isPromise(o)||o==null||isTypedArray(o)&&s)e.push(o);else if(Array.isArray(o)||isTypedArray(o))for(let i=0;i<o.length;++i)flatten$1(o[i],e,s);else{let i=-1;for(const a of Object.keys(o))/^([1-9]+[0-9]*|0)$/.test(a)&&(i=Math.max(i,Number(a)));for(let a=0;a<=i;a++)flatten$1(o[a],e,s)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Profiler{constructor(e,s){this.backendTimer=e,this.logger=s,s==null&&(this.logger=new Logger)}profileKernel(e,s,i){let a;const d=()=>{a=i()};let h;const b=now();if(this.backendTimer.timerAvailable())h=this.backendTimer.time(d);else{d();for(const j of a)j.dataSync();h=Promise.resolve({kernelMs:now()-b})}if(env().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let j=0;j<a.length;j++){const _e=a[j];_e.data().then(g=>{checkComputationForErrors(g,_e.dtype,e)})}return{kernelName:e,outputs:a,inputs:s,timeMs:h.then(j=>j.kernelMs),extraInfo:h.then(j=>j.getExtraProfileInfo!=null?j.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:s,outputs:i,timeMs:a,inputs:d,extraInfo:h}=e;i.forEach(b=>{Promise.all([b.data(),a,h]).then(_=>{this.logger.logKernelProfile(s,b,_[0],_[1],d,_[2])})})}}function checkComputationForErrors(o,e,s){if(e!=="float32")return!1;for(let i=0;i<o.length;i++){const a=o[i];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${s}'`),!0}return!1}class Logger{logKernelProfile(e,s,i,a,d,h){const b=typeof a=="number"?rightPad(`${a}ms`,9):a.error,_=rightPad(e,25),j=s.rank,_e=s.size,g=rightPad(s.shape.toString(),14);let c="";for(const $ in d){const et=d[$];if(et!=null){const tt=et.shape||s.shape,nt=tt.length;c+=`${$}: ${nt}D ${nt>0?tt:""} `}}console.log(`%c${_}	%c${b}	%c${j}D ${g}	%c${_e}	%c${c}	%c${h}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFilteredNodesXToY(o,e,s){const i={},a={};for(let _=0;_<e.length;_++)i[e[_].id]=!0;for(let _=0;_<o.length;_++){const j=o[_],_e=j.inputs;for(const g in _e){const c=_e[g];let $=!1;for(let et=0;et<e.length;et++)if(i[c.id]){j.outputs.forEach(tt=>i[tt.id]=!0),$=!0,a[j.id]=!0;break}if($)break}}const d={};d[s.id]=!0;const h={};for(let _=o.length-1;_>=0;_--){const j=o[_],_e=j.inputs;for(let g=0;g<j.outputs.length;g++)if(d[j.outputs[g].id]){for(const c in _e)d[_e[c].id]=!0,h[j.id]=!0;break}}const b=[];for(let _=0;_<o.length;_++){const j=o[_];if(a[j.id]&&h[j.id]){const _e={};for(const c in j.inputs){const $=j.inputs[c];i[$.id]&&(_e[c]=$)}const g=Object.assign({},j);g.inputs=_e,g.outputs=j.outputs,b.push(g)}}return b}function backpropagateGradients(o,e,s,i){for(let a=e.length-1;a>=0;a--){const d=e[a],h=[];if(d.outputs.forEach(_=>{const j=o[_.id];j!=null?h.push(j):h.push(null)}),d.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${d.kernelName}.`);const b=d.gradient(h);for(const _ in d.inputs){if(!(_ in b))throw new Error(`Cannot backprop through input ${_}. Available gradients found: ${Object.keys(b)}.`);const j=s(()=>b[_]());if(j.dtype!=="float32")throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input ${_} must have 'float32' dtype, but has '${j.dtype}'`);const _e=d.inputs[_];if(!arraysEqual(j.shape,_e.shape))throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input '${_}' has shape '${j.shape}', which does not match the shape of the input '${_e.shape}'`);if(o[_e.id]==null)o[_e.id]=j;else{const g=o[_e.id];o[_e.id]=i(g,j),g.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(o,e,s,i){const a=computeStrides(e),d=computeMaxSizePerColumn(o,e,s,a),h=e.length,b=subTensorToString(o,e,s,a,d),_=["Tensor"];return i&&(_.push(`  dtype: ${s}`),_.push(`  rank: ${h}`),_.push(`  shape: [${e}]`),_.push("  values:")),_.push(b.map(j=>"    "+j).join(`
`)),_.join(`
`)}function computeMaxSizePerColumn(o,e,s,i){const a=sizeFromShape(e),d=i[i.length-1],h=new Array(d).fill(0),b=e.length,_=s==="complex64"?createComplexTuples(o):o;if(b>1)for(let j=0;j<a/d;j++){const _e=j*d;for(let g=0;g<d;g++)h[g]=Math.max(h[g],valToString(_[_e+g],0,s).length)}return h}function valToString(o,e,s){let i;return Array.isArray(o)?i=`${parseFloat(o[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(o[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`:isString(o)?i=`'${o}'`:s==="bool"?i=boolNumToString(o):i=parseFloat(o.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),rightPad(i,e)}function boolNumToString(o){return o===0?"false":"true"}function subTensorToString(o,e,s,i,a,d=!0){const h=s==="complex64"?2:1,b=e[0],_=e.length;if(_===0){if(s==="complex64"){const tt=createComplexTuples(o);return[valToString(tt[0],0,s)]}return s==="bool"?[boolNumToString(o[0])]:[o[0].toString()]}if(_===1){if(b>FORMAT_LIMIT_NUM_VALS){const nt=FORMAT_NUM_FIRST_LAST_VALS*h;let rt=Array.from(o.slice(0,nt)),ot=Array.from(o.slice((b-FORMAT_NUM_FIRST_LAST_VALS)*h,b*h));return s==="complex64"&&(rt=createComplexTuples(rt),ot=createComplexTuples(ot)),["["+rt.map((st,it)=>valToString(st,a[it],s)).join(", ")+", ..., "+ot.map((st,it)=>valToString(st,a[b-FORMAT_NUM_FIRST_LAST_VALS+it],s)).join(", ")+"]"]}return["["+(s==="complex64"?createComplexTuples(o):Array.from(o)).map((nt,rt)=>valToString(nt,a[rt],s)).join(", ")+"]"]}const j=e.slice(1),_e=i.slice(1),g=i[0]*h,c=[];if(b>FORMAT_LIMIT_NUM_VALS){for(let tt=0;tt<FORMAT_NUM_FIRST_LAST_VALS;tt++){const nt=tt*g,rt=nt+g;c.push(...subTensorToString(o.slice(nt,rt),j,s,_e,a,!1))}c.push("...");for(let tt=b-FORMAT_NUM_FIRST_LAST_VALS;tt<b;tt++){const nt=tt*g,rt=nt+g;c.push(...subTensorToString(o.slice(nt,rt),j,s,_e,a,tt===b-1))}}else for(let tt=0;tt<b;tt++){const nt=tt*g,rt=nt+g;c.push(...subTensorToString(o.slice(nt,rt),j,s,_e,a,tt===b-1))}const $=_===2?",":"";c[0]="["+(b>0?c[0]+$:"");for(let tt=1;tt<c.length-1;tt++)c[tt]=" "+c[tt]+$;let et=`,
`;for(let tt=2;tt<_;tt++)et+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(d?"":et),c}function createComplexTuples(o){const e=[];for(let s=0;s<o.length;s+=2)e.push([o[s],o[s+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorBuffer{constructor(e,s,i){if(this.dtype=s,this.shape=e.slice(),this.size=sizeFromShape(e),i!=null){const a=i.length;assert$1(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(s==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=i||getArrayFromDType(s,this.size),this.strides=computeStrides(e)}set(e,...s){s.length===0&&(s=[0]),assert$1(s.length===this.rank,()=>`The number of provided coordinates (${s.length}) must match the rank (${this.rank})`);const i=this.locToIndex(s);this.values[i]=e}get(...e){e.length===0&&(e=[0]);let s=0;for(const a of e){if(a<0||a>=this.shape[s]){const d=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(d)}s++}let i=e[e.length-1];for(let a=0;a<e.length-1;++a)i+=this.strides[a]*e[a];return this.values[i]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let s=e[e.length-1];for(let i=0;i<e.length-1;++i)s+=this.strides[i]*e[i];return s}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const s=new Array(this.shape.length);for(let i=0;i<s.length-1;++i)s[i]=Math.floor(e/this.strides[i]),e-=s[i]*this.strides[i];return s[s.length-1]=e,s}get rank(){return this.shape.length}toTensor(){return trackerFn().makeTensor(this.values,this.shape,this.dtype)}}let trackerFn=null,opHandler$1=null;function setTensorTracker(o){trackerFn=o}function setOpHandler(o){opHandler$1=o}class Tensor{constructor(e,s,i,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=s||"float32",this.size=sizeFromShape(e),this.strides=computeStrides(e),this.dataId=i,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return opHandler$1.buffer(this.shape,this.dtype,e)}bufferSync(){return opHandler$1.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return toNestedArray(this.shape,e,this.dtype==="complex64")}arraySync(){return toNestedArray(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=trackerFn().read(this.dataId);if(this.dtype==="string"){const s=await e;try{return s.map(i=>decodeString(i))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),trackerFn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=trackerFn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(s=>decodeString(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await trackerFn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),trackerFn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return opHandler$1.print(this,e)}clone(){return this.throwIfDisposed(),opHandler$1.clone(this)}toString(e=!1){const s=this.dataSync();return tensorToString(s,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),opHandler$1.cast(this,e)}variable(e=!0,s,i){return this.throwIfDisposed(),trackerFn().makeVariable(this,e,s,i)}}Object.defineProperty(Tensor,Symbol.hasInstance,{value:o=>!!o&&o.data!=null&&o.dataSync!=null&&o.throwIfDisposed!=null});function getGlobalTensorClass(){return getGlobal("Tensor",()=>Tensor)}getGlobalTensorClass();class Variable extends Tensor{constructor(e,s,i,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=s,this.name=i}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!arraysEqual(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);trackerFn().disposeTensor(this),this.dataId=e.dataId,trackerFn().incRef(this,null)}dispose(){trackerFn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Variable,Symbol.hasInstance,{value:o=>o instanceof Tensor&&o.assign!=null&&o.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rank;(function(o){o.R0="R0",o.R1="R1",o.R2="R2",o.R3="R3",o.R4="R4",o.R5="R5",o.R6="R6"})(Rank||(Rank={}));var UpcastInt32AndMap;(function(o){o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64"})(UpcastInt32AndMap||(UpcastInt32AndMap={}));var UpcastBoolAndMap;(function(o){o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64"})(UpcastBoolAndMap||(UpcastBoolAndMap={}));var UpcastFloat32AndMap;(function(o){o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64"})(UpcastFloat32AndMap||(UpcastFloat32AndMap={}));var UpcastComplex64AndMap;(function(o){o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64"})(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));const upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(o,e){if(o==="string"||e==="string"){if(o==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${o} with ${e}`)}return upcastTypeMap[o][e]}function sumOutType(o){return upcastType(o,"int32")}function isWebGLData(o){return o!=null&&typeof o=="object"&&"texture"in o&&o.texture instanceof WebGLTexture}function isWebGPUData(o){return typeof GPUBuffer<"u"&&o!=null&&typeof o=="object"&&"buffer"in o&&o.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTypesMatch(o,e){if(o.dtype===e.dtype)return[o,e];const s=upcastType(o.dtype,e.dtype);return[o.cast(s),e.cast(s)]}function getTensorsInContainer(o){const e=[];return walkTensorContainer(o,e,new Set),e}function walkTensorContainer(o,e,s){if(o==null)return;if(o instanceof Tensor){e.push(o);return}if(!isIterable(o))return;const i=o;for(const a in i){const d=i[a];s.has(d)||(s.add(d),walkTensorContainer(d,e,s))}}function isIterable(o){return Array.isArray(o)||typeof o=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isRegisteredKernelInvocation(o){return o.kernelName!=null}class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Engine{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const i=e[s];if(await this.initializeBackend(i).success){await this.setBackend(i);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:s}=this.initializeBackendsAndReturnBest();if(s)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:s}=this.initializeBackend(e);if(s)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,s,i=1){return e in this.registryFactory?(warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:s,priority:i},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:s,asyncInit:i}=this.initializeBackend(e);if(!(i?await s:s))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Profiler(this.backendInstance),!0}setupRegisteredKernels(){getKernelsForBackend(this.backendName).forEach(s=>{s.setupFunc!=null&&s.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){getKernelsForBackend(e).forEach(i=>{i.disposeFunc!=null&&i.disposeFunc(this.registry[e])})}initializeBackend(e){const s=this.registryFactory[e];if(s==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const i=s.factory();if(i&&!(i instanceof KernelBackend)&&typeof i.then=="function"){const a=++this.pendingBackendInitId,d=i.then(h=>a<this.pendingBackendInitId?!1:(this.registry[e]=h,this.pendingBackendInit=null,!0)).catch(h=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,warn(`Initialization of backend ${e} failed`),warn(h.stack||h.message)),!1));return this.pendingBackendInit=d,{success:d,asyncInit:!0}}else return this.registry[e]=i,{success:!0,asyncInit:!1}}catch(i){return warn(`Initialization of backend ${e} failed`),warn(i.stack||i.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,s)=>this.registryFactory[s].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const i=e[s],{success:a,asyncInit:d}=this.initializeBackend(i);if(d||a)return{name:i,asyncInit:d}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,s){const i=this.state.tensorInfo.get(s),a=i.backend,d=this.readSync(s),h=a.refCount(s);a.disposeData(s,!0),i.backend=e,e.move(s,d,i.shape,i.dtype,h),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,s){let i=null;if(s==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");s=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof s!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");i=e}let a;return this.scopedRun(()=>this.startScope(i),()=>this.endScope(a),()=>(a=s(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,s,i){e();try{const a=i();return s(),a}catch(a){throw s(),a}}nextTensorId(){return Engine.nextTensorId++}nextVariableId(){return Engine.nextVariableId++}clone(e){const s=ENGINE.runKernel(Identity$1,{x:e}),i={x:e},a=h=>({x:()=>{const b="float32",_={x:h},j={dtype:b};return ENGINE.runKernel(Cast,_,j)}}),d=[];return this.addTapeNode(this.state.activeScope.name,i,[s],a,d,{}),s}runKernel(e,s,i){if(this.backendName==null&&this.backend,!(getKernel(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:s,attrs:i})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,s,i){const a=this.backend.numDataIds();let d=0;i.forEach(_=>{d+=_.dtype==="complex64"?3:1});const h=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],b=a-s-d-h;if(b>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${b} data ids) after running '${e}'`)}runKernelFunc(e){let s,i=[];const a=this.isTapeOn(),d=this.state.numBytes,h=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let b;this.backendName==null&&this.backend;let _;const j=isRegisteredKernelInvocation(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(isRegisteredKernelInvocation(e)){const{kernelName:et,inputs:tt,attrs:nt}=e;this.backendName==null&&this.backend;const rt=getKernel(et,this.backendName);assert$1(rt!=null,()=>`Cannot find registered kernel '${et}' for backend '${this.backendName}'`),b=()=>{const ot=this.backend.numDataIds();_=rt.kernelFunc({inputs:tt,attrs:nt,backend:this.backend});const st=Array.isArray(_)?_:[_];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(et,ot,st);const it=st.map(at=>at.rank!=null?at:this.makeTensorFromTensorInfo(at));if(a){const at=this.getTensorsForGradient(et,tt,it);i=this.saveTensorsForBackwardMode(at)}return it}}else{const{forwardFunc:et}=e,tt=nt=>{a&&(i=nt.map(rt=>this.keep(this.clone(rt))))};b=()=>{const nt=this.backend.numDataIds();_=this.tidy(()=>et(this.backend,tt));const rt=Array.isArray(_)?_:[_];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(j,nt,rt),rt}}const{inputs:_e,attrs:g}=e,c=isRegisteredKernelInvocation(e)?null:e.backwardsFunc;let $;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?s=b():($=this.profiler.profileKernel(j,_e,()=>b()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile($),s=$.outputs)}),a&&this.addTapeNode(j,_e,s,c,i,g),this.state.profiling&&this.state.activeProfile.kernels.push({name:j,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(_e).map(et=>_e[et]!=null?_e[et].shape:null),outputShapes:s.map(et=>et.shape),kernelTimeMs:$.timeMs,extraInfo:$.extraInfo}),Array.isArray(_)?s:s[0]}saveTensorsForBackwardMode(e){return e.map(i=>this.keep(this.clone(i)))}getTensorsForGradient(e,s,i){const a=getGradient(e);if(a!=null){const d=a.inputsToSave||[],h=a.outputsToSave||[];let b;a.saveAllInputs?(assert$1(Array.isArray(s),()=>"saveAllInputs is true, expected inputs to be an array."),b=Object.keys(s).map(j=>s[j])):b=d.map(j=>s[j]);const _=i.filter((j,_e)=>h[_e]);return b.concat(_)}return[]}makeTensor(e,s,i,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");i=i||"float32",a=a||this.backend;let d=e;i==="string"&&isString(e[0])&&(d=e.map(_=>encodeString(_)));const h=a.write(d,s,i),b=new Tensor(s,i,h,this.nextTensorId());if(this.trackTensor(b,a),i==="string"){const _=this.state.tensorInfo.get(h),j=bytesFromStringArray(d);this.state.numBytes+=j-_.bytes,_.bytes=j}return b}makeTensorFromDataId(e,s,i,a){i=i||"float32";const d={dataId:e,shape:s,dtype:i};return this.makeTensorFromTensorInfo(d,a)}makeTensorFromTensorInfo(e,s){const{dataId:i,shape:a,dtype:d}=e,h=new Tensor(a,d,i,this.nextTensorId());return this.trackTensor(h,s),h}makeVariable(e,s=!0,i,a){i=i||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));const d=new Variable(e,s,i,this.nextTensorId());if(this.state.registeredVariables[d.name]!=null)throw new Error(`Variable with name ${d.name} was already registered`);return this.state.registeredVariables[d.name]=d,this.incRef(d,this.backend),d}trackTensor(e,s){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let i=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(i=e.size*bytesPerElement(e.dtype)),this.state.numBytes+=i,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:s||this.backend,dtype:e.dtype,shape:e.shape,bytes:i})),e instanceof Variable||this.track(e)}incRef(e,s){this.trackTensor(e,s),this.backend.incRef(e.dataId)}removeDataId(e,s){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===s&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const s=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=s.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const i=e.size*bytesPerElement(e.dtype);this.state.numBytes-=i}s.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,s.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const s=this.state.registeredVariables[e];this.disposeVariable(s)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const s=this.state.numBytes,i=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-s,this.state.activeProfile.newTensors=this.state.numTensors-i;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,s,i,a,d,h){const b={id:this.state.nextTapeNodeId++,kernelName:e,inputs:s,outputs:i,saved:d},_=getGradient(e);_!=null&&(a=_.gradFunc),a!=null&&(b.gradient=j=>(j=j.map((_e,g)=>{if(_e==null){const c=i[g],$=makeZerosTypedArray(c.size,c.dtype);return this.makeTensor($,c.shape,c.dtype)}return _e}),a(j.length>1?j:j[0],d,h))),this.state.activeTape.push(b)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const s={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(s.name=e),this.state.scopeStack.push(s),this.state.activeScope=s}endScope(e){const s=getTensorsInContainer(e),i=new Set(s.map(d=>d.id));for(let d=0;d<this.state.activeScope.track.length;d++){const h=this.state.activeScope.track[d];!h.kept&&!i.has(h.id)&&h.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],s.forEach(d=>{!d.kept&&d.scopeId===a.id&&this.track(d)})}gradients(e,s,i,a=!1){if(assert$1(s.length>0,()=>"gradients() received an empty list of xs."),i!=null&&i.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${i.dtype}'`);const d=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));assert$1(d instanceof Tensor,()=>"The result y returned by f() must be a tensor.");const h=getFilteredNodesXToY(this.state.activeTape,s,d);if(!a&&h.length===0&&s.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const b={};b[d.id]=i??ones$1(d.shape),backpropagateGradients(b,h,j=>this.tidy(j),add$2);const _=s.map(j=>b[j.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(j=>{for(const _e of j.saved)_e.dispose()}),this.state.activeTape=null),{value:d,grads:_}})}customGrad(e){return assert$1(isFunction(e),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{assert$1(s.every(b=>b instanceof Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let i;const a={};s.forEach((b,_)=>{a[_]=b});const d=(b,_)=>(i=e(...s,_),assert$1(i.value instanceof Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),assert$1(isFunction(i.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),i.value),h=(b,_)=>{const j=i.gradFunc(b,_),_e=Array.isArray(j)?j:[j];assert$1(_e.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),assert$1(_e.every(c=>c instanceof Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const g={};return _e.forEach((c,$)=>{g[$]=()=>c}),g};return this.runKernelFunc({forwardFunc:d,backwardsFunc:h,inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,s){return this.state.tensorInfo.get(e).backend.readToGPU(e,s)}async time(e){const s=now(),i=await this.backend.time(e);return i.wallMs=now()-s,i}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Engine.nextTensorId=0;Engine.nextVariableId=0;function ones$1(o){const e=makeOnesTypedArray(sizeFromShape(o),"float32");return ENGINE.makeTensor(e,o,"float32")}function getOrMakeEngine(){const o=getGlobalNamespace();if(o._tfengine==null){const e=new Environment(o);o._tfengine=new Engine(e)}return setEnvironmentGlobal(o._tfengine.ENV),setTensorTracker(()=>o._tfengine),o._tfengine}const ENGINE=getOrMakeEngine();function add$2(o,e){const s={a:o,b:e};return ENGINE.runKernel(Add$1,s)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _isNavigatorDefined(){return typeof navigator<"u"&&navigator!=null}function isMobile(o){if(o||_isNavigatorDefined()){if(o||(o=navigator),o.product==="ReactNative")return!0;const e=o.userAgent||o.vendor||(typeof window<"u"?window.opera:"");if(!e){const s=o;return s.userAgentData&&s.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function isBrowser(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$3=env();ENV$3.registerFlag("DEBUG",()=>!1,o=>{o&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ENV$3.registerFlag("IS_BROWSER",()=>isBrowser());ENV$3.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ENV$3.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ENV$3.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ENV$3.registerFlag("PROD",()=>!1);ENV$3.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ENV$3.getBool("DEBUG"));ENV$3.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ENV$3.registerFlag("IS_TEST",()=>!1);ENV$3.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ENV$3.getBool("DEBUG"));ENV$3.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ENV$3.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ENV$3.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function inferShape(o,e){let s=o;if(isTypedArray(o))return e==="string"?[]:[o.length];if(isWebGLData(o)){const a=o.channels||"RGBA";return[o.height,o.width*a.length]}else if(isWebGPUData(o))return[o.buffer.size/(e==null?4:bytesPerElement(e))];if(!Array.isArray(o))return[];const i=[];for(;Array.isArray(s)||isTypedArray(s)&&e!=="string";)i.push(s.length),s=s[0];return Array.isArray(o)&&env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(o,i,[]),i}function deepAssertShapeConsistency(o,e,s){if(s=s||[],!Array.isArray(o)&&!isTypedArray(o)){assert$1(e.length===0,()=>`Element arr[${s.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}assert$1(e.length>0,()=>`Element arr[${s.join("][")}] should be a primitive, but is an array of ${o.length} elements`),assert$1(o.length===e[0],()=>`Element arr[${s.join("][")}] should have ${e[0]} elements, but has ${o.length} elements`);const i=e.slice(1);for(let a=0;a<o.length;++a)deepAssertShapeConsistency(o[a],i,s.concat(a))}function assertDtype(o,e,s,i){if(o!=="string_or_numeric"){if(o==null)throw new Error("Expected dtype cannot be null.");if(o!=="numeric"&&o!==e||o==="numeric"&&e==="string")throw new Error(`Argument '${s}' passed to '${i}' must be ${o} tensor, but got ${e} tensor`)}}function convertToTensor(o,e,s,i="numeric"){if(o instanceof getGlobalTensorClass())return assertDtype(i,o.dtype,e,s),o;let a=inferDtype(o);if(a!=="string"&&["bool","int32","float32"].indexOf(i)>=0&&(a=i),assertDtype(i,a,e,s),o==null||!isTypedArray(o)&&!Array.isArray(o)&&typeof o!="number"&&typeof o!="boolean"&&typeof o!="string"){const _=o==null?"null":o.constructor.name;throw new Error(`Argument '${e}' passed to '${s}' must be a Tensor or TensorLike, but got '${_}'`)}const d=inferShape(o,a);!isTypedArray(o)&&!Array.isArray(o)&&(o=[o]);const b=a!=="string"?toTypedArray(o,a):flatten$1(o,[],!0);return ENGINE.makeTensor(b,d,a)}function convertToTensorArray(o,e,s,i="numeric"){if(!Array.isArray(o))throw new Error(`Argument ${e} passed to ${s} must be a \`Tensor[]\` or \`TensorLike[]\``);return o.map((d,h)=>convertToTensor(d,`${e}[${h}]`,s,i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP_SCOPE_SUFFIX="__op";function op(o){const e=Object.keys(o);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let s=e[0];const i=o[s];s.endsWith("_")&&(s=s.substring(0,s.length-1)),s=s+OP_SCOPE_SUFFIX;const a=(...d)=>{ENGINE.startScope(s);try{const h=i(...d);return isPromise(h)&&console.error("Cannot return a Promise inside of tidy."),ENGINE.endScope(h),h}catch(h){throw ENGINE.endScope(null),h}};return Object.defineProperty(a,"name",{value:s,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex_(o,e){const s=convertToTensor(o,"real","complex"),i=convertToTensor(e,"imag","complex");assertShapesMatch(s.shape,i.shape,`real and imag shapes, ${s.shape} and ${i.shape}, must match in call to tf.complex().`);const a={real:s,imag:i};return ENGINE.runKernel(Complex,a)}const complex$2=op({complex_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTensor(o,e,s,i){if(i==null)i=inferDtype(o);else if(i==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(isWebGPUData(o)||isWebGLData(o)){if(i!=="float32"&&i!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return ENGINE.backend.createTensorFromGPUData(o,e||s,i)}if(!isTypedArray(o)&&!Array.isArray(o)&&typeof o!="number"&&typeof o!="boolean"&&typeof o!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){assertNonNegativeIntegerDimensions(e);const a=sizeFromShape(e),d=sizeFromShape(s);assert$1(a===d,()=>`Based on the provided shape, [${e}], the tensor should have ${a} values but has ${d}`);for(let h=0;h<s.length;++h){const b=s[h],_=h===s.length-1?b!==sizeFromShape(e.slice(h)):!0;assert$1(s[h]===e[h]||!_,()=>`Error creating a new Tensor. Inferred shape (${s}) does not match the provided shape (${e}). `)}}return!isTypedArray(o)&&!Array.isArray(o)&&(o=[o]),e=e||s,o=i!=="string"?toTypedArray(o,i):flatten$1(o,[],!0),ENGINE.makeTensor(o,e,i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor(o,e,s){const i=inferShape(o,s);return makeTensor(o,e,i,s)}class CompositeArrayBuffer{static join(e){return new CompositeArrayBuffer(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(i=>isTypedArray(i)?i.buffer:i),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let s=0;for(let i=0;i<e.length;i++){const a=e[i];i!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const d=s+a.byteLength;this.shards.push({buffer:a,start:s,end:d}),s=d}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,s=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,s=isNaN(Number(s))?0:s,e=Math.max(0,e),s=Math.min(this.byteLength,s),s<=e)return new ArrayBuffer(0);const i=this.findShardForByte(e);if(i===-1)throw new Error(`Could not find start shard for byte ${e}`);const a=s-e,d=new ArrayBuffer(a),h=new Uint8Array(d);let b=0;for(let _=i;_<this.shards.length;_++){const j=this.shards[_],g=e+b-j.start,c=b,et=Math.min(s,j.end)-j.start,tt=new Uint8Array(j.buffer,g,et-g);if(h.set(tt,c),b+=tt.length,s<j.end)break}return d}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function s(a){return e<a.start?-1:e>=a.end?1:0}if(s(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const i=search(this.shards,s);return i===-1?-1:(this.previousShardIndex=i,this.previousShardIndex)}}function search(o,e){let s=0,i=o.length;for(;s<=i;){const a=Math.floor((i-s)/2)+s,d=e(o[a]);if(d===0)return a;d<0?i=a:s=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function engine(){return ENGINE}function memory(){return ENGINE.memory()}function tidy(o,e){return ENGINE.tidy(o,e)}function dispose(o){getTensorsInContainer(o).forEach(s=>s.dispose())}function keep(o){return ENGINE.keep(o)}function registerBackend(o,e,s=1){return ENGINE.registerBackend(o,e,s)}function backend(){return ENGINE.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NUM_BYTES_STRING_LENGTH=4;async function encodeWeights(o,e){const s=[],i=[],a=Array.isArray(o)?o.map(h=>h.name):Object.keys(o);for(let h=0;h<a.length;++h){const b=a[h],_=Array.isArray(o)?o[h].tensor:o[b];if(_.dtype!=="float32"&&_.dtype!=="int32"&&_.dtype!=="bool"&&_.dtype!=="string"&&_.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${b}': ${_.dtype}`);const j={name:b,shape:_.shape,dtype:_.dtype};if(_.dtype==="string"){const _e=new Promise(async g=>{const c=await _.bytes(),$=c.reduce((nt,rt)=>nt+rt.length,0)+NUM_BYTES_STRING_LENGTH*c.length,et=new Uint8Array($);let tt=0;for(let nt=0;nt<c.length;nt++){const rt=c[nt],ot=new Uint8Array(new Uint32Array([rt.length]).buffer);et.set(ot,tt),tt+=NUM_BYTES_STRING_LENGTH,et.set(rt,tt),tt+=rt.length}g(et)});i.push(_e)}else i.push(_.data());e!=null&&(j.group=e),s.push(j)}const d=await Promise.all(i);return{data:concatenateTypedArrays(d),specs:s}}function concatenateTypedArrays(o){if(o===null)throw new Error(`Invalid input value: ${JSON.stringify(o)}`);let e=0;const s=[];o.forEach(d=>{if(e+=d.byteLength,s.push(d.byteLength===d.buffer.byteLength?d:new d.constructor(d)),!(d instanceof Float32Array||d instanceof Int32Array||d instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${d.constructor.name}`)});const i=new Uint8Array(e);let a=0;return s.forEach(d=>{i.set(new Uint8Array(d.buffer),a),a+=d.byteLength}),i.buffer}const useNodeBuffer=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function stringByteLength(o){return useNodeBuffer?Buffer.byteLength(o,"utf8"):new Blob([o]).size}function arrayBufferToBase64String(o){if(useNodeBuffer)return Buffer.from(o).toString("base64");const e=new Uint8Array(o);let s="";for(let i=0,a=e.length;i<a;i++)s+=String.fromCharCode(e[i]);return btoa(s)}function base64StringToArrayBuffer(o){if(useNodeBuffer){const i=Buffer.from(o,"base64");return i.buffer.slice(i.byteOffset,i.byteOffset+i.byteLength)}const e=atob(o),s=new Uint8Array(e.length);for(let i=0;i<e.length;++i)s.set([e.charCodeAt(i)],i);return s.buffer}function concatenateArrayBuffers(o){return CompositeArrayBuffer.join(o)}function getModelArtifactsInfoForJSON(o){if(o.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:o.modelTopology==null?0:stringByteLength(JSON.stringify(o.modelTopology)),weightSpecsBytes:o.weightSpecs==null?0:stringByteLength(JSON.stringify(o.weightSpecs)),weightDataBytes:o.weightData==null?0:new CompositeArrayBuffer(o.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return IORouterRegistry.instance==null&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(e){IORouterRegistry.getInstance().saveRouters.push(e)}static registerLoadRouter(e){IORouterRegistry.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return IORouterRegistry.getHandlers(e,"save")}static getLoadHandlers(e,s){return IORouterRegistry.getHandlers(e,"load",s)}static getHandlers(e,s,i){const a=[];return(s==="load"?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach(h=>{const b=h(e,i);b!==null&&a.push(b)}),a}}const getSaveHandlers=o=>IORouterRegistry.getSaveHandlers(o);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DATABASE_NAME="tensorflowjs",DATABASE_VERSION=1,MODEL_STORE_NAME="models_store",INFO_STORE_NAME="model_info_store";function getIndexedDBFactory(){if(!env().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const o=typeof window>"u"?self:window,e=o.indexedDB||o.mozIndexedDB||o.webkitIndexedDB||o.msIndexedDB||o.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function setUpDatabase(o){const e=o.result;e.createObjectStore(MODEL_STORE_NAME,{keyPath:"modelPath"}),e.createObjectStore(INFO_STORE_NAME,{keyPath:"modelPath"})}class BrowserIndexedDB{constructor(e){if(this.indexedDB=getIndexedDBFactory(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,s){return new Promise((i,a)=>{const d=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);d.onupgradeneeded=()=>setUpDatabase(d),d.onsuccess=()=>{const h=d.result;if(s==null){const b=h.transaction(MODEL_STORE_NAME,"readonly"),j=b.objectStore(MODEL_STORE_NAME).get(this.modelPath);j.onsuccess=()=>{if(j.result==null)return h.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));i(j.result.modelArtifacts)},j.onerror=_e=>(h.close(),a(j.error)),b.oncomplete=()=>h.close()}else{s.weightData=CompositeArrayBuffer.join(s.weightData);const b=getModelArtifactsInfoForJSON(s),_=h.transaction(INFO_STORE_NAME,"readwrite");let j=_.objectStore(INFO_STORE_NAME),_e;try{_e=j.put({modelPath:this.modelPath,modelArtifactsInfo:b})}catch(c){return a(c)}let g;_e.onsuccess=()=>{g=h.transaction(MODEL_STORE_NAME,"readwrite");const c=g.objectStore(MODEL_STORE_NAME);let $;try{$=c.put({modelPath:this.modelPath,modelArtifacts:s,modelArtifactsInfo:b})}catch(et){return a(et)}$.onsuccess=()=>i({modelArtifactsInfo:b}),$.onerror=et=>{j=_.objectStore(INFO_STORE_NAME);const tt=j.delete(this.modelPath);tt.onsuccess=()=>(h.close(),a($.error)),tt.onerror=nt=>(h.close(),a($.error))}},_e.onerror=c=>(h.close(),a(_e.error)),_.oncomplete=()=>{g==null?h.close():g.oncomplete=()=>h.close()}}},d.onerror=h=>a(d.error)})}}BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=o=>env().getBool("IS_BROWSER")&&!Array.isArray(o)&&o.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(o.slice(BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter);IORouterRegistry.registerLoadRouter(indexedDBRouter);function browserIndexedDB(o){return new BrowserIndexedDB(o)}function maybeStripScheme$1(o){return o.startsWith(BrowserIndexedDB.URL_SCHEME)?o.slice(BrowserIndexedDB.URL_SCHEME.length):o}class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise((e,s)=>{const i=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);i.onupgradeneeded=()=>setUpDatabase(i),i.onsuccess=()=>{const a=i.result,d=a.transaction(INFO_STORE_NAME,"readonly"),b=d.objectStore(INFO_STORE_NAME).getAll();b.onsuccess=()=>{const _={};for(const j of b.result)_[j.modelPath]=j.modelArtifactsInfo;e(_)},b.onerror=_=>(a.close(),s(b.error)),d.oncomplete=()=>a.close()},i.onerror=a=>s(i.error)})}async removeModel(e){return e=maybeStripScheme$1(e),new Promise((s,i)=>{const a=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);a.onupgradeneeded=()=>setUpDatabase(a),a.onsuccess=()=>{const d=a.result,h=d.transaction(INFO_STORE_NAME,"readwrite"),b=h.objectStore(INFO_STORE_NAME),_=b.get(e);let j;_.onsuccess=()=>{if(_.result==null)return d.close(),i(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const _e=b.delete(e),g=()=>{j=d.transaction(MODEL_STORE_NAME,"readwrite");const $=j.objectStore(MODEL_STORE_NAME).delete(e);$.onsuccess=()=>s(_.result.modelArtifactsInfo),$.onerror=et=>i(_.error)};_e.onsuccess=g,_e.onerror=c=>(g(),d.close(),i(_.error))}},_.onerror=_e=>(d.close(),i(_.error)),h.oncomplete=()=>{j==null?d.close():j.oncomplete=()=>d.close()}},a.onerror=d=>i(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PATH_SEPARATOR="/",PATH_PREFIX="tensorflowjs_models",INFO_SUFFIX="info",MODEL_TOPOLOGY_SUFFIX="model_topology",WEIGHT_SPECS_SUFFIX="weight_specs",WEIGHT_DATA_SUFFIX="weight_data",MODEL_METADATA_SUFFIX="model_metadata";function getModelKeys(o){return{info:[PATH_PREFIX,o,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,o,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,o,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,o,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,o,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function removeItems(o){for(const e of Object.values(o))window.localStorage.removeItem(e)}function getModelPathFromKey(o){const e=o.split(PATH_SEPARATOR);if(e.length<3)throw new Error(`Invalid key format: ${o}`);return e.slice(1,e.length-1).join(PATH_SEPARATOR)}function maybeStripScheme(o){return o.startsWith(BrowserLocalStorage.URL_SCHEME)?o.slice(BrowserLocalStorage.URL_SCHEME.length):o}class BrowserLocalStorage{constructor(e){if(!env().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=getModelKeys(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const s=JSON.stringify(e.modelTopology),i=JSON.stringify(e.weightSpecs),a=getModelArtifactsInfoForJSON(e),d=CompositeArrayBuffer.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,s),this.LS.setItem(this.keys.weightSpecs,i),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(d));const h={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(h)),{modelArtifactsInfo:a}}catch{throw removeItems(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const s={},i=JSON.parse(this.LS.getItem(this.keys.topology));if(i==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);s.modelTopology=i;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);s.weightSpecs=a;const d=this.LS.getItem(this.keys.modelMetadata);if(d!=null){const b=JSON.parse(d);s.format=b.format,s.generatedBy=b.generatedBy,s.convertedBy=b.convertedBy,b.signature!=null&&(s.signature=b.signature),b.userDefinedMetadata!=null&&(s.userDefinedMetadata=b.userDefinedMetadata),b.modelInitializer!=null&&(s.modelInitializer=b.modelInitializer),b.initializerSignature!=null&&(s.initializerSignature=b.initializerSignature),b.trainingConfig!=null&&(s.trainingConfig=b.trainingConfig)}const h=this.LS.getItem(this.keys.weightData);if(h==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return s.weightData=base64StringToArrayBuffer(h),s}}BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=o=>env().getBool("IS_BROWSER")&&!Array.isArray(o)&&o.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(o.slice(BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter);IORouterRegistry.registerLoadRouter(localStorageRouter);function browserLocalStorage(o){return new BrowserLocalStorage(o)}class BrowserLocalStorageManager{constructor(){assert$1(env().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),assert$1(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},s=PATH_PREFIX+PATH_SEPARATOR,i=PATH_SEPARATOR+INFO_SUFFIX;for(let a=0;a<this.LS.length;++a){const d=this.LS.key(a);if(d.startsWith(s)&&d.endsWith(i)){const h=getModelPathFromKey(d);e[h]=JSON.parse(this.LS.getItem(d))}}return e}async removeModel(e){e=maybeStripScheme(e);const s=getModelKeys(e);if(this.LS.getItem(s.info)==null)throw new Error(`Cannot find model at path '${e}'`);const i=JSON.parse(this.LS.getItem(s.info));return removeItems(s),i}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const URL_SCHEME_SUFFIX="://";class ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return ModelStoreManagerRegistry.instance==null&&(ModelStoreManagerRegistry.instance=new ModelStoreManagerRegistry),ModelStoreManagerRegistry.instance}static registerManager(e,s){assert$1(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(URL_SCHEME_SUFFIX)&&(e=e.slice(0,e.indexOf(URL_SCHEME_SUFFIX))),assert$1(e.length>0,()=>"scheme must not be an empty string.");const i=ModelStoreManagerRegistry.getInstance();assert$1(i.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),i.managers[e]=s}static getManager(e){const s=ModelStoreManagerRegistry.getInstance().managers[e];if(s==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return s}static getSchemes(){return Object.keys(ModelStoreManagerRegistry.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PlatformBrowser{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,s){return fetch(e,s)}now(){return performance.now()}encode(e,s){if(s!=="utf-8"&&s!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${s}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,s){return new TextDecoder(s).decode(e)}setTimeoutCustom(e,s){if(typeof window>"u"||!env().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,s);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},s),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",i=>{if(i.source===window&&i.data.name===this.messageName){i.stopPropagation();const a=this.functionRefs[i.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return isTypedArrayBrowser(e)}}if(env().get("IS_BROWSER")){env().setPlatform("browser",new PlatformBrowser);try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager)}catch{}try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const getNodeFetch={importFetch:()=>require("node-fetch")};let systemFetch;class PlatformNode{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,s){return env().global.fetch!=null?env().global.fetch(e,s):(systemFetch==null&&(systemFetch=getNodeFetch.importFetch()),systemFetch(e,s))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,s){if(s!=="utf-8"&&s!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${s}`);return this.textEncoder.encode(e)}decode(e,s){return e.length===0?"":new this.util.TextDecoder(s).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}env().get("IS_NODE")&&!env().get("IS_BROWSER")&&env().setPlatform("node",new PlatformNode);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function buffer(o,e="float32",s){return e=e||"float32",assertNonNegativeIntegerDimensions(o),new TensorBuffer(o,e,s)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast_(o,e){const s=convertToTensor(o,"x","cast");if(!isValidDtype(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&s.dtype!=="string"||e!=="string"&&s.dtype==="string")throw new Error("Only strings can be casted to strings");const i={x:s},a={dtype:e};return ENGINE.runKernel(Cast,i,a)}const cast$3=op({cast_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clone_(o){const s={x:convertToTensor(o,"x","clone","string_or_numeric")};return ENGINE.runKernel(Identity$1,s)}const clone=op({clone_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function print(o,e=!1){console.log(o.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getOrMakeEngine();const opHandler={buffer,cast:cast$3,clone,print};setOpHandler(opHandler);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function add_(o,e){let s=convertToTensor(o,"a","add"),i=convertToTensor(e,"b","add");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Add$1,a)}const add$1=op({add_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floorDiv_(o,e){let s=convertToTensor(o,"a","floorDiv"),i=convertToTensor(e,"b","floorDiv");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(FloorDiv,a)}const floorDiv$2=op({floorDiv_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function div_(o,e){let s=convertToTensor(o,"a","div"),i=convertToTensor(e,"b","div");if([s,i]=makeTypesMatch(s,i),s.dtype==="int32"&&i.dtype==="int32")return floorDiv$2(s,i);const a={a:s,b:i},d={};return ENGINE.runKernel(RealDiv,a,d)}const div$1=op({div_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mul_(o,e){let s=convertToTensor(o,"a","mul"),i=convertToTensor(e,"b","mul");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Multiply$1,a)}const mul=op({mul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abs_(o){const e=convertToTensor(o,"x","abs");if(e.dtype==="complex64"){const s={x:e};return ENGINE.runKernel(ComplexAbs,s)}else{const s={x:e};return ENGINE.runKernel(Abs,s)}}const abs$2=op({abs_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acos_(o){const s={x:convertToTensor(o,"x","acos")};return ENGINE.runKernel(Acos,s)}const acos$2=op({acos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acosh_(o){const s={x:convertToTensor(o,"x","acosh")};return ENGINE.runKernel(Acosh,s)}const acosh$2=op({acosh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all_(o,e=null,s=!1){const a={x:convertToTensor(o,"x","all","bool")},d={axis:e,keepDims:s};return ENGINE.runKernel(All,a,d)}const all$2=op({all_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any_(o,e=null,s=!1){const a={x:convertToTensor(o,"x","any","bool")},d={axis:e,keepDims:s};return ENGINE.runKernel(Any,a,d)}const any$2=op({any_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax_(o,e=0){const i={x:convertToTensor(o,"x","argMax")},a={axis:e};return ENGINE.runKernel(ArgMax,i,a)}const argMax$2=op({argMax_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin_(o,e=0){const i={x:convertToTensor(o,"x","argMin")},a={axis:e};return ENGINE.runKernel(ArgMin,i,a)}const argMin$2=op({argMin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asin_(o){const s={x:convertToTensor(o,"x","asin")};return ENGINE.runKernel(Asin,s)}const asin$2=op({asin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asinh_(o){const s={x:convertToTensor(o,"x","asinh")};return ENGINE.runKernel(Asinh,s)}const asinh$2=op({asinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan_(o){const s={x:convertToTensor(o,"x","atan")};return ENGINE.runKernel(Atan,s)}const atan$2=op({atan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan2_(o,e){let s=convertToTensor(o,"a","atan2"),i=convertToTensor(e,"b","atan2");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Atan2,a)}const atan2$2=op({atan2_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atanh_(o){const s={x:convertToTensor(o,"x","atanh")};return ENGINE.runKernel(Atanh,s)}const atanh$2=op({atanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function computeDilation2DInfo(o,e,s,i,a="NHWC",d){const h=o[3],b=[...e,h],_=convertConv2DDataFormat(a);return computeConv2DInfo(o,b,s,d,i,null,null,_)}function computePool2DInfo(o,e,s,i,a,d,h="channelsLast"){const[b,_]=parseTupleParam(e);let j;if(h==="channelsLast")j=[b,_,o[3],o[3]];else if(h==="channelsFirst")j=[b,_,o[1],o[1]];else throw new Error(`Unknown dataFormat ${h}`);return computeConv2DInfo(o,j,s,i,a,d,!1,h)}function computePool3DInfo(o,e,s,i,a,d,h="NDHWC"){const[b,_,j]=parse3TupleParam(e);let _e,g;if(h==="NDHWC")g="channelsLast",_e=[b,_,j,o[4],o[4]];else if(h==="NCDHW")g="channelsFirst",_e=[b,_,j,o[1],o[1]];else throw new Error(`Unknown dataFormat ${h}`);return computeConv3DInfo(o,_e,s,i,a,!1,g,d)}function computeConv2DInfo(o,e,s,i,a,d,h=!1,b="channelsLast"){let[_,j,_e,g]=[-1,-1,-1,-1];if(b==="channelsLast")[_,j,_e,g]=o;else if(b==="channelsFirst")[_,g,j,_e]=o;else throw new Error(`Unknown dataFormat ${b}`);const[c,$,,et]=e,[tt,nt]=parseTupleParam(s),[rt,ot]=parseTupleParam(i),st=getEffectiveFilterSize(c,rt),it=getEffectiveFilterSize($,ot),{padInfo:at,outHeight:lt,outWidth:ut}=getPadAndOutInfo(a,j,_e,tt,nt,st,it,d,b),ct=h?et*g:et;let pt;return b==="channelsFirst"?pt=[_,ct,lt,ut]:b==="channelsLast"&&(pt=[_,lt,ut,ct]),{batchSize:_,dataFormat:b,inHeight:j,inWidth:_e,inChannels:g,outHeight:lt,outWidth:ut,outChannels:ct,padInfo:at,strideHeight:tt,strideWidth:nt,filterHeight:c,filterWidth:$,effectiveFilterHeight:st,effectiveFilterWidth:it,dilationHeight:rt,dilationWidth:ot,inShape:o,outShape:pt,filterShape:e}}function computeConv3DInfo(o,e,s,i,a,d=!1,h="channelsLast",b){let[_,j,_e,g,c]=[-1,-1,-1,-1,-1];if(h==="channelsLast")[_,j,_e,g,c]=o;else if(h==="channelsFirst")[_,c,j,_e,g]=o;else throw new Error(`Unknown dataFormat ${h}`);const[$,et,tt,,nt]=e,[rt,ot,st]=parse3TupleParam(s),[it,at,lt]=parse3TupleParam(i),ut=getEffectiveFilterSize($,it),ct=getEffectiveFilterSize(et,at),pt=getEffectiveFilterSize(tt,lt),{padInfo:ht,outDepth:yt,outHeight:xt,outWidth:ft}=get3DPadAndOutInfo(a,j,_e,g,rt,ot,st,ut,ct,pt,b),wt=d?nt*c:nt;let dt;return h==="channelsFirst"?dt=[_,wt,yt,xt,ft]:h==="channelsLast"&&(dt=[_,yt,xt,ft,wt]),{batchSize:_,dataFormat:h,inDepth:j,inHeight:_e,inWidth:g,inChannels:c,outDepth:yt,outHeight:xt,outWidth:ft,outChannels:wt,padInfo:ht,strideDepth:rt,strideHeight:ot,strideWidth:st,filterDepth:$,filterHeight:et,filterWidth:tt,effectiveFilterDepth:ut,effectiveFilterHeight:ct,effectiveFilterWidth:pt,dilationDepth:it,dilationHeight:at,dilationWidth:lt,inShape:o,outShape:dt,filterShape:e}}function computeOutputShape2D(o,e,s,i,a){i==null&&(i=computeDefaultPad(o,e,s));const d=o[0],h=o[1],b=round$3((d-e+2*i)/s+1,a),_=round$3((h-e+2*i)/s+1,a);return[b,_]}function computeOutputShape4D(o,e,s,i,a,d){a==null&&(a=computeDefaultPad(o,e[0],i[0]));const h=[0,0,0,s];for(let b=0;b<3;b++)o[b]+2*a>=e[b]&&(h[b]=round$3((o[b]-e[b]+2*a)/i[b]+1,d));return h}function computeDefaultPad(o,e,s,i=1){const a=getEffectiveFilterSize(e,i);return Math.floor((o[0]*(s-1)-s+a)/2)}function parseTupleParam(o){return typeof o=="number"?[o,o,o]:o.length===2?[o[0],o[1],1]:o}function parse3TupleParam(o){return typeof o=="number"?[o,o,o]:o}function getEffectiveFilterSize(o,e){return e<=1?o:o+(o-1)*(e-1)}function getPadAndOutInfo(o,e,s,i,a,d,h,b,_){let j,_e,g;if(typeof o=="number"){j={top:o,bottom:o,left:o,right:o,type:o===0?"VALID":"NUMBER"};const $=computeOutputShape2D([e,s],d,i,o,b);_e=$[0],g=$[1]}else if(o==="same"){_e=Math.ceil(e/i),g=Math.ceil(s/a);const c=Math.max(0,(_e-1)*i+d-e),$=Math.max(0,(g-1)*a+h-s),et=Math.floor(c/2),tt=c-et,nt=Math.floor($/2),rt=$-nt;j={top:et,bottom:tt,left:nt,right:rt,type:"SAME"}}else if(o==="valid")j={top:0,bottom:0,left:0,right:0,type:"VALID"},_e=Math.ceil((e-d+1)/i),g=Math.ceil((s-h+1)/a);else if(typeof o=="object"){const c=_==="channelsLast"?o[1][0]:o[2][0],$=_==="channelsLast"?o[1][1]:o[2][1],et=_==="channelsLast"?o[2][0]:o[3][0],tt=_==="channelsLast"?o[2][1]:o[3][1];j={top:c,bottom:$,left:et,right:tt,type:c===0&&$===0&&et===0&&tt===0?"VALID":"EXPLICIT"},_e=round$3((e-d+c+$)/i+1,b),g=round$3((s-h+et+tt)/a+1,b)}else throw Error(`Unknown padding parameter: ${o}`);return{padInfo:j,outHeight:_e,outWidth:g}}function get3DPadAndOutInfo(o,e,s,i,a,d,h,b,_,j,_e){let g,c,$,et;if(o==="valid"&&(o=0),typeof o=="number"){g={top:o,bottom:o,left:o,right:o,front:o,back:o,type:o===0?"VALID":"NUMBER"};const nt=computeOutputShape4D([e,s,i,1],[b,_,j],1,[a,d,h],o,_e);c=nt[0],$=nt[1],et=nt[2]}else if(o==="same"){c=Math.ceil(e/a),$=Math.ceil(s/d),et=Math.ceil(i/h);const tt=(c-1)*a+b-e,nt=($-1)*d+_-s,rt=(et-1)*h+j-i,ot=Math.floor(tt/2),st=tt-ot,it=Math.floor(nt/2),at=nt-it,lt=Math.floor(rt/2),ut=rt-lt;g={top:it,bottom:at,left:lt,right:ut,front:ot,back:st,type:"SAME"}}else throw Error(`Unknown padding parameter: ${o}`);return{padInfo:g,outDepth:c,outHeight:$,outWidth:et}}function round$3(o,e){if(!e)return Math.trunc(o);switch(e){case"round":return Math.round(o);case"ceil":return Math.ceil(o);case"floor":return Math.floor(o);default:throw new Error(`Unknown roundingMode ${e}`)}}function tupleValuesAreOne(o){const[e,s,i]=parseTupleParam(o);return e===1&&s===1&&i===1}function eitherStridesOrDilationsAreOne(o,e){return tupleValuesAreOne(o)||tupleValuesAreOne(e)}function stridesOrDilationsArePositive(o){return parseTupleParam(o).every(e=>e>0)}function convertConv2DDataFormat(o){if(o==="NHWC")return"channelsLast";if(o==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${o}`)}function checkPadOnDimRoundingMode(o,e,s){if(s!=null){if(typeof e=="string")throw Error(`Error in ${o}: pad must be an integer when using dimRoundingMode ${s} but got pad ${e}.`);if(typeof e=="number")assert$1(isInt(e),()=>`Error in ${o}: pad must be an integer when using dimRoundingMode ${s} but got pad ${e}.`);else if(typeof e=="object")e.forEach(i=>{i.forEach(a=>{assert$1(isInt(a),()=>`Error in ${o}: pad must be an integer when using dimRoundingMode ${s} but got pad ${a}.`)})});else throw Error(`Error in ${o}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape_(o,e){const i={x:convertToTensor(o,"x","reshape","string_or_numeric")},a={shape:e};return ENGINE.runKernel(Reshape$1,i,a)}const reshape$2=op({reshape_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool_(o,e,s,i,a){const d=convertToTensor(o,"x","avgPool","float32"),h=1;assert$1(eitherStridesOrDilationsAreOne(s,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${h}'`);let b=d,_=!1;d.rank===3&&(_=!0,b=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1(b.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${b.rank}.`),checkPadOnDimRoundingMode("avgPool",i,a);const j={x:b},_e={filterSize:e,strides:s,pad:i,dimRoundingMode:a};let g=ENGINE.runKernel(AvgPool,j,_e);return g=cast$3(g,d.dtype),_?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const avgPool$2=op({avgPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3d_(o,e,s,i,a,d="NDHWC"){const h=convertToTensor(o,"x","avgPool3d","float32");let b=h,_=!1;h.rank===4&&(_=!0,b=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),assert$1(b.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),assert$1(d==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),assert$1(typeof s=="number"&&s>0||Array.isArray(s)&&s[0]>0&&s[1]>0&&s[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${s}'`),checkPadOnDimRoundingMode("avgPool3d",i,a);const j={x:b},_e={filterSize:e,strides:s,pad:i,dimRoundingMode:a,dataFormat:d};let g=ENGINE.runKernel(AvgPool3D,j,_e);return g=cast$3(g,b.dtype),_?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const avgPool3d=op({avgPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat_(o,e=0){assert$1(o.length>=1,()=>"Pass at least one tensor to concat");const s=convertToTensorArray(o,"tensors","concat","string_or_numeric");if(s[0].dtype==="complex64"&&s.forEach(d=>{if(d.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${d.dtype}. `)}),s.length===1)return clone(s[0]);const i=s,a={axis:e};return ENGINE.runKernel(Concat,i,a)}const concat$2=op({concat_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function matMul_(o,e,s=!1,i=!1){let a=convertToTensor(o,"a","matMul"),d=convertToTensor(e,"b","matMul");[a,d]=makeTypesMatch(a,d);const h={a,b:d},b={transposeA:s,transposeB:i};return ENGINE.runKernel(BatchMatMul,h,b)}const matMul$1=op({matMul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoid_(o){const s={x:convertToTensor(o,"x","sigmoid","float32")};return ENGINE.runKernel(Sigmoid$1,s)}const sigmoid$2=op({sigmoid_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice_(o,e,s){const i=convertToTensor(o,"x","slice","string_or_numeric");if(i.rank===0)throw new Error("Slicing scalar is not possible");const a={x:i},d={begin:e,size:s};return ENGINE.runKernel(Slice,a,d)}const slice$2=op({slice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tanh_(o){const s={x:convertToTensor(o,"x","tanh","float32")};return ENGINE.runKernel(Tanh$1,s)}const tanh$2=op({tanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND_(o,e,s){const i=convertToTensor(o,"x","batchToSpaceND"),a=e.reduce((b,_)=>b*_);assert$1(i.rank>=1+e.length,()=>`input rank is ${i.rank} but should be > than blockShape.length ${e.length}`),assert$1(s.length===e.length,()=>`crops.length is ${s.length} but should be equal to blockShape.length  ${e.length}`),assert$1(i.shape[0]%a===0,()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${a}`);const d={x:i},h={blockShape:e,crops:s};return ENGINE.runKernel(BatchToSpaceND,d,h)}const batchToSpaceND$2=op({batchToSpaceND_});function xAs4D(o){let e;return o.rank===0||o.rank===1?e=reshape$2(o,[1,1,1,o.size]):o.rank===2?e=reshape$2(o,[1,1,o.shape[0],o.shape[1]]):o.rank===3?e=reshape$2(o,[1,o.shape[0],o.shape[1],o.shape[2]]):e=o,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm_(o,e,s,i,a,d){d==null&&(d=.001);const h=convertToTensor(o,"x","batchNorm"),b=convertToTensor(e,"mean","batchNorm"),_=convertToTensor(s,"variance","batchNorm");let j;a!=null&&(j=convertToTensor(a,"scale","batchNorm"));let _e;i!=null&&(_e=convertToTensor(i,"offset","batchNorm")),assert$1(b.rank===_.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(_e==null||b.rank===_e.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(j==null||b.rank===j.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const c={x:xAs4D(h),scale:j,offset:_e,mean:b,variance:_},$={varianceEpsilon:d},et=ENGINE.runKernel(FusedBatchNorm,c,$);return reshape$2(et,h.shape)}const batchNorm$2=op({batchNorm_});function batchNorm2d_(o,e,s,i,a,d){const h=convertToTensor(o,"x","batchNorm"),b=convertToTensor(e,"mean","batchNorm"),_=convertToTensor(s,"variance","batchNorm");let j;a!=null&&(j=convertToTensor(a,"scale","batchNorm"));let _e;return i!=null&&(_e=convertToTensor(i,"offset","batchNorm")),assert$1(h.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${h.rank}.`),assert$1(b.rank===2||b.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${b.rank}.`),assert$1(_.rank===2||_.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${_.rank}.`),j!=null&&assert$1(j.rank===2||j.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===2||_e.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(h,b,_,_e,j,d)}const batchNorm2d=op({batchNorm2d_});function batchNorm3d_(o,e,s,i,a,d){const h=convertToTensor(o,"x","batchNorm"),b=convertToTensor(e,"mean","batchNorm"),_=convertToTensor(s,"variance","batchNorm");let j;a!=null&&(j=convertToTensor(a,"scale","batchNorm"));let _e;return i!=null&&(_e=convertToTensor(i,"offset","batchNorm")),assert$1(h.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${h.rank}.`),assert$1(b.rank===3||b.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${b.rank}.`),assert$1(_.rank===3||_.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${_.rank}.`),j!=null&&assert$1(j.rank===3||j.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===3||_e.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(h,b,_,_e,j,d)}const batchNorm3d=op({batchNorm3d_});function batchNorm4d_(o,e,s,i,a,d){const h=convertToTensor(o,"x","batchNorm"),b=convertToTensor(e,"mean","batchNorm"),_=convertToTensor(s,"variance","batchNorm");let j;a!=null&&(j=convertToTensor(a,"scale","batchNorm"));let _e;return i!=null&&(_e=convertToTensor(i,"offset","batchNorm")),assert$1(h.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${h.rank}.`),assert$1(b.rank===4||b.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${b.rank}.`),assert$1(_.rank===4||_.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${_.rank}.`),j!=null&&assert$1(j.rank===4||j.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===4||_e.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${_e.rank}.`),batchNorm$2(h,b,_,_e,j,d)}const batchNorm4d=op({batchNorm4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount_(o,e,s){const i=convertToTensor(o,"x","bincount"),a=convertToTensor(e,"weights","bincount");assert$1(i.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`),assert$1(s>=0,()=>`size must be non-negative, but got ${s}.`),assert$1(a.size===i.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${a.shape}.`);const d={x:i,weights:a},h={size:s};return ENGINE.runKernel(Bincount,d,h)}const bincount$2=op({bincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastTo_(o,e){let s=convertToTensor(o,"broadcastTo","x");const i=s.shape;if(assertNonNegativeIntegerDimensions(e),e.length<s.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${s.rank}.`);if(e.length>s.rank){const j=s.shape.slice();for(;j.length<e.length;)j.unshift(1);s=reshape$2(s,j)}const a=s.shape,d=Array.from(e);for(let j=e.length-1;j>=0;j--)if(a[j]===e[j])d[j]=1;else if(s.shape[j]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${e}].`);if(d.map((j,_e)=>j>1?_e:-1).filter(j=>j>=0).length===0)return clone(s);const b={x:s},_={reps:d};return ENGINE.runKernel(Tile,b,_)}const broadcastTo=op({broadcastTo_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ceil_(o){const s={x:convertToTensor(o,"x","ceil","float32")};return ENGINE.runKernel(Ceil,s)}const ceil$2=op({ceil_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$2(o,e,s){assertNonNegativeIntegerDimensions(o),s=s||inferDtype(e);const i={shape:o,value:e,dtype:s};return ENGINE.runKernel(Fill,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue_(o,e,s){const i=convertToTensor(o,"x","clipByValue");if(assert$1(e<=s,()=>`Error in clip: min (${e}) must be less than or equal to max (${s}).`),e===s)return fill$2(i.shape,e,i.dtype);const a={x:i},d={clipValueMin:e,clipValueMax:s};return ENGINE.runKernel(ClipByValue,a,d)}const clipByValue$2=op({clipByValue_});function concat1d_(o){return concat$2(o,0)}const concat1d=op({concat1d_});function concat2d_(o,e){return concat$2(o,e)}const concat2d=op({concat2d_});function concat3d_(o,e){return concat$2(o,e)}const concat3d=op({concat3d_});function concat4d_(o,e){return concat$2(o,e)}const concat4d=op({concat4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d_(o,e,s,i,a="NHWC",d=[1,1],h){const b=convertToTensor(o,"x","conv2d","float32"),_=convertToTensor(e,"filter","conv2d","float32");let j=b,_e=!1;b.rank===3&&(_e=!0,j=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2]])),assert$1(j.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${j.rank}.`),assert$1(_.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${_.rank}.`),checkPadOnDimRoundingMode("conv2d",i,h);const g=a==="NHWC"?j.shape[3]:j.shape[1];assert$1(g===_.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${_.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(s,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(s),()=>"Error in conv2D: Strides should be larger than 0.");const c={x:j,filter:_},$={strides:s,pad:i,dataFormat:a,dilations:d,dimRoundingMode:h},et=ENGINE.runKernel(Conv2D$1,c,$);return _e?reshape$2(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const conv2d$2=op({conv2d_});function conv1d_(o,e,s,i,a="NWC",d=1,h){const b=convertToTensor(o,"x","conv1d"),_=convertToTensor(e,"filter","conv1d");let j=b,_e=!1;b.rank===2&&(_e=!0,j=reshape$2(b,[1,b.shape[0],b.shape[1]])),assert$1(j.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${j.rank}.`),assert$1(_.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${_.rank}.`),checkPadOnDimRoundingMode("conv1d",i,h),assert$1(j.shape[2]===_.shape[1],()=>`Error in conv1d: depth of input (${j.shape[2]}) must match input depth for filter ${_.shape[1]}.`),assert$1(eitherStridesOrDilationsAreOne(s,d),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${s} and dilation '${d}'`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv1D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(s),()=>"Error in conv1D: Stride should be larger than 0."),assert$1(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const g=reshape$2(_,[1,_.shape[0],_.shape[1],_.shape[2]]),c=reshape$2(j,[j.shape[0],1,j.shape[1],j.shape[2]]),nt=conv2d$2(c,g,[1,s],i,"NHWC",[1,d],h);return _e?reshape$2(nt,[nt.shape[2],nt.shape[3]]):reshape$2(nt,[nt.shape[0],nt.shape[2],nt.shape[3]])}const conv1d=op({conv1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput_(o,e,s,i,a,d="NHWC",h){assert$1(o.length===e.rank,()=>`Length of inShape (${o.length}) and rank of dy (${e.rank}) must match`);let b=o,_=e,j=!1;e.rank===3&&(j=!0,_=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]),b=[1,o[0],o[1],o[2]]),assert$1(b.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${b.length}.`),assert$1(_.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${_.rank}`),assert$1(s.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${s.rank}`);const _e=d==="NHWC"?b[3]:b[1],g=d==="NHWC"?_.shape[3]:_.shape[1];assert$1(_e===s.shape[2],()=>`Error in conv2dDerInput: depth of input (${_e}) must match input depth for filter ${s.shape[2]}.`),assert$1(g===s.shape[3],()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${s.shape[3]}.`),checkPadOnDimRoundingMode("conv2dDerInput",a,h);const c={dy:_,filter:s},$={strides:i,pad:a,dataFormat:d,dimRoundingMode:h,inputShape:b},et=ENGINE.runKernel(Conv2DBackpropInput,c,$);return j?reshape$2(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const conv2DBackpropInput$2=op({conv2DBackpropInput_});function conv2dTranspose_(o,e,s,i,a,d){const h=convertToTensor(o,"x","conv2dTranspose"),b=convertToTensor(e,"filter","conv2dTranspose");return conv2DBackpropInput$2(s,h,b,i,a,"NHWC",d)}const conv2dTranspose=op({conv2dTranspose_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3d_(o,e,s,i,a="NDHWC",d=[1,1,1]){const h=convertToTensor(o,"x","conv3d"),b=convertToTensor(e,"filter","conv3d");let _=h,j=!1;h.rank===4&&(j=!0,_=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),assert$1(_.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${_.rank}.`),assert$1(b.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${b.rank}.`),assert$1(_.shape[4]===b.shape[3],()=>`Error in conv3d: depth of input (${_.shape[4]}) must match input depth for filter ${b.shape[3]}.`),assert$1(eitherStridesOrDilationsAreOne(s,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`),assert$1(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv3D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(s),()=>"Error in conv3D: Strides should be larger than 0.");const _e={x:_,filter:b},g={strides:s,pad:i,dataFormat:a,dilations:d},c=ENGINE.runKernel(Conv3D$1,_e,g);return j?reshape$2(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}const conv3d=op({conv3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput_(o,e,s,i,a){assert$1(o.length===e.rank,()=>`Length of inShape (${o.length}) and rank of dy (${e.rank}) must match`);let d=o,h=e,b=!1;e.rank===4&&(b=!0,h=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),d=[1,o[0],o[1],o[2],o[3]]);const _=d[4],j=h.shape[4];assert$1(d.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${d.length}.`),assert$1(h.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${h.rank}`),assert$1(s.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${s.rank}`),assert$1(_===s.shape[3],()=>`Error in conv3dDerInput: depth of input (${_}) must match input depth for filter ${s.shape[3]}.`),assert$1(j===s.shape[4],()=>`Error in conv3dDerInput: depth of output (${j}) must match output depth for filter ${s.shape[4]}.`);const _e={dy:h,filter:s},g={pad:a,strides:i,inputShape:d},c=ENGINE.runKernel(Conv3DBackpropInputV2,_e,g);return b?reshape$2(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}const conv3DBackpropInput$1=op({conv3DBackpropInput_});function conv3dTranspose_(o,e,s,i,a){const d=convertToTensor(o,"x","conv3dTranspose"),h=convertToTensor(e,"filter","conv3dTranspose");return conv3DBackpropInput$1(s,d,h,i,a)}const conv3dTranspose=op({conv3dTranspose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cos_(o){const s={x:convertToTensor(o,"x","cos","float32")};return ENGINE.runKernel(Cos,s)}const cos$2=op({cos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cosh_(o){const s={x:convertToTensor(o,"x","cosh","float32")};return ENGINE.runKernel(Cosh,s)}const cosh$2=op({cosh_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod_(o,e=0,s=!1,i=!1){const d={x:convertToTensor(o,"x","cumprod")},h={axis:e,exclusive:s,reverse:i};return ENGINE.runKernel(Cumprod,d,h)}const cumprod$2=op({cumprod_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum_(o,e=0,s=!1,i=!1){const d={x:convertToTensor(o,"x","cumsum")},h={axis:e,exclusive:s,reverse:i};return ENGINE.runKernel(Cumsum,d,h)}const cumsum$2=op({cumsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount_(o,e,s,i=!1){const a=convertToTensor(o,"x","denseBincount"),d=convertToTensor(e,"weights","denseBincount");assert$1(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),assert$1(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),assert$1(s>=0,()=>`size must be non-negative, but got ${s}.`),assert$1(d.size===a.size||d.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${d.shape}.`);const h={x:a,weights:d},b={size:s,binaryOutput:i};return ENGINE.runKernel(DenseBincount,h,b)}const denseBincount$2=op({denseBincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace_(o,e,s="NHWC"){const i=convertToTensor(o,"x","depthToSpace","float32"),a=s==="NHWC"?i.shape[1]:i.shape[2],d=s==="NHWC"?i.shape[2]:i.shape[3],h=s==="NHWC"?i.shape[3]:i.shape[1];assert$1(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),assert$1(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${e}  for depthToSpace with input shape
    ${i.shape}`),assert$1(d*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${d} and ${e} for depthToSpace with input shape
        ${i.shape}`),assert$1(h%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${h} for depthToSpace with input shape ${i.shape}`);const b={x:i},_={blockSize:e,dataFormat:s};return ENGINE.runKernel(DepthToSpace,b,_)}const depthToSpace$2=op({depthToSpace_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2d_(o,e,s,i,a="NHWC",d=[1,1],h){const b=convertToTensor(o,"x","depthwiseConv2d","float32"),_=convertToTensor(e,"filter","depthwiseConv2d","float32");let j=b,_e=!1;b.rank===3&&(_e=!0,j=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2]])),assert$1(j.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${j.rank}.`),assert$1(_.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${_.rank}.`);const g=a==="NHWC"?j.shape[3]:j.shape[1];assert$1(g===_.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${g}) must match the inChannels dimension in filter ${_.shape[2]}.`),checkPadOnDimRoundingMode("depthwiseConv2d",i,h);const c={x:j,filter:_},$={strides:s,pad:i,dataFormat:a,dilations:d,dimRoundingMode:h},et=ENGINE.runKernel(DepthwiseConv2dNative,c,$);return _e?reshape$2(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const depthwiseConv2d$1=op({depthwiseConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2d_(o,e,s,i,a=[1,1],d="NHWC"){const h=convertToTensor(o,"x","dilation2d"),b=convertToTensor(e,"filter","dilation2d");assert$1(h.rank===3||h.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`),assert$1(b.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${b.rank}.`),assert$1(d==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${d}`);let _=h,j=!1;h.rank===3&&(_=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2]]),j=!0),assert$1(_.shape[3]===b.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${_.shape[3]} vs ${b.shape[2]}`);const _e={x:_,filter:b},g={strides:s,pad:i,dilations:a},c=ENGINE.runKernel(Dilation2D,_e,g);return j?reshape$2(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const dilation2d=op({dilation2d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getBroadcastDims$1(o,e){const s=o.length,i=[];for(let a=0;a<s;a++){const d=s-1-a,h=o[d]||1;(e[e.length-1-a]||1)>1&&h===1&&i.unshift(d)}return i}function getReductionAxes(o,e){const s=[];for(let i=0;i<e.length;i++){const a=o[o.length-i-1],d=e.length-i-1,h=e[d];(a==null||a===1&&h>1)&&s.unshift(d)}return s}function assertAndGetBroadcastShape(o,e){const s=Math.max(o.length,e.length),i=new Array(s);for(let a=0;a<s;a++){let d=o[o.length-a-1];d==null&&(d=1);let h=e[e.length-a-1];if(h==null&&(h=1),d===1)i[s-a-1]=h;else if(h===1)i[s-a-1]=d;else if(d!==h){const b=`Operands could not be broadcast together with shapes ${o} and ${e}.`;throw Error(b)}else i[s-a-1]=d}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function equal_(o,e){let s=convertToTensor(o,"a","equal","string_or_numeric"),i=convertToTensor(e,"b","equal","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(Equal,a)}const equal$2=op({equal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function where_(o,e,s){const i=convertToTensor(e,"a","where"),a=convertToTensor(s,"b","where"),d=convertToTensor(o,"condition","where","bool"),h=assertAndGetBroadcastShape(assertAndGetBroadcastShape(d.shape,i.shape),a.shape),b=broadcastTo(d,h),_=broadcastTo(i,h),j=broadcastTo(a,h),_e={condition:b,t:_,e:j};return ENGINE.runKernel(Select,_e)}const where=op({where_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike_(o){const s={x:convertToTensor(o,"x","zerosLike")};return ENGINE.runKernel(ZerosLike,s)}const zerosLike$2=op({zerosLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function divNoNan_(o,e){let s=convertToTensor(o,"a","div"),i=convertToTensor(e,"b","div");[s,i]=makeTypesMatch(s,i);const a=div$1(s,i),d=zerosLike$2(a),h=equal$2(i,d);return where(h,d,a)}const divNoNan=op({divNoNan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot_(o,e){const s=convertToTensor(o,"t1","dot"),i=convertToTensor(e,"t2","dot");assert$1((s.rank===1||s.rank===2)&&(i.rank===1||i.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${s.rank} and ${i.rank}.`);const a=s.rank===1?s.size:s.shape[1],d=i.rank===1?i.size:i.shape[0];if(assert$1(a===d,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${d}.`),s.rank===1&&i.rank===1){const h=reshape$2(s,[1,-1]),b=reshape$2(i,[-1,1]),_=matMul$1(h,b);return reshape$2(_,[])}else if(s.rank===1&&i.rank===2){const h=reshape$2(s,[1,-1]),b=reshape$2(i,[i.shape[0],i.shape[1]]),_=matMul$1(h,b);return reshape$2(_,[_.size])}else if(s.rank===2&&i.rank===1){const h=reshape$2(i,[-1,1]),b=matMul$1(s,h);return reshape$2(b,[b.size])}else{const h=reshape$2(i,[i.shape[0],i.shape[1]]);return matMul$1(s,h)}}const dot$1=op({dot_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum_(o,...e){const s=e.map((a,d)=>convertToTensor(a,`tensors${d}`,"einsum")),i={equation:o};return ENGINE.runKernel(Einsum,s,i)}const einsum$2=op({einsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elu_(o){const s={x:convertToTensor(o,"x","elu","float32")};return ENGINE.runKernel(Elu$1,s)}const elu$3=op({elu_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function erf_(o){let e=convertToTensor(o,"x","erf");assert$1(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=cast$3(e,"float32"));const s={x:e};return ENGINE.runKernel(Erf,s)}const erf$2=op({erf_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axesAreInnerMostDims(o,e){for(let s=0;s<o.length;++s)if(o[o.length-s-1]!==e-1-s)return!1;return!0}function combineLocations(o,e,s){const i=o.length+e.length,a=[];let d=0,h=0;for(let b=0;b<i;b++)s.indexOf(b)===-1?a.push(o[d++]):a.push(e[h++]);return a}function computeOutAndReduceShapes(o,e){const s=[],i=o.length;for(let d=0;d<i;d++)e.indexOf(d)===-1&&s.push(o[d]);const a=e.map(d=>o[d]);return[s,a]}function expandShapeToKeepDim(o,e){const s=e.map(i=>1);return combineLocations(o,s,e)}function assertAxesAreInnerMostDims(o,e,s){assert$1(axesAreInnerMostDims(e,s),()=>`${o} supports only inner-most axes for now. Got axes ${e} and rank-${s} input.`)}function getAxesPermutation(o,e){if(axesAreInnerMostDims(o,e))return null;const s=[];for(let i=0;i<e;++i)o.indexOf(i)===-1&&s.push(i);return o.forEach(i=>s.push(i)),s}function getUndoAxesPermutation(o){return o.map((e,s)=>[s,e]).sort((e,s)=>e[1]-s[1]).map(e=>e[0])}function getInnerMostAxes(o,e){const s=[];for(let i=e-o;i<e;++i)s.push(i);return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max_(o,e=null,s=!1){const a={x:convertToTensor(o,"x","max")},d={reductionIndices:e,keepDims:s};return ENGINE.runKernel(Max,a,d)}const max$3=op({max_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min_(o,e=null,s=!1){const a={x:convertToTensor(o,"x","min")},d={axis:e,keepDims:s};return ENGINE.runKernel(Min,a,d)}const min$3=op({min_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pow_(o,e){let s=convertToTensor(o,"base","pow"),i=convertToTensor(e,"exp","pow");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Pow,a)}const pow$2=op({pow_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scalar(o,e){if((isTypedArray(o)&&e!=="string"||Array.isArray(o))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&isTypedArray(o)&&!(o instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return makeTensor(o,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqrt_(o){const s={x:convertToTensor(o,"x","sqrt","float32")};return ENGINE.runKernel(Sqrt,s)}const sqrt$2=op({sqrt_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function square_(o){const e=convertToTensor(o,"x","square"),s={};return ENGINE.runKernel("Square",{x:e},s)}const square$2=op({square_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum_(o,e=null,s=!1){let i=convertToTensor(o,"x","sum");i.dtype==="bool"&&(i=cast$3(i,"int32"));const a={x:i},d={axis:e,keepDims:s};return ENGINE.runKernel(Sum,a,d)}const sum$2=op({sum_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function norm_(o,e="euclidean",s=null,i=!1){o=convertToTensor(o,"x","norm");const a=normImpl(o,e,s);let d=a.shape;if(i){const h=parseAxisParam(s,o.shape);d=expandShapeToKeepDim(a.shape,h)}return reshape$2(a,d)}function normImpl(o,e,s=null){if(o.rank===0)return abs$2(o);if(o.rank!==1&&s===null)return normImpl(reshape$2(o,[-1]),e,s);if(o.rank===1||typeof s=="number"||Array.isArray(s)&&s.length===1){if(e===1)return sum$2(abs$2(o),s);if(e===1/0)return max$3(abs$2(o),s);if(e===-1/0)return min$3(abs$2(o),s);if(e==="euclidean"||e===2)return sqrt$2(sum$2(pow$2(abs$2(o),scalar(2,"int32")),s));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(s)&&s.length===2){if(e===1)return max$3(sum$2(abs$2(o),s[0]),s[1]-1);if(e===1/0)return max$3(sum$2(abs$2(o),s[1]),s[0]);if(e===-1/0)return min$3(sum$2(abs$2(o),s[1]),s[0]);if(e==="fro"||e==="euclidean")return sqrt$2(sum$2(square$2(o),s));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${s}`)}const norm=op({norm_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function euclideanNorm_(o,e=null,s=!1){return norm(o,"euclidean",e,s)}const euclideanNorm=op({euclideanNorm_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exp_(o){const s={x:convertToTensor(o,"x","exp")};return ENGINE.runKernel(Exp,s)}const exp$2=op({exp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims_(o,e=0){const s=convertToTensor(o,"x","expandDims","string_or_numeric");assert$1(e<=s.rank,()=>"Axis must be <= rank of the tensor");const i={input:s},a={dim:e};return ENGINE.runKernel(ExpandDims,i,a)}const expandDims$3=op({expandDims_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expm1_(o){const s={x:convertToTensor(o,"x","expm1")};return ENGINE.runKernel(Expm1,s)}const expm1$2=op({expm1_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile_(o,e){const s=convertToTensor(o,"x","tile","string_or_numeric");assert$1(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of reps ${e}.`);const i={x:s},a={reps:e};return ENGINE.runKernel(Tile,i,a)}const tile$3=op({tile_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eye_(o,e,s,i="float32"){e==null&&(e=o);const a=buffer([o,e],i),d=o<=e?o:e;for(let b=0;b<d;++b)a.set(1,b,b);const h=reshape$2(a.toTensor(),[o,e]);if(s==null)return h;if(s.length===1)return tile$3(expandDims$3(h,0),[s[0],1,1]);if(s.length===2)return tile$3(expandDims$3(expandDims$3(h,0),0),[s[0],s[1],1,1]);if(s.length===3)return tile$3(expandDims$3(expandDims$3(expandDims$3(h,0),0),0),[s[0],s[1],s[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${s.length}D.`)}const eye=op({eye_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floor_(o){const s={x:convertToTensor(o,"x","floor","float32")};return ENGINE.runKernel(Floor,s)}const floor$2=op({floor_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gather_(o,e,s=0,i=0){const a=convertToTensor(o,"x","gather"),d=convertToTensor(e,"indices","gather","int32"),h={x:a,indices:d},b={axis:s,batchDims:i};return ENGINE.runKernel(GatherV2,h,b)}const gather$1=op({gather_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greater_(o,e){let s=convertToTensor(o,"a","greater","string_or_numeric"),i=convertToTensor(e,"b","greater","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(Greater,a)}const greater$2=op({greater_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greaterEqual_(o,e){let s=convertToTensor(o,"a","greaterEqual","string_or_numeric"),i=convertToTensor(e,"b","greaterEqual","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(GreaterEqual,a)}const greaterEqual$2=op({greaterEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag_(o){const s={input:convertToTensor(o,"input","imag")};return ENGINE.runKernel(Imag,s)}const imag$2=op({imag_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isFinite_(o){const s={x:convertToTensor(o,"x","isFinite")};return ENGINE.runKernel(IsFinite,s)}const isFinite$3=op({isFinite_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isInf_(o){const s={x:convertToTensor(o,"x","isInf")};return ENGINE.runKernel(IsInf,s)}const isInf$2=op({isInf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isNaN_(o){const s={x:convertToTensor(o,"x","isNaN")};return ENGINE.runKernel(IsNan,s)}const isNaN$3=op({isNaN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu_(o,e=.2){const i={x:convertToTensor(o,"x","leakyRelu")},a={alpha:e};return ENGINE.runKernel(LeakyRelu,i,a)}const leakyRelu$2=op({leakyRelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function less_(o,e){let s=convertToTensor(o,"a","less","string_or_numeric"),i=convertToTensor(e,"b","less","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(Less,a)}const less$2=op({less_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lessEqual_(o,e){let s=convertToTensor(o,"a","lessEqual","string_or_numeric"),i=convertToTensor(e,"b","lessEqual","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(LessEqual,a)}const lessEqual$2=op({lessEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalization_(o,e=5,s=1,i=1,a=.5){const d=convertToTensor(o,"x","localResponseNormalization");assert$1(d.rank===4||d.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${d.rank}.`),assert$1(isInt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let h=d,b=!1;d.rank===3&&(b=!0,h=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const _={x:h},j={depthRadius:e,bias:s,alpha:i,beta:a},_e=ENGINE.runKernel(LRN,_,j);return b?reshape$2(_e,[_e.shape[1],_e.shape[2],_e.shape[3]]):_e}const localResponseNormalization=op({localResponseNormalization_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log_(o){const s={x:convertToTensor(o,"x","log","float32")};return ENGINE.runKernel(Log,s)}const log$2=op({log_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log1p_(o){const s={x:convertToTensor(o,"x","log1p")};return ENGINE.runKernel(Log1p,s)}const log1p$2=op({log1p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variableGrads(o,e){assert$1(isFunction(o),()=>"The f passed in variableGrads(f) must be a function"),assert$1(e==null||Array.isArray(e)&&e.every(j=>j instanceof Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const s=e!=null;if(!s){e=[];for(const j in ENGINE.registeredVariables)e.push(ENGINE.registeredVariables[j])}const i=s?e.filter(j=>!j.trainable):null,a=e.length;e=e.filter(j=>j.trainable),assert$1(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const d=!0,{value:h,grads:b}=ENGINE.gradients(o,e,null,d);assert$1(b.some(j=>j!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),assert$1(h.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${h.rank} tensor`);const _={};return e.forEach((j,_e)=>{b[_e]!=null&&(_[j.name]=b[_e])}),i!=null&&i.forEach(j=>_[j.name]=null),{value:h,grads:_}}function customGrad(o){return ENGINE.customGrad(o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function neg_(o){const s={x:convertToTensor(o,"x","neg")};return ENGINE.runKernel(Neg,s)}const neg$2=op({neg_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softplus_(o){const s={x:convertToTensor(o,"x","softplus")};return ENGINE.runKernel(Softplus$1,s)}const softplus$2=op({softplus_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSigmoid_(o){const e=convertToTensor(o,"x","logSigmoid");return customGrad(i=>({value:neg$2(softplus$2(neg$2(i))),gradFunc:h=>mul(h,sigmoid$2(neg$2(i)))}))(e)}const logSigmoid=op({logSigmoid_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sub_(o,e){let s=convertToTensor(o,"a","sub"),i=convertToTensor(e,"b","sub");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Sub,a)}const sub$2=op({sub_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSoftmax_(o,e=-1){const s=convertToTensor(o,"logits","logSoftmax");if(e===-1&&(e=s.rank-1),e!==s.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${s.rank} and axis was ${e}`);return customGrad((a,d)=>{const b=max$3(a,e,!0),_=sub$2(a,b),j=sub$2(cast$3(_,"float32"),log$2(sum$2(exp$2(_),e,!0)));return d([j]),{value:j,gradFunc:(g,c)=>{const[$]=c,et=!0,tt=exp$2($);return sub$2(g,mul(sum$2(g,e,et),tt))}}})(s)}const logSoftmax=op({logSoftmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSumExp_(o,e=null,s=!1){const i=convertToTensor(o,"x","logSumExp"),a=parseAxisParam(e,i.shape),d=max$3(i,a,!0),h=sub$2(i,d),b=exp$2(h),_=sum$2(b,a),j=log$2(_),_e=add$1(reshape$2(d,j.shape),j);if(s){const g=expandShapeToKeepDim(_e.shape,a);return reshape$2(_e,g)}return _e}const logSumExp=op({logSumExp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalAnd_(o,e){const s=convertToTensor(o,"a","logicalAnd","bool"),i=convertToTensor(e,"b","logicalAnd","bool");assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(LogicalAnd,a)}const logicalAnd$2=op({logicalAnd_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalNot_(o){const s={x:convertToTensor(o,"x","logicalNot","bool")};return ENGINE.runKernel(LogicalNot,s)}const logicalNot$2=op({logicalNot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalOr_(o,e){const s=convertToTensor(o,"a","logicalOr","bool"),i=convertToTensor(e,"b","logicalOr","bool");assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(LogicalOr,a)}const logicalOr$2=op({logicalOr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalXor_(o,e){const s=convertToTensor(o,"a","logicalXor","bool"),i=convertToTensor(e,"b","logicalXor","bool");return assertAndGetBroadcastShape(s.shape,i.shape),logicalAnd$2(logicalOr$2(o,e),logicalNot$2(logicalAnd$2(o,e)))}const logicalXor=op({logicalXor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool_(o,e,s,i,a){const d=convertToTensor(o,"x","maxPool"),h=1;let b=d,_=!1;d.rank===3&&(_=!0,b=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1(b.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${b.rank}.`),assert$1(eitherStridesOrDilationsAreOne(s,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${h}'`),checkPadOnDimRoundingMode("maxPool",i,a);const j={x:b},_e={filterSize:e,strides:s,pad:i,dimRoundingMode:a},g=ENGINE.runKernel(MaxPool,j,_e);return _?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const maxPool$2=op({maxPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d_(o,e=[1,1,1],s,i,a,d="NDHWC"){const h=convertToTensor(o,"x","maxPool3d");let b=h,_=!1;h.rank===4&&(_=!0,b=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),assert$1(b.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${b.rank}.`),assert$1(d==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),checkPadOnDimRoundingMode("maxPool3d",i,a);const j={x:b},_e={filterSize:e,strides:s,pad:i,dimRoundingMode:a,dataFormat:d},g=ENGINE.runKernel(MaxPool3D,j,_e);return _?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const maxPool3d$1=op({maxPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maximum_(o,e){let s=convertToTensor(o,"a","maximum"),i=convertToTensor(e,"b","maximum");[s,i]=makeTypesMatch(s,i),s.dtype==="bool"&&(s=cast$3(s,"int32"),i=cast$3(i,"int32")),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(Maximum$1,a)}const maximum$2=op({maximum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean_(o,e=null,s=!1){const a={x:convertToTensor(o,"x","mean")},d={axis:e,keepDims:s};return ENGINE.runKernel(Mean,a,d)}const mean$1=op({mean_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros$1(o,e="float32"){if(assertNonNegativeIntegerDimensions(o),e==="complex64"){const i=zeros$1(o,"float32"),a=zeros$1(o,"float32");return complex$2(i,a)}const s=makeZerosTypedArray(sizeFromShape(o),e);return ENGINE.makeTensor(s,o,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ones(o,e="float32"){if(assertNonNegativeIntegerDimensions(o),e==="complex64"){const i=ones(o,"float32"),a=zeros$1(o,"float32");return complex$2(i,a)}const s=makeOnesTypedArray(sizeFromShape(o),e);return ENGINE.makeTensor(s,o,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function minimum_(o,e){let s=convertToTensor(o,"a","minimum"),i=convertToTensor(e,"b","minimum");[s,i]=makeTypesMatch(s,i),s.dtype==="bool"&&(s=cast$3(s,"int32"),i=cast$3(i,"int32")),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(Minimum$1,a)}const minimum$2=op({minimum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad_(o,e,s){assert$1(s==="reflect"||s==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${s}.`);const i=convertToTensor(o,"x","mirrorPad");if(i.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");assert$1(e.length===i.rank,()=>`Padding doesn't match input. Must be ${i.rank}. Got ${e.length}.`);const a=s==="reflect"?1:0;for(let b=0;b<i.rank;b++)assert$1(e[b].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),assert$1(e[b][0]>=0&&e[b][0]<=i.shape[b]-a&&e[b][1]>=0&&e[b][1]<=i.shape[b]-a,()=>`Padding in dimension ${b} cannot be greater than or equal to ${i.shape[b]-a} or less than 0 for input of shape ${i.shape}`);const d={paddings:e,mode:s},h={x:i};return ENGINE.runKernel(MirrorPad,h,d)}const mirrorPad$1=op({mirrorPad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mod_(o,e){let s=convertToTensor(o,"a","mod"),i=convertToTensor(e,"b","mod");[s,i]=makeTypesMatch(s,i);const a={a:s,b:i};return ENGINE.runKernel(Mod,a)}const mod$2=op({mod_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moments_(o,e=null,s=!1){o=convertToTensor(o,"x","moments");const i=parseAxisParam(e,o.shape),a=mean$1(o,i,s);let d=a.shape;s||(d=expandShapeToKeepDim(a.shape,i));const h=square$2(sub$2(cast$3(o,"float32"),reshape$2(a,d))),b=mean$1(h,i,s);return{mean:a,variance:b}}const moments=op({moments_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqual_(o,e){let s=convertToTensor(o,"a","notEqual","string_or_numeric"),i=convertToTensor(e,"b","notEqual","string_or_numeric");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i};return ENGINE.runKernel(NotEqual,a)}const notEqual$2=op({notEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot_(o,e,s=1,i=0,a="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const h={indices:convertToTensor(o,"indices","oneHot","int32")},b={dtype:a,depth:e,onValue:s,offValue:i};return ENGINE.runKernel(OneHot,h,b)}const oneHot$2=op({oneHot_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike_(o){const s={x:convertToTensor(o,"x","onesLike")};return ENGINE.runKernel(OnesLike,s)}const onesLike$2=op({onesLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pad_(o,e,s=0){const i=convertToTensor(o,"x","pad");if(i.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:s},d={x:i};return ENGINE.runKernel(PadV2,d,a)}const pad=op({pad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND_(o,e,s){const i=convertToTensor(o,"x","spaceToBatchND");assert$1(i.rank>=1+e.length,()=>`input rank ${i.rank} should be > than [blockShape] ${e.length}`),assert$1(s.length===e.length,()=>`paddings.shape[0] ${s.length} must be equal to [blockShape] ${e.length}`),assert$1(i.shape.reduce((h,b,_)=>_>0&&_<=e.length?h&&(b+s[_-1][0]+s[_-1][1])%e[_-1]===0:h,!0),()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${s.toString()} must be divisible by blockShapes ${e.toString()}`);const a={x:i},d={blockShape:e,paddings:s};return ENGINE.runKernel(SpaceToBatchND,a,d)}const spaceToBatchND$2=op({spaceToBatchND_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool_(o,e,s,i,a,d,h){a==null&&(a=[1,1]),d==null&&(d=1),i===0&&(i="valid");const b=convertToTensor(o,"x","maxPool");let _=b,j=!1;b.rank===3&&(j=!0,_=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2]])),assert$1(eitherStridesOrDilationsAreOne(d,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${a}'`);const _e=computePool2DInfo(_.shape,e,d,a,i),g=[_e.dilationHeight,_e.dilationWidth];let c;i==="same"?c=withSpaceToBatchBasePaddings([_e.filterHeight,_e.filterWidth],g):c=[[0,0],[0,0]];const $=g[0]===1&&g[1]===1,[et,tt]=requiredSpaceToBatchPaddings([_e.inHeight,_e.inWidth],g,c),nt=$?i:"valid",rt=$?_:spaceToBatchND$2(_,g,et),st=(s==="avg"?()=>avgPool$2(rt,e,d,nt,h):()=>maxPool$2(rt,e,d,nt,h))(),it=$?st:batchToSpaceND$2(st,g,tt);return j?reshape$2(it,[it.shape[1],it.shape[2],it.shape[3]]):it}function requiredSpaceToBatchPaddings(o,e,s){const i=s.map(_e=>_e[0]),a=s.map(_e=>_e[1]),d=o.concat(i,a),h=e.map((_e,g)=>(_e-d[g]%_e)%_e),b=a.map((_e,g)=>_e+h[g]),_=e.map((_e,g)=>[i[g],b[g]]),j=e.map((_e,g)=>[0,h[g]]);return[_,j]}function withSpaceToBatchBasePaddings(o,e){const i=o.map((h,b)=>h+(h-1)*(e[b]-1)).map(h=>h-1),a=i.map(h=>Math.floor(h/2)),d=i.map((h,b)=>h-a[b]);return i.map((h,b)=>[a[b],d[b]])}const pool$1=op({pool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prelu_(o,e){const s=convertToTensor(o,"x","prelu"),i=convertToTensor(e,"alpha","prelu"),a={x:s,alpha:i};return ENGINE.runKernel(Prelu,a)}const prelu$2=op({prelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod_(o,e=null,s=!1){let i=convertToTensor(o,"x","prod");i.dtype==="bool"&&(i=cast$3(i,"int32"));const a={x:i},d={axis:e,keepDims:s};return ENGINE.runKernel(Prod,a,d)}const prod$2=op({prod_});var alea$1={exports:{}};alea$1.exports;(function(o){(function(e,s,i){function a(_){var j=this,_e=b();j.next=function(){var g=2091639*j.s0+j.c*23283064365386963e-26;return j.s0=j.s1,j.s1=j.s2,j.s2=g-(j.c=g|0)},j.c=1,j.s0=_e(" "),j.s1=_e(" "),j.s2=_e(" "),j.s0-=_e(_),j.s0<0&&(j.s0+=1),j.s1-=_e(_),j.s1<0&&(j.s1+=1),j.s2-=_e(_),j.s2<0&&(j.s2+=1),_e=null}function d(_,j){return j.c=_.c,j.s0=_.s0,j.s1=_.s1,j.s2=_.s2,j}function h(_,j){var _e=new a(_),g=j&&j.state,c=_e.next;return c.int32=function(){return _e.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,g&&(typeof g=="object"&&d(g,_e),c.state=function(){return d(_e,{})}),c}function b(){var _=4022871197,j=function(_e){_e=String(_e);for(var g=0;g<_e.length;g++){_+=_e.charCodeAt(g);var c=.02519603282416938*_;_=c>>>0,c-=_,c*=_,_=c>>>0,c-=_,_+=c*4294967296}return(_>>>0)*23283064365386963e-26};return j}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.alea=h})(commonjsGlobal,o,!1)})(alea$1);var aleaExports=alea$1.exports,xor128$1={exports:{}};xor128$1.exports;(function(o){(function(e,s,i){function a(b){var _=this,j="";_.x=0,_.y=0,_.z=0,_.w=0,_.next=function(){var g=_.x^_.x<<11;return _.x=_.y,_.y=_.z,_.z=_.w,_.w^=_.w>>>19^g^g>>>8},b===(b|0)?_.x=b:j+=b;for(var _e=0;_e<j.length+64;_e++)_.x^=j.charCodeAt(_e)|0,_.next()}function d(b,_){return _.x=b.x,_.y=b.y,_.z=b.z,_.w=b.w,_}function h(b,_){var j=new a(b),_e=_&&_.state,g=function(){return(j.next()>>>0)/4294967296};return g.double=function(){do var c=j.next()>>>11,$=(j.next()>>>0)/4294967296,et=(c+$)/(1<<21);while(et===0);return et},g.int32=j.next,g.quick=g,_e&&(typeof _e=="object"&&d(_e,j),g.state=function(){return d(j,{})}),g}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.xor128=h})(commonjsGlobal,o,!1)})(xor128$1);var xor128Exports=xor128$1.exports,xorwow$1={exports:{}};xorwow$1.exports;(function(o){(function(e,s,i){function a(b){var _=this,j="";_.next=function(){var g=_.x^_.x>>>2;return _.x=_.y,_.y=_.z,_.z=_.w,_.w=_.v,(_.d=_.d+362437|0)+(_.v=_.v^_.v<<4^(g^g<<1))|0},_.x=0,_.y=0,_.z=0,_.w=0,_.v=0,b===(b|0)?_.x=b:j+=b;for(var _e=0;_e<j.length+64;_e++)_.x^=j.charCodeAt(_e)|0,_e==j.length&&(_.d=_.x<<10^_.x>>>4),_.next()}function d(b,_){return _.x=b.x,_.y=b.y,_.z=b.z,_.w=b.w,_.v=b.v,_.d=b.d,_}function h(b,_){var j=new a(b),_e=_&&_.state,g=function(){return(j.next()>>>0)/4294967296};return g.double=function(){do var c=j.next()>>>11,$=(j.next()>>>0)/4294967296,et=(c+$)/(1<<21);while(et===0);return et},g.int32=j.next,g.quick=g,_e&&(typeof _e=="object"&&d(_e,j),g.state=function(){return d(j,{})}),g}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.xorwow=h})(commonjsGlobal,o,!1)})(xorwow$1);var xorwowExports=xorwow$1.exports,xorshift7$1={exports:{}};xorshift7$1.exports;(function(o){(function(e,s,i){function a(b){var _=this;_.next=function(){var _e=_.x,g=_.i,c,$;return c=_e[g],c^=c>>>7,$=c^c<<24,c=_e[g+1&7],$^=c^c>>>10,c=_e[g+3&7],$^=c^c>>>3,c=_e[g+4&7],$^=c^c<<7,c=_e[g+7&7],c=c^c<<13,$^=c^c<<9,_e[g]=$,_.i=g+1&7,$};function j(_e,g){var c,$=[];if(g===(g|0))$[0]=g;else for(g=""+g,c=0;c<g.length;++c)$[c&7]=$[c&7]<<15^g.charCodeAt(c)+$[c+1&7]<<13;for(;$.length<8;)$.push(0);for(c=0;c<8&&$[c]===0;++c);for(c==8?$[7]=-1:$[c],_e.x=$,_e.i=0,c=256;c>0;--c)_e.next()}j(_,b)}function d(b,_){return _.x=b.x.slice(),_.i=b.i,_}function h(b,_){b==null&&(b=+new Date);var j=new a(b),_e=_&&_.state,g=function(){return(j.next()>>>0)/4294967296};return g.double=function(){do var c=j.next()>>>11,$=(j.next()>>>0)/4294967296,et=(c+$)/(1<<21);while(et===0);return et},g.int32=j.next,g.quick=g,_e&&(_e.x&&d(_e,j),g.state=function(){return d(j,{})}),g}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.xorshift7=h})(commonjsGlobal,o,!1)})(xorshift7$1);var xorshift7Exports=xorshift7$1.exports,xor4096$1={exports:{}};xor4096$1.exports;(function(o){(function(e,s,i){function a(b){var _=this;_.next=function(){var _e=_.w,g=_.X,c=_.i,$,et;return _.w=_e=_e+1640531527|0,et=g[c+34&127],$=g[c=c+1&127],et^=et<<13,$^=$<<17,et^=et>>>15,$^=$>>>12,et=g[c]=et^$,_.i=c,et+(_e^_e>>>16)|0};function j(_e,g){var c,$,et,tt,nt,rt=[],ot=128;for(g===(g|0)?($=g,g=null):(g=g+"\0",$=0,ot=Math.max(ot,g.length)),et=0,tt=-32;tt<ot;++tt)g&&($^=g.charCodeAt((tt+32)%g.length)),tt===0&&(nt=$),$^=$<<10,$^=$>>>15,$^=$<<4,$^=$>>>13,tt>=0&&(nt=nt+1640531527|0,c=rt[tt&127]^=$+nt,et=c==0?et+1:0);for(et>=128&&(rt[(g&&g.length||0)&127]=-1),et=127,tt=4*128;tt>0;--tt)$=rt[et+34&127],c=rt[et=et+1&127],$^=$<<13,c^=c<<17,$^=$>>>15,c^=c>>>12,rt[et]=$^c;_e.w=nt,_e.X=rt,_e.i=et}j(_,b)}function d(b,_){return _.i=b.i,_.w=b.w,_.X=b.X.slice(),_}function h(b,_){b==null&&(b=+new Date);var j=new a(b),_e=_&&_.state,g=function(){return(j.next()>>>0)/4294967296};return g.double=function(){do var c=j.next()>>>11,$=(j.next()>>>0)/4294967296,et=(c+$)/(1<<21);while(et===0);return et},g.int32=j.next,g.quick=g,_e&&(_e.X&&d(_e,j),g.state=function(){return d(j,{})}),g}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.xor4096=h})(commonjsGlobal,o,!1)})(xor4096$1);var xor4096Exports=xor4096$1.exports,tychei$1={exports:{}};tychei$1.exports;(function(o){(function(e,s,i){function a(b){var _=this,j="";_.next=function(){var g=_.b,c=_.c,$=_.d,et=_.a;return g=g<<25^g>>>7^c,c=c-$|0,$=$<<24^$>>>8^et,et=et-g|0,_.b=g=g<<20^g>>>12^c,_.c=c=c-$|0,_.d=$<<16^c>>>16^et,_.a=et-g|0},_.a=0,_.b=0,_.c=-1640531527,_.d=1367130551,b===Math.floor(b)?(_.a=b/4294967296|0,_.b=b|0):j+=b;for(var _e=0;_e<j.length+20;_e++)_.b^=j.charCodeAt(_e)|0,_.next()}function d(b,_){return _.a=b.a,_.b=b.b,_.c=b.c,_.d=b.d,_}function h(b,_){var j=new a(b),_e=_&&_.state,g=function(){return(j.next()>>>0)/4294967296};return g.double=function(){do var c=j.next()>>>11,$=(j.next()>>>0)/4294967296,et=(c+$)/(1<<21);while(et===0);return et},g.int32=j.next,g.quick=g,_e&&(typeof _e=="object"&&d(_e,j),g.state=function(){return d(j,{})}),g}s&&s.exports?s.exports=h:i&&i.amd?i(function(){return h}):this.tychei=h})(commonjsGlobal,o,!1)})(tychei$1);var tycheiExports=tychei$1.exports,seedrandom$1={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0=getAugmentedNamespace(__viteBrowserExternal$1);(function(o){(function(e,s,i){var a=256,d=6,h=52,b="random",_=i.pow(a,d),j=i.pow(2,h),_e=j*2,g=a-1,c;function $(it,at,lt){var ut=[];at=at==!0?{entropy:!0}:at||{};var ct=rt(nt(at.entropy?[it,st(s)]:it??ot(),3),ut),pt=new et(ut),ht=function(){for(var yt=pt.g(d),xt=_,ft=0;yt<j;)yt=(yt+ft)*a,xt*=a,ft=pt.g(1);for(;yt>=_e;)yt/=2,xt/=2,ft>>>=1;return(yt+ft)/xt};return ht.int32=function(){return pt.g(4)|0},ht.quick=function(){return pt.g(4)/4294967296},ht.double=ht,rt(st(pt.S),s),(at.pass||lt||function(yt,xt,ft,wt){return wt&&(wt.S&&tt(wt,pt),yt.state=function(){return tt(pt,{})}),ft?(i[b]=yt,xt):yt})(ht,ct,"global"in at?at.global:this==i,at.state)}function et(it){var at,lt=it.length,ut=this,ct=0,pt=ut.i=ut.j=0,ht=ut.S=[];for(lt||(it=[lt++]);ct<a;)ht[ct]=ct++;for(ct=0;ct<a;ct++)ht[ct]=ht[pt=g&pt+it[ct%lt]+(at=ht[ct])],ht[pt]=at;(ut.g=function(yt){for(var xt,ft=0,wt=ut.i,dt=ut.j,mt=ut.S;yt--;)xt=mt[wt=g&wt+1],ft=ft*a+mt[g&(mt[wt]=mt[dt=g&dt+xt])+(mt[dt]=xt)];return ut.i=wt,ut.j=dt,ft})(a)}function tt(it,at){return at.i=it.i,at.j=it.j,at.S=it.S.slice(),at}function nt(it,at){var lt=[],ut=typeof it,ct;if(at&&ut=="object")for(ct in it)try{lt.push(nt(it[ct],at-1))}catch{}return lt.length?lt:ut=="string"?it:it+"\0"}function rt(it,at){for(var lt=it+"",ut,ct=0;ct<lt.length;)at[g&ct]=g&(ut^=at[g&ct]*19)+lt.charCodeAt(ct++);return st(at)}function ot(){try{var it;return c&&(it=c.randomBytes)?it=it(a):(it=new Uint8Array(a),(e.crypto||e.msCrypto).getRandomValues(it)),st(it)}catch{var at=e.navigator,lt=at&&at.plugins;return[+new Date,e,lt,e.screen,st(s)]}}function st(it){return String.fromCharCode.apply(0,it)}if(rt(i.random(),s),o.exports){o.exports=$;try{c=require$$0}catch{}}else i["seed"+b]=$})(typeof self<"u"?self:commonjsGlobal,[],Math)})(seedrandom$1);var seedrandomExports=seedrandom$1.exports,alea=aleaExports,xor128=xor128Exports,xorwow=xorwowExports,xorshift7=xorshift7Exports,xor4096=xor4096Exports,tychei=tycheiExports,sr=seedrandomExports;sr.alea=alea;sr.xor128=xor128;sr.xorwow=xorwow;sr.xorshift7=xorshift7;sr.xor4096=xor4096;sr.tychei=tychei;var seedrandom=sr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MPRandGauss{constructor(e,s,i,a,d){this.mean=e,this.stdDev=s,this.dtype=i,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const h=d||Math.random();this.random=seedrandom.alea(h.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let e,s,i=!1;for(;!i;){let a,d,h;do a=2*this.random()-1,d=2*this.random()-1,h=a*a+d*d;while(h>=1||h===0);const b=Math.sqrt(-2*Math.log(h)/h);e=this.mean+this.stdDev*a*b,s=this.mean+this.stdDev*d*b,(!this.truncated||this.isValidTruncated(e))&&(i=!0)}return(!this.truncated||this.isValidTruncated(s))&&(this.nextVal=this.convertValue(s)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class UniformRandom{constructor(e=0,s=1,i,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=s-e,this.dtype=i,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${s} <= 1 and dtype is not float`);this.random=seedrandom.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomNormal_(o,e=0,s=1,i,a){if(assertNonNegativeIntegerDimensions(o),i!=null&&i==="bool")throw new Error(`Unsupported data type ${i}`);const d=new MPRandGauss(e,s,i,!1,a),h=buffer(o,i);for(let b=0;b<h.values.length;b++)h.values[b]=d.nextValue();return h.toTensor()}const randomNormal$1=op({randomNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomUniform_(o,e=0,s=1,i="float32",a){assertNonNegativeIntegerDimensions(o);const d=buffer(o,i),h=new UniformRandom(e,s,null,a);for(let b=0;b<d.values.length;b++)d.values[b]=h.nextValue();return d.toTensor()}const randomUniform=op({randomUniform_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$3(o,e,s=1,i="float32"){if(s===0)throw new Error("Cannot have a step of zero");const a={start:o,stop:e,step:s,dtype:i};return ENGINE.runKernel(Range,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real_(o){const s={input:convertToTensor(o,"input","real")};return ENGINE.runKernel(Real,s)}const real$2=op({real_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reciprocal_(o){const s={x:convertToTensor(o,"x","reciprocal")};return ENGINE.runKernel(Reciprocal,s)}const reciprocal$2=op({reciprocal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu_(o){const s={x:convertToTensor(o,"x","relu")};return ENGINE.runKernel(Relu$1,s)}const relu$2=op({relu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu6_(o){const s={x:convertToTensor(o,"x","relu6")};return ENGINE.runKernel(Relu6$1,s)}const relu6$2=op({relu6_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse_(o,e){const i={x:convertToTensor(o,"x","reverse")},a={dims:e};return ENGINE.runKernel(Reverse,i,a)}const reverse$2=op({reverse_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function round_(o){const s={x:convertToTensor(o,"x","round")};return ENGINE.runKernel(Round,s)}const round$2=op({round_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rsqrt_(o){const s={x:convertToTensor(o,"x","rsqrt","float32")};return ENGINE.runKernel(Rsqrt,s)}const rsqrt$2=op({rsqrt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function selu_(o){const s={x:convertToTensor(o,"x","selu")};return ENGINE.runKernel(Selu$1,s)}const selu$2=op({selu_});function separableConv2d_(o,e,s,i,a,d=[1,1],h="NHWC"){const b=convertToTensor(o,"x","separableConv2d"),_=convertToTensor(e,"depthwiseFilter","separableConv2d"),j=convertToTensor(s,"pointwiseFilter","separableConv2d");let _e=b,g=!1;if(b.rank===3&&(g=!0,_e=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2]])),h==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");assert$1(_e.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${_e.rank}.`),assert$1(_.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${_.rank}.`),assert$1(j.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${_.rank}.`),assert$1(j.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${j.shape[0]}.`),assert$1(j.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${j.shape[1]}.`);const c=_.shape[2],$=_.shape[3];assert$1(j.shape[2]===c*$,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*$}, but got ${j.shape[2]}.`);const et=depthwiseConv2d$1(_e,_,i,a,h,d),nt=conv2d$2(et,j,1,"valid",h);return g?reshape$2(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}const separableConv2d=op({separableConv2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sign_(o){const s={x:convertToTensor(o,"x","sign")};return ENGINE.runKernel(Sign,s)}const sign$2=op({sign_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sin_(o){const s={x:convertToTensor(o,"x","sin","float32")};return ENGINE.runKernel(Sin,s)}const sin$2=op({sin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sinh_(o){const s={x:convertToTensor(o,"x","sinh")};return ENGINE.runKernel(Sinh,s)}const sinh$2=op({sinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice1d_(o,e,s){const i=convertToTensor(o,"x","slice1d");return assert$1(i.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${i.rank} tensor`),slice$2(i,[e],[s])}const slice1d=op({slice1d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice2d_(o,e,s){const i=convertToTensor(o,"x","slice2d");return assert$1(i.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${i.rank} tensor`),slice$2(i,e,s)}const slice2d=op({slice2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice3d_(o,e,s){const i=convertToTensor(o,"x","slice3d");return assert$1(i.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${i.rank} tensor`),slice$2(i,e,s)}const slice3d=op({slice3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice4d_(o,e,s){const i=convertToTensor(o,"x","slice4d");return assert$1(i.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${i.rank} tensor`),slice$2(i,e,s)}const slice4d=op({slice4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax_(o,e=-1){const s=convertToTensor(o,"logits","softmax","float32");if(e===-1&&(e=s.rank-1),e!==s.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s.rank} and dim was ${e}`);const i={logits:s},a={dim:e};return ENGINE.runKernel(Softmax$2,i,a)}const softmax$2=op({softmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft_(o){assert$1(o.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${o.dtype}.`);const e={input:o};return ENGINE.runKernel(FFT,e)}const fft$2=op({fft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft_(o){assert$1(o.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${o.dtype}.`);const e={input:o};return ENGINE.runKernel(IFFT,e)}const ifft$2=op({ifft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function irfft_(o){const e=o.shape[o.shape.length-1],s=o.size/e;let i;if(e<=2){const a=reshape$2(o,[s,e]);i=ifft$2(a)}else{const a=[s,2*(e-1)],d=reshape$2(real$2(o),[s,e]),h=reshape$2(imag$2(o),[s,e]),b=reverse$2(slice$2(d,[0,1],[s,e-2]),1),_=mul(reverse$2(slice$2(h,[0,1],[s,e-2]),1),scalar(-1)),j=concat$2([d,b],1),_e=concat$2([h,_],1),g=reshape$2(complex$2(j,_e),[a[0],a[1]]);i=ifft$2(g)}if(i=real$2(i),o.rank===3&&o.shape[0]!==0){const a=i,d=o.shape[0];i=reshape$2(i,[d,i.shape[0]/d,i.shape[1]]),a.dispose()}return i}const irfft=op({irfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split_(o,e,s=0){const a={x:convertToTensor(o,"x","split")},d={numOrSizeSplits:e,axis:s};return ENGINE.runKernel(SplitV,a,d)}const split$1=op({split_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfft_(o,e){assert$1(o.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${o.dtype}`);let s=o.shape[o.shape.length-1];const i=o.size/s;let a;if(e!=null&&e<s){const et=o.shape.map(nt=>0),tt=o.shape.map(nt=>nt);tt[o.shape.length-1]=e,a=slice$2(o,et,tt),s=e}else if(e!=null&&e>s){const et=o.shape.map(tt=>tt);et[o.shape.length-1]=e-s,a=concat$2([o,zeros$1(et)],o.shape.length-1),s=e}else a=o;const d=zerosLike$2(a),h=reshape$2(complex$2(a,d),[i,s]),b=fft$2(h),_=Math.floor(s/2)+1,j=real$2(b),_e=imag$2(b),g=split$1(j,[_,s-_],j.shape.length-1),c=split$1(_e,[_,s-_],_e.shape.length-1),$=a.shape.slice();return $[a.shape.length-1]=_,reshape$2(complex$2(g[0],c[0]),$)}const rfft=op({rfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squaredDifference_(o,e){let s=convertToTensor(o,"a","squaredDifference"),i=convertToTensor(e,"b","squaredDifference");[s,i]=makeTypesMatch(s,i),assertAndGetBroadcastShape(s.shape,i.shape);const a={a:s,b:i},d={};return ENGINE.runKernel(SquaredDifference,a,d)}const squaredDifference$2=op({squaredDifference_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squeeze_(o,e){const s=convertToTensor(o,"x","squeeze","string_or_numeric");return reshape$2(s,squeezeShape(s.shape,e).newShape)}const squeeze=op({squeeze_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stack_(o,e=0){const s=convertToTensorArray(o,"tensors","stack","string_or_numeric");assert$1(s.length>=1,()=>"Pass at least one tensor to tf.stack"),s.length>0&&assert$1(e<=s[0].rank,()=>"Axis must be <= rank of the tensor");const i=s,a={axis:e};return ENGINE.runKernel(Pack,i,a)}const stack=op({stack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step_(o,e=0){const i={x:convertToTensor(o,"x","step")},a={alpha:e};return ENGINE.runKernel(Step,i,a)}const step$2=op({step_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice_(o,e,s,i,a=0,d=0,h=0,b=0,_=0){const _e={x:convertToTensor(o,"x","stridedSlice","string_or_numeric")},g={begin:e,end:s,strides:i,beginMask:a,endMask:d,ellipsisMask:h,newAxisMask:b,shrinkAxisMask:_};return ENGINE.runKernel(StridedSlice,_e,g)}const stridedSlice$2=op({stridedSlice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tan_(o){const s={x:convertToTensor(o,"x","tan","float32")};return ENGINE.runKernel(Tan,s)}const tan$2=op({tan_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor1d(o,e){assertNonNull(o);const s=inferShape(o,e);if(s.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return makeTensor(o,null,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor2d(o,e,s){if(assertNonNull(o),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const i=inferShape(o,s);if(i.length!==2&&i.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(i.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return makeTensor(o,e,i,s)}function validateUpdateShape(o,e,s){const i=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,d=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${s.shape}, indices.shape: ${e.shape}, shape: ${o}, sliceDim: ${i}, and batchDim: ${a}.`;if(s.rank<a)throw new Error(d+` update.rank < ${a}. `);if(o.length<i+(s.rank-a))throw new Error(d+` Output shape length < ${i+(s.rank-a)}`);if(s.rank!==a+o.length-i)throw new Error(d+` update.rank != ${a+o.length-i}`);for(let h=0;h<a;++h)if(s.shape[h]!==e.shape[h])throw new Error(d+` updates.shape[${h}] (${s.shape[h]}) != indices.shape[${h}] (${e.shape[h]}).`);for(let h=0;h<s.rank-a;++h)if(s.shape[h+a]!==o[h+i])throw new Error(d+` updates.shape[${h+a}] (${s.shape[h+a]}) != shape[${h+a}] (${o[h+a]})`)}function validateInput(o,e,s){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(o.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${o.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(s.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${s}`);if(s.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(o.size===0)throw new Error(`Updates specified for empty output. updates shape: ${o.shape}`)}validateUpdateShape(s,e,o)}function calculateShapes(o,e,s){const i=e.shape.length,a=i>1?e.shape[i-1]:1,d=s.length;let h=1;for(let g=a;g<d;++g)h*=s[g];const b=a<1?1:a,_=sizeFromShape(e.shape)/b,j=[...computeStrides(s.slice(0,a)),1],_e=sizeFromShape(s);return{sliceRank:a,numUpdates:_,sliceSize:h,strides:j,outputSize:_e}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topk_(o,e=1,s=!0){const i=convertToTensor(o,"x","topk");if(i.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=i.shape[i.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${e}`);const d={x:i},h={k:e,sorted:s},[b,_]=ENGINE.runKernel(TopK,d,h);return{values:b,indices:_}}const topk=op({topk_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function truncatedNormal_(o,e=0,s=1,i,a){if(assertNonNegativeIntegerDimensions(o),i!=null&&i==="bool")throw new Error("Unsupported data type $ { dtype }");const d=new MPRandGauss(e,s,i,!0,a),h=buffer(o,i);for(let b=0;b<h.values.length;b++)h.values[b]=d.nextValue();return h.toTensor()}const truncatedNormal=op({truncatedNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique_(o,e=0){const s=convertToTensor(o,"x","unique","string_or_numeric");assert$1(s.rank>0,()=>"The input tensor must be at least 1D");const i={x:s},a={axis:e},[d,h]=ENGINE.runKernel(Unique,i,a);return{values:d,indices:h}}const unique$3=op({unique_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum_(o,e,s){const i=convertToTensor(o,"x","unsortedSegmentSum"),a=convertToTensor(e,"segmentIds","unsortedSegmentSum","int32");assert$1(isInt(s),()=>"numSegments must be of dtype int");const d={x:i,segmentIds:a},h={numSegments:s};return ENGINE.runKernel(UnsortedSegmentSum,d,h)}const unsortedSegmentSum$2=op({unsortedSegmentSum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unstack_(o,e=0){const s=convertToTensor(o,"x","unstack","string_or_numeric");assert$1(e>=-s.shape.length&&e<s.shape.length,()=>`Axis = ${e} is not in [-${s.shape.length}, ${s.shape.length})`);const i={value:s},a={axis:e};return ENGINE.runKernel(Unpack,i,a)}const unstack=op({unstack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variable(o,e=!0,s,i){return ENGINE.makeVariable(o,e,s,i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whereImpl$2(o,e){const s=[];for(let d=0;d<e.length;d++)e[d]&&s.push(d);const i=buffer(o,"int32"),a=buffer([s.length,o.length],"int32");for(let d=0;d<s.length;d++){const h=i.indexToLoc(s[d]),b=d*o.length;a.values.set(h,b)}return a.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose_(o,e,s){const i=convertToTensor(o,"x","transpose");if(e==null&&(e=i.shape.map((h,b)=>b).reverse()),assert$1(i.rank===e.length,()=>`Error in transpose: rank of input ${i.rank} must match length of perm ${e}.`),e.forEach(h=>{assert$1(h>=0&&h<i.rank,()=>`All entries in 'perm' must be between 0 and ${i.rank-1} but got ${e}`)}),i.rank<=1)return i.clone();const a={x:i},d={perm:e};return i.dtype==="complex64"?tidy(()=>{let h=real$2(i),b=imag$2(i);return h=ENGINE.runKernel(Transpose,{x:h},d),b=ENGINE.runKernel(Transpose,{x:b},d),s&&(b=neg$2(b)),complex$2(h,b)}):ENGINE.runKernel(Transpose,a,d)}const transpose$2=op({transpose_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getNoiseShape(o,e){if(e==null)return o.shape.slice();if(arraysEqual(o.shape,e))return e;if(o.shape.length===e.length){const s=[];for(let i=0;i<o.shape.length;i++)e[i]==null&&o.shape[i]!=null?s.push(o.shape[i]):s.push(e[i]);return s}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dropout_(o,e,s,i){const a=convertToTensor(o,"x","dropout");if(assert$1(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),assert$1(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return o instanceof Tensor?a.clone():a;const d=getNoiseShape(a,s),h=1-e,b=div$1(floor$2(add$1(randomUniform(d,0,1,"float32",i),h)),h);return mul(a,b)}const dropout$1=op({dropout_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter_(o,e,s,i,a,d="NHWC",h){let b=o;o.rank===3&&(b=reshape$2(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let _=e;_.rank===3&&(_=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]])),assert$1(b.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${b.shape}.`),assert$1(_.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${_.shape}.`),assert$1(s.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${s}.`);const j=d==="NHWC"?b.shape[3]:b.shape[1],_e=d==="NHWC"?_.shape[3]:_.shape[1];assert$1(j===s[2],()=>`Error in conv2dDerFilter: depth of input ${j}) must match input depth in filter (${s[2]}.`),assert$1(_e===s[3],()=>`Error in conv2dDerFilter: depth of dy (${_e}) must match output depth for filter (${s[3]}).`),checkPadOnDimRoundingMode("conv2dDerFilter",a,h);const g={x:b,dy:_},c={strides:i,pad:a,dataFormat:d,dimRoundingMode:h,filterShape:s};return ENGINE.runKernel(Conv2DBackpropFilter,g,c)}const conv2DBackpropFilter$2=op({conv2DBackpropFilter_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFusedDyActivation(o,e,s){if(s==null||s==="linear")return o;if(s==="relu")return mul(o,step$2(e));throw new Error(`Cannot compute gradient for fused activation ${s}.`)}function getFusedBiasGradient(o,e){let s=e;const i=getReductionAxes(o.shape,e.shape);return i.length>0&&(s=sum$2(s,i)),reshape$2(s,o.shape)}function applyActivation$1(o,e,s,i){if(e==="linear")return o;if(e==="relu")return relu$2(o);if(e==="elu")return elu$3(o);if(e==="relu6")return relu6$2(o);if(e==="prelu")return prelu$2(o,s);if(e==="leakyrelu")return leakyRelu$2(o,i);if(e==="sigmoid")return sigmoid$2(o);throw new Error(`Unknown fused activation ${e}.`)}const shouldFuse=(o,e)=>!(o>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d_({x:o,filter:e,strides:s,pad:i,dataFormat:a="NHWC",dilations:d=[1,1],dimRoundingMode:h,bias:b,activation:_="linear",preluActivationWeights:j,leakyreluAlpha:_e}){if(_=_||"linear",shouldFuse(ENGINE.state.gradientDepth,_)===!1){assert$1(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let lt=conv2d$2(o,e,s,i,a,d,h);return b!=null&&(lt=add$1(lt,b)),applyActivation$1(lt,_,j,_e)}const g=convertToTensor(o,"x","conv2d","float32"),c=convertToTensor(e,"filter","conv2d","float32");let $=g,et=!1;g.rank===3&&(et=!0,$=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2]])),assert$1($.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${$.rank}.`),assert$1(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),checkPadOnDimRoundingMode("fused conv2d",i,h);const tt=a==="NHWC"?$.shape[3]:$.shape[1];assert$1(c.shape[2]===tt,()=>`Error in conv2d: depth of input (${tt}) must match input depth for filter ${c.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(s,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);const nt=computeConv2DInfo($.shape,c.shape,s,d,i,h);let rt;b!=null&&(rt=convertToTensor(b,"bias","fused conv2d"),[rt]=makeTypesMatch(rt,g),a==="NHWC"?assertAndGetBroadcastShape(nt.outShape,rt.shape):(assert$1(rt.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${rt.shape.length}.`),assert$1(rt.shape.length===0||rt.shape[0]===nt.outChannels||rt.shape[0]===1,()=>`Error in fused conv2d: bias shape (${rt.shape}) is not compatible with the number of output channels (${nt.outChannels})`)));let ot;if(j!=null){const lt=j.shape;if(assert$1(lt.length<=1||lt.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${lt.length}.`),lt.length===1)assert$1(lt[0]===1||lt[0]===nt.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${lt}) is not compatible with the number of output channels (${nt.outChannels}).`);else if(lt.length===3)try{assertAndGetBroadcastShape(lt,nt.outShape)}catch{const ct=`Error in fused conv2d: PReLU activation weights (${lt}) is not compatible with the output shape of the conv2d (${nt.outShape}).`;throw Error(ct)}ot=convertToTensor(j,"prelu weights","fused conv2d")}const st=(lt,ut)=>{assert$1(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[ct,pt,ht,yt]=ut,xt=getFusedDyActivation(lt,ht,_);assert$1(tupleValuesAreOne(d),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`);const ft=conv2DBackpropInput$2(pt.shape,xt,ct,s,i),wt=conv2DBackpropFilter$2(pt,xt,ct.shape,s,i),dt=[ft,wt];if(yt!=null){const mt=getFusedBiasGradient(yt,xt);dt.push(mt)}return dt},it={x:$,filter:c,bias:rt,preluActivationWeights:ot},at={strides:s,pad:i,dataFormat:a,dilations:d,dimRoundingMode:h,activation:_,leakyreluAlpha:_e};return b==null?customGrad((ut,ct,pt)=>{let ht=ENGINE.runKernel(FusedConv2D,it,at);return pt([ct,ut,ht]),et&&(ht=reshape$2(ht,[ht.shape[1],ht.shape[2],ht.shape[3]])),{value:ht,gradFunc:st}})($,c):customGrad((ut,ct,pt,ht)=>{let yt=ENGINE.runKernel(FusedConv2D,it,at);return ht([ct,ut,yt,pt]),et&&(yt=reshape$2(yt,[yt.shape[1],yt.shape[2],yt.shape[3]])),{value:yt,gradFunc:st}})($,c,rt)}const conv2d$1=op({fusedConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter_(o,e,s,i,a,d=[1,1],h){let b=o;o.rank===3&&(b=reshape$2(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let _=e;_.rank===3&&(_=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const j={x:b,dy:_},_e={strides:i,pad:a,dimRoundingMode:h,dilations:d,filterShape:s};return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter,j,_e)}const depthwiseConv2dNativeBackpropFilter$2=op({depthwiseConv2dNativeBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput_(o,e,s,i,a,d=[1,1],h){let b=e,_=!1;e.rank===3&&(_=!0,b=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const j={dy:b,filter:s},_e={strides:i,pad:a,dimRoundingMode:h,dilations:d,inputShape:o},g=ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput,j,_e);return _?reshape$2(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const depthwiseConv2dNativeBackpropInput$2=op({depthwiseConv2dNativeBackpropInput_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedMatMul_({a:o,b:e,transposeA:s=!1,transposeB:i=!1,bias:a,activation:d="linear",preluActivationWeights:h,leakyreluAlpha:b=.2}){if(shouldFuse(ENGINE.state.gradientDepth,d)===!1){let yt=matMul$1(o,e,s,i);return a!=null&&(yt=add$1(yt,a)),applyActivation$1(yt,d,h,b)}let _=convertToTensor(o,"a","fused matMul"),j=convertToTensor(e,"b","fused matMul");[_,j]=makeTypesMatch(_,j);const _e=s?_.shape[_.rank-2]:_.shape[_.rank-1],g=i?j.shape[j.rank-1]:j.shape[j.rank-2],c=s?_.shape[_.rank-1]:_.shape[_.rank-2],$=i?j.shape[j.rank-2]:j.shape[j.rank-1],et=_.shape.slice(0,-2),tt=j.shape.slice(0,-2),nt=sizeFromShape(et),rt=sizeFromShape(tt);assert$1(_e===g,()=>`Error in fused matMul: inner shapes (${_e}) and (${g}) of Tensors with shapes ${_.shape} and ${j.shape} and transposeA=${s} and transposeB=${i} must match.`);const st=assertAndGetBroadcastShape(_.shape.slice(0,-2),j.shape.slice(0,-2)).concat([c,$]),it=s?reshape$2(_,[nt,_e,c]):reshape$2(_,[nt,c,_e]),at=i?reshape$2(j,[rt,$,g]):reshape$2(j,[rt,g,$]);let lt;a!=null&&(lt=convertToTensor(a,"bias","fused matMul"),[lt]=makeTypesMatch(lt,_),assertAndGetBroadcastShape(st,lt.shape));let ut;h!=null&&(ut=convertToTensor(h,"prelu weights","fused matMul"));const ct=(yt,xt)=>{const[ft,wt,dt,mt]=xt,bt=getFusedDyActivation(reshape$2(yt,dt.shape),dt,d);let vt,Tt;if(!s&&!i?(vt=matMul$1(bt,wt,!1,!0),Tt=matMul$1(ft,bt,!0,!1)):!s&&i?(vt=matMul$1(bt,wt,!1,!1),Tt=matMul$1(bt,ft,!0,!1)):s&&!i?(vt=matMul$1(wt,bt,!1,!0),Tt=matMul$1(ft,bt,!1,!1)):(vt=matMul$1(wt,bt,!0,!0),Tt=matMul$1(bt,ft,!0,!0)),a!=null){const Et=getFusedBiasGradient(mt,bt);return[vt,Tt,Et]}else return[vt,Tt]},pt={a:it,b:at,bias:lt,preluActivationWeights:ut},ht={transposeA:s,transposeB:i,activation:d,leakyreluAlpha:b};return a==null?customGrad((xt,ft,wt)=>{const dt=ENGINE.runKernel(_FusedMatMul,pt,ht);return wt([xt,ft,dt]),{value:reshape$2(dt,st),gradFunc:ct}})(it,at):customGrad((xt,ft,wt,dt)=>{const mt=ENGINE.runKernel(_FusedMatMul,pt,ht);return dt([xt,ft,mt,wt]),{value:reshape$2(mt,st),gradFunc:ct}})(it,at,lt)}const matMul=op({fusedMatMul_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize_(o,e,s,i,a="bilinear",d=0){const h=convertToTensor(o,"image","cropAndResize"),b=convertToTensor(e,"boxes","cropAndResize","float32"),_=convertToTensor(s,"boxInd","cropAndResize","int32"),j=b.shape[0];assert$1(h.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${h.rank}.`),assert$1(b.rank===2&&b.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${j},4] but had shape ${b.shape}.`),assert$1(_.rank===1&&_.shape[0]===j,()=>`Error in cropAndResize: boxInd must be have size [${j}] but had shape ${b.shape}.`),assert$1(i.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${i.length}.`),assert$1(i[0]>=1&&i[1]>=1,()=>`cropSize must be atleast [1,1], but was ${i}`),assert$1(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const _e={image:h,boxes:b,boxInd:_},g={method:a,extrapolationValue:d,cropSize:i};return ENGINE.runKernel(CropAndResize,_e,g)}const cropAndResize$3=op({cropAndResize_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flipLeftRight_(o){const e=convertToTensor(o,"image","flipLeftRight","float32");assert$1(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const s={image:e};return ENGINE.runKernel(FlipLeftRight,s,{})}const flipLeftRight=op({flipLeftRight_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function grayscaleToRGB_(o){const e=convertToTensor(o,"image","grayscaleToRGB"),s=e.rank-1,i=e.shape[s];assert$1(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),assert$1(i===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${i}.`);const a=new Array(e.rank);return a.fill(1,0,s),a[s]=3,tile$3(e,a)}const grayscaleToRGB=op({grayscaleToRGB_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rgbToGrayscale_(o){const e=convertToTensor(o,"image","RGBToGrayscale"),s=e.rank-1,i=e.shape[s];assert$1(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),assert$1(i===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${i}.`);const a=e.dtype,d=cast$3(e,"float32"),h=tensor1d([.2989,.587,.114]);let b;switch(e.rank){case 2:b=einsum$2("ij,j->i",d,h);break;case 3:b=einsum$2("ijk,k->ij",d,h);break;case 4:b=einsum$2("ijkl,l->ijk",d,h);break;case 5:b=einsum$2("ijklm,m->ijkl",d,h);break;case 6:b=einsum$2("ijklmn,n->ijklm",d,h);break;default:throw new Error("Not a valid tensor rank.")}return b=expandDims$3(b,-1),cast$3(b,a)}const rgbToGrayscale=op({rgbToGrayscale_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rotateWithOffset_(o,e,s=0,i=.5){const a=convertToTensor(o,"image","rotateWithOffset","float32");assert$1(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const d={image:a},h={radians:e,fillValue:s,center:i};return ENGINE.runKernel(RotateWithOffset,d,h)}const rotateWithOffset=op({rotateWithOffset_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppSanityCheck(o,e,s,i,a,d){i==null&&(i=.5),a==null&&(a=Number.NEGATIVE_INFINITY),d==null&&(d=0);const h=o.shape[0];return s=Math.min(s,h),assert$1(0<=i&&i<=1,()=>`iouThreshold must be in [0, 1], but was '${i}'`),assert$1(o.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${o.rank}'`),assert$1(o.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${o.shape[1]}`),assert$1(e.rank===1,()=>"scores must be a 1D tensor"),assert$1(e.shape[0]===h,()=>`scores has incompatible shape with boxes. Expected ${h}, but was ${e.shape[0]}`),assert$1(0<=d&&d<=1,()=>`softNmsSigma must be in [0, 1], but was '${d}'`),{maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:d}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppression_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY){const d=convertToTensor(o,"boxes","nonMaxSuppression","float32"),h=convertToTensor(e,"scores","nonMaxSuppression","float32"),b=nonMaxSuppSanityCheck(d,h,s,i,a);s=b.maxOutputSize,i=b.iouThreshold,a=b.scoreThreshold;const _={maxOutputSize:s,iouThreshold:i,scoreThreshold:a};return ENGINE.runKernel(NonMaxSuppressionV3,{boxes:d,scores:h},_)}const nonMaxSuppression=op({nonMaxSuppression_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryInsert(o,e,s){const i=binarySearch(o,e,s),a=i<0?-(i+1):i;o.splice(a,0,e)}function binarySearch(o,e,s){return binarySearch_(o,e,s||defaultComparator)}function defaultComparator(o,e){return o>e?1:o<e?-1:0}function binarySearch_(o,e,s){let i=0,a=o.length,d=0,h=!1;for(;i<a;){d=i+(a-i>>>1);const b=s(e,o[d]);b>0?i=d+1:(a=d,h=!b)}return h?i:-i-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionV3Impl$2(o,e,s,i,a){return nonMaxSuppressionImpl_(o,e,s,i,a,0)}function nonMaxSuppressionV4Impl$2(o,e,s,i,a,d){return nonMaxSuppressionImpl_(o,e,s,i,a,0,!1,d,!0)}function nonMaxSuppressionV5Impl$2(o,e,s,i,a,d){return nonMaxSuppressionImpl_(o,e,s,i,a,d,!0)}function nonMaxSuppressionImpl_(o,e,s,i,a,d,h=!1,b=!1,_=!1){const j=[];for(let nt=0;nt<e.length;nt++)e[nt]>a&&j.push({score:e[nt],boxIndex:nt,suppressBeginIndex:0});j.sort(ascendingComparator);const _e=d>0?-.5/d:0,g=[],c=[];for(;g.length<s&&j.length>0;){const nt=j.pop(),{score:rt,boxIndex:ot,suppressBeginIndex:st}=nt;if(rt<a)break;let it=!1;for(let at=g.length-1;at>=st;--at){const lt=intersectionOverUnion(o,ot,g[at]);if(lt>=i){it=!0;break}if(nt.score=nt.score*suppressWeight(i,_e,lt),nt.score<=a)break}nt.suppressBeginIndex=g.length,it||(nt.score===rt?(g.push(ot),c.push(nt.score)):nt.score>a&&binaryInsert(j,nt,ascendingComparator))}const $=g.length,et=s-$;b&&et>0&&(g.push(...new Array(et).fill(0)),c.push(...new Array(et).fill(0)));const tt={selectedIndices:g};return h&&(tt.selectedScores=c),_&&(tt.validOutputs=$),tt}function intersectionOverUnion(o,e,s){const i=o.subarray(e*4,e*4+4),a=o.subarray(s*4,s*4+4),d=Math.min(i[0],i[2]),h=Math.min(i[1],i[3]),b=Math.max(i[0],i[2]),_=Math.max(i[1],i[3]),j=Math.min(a[0],a[2]),_e=Math.min(a[1],a[3]),g=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),$=(b-d)*(_-h),et=(g-j)*(c-_e);if($<=0||et<=0)return 0;const tt=Math.max(d,j),nt=Math.max(h,_e),rt=Math.min(b,g),ot=Math.min(_,c),st=Math.max(rt-tt,0)*Math.max(ot-nt,0);return st/($+et-st)}function suppressWeight(o,e,s){const i=Math.exp(e*s*s);return s<=o?i:0}function ascendingComparator(o,e){return o.score-e.score||o.score===e.score&&e.boxIndex-o.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionAsync_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY){const d=convertToTensor(o,"boxes","nonMaxSuppressionAsync"),h=convertToTensor(e,"scores","nonMaxSuppressionAsync"),b=nonMaxSuppSanityCheck(d,h,s,i,a);s=b.maxOutputSize,i=b.iouThreshold,a=b.scoreThreshold;const _=await Promise.all([d.data(),h.data()]),j=_[0],_e=_[1],{selectedIndices:g}=nonMaxSuppressionV3Impl$2(j,_e,s,i,a);return d!==o&&d.dispose(),h!==e&&h.dispose(),tensor1d(g,"int32")}const nonMaxSuppressionAsync=nonMaxSuppressionAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionWithScore_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY,d=0){const h=convertToTensor(o,"boxes","nonMaxSuppression"),b=convertToTensor(e,"scores","nonMaxSuppression"),_=nonMaxSuppSanityCheck(h,b,s,i,a,d);s=_.maxOutputSize,i=_.iouThreshold,a=_.scoreThreshold,d=_.softNmsSigma;const j={boxes:h,scores:b},_e={maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:d},g=ENGINE.runKernel(NonMaxSuppressionV5,j,_e);return{selectedIndices:g[0],selectedScores:g[1]}}const nonMaxSuppressionWithScore=op({nonMaxSuppressionWithScore_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionWithScoreAsync_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY,d=0){const h=convertToTensor(o,"boxes","nonMaxSuppressionAsync"),b=convertToTensor(e,"scores","nonMaxSuppressionAsync"),_=nonMaxSuppSanityCheck(h,b,s,i,a,d);s=_.maxOutputSize,i=_.iouThreshold,a=_.scoreThreshold,d=_.softNmsSigma;const j=await Promise.all([h.data(),b.data()]),_e=j[0],g=j[1],{selectedIndices:c,selectedScores:$}=nonMaxSuppressionV5Impl$2(_e,g,s,i,a,d);return h!==o&&h.dispose(),b!==e&&b.dispose(),{selectedIndices:tensor1d(c,"int32"),selectedScores:tensor1d($)}}const nonMaxSuppressionWithScoreAsync=nonMaxSuppressionWithScoreAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionPadded_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY,d=!1){const h=convertToTensor(o,"boxes","nonMaxSuppression"),b=convertToTensor(e,"scores","nonMaxSuppression"),_=nonMaxSuppSanityCheck(h,b,s,i,a,null),j=_.maxOutputSize,_e=_.iouThreshold,g=_.scoreThreshold,c={boxes:h,scores:b},$={maxOutputSize:j,iouThreshold:_e,scoreThreshold:g,padToMaxOutputSize:d},et=ENGINE.runKernel(NonMaxSuppressionV4,c,$);return{selectedIndices:et[0],validOutputs:et[1]}}const nonMaxSuppressionPadded=op({nonMaxSuppressionPadded_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionPaddedAsync_(o,e,s,i=.5,a=Number.NEGATIVE_INFINITY,d=!1){const h=convertToTensor(o,"boxes","nonMaxSuppressionAsync"),b=convertToTensor(e,"scores","nonMaxSuppressionAsync"),_=nonMaxSuppSanityCheck(h,b,s,i,a,null),j=_.maxOutputSize,_e=_.iouThreshold,g=_.scoreThreshold,[c,$]=await Promise.all([h.data(),b.data()]),{selectedIndices:et,validOutputs:tt}=nonMaxSuppressionV4Impl$2(c,$,j,_e,g,d);return h!==o&&h.dispose(),b!==e&&b.dispose(),{selectedIndices:tensor1d(et,"int32"),validOutputs:scalar(tt,"int32")}}const nonMaxSuppressionPaddedAsync=nonMaxSuppressionPaddedAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear_(o,e,s=!1,i=!1){const a=convertToTensor(o,"images","resizeBilinear");assert$1(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),assert$1(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),assert$1(i===!1||s===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let d=a,h=!1;a.rank===3&&(h=!0,d=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const b={images:d},_={alignCorners:s,halfPixelCenters:i,size:e},j=ENGINE.runKernel(ResizeBilinear,b,_);return h?reshape$2(j,[j.shape[1],j.shape[2],j.shape[3]]):j}const resizeBilinear$3=op({resizeBilinear_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor_(o,e,s=!1,i=!1){const a=convertToTensor(o,"images","resizeNearestNeighbor");assert$1(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),assert$1(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),assert$1(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),assert$1(i===!1||s===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let d=a,h=!1;a.rank===3&&(h=!0,d=reshape$2(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const b={images:d},_={alignCorners:s,halfPixelCenters:i,size:e},j=ENGINE.runKernel(ResizeNearestNeighbor,b,_);return h?reshape$2(j,[j.shape[1],j.shape[2],j.shape[3]]):j}const resizeNearestNeighbor$2=op({resizeNearestNeighbor_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function threshold_(o,e="binary",s=!1,i=.5){const a=convertToTensor(o,"image","threshold"),d=.2989,h=.587,b=.114,_=a.shape[0]*a.shape[1];let j=mul(tensor1d([i]),255),_e,g,c,$;if(assert$1(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),assert$1(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),assert$1(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),assert$1(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),a.shape[2]===3){[_e,g,c]=split$1(a,[1,1,1],-1);const nt=mul(_e,d),rt=mul(g,h),ot=mul(c,b);$=add$1(add$1(nt,rt),ot)}else $=o;if(e==="otsu"){const nt=bincount$2(cast$3(round$2($),"int32"),tensor([]),256);j=otsu(nt,_)}const et=s?lessEqual$2($,j):greater$2($,j);return cast$3(mul(et,255),"int32")}function otsu(o,e){let s=tensor1d([-1]),i=tensor1d([0]),a=tensor1d([0]),d,h,b,_,j,_e;for(let g=0;g<o.size-1;g++){d=slice$2(o,0,g+1),h=slice$2(o,g+1),j=div$1(sum$2(d),e),_e=div$1(sum$2(h),e);const c=sum$2(mul(d,range$3(0,d.size)));b=div$1(c,sum$2(d));const $=fill$2(h.shape,d.size),et=add$1(range$3(0,h.size),$),tt=mul(h,et);_=div$1(sum$2(tt),sum$2(h));const nt=sub$2(b,_),rt=sub$2(b,_),ot=mul(j,_e);a=mul(mul(ot,nt),rt);const st=greater$2(a,i);i=where(st,a,i),s=where(st,tensor1d([g]),s)}return s}const threshold$1=op({threshold_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform_(o,e,s="nearest",i="constant",a=0,d){const h=convertToTensor(o,"image","transform","float32"),b=convertToTensor(e,"transforms","transform","float32");assert$1(h.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${h.rank}.`),assert$1(b.rank===2&&(b.shape[0]===h.shape[0]||b.shape[0]===1)&&b.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),assert$1(d==null||d.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${d}.`);const _={image:h,transforms:b},j={interpolation:s,fillMode:i,fillValue:a,outputShape:d};return ENGINE.runKernel(Transform,_,j)}const transform$2=op({transform_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bandPart_(o,e,s){const i=convertToTensor(o,"a","bandPart");assert$1(i.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${i.rank}.`);const a=i.shape,[d,h]=i.shape.slice(-2);let b,_;typeof e=="number"?(assert$1(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),assert$1(e<=d,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${d}).`),b=convertToTensor(e<0?d:e,"numLower","bandPart")):(assert$1(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),b=where(less$2(e,0),d,minimum$2(e,d))),typeof s=="number"?(assert$1(s%1===0,()=>`bandPart(): numUpper must be an integer, got ${s}.`),assert$1(s<=h,()=>`bandPart(): numUpper (${s}) must not be greater than the number of columns (${h}).`),_=convertToTensor(s<0?h:s,"numUpper","bandPart")):(assert$1(s.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),_=where(less$2(s,0),h,minimum$2(s,h)));const j=reshape$2(range$3(0,d,1,"int32"),[-1,1]),_e=range$3(0,h,1,"int32"),g=sub$2(j,_e),c=logicalAnd$2(lessEqual$2(g,b),greaterEqual$2(g,neg$2(_))),$=zeros$1([d,h],i.dtype);return reshape$2(stack(unstack(reshape$2(i,[-1,d,h])).map(et=>where(c,et,$))),a)}const bandPart=op({bandPart_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gramSchmidt_(o){let e;if(Array.isArray(o)){e=!1,assert$1(o!=null&&o.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=o[0].shape[0];for(let d=1;d<o.length;++d)assert$1(o[d].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${o[d].shape[0]} vs. ${a})`)}else e=!0,o=split$1(o,o.shape[0],0).map(a=>squeeze(a,[0]));assert$1(o.length<=o[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${o.length}) exceeds number of dimensions (${o[0].shape[0]}).`);const s=[],i=o;for(let a=0;a<o.length;++a)s.push(ENGINE.tidy(()=>{let d=i[a];if(a>0)for(let h=0;h<a;++h){const b=mul(sum$2(mul(s[h],d)),s[h]);d=sub$2(d,b)}return div$1(d,norm(d,"euclidean"))}));return e?stack(s,0):s}const gramSchmidt=op({gramSchmidt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr_(o,e=!1){if(assert$1(o.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${o.rank}`),o.rank===2)return qr2d(o,e);{const s=o.shape.slice(0,o.shape.length-2).reduce((_,j)=>_*j),i=unstack(reshape$2(o,[s,o.shape[o.shape.length-2],o.shape[o.shape.length-1]]),0),a=[],d=[];i.forEach(_=>{const[j,_e]=qr2d(_,e);a.push(j),d.push(_e)});const h=reshape$2(stack(a,0),o.shape),b=reshape$2(stack(d,0),o.shape);return[h,b]}}function qr2d(o,e=!1){return ENGINE.tidy(()=>{assert$1(o.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${o.shape.length}D Tensor.`);const s=o.shape[0],i=o.shape[1];let a=eye(s),d=clone(o);const h=tensor2d([[1]],[1,1]);let b=clone(h);const _=s>=i?i:s;for(let j=0;j<_;++j){const _e=d,g=b,c=a;[b,d,a]=ENGINE.tidy(()=>{const $=slice$2(d,[j,j],[s-j,1]),et=norm($),tt=slice$2(d,[j,j],[1,1]),nt=where(greater$2(tt,0),tensor2d([[-1]]),tensor2d([[1]])),rt=sub$2(tt,mul(nt,et)),ot=div$1($,rt);ot.shape[0]===1?b=clone(h):b=concat$2([h,slice$2(ot,[1,0],[ot.shape[0]-1,ot.shape[1]])],0);const st=neg$2(div$1(matMul$1(nt,rt),et)),it=slice$2(d,[j,0],[s-j,i]),at=mul(st,b),lt=transpose$2(b);if(j===0)d=sub$2(it,matMul$1(at,matMul$1(lt,it)));else{const pt=sub$2(it,matMul$1(at,matMul$1(lt,it)));d=concat$2([slice$2(d,[0,0],[j,i]),pt],0)}const ut=transpose$2(at),ct=slice$2(a,[0,j],[s,a.shape[1]-j]);if(j===0)a=sub$2(ct,matMul$1(matMul$1(ct,b),ut));else{const pt=sub$2(ct,matMul$1(matMul$1(ct,b),ut));a=concat$2([slice$2(a,[0,0],[s,j]),pt],1)}return[b,d,a]}),dispose([_e,g,c])}return!e&&s>i&&(a=slice$2(a,[0,0],[s,i]),d=slice$2(d,[0,0],[i,i])),[a,d]})}const qr=op({qr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const image={flipLeftRight,grayscaleToRGB,resizeNearestNeighbor:resizeNearestNeighbor$2,resizeBilinear:resizeBilinear$3,rgbToGrayscale,rotateWithOffset,cropAndResize:cropAndResize$3,nonMaxSuppression,nonMaxSuppressionAsync,nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync,threshold:threshold$1,transform:transform$2},linalg={bandPart,gramSchmidt,qr};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GLOBAL_CUSTOM_OBJECT=new Map,GLOBAL_CUSTOM_NAMES=new Map;class Serializable{getClassName(){return this.constructor.className}static fromConfig(e,s){return new e(s)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return SerializationMap.instance==null&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(e){SerializationMap.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function registerClass(o,e,s){assert$1(o.className!=null,()=>"Class being registered does not have the static className property defined."),assert$1(typeof o.className=="string",()=>"className is required to be a string, but got type "+typeof o.className),assert$1(o.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof s>"u"&&(s=o.className);const i=s,a=e+">"+i;return SerializationMap.register(o),GLOBAL_CUSTOM_OBJECT.set(a,o),GLOBAL_CUSTOM_NAMES.set(o,a),o}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Optimizer extends Serializable{minimize(e,s=!1,i){const{value:a,grads:d}=this.computeGradients(e,i);if(i!=null){const h=i.map(b=>({name:b.name,tensor:d[b.name]}));this.applyGradients(h)}else this.applyGradients(d);return dispose(d),s?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,s){return variableGrads(e,s)}dispose(){this.iterations_!=null&&dispose(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:scalar(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Optimizer,Symbol.hasInstance,{value:o=>o.minimize!=null&&o.computeGradients!=null&&o.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdadeltaOptimizer extends Optimizer{static get className(){return"Adadelta"}constructor(e,s,i=null){super(),this.learningRate=e,this.rho=s,this.epsilon=i,this.accumulatedGrads=[],this.accumulatedUpdates=[],i==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(i=>i.name):Object.keys(e)).forEach((i,a)=>{const d=ENGINE.registeredVariables[i],h=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${i}/accum_grad`,variable:tidy(()=>zerosLike$2(d).variable(h))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${i}/accum_var`,variable:tidy(()=>zerosLike$2(d).variable(h))});const b=Array.isArray(e)?e[a].tensor:e[i];if(b==null)return;const _=this.accumulatedGrads[a].variable,j=this.accumulatedUpdates[a].variable;tidy(()=>{const _e=add$1(mul(_,this.rho),mul(square$2(b),1-this.rho)),g=mul(div$1(sqrt$2(add$1(j,this.epsilon)),sqrt$2(add$1(_,this.epsilon))),b),c=add$1(mul(j,this.rho),mul(square$2(g),1-this.rho));_.assign(_e),j.assign(c);const $=add$1(mul(g,-this.learningRate),d);d.assign($)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dispose(this.accumulatedGrads.map(e=>e.variable)),dispose(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(e){e=await this.extractIterations(e);const s=e.length/2,i=!1;this.accumulatedGrads=e.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(i)})),this.accumulatedUpdates=e.slice(s,s*2).map(a=>({originalName:a.name,variable:a.tensor.variable(i)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,s){return new e(s.learningRate,s.rho,s.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdagradOptimizer extends Optimizer{static get className(){return"Adagrad"}constructor(e,s=.1){super(),this.learningRate=e,this.initialAccumulatorValue=s,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(i=>i.name):Object.keys(e)).forEach((i,a)=>{const d=ENGINE.registeredVariables[i];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${i}/accumulator`,variable:tidy(()=>fill$2(d.shape,this.initialAccumulatorValue).variable(!1))});const h=Array.isArray(e)?e[a].tensor:e[i];if(h==null)return;const b=this.accumulatedGrads[a].variable;tidy(()=>{const _=add$1(b,square$2(h));b.assign(_);const j=add$1(mul(div$1(h,sqrt$2(add$1(_,ENGINE.backend.epsilon()))),-this.learningRate),d);d.assign(j)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dispose(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const s=!1;this.accumulatedGrads=e.map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,s){return new e(s.learningRate,s.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamOptimizer extends Optimizer{static get className(){return"Adam"}constructor(e,s,i,a=null){super(),this.learningRate=e,this.beta1=s,this.beta2=i,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tidy(()=>{this.accBeta1=scalar(s).variable(),this.accBeta2=scalar(i).variable()}),a==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const s=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);tidy(()=>{const i=sub$2(1,this.accBeta1),a=sub$2(1,this.accBeta2);s.forEach((d,h)=>{const b=ENGINE.registeredVariables[d],_=!1;this.accumulatedFirstMoment[h]==null&&(this.accumulatedFirstMoment[h]={originalName:`${d}/m`,variable:tidy(()=>zerosLike$2(b).variable(_))}),this.accumulatedSecondMoment[h]==null&&(this.accumulatedSecondMoment[h]={originalName:`${d}/v`,variable:tidy(()=>zerosLike$2(b).variable(_))});const j=Array.isArray(e)?e[h].tensor:e[d];if(j==null)return;const _e=this.accumulatedFirstMoment[h].variable,g=this.accumulatedSecondMoment[h].variable,c=add$1(mul(_e,this.beta1),mul(j,1-this.beta1)),$=add$1(mul(g,this.beta2),mul(square$2(j),1-this.beta2)),et=div$1(c,i),tt=div$1($,a);_e.assign(c),g.assign($);const nt=add$1(mul(div$1(et,add$1(sqrt$2(tt),this.epsilon)),-this.learningRate),b);b.assign(nt)}),this.accBeta1.assign(mul(this.accBeta1,this.beta1)),this.accBeta2.assign(mul(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&dispose(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(e){e=await this.extractIterations(e),tidy(()=>{this.accBeta1.assign(pow$2(this.beta1,this.iterations_+1)),this.accBeta2.assign(pow$2(this.beta2,this.iterations_+1))});const s=e.length/2,i=!1;this.accumulatedFirstMoment=e.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(i)})),this.accumulatedSecondMoment=e.slice(s,s*2).map(a=>({originalName:a.name,variable:a.tensor.variable(i)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,s){return new e(s.learningRate,s.beta1,s.beta2,s.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamaxOptimizer extends Optimizer{static get className(){return"Adamax"}constructor(e,s,i,a=null,d=0){super(),this.learningRate=e,this.beta1=s,this.beta2=i,this.epsilon=a,this.decay=d,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tidy(()=>{this.iteration=scalar(0).variable(),this.accBeta1=scalar(s).variable()}),a==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const s=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);tidy(()=>{const i=sub$2(1,this.accBeta1),a=div$1(-this.learningRate,add$1(mul(this.iteration,this.decay),1));s.forEach((d,h)=>{const b=ENGINE.registeredVariables[d],_=!1;this.accumulatedFirstMoment[h]==null&&(this.accumulatedFirstMoment[h]={originalName:`${d}/m`,variable:zerosLike$2(b).variable(_)}),this.accumulatedWeightedInfNorm[h]==null&&(this.accumulatedWeightedInfNorm[h]={originalName:`${d}/v`,variable:zerosLike$2(b).variable(_)});const j=Array.isArray(e)?e[h].tensor:e[d];if(j==null)return;const _e=this.accumulatedFirstMoment[h].variable,g=this.accumulatedWeightedInfNorm[h].variable,c=add$1(mul(_e,this.beta1),mul(j,1-this.beta1)),$=mul(g,this.beta2),et=abs$2(j),tt=maximum$2($,et);_e.assign(c),g.assign(tt);const nt=add$1(mul(div$1(a,i),div$1(c,add$1(tt,this.epsilon))),b);b.assign(nt)}),this.iteration.assign(add$1(this.iteration,1)),this.accBeta1.assign(mul(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&dispose(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,s){return new e(s.learningRate,s.beta1,s.beta2,s.epsilon,s.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SGDOptimizer extends Optimizer{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(i=>i.name):Object.keys(e)).forEach((i,a)=>{const d=Array.isArray(e)?e[a].tensor:e[i];if(d==null)return;const h=ENGINE.registeredVariables[i];tidy(()=>{const b=add$1(mul(this.c,d),h);h.assign(b)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=keep(scalar(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,s){return new e(s.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MomentumOptimizer extends SGDOptimizer{static get className(){return"Momentum"}constructor(e,s,i=!1){super(e),this.learningRate=e,this.momentum=s,this.useNesterov=i,this.accumulations=[],this.m=scalar(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(i=>i.name):Object.keys(e)).forEach((i,a)=>{const d=ENGINE.registeredVariables[i];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${i}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(!1))});const h=this.accumulations[a].variable,b=Array.isArray(e)?e[a].tensor:e[i];b!=null&&tidy(()=>{let _;const j=add$1(mul(this.m,h),b);this.useNesterov?_=add$1(mul(this.c,add$1(b,mul(j,this.m))),d):_=add$1(mul(this.c,j),d),h.assign(j),d.assign(_)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dispose(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const s=!1;this.accumulations=e.map(i=>({originalName:i.name,variable:i.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,s){return new e(s.learningRate,s.momentum,s.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RMSPropOptimizer extends Optimizer{static get className(){return"RMSProp"}constructor(e,s=.9,i=0,a=null,d=!1){if(super(),this.learningRate=e,this.decay=s,this.momentum=i,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=d,a==null&&(this.epsilon=ENGINE.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(i=>i.name):Object.keys(e)).forEach((i,a)=>{const d=ENGINE.registeredVariables[i],h=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${i}/rms`,variable:tidy(()=>zerosLike$2(d).variable(h))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${i}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(h))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${i}/mg`,variable:tidy(()=>zerosLike$2(d).variable(h))});const b=Array.isArray(e)?e[a].tensor:e[i];if(b==null)return;const _=this.accumulatedMeanSquares[a].variable,j=this.accumulatedMoments[a].variable;tidy(()=>{const _e=add$1(mul(_,this.decay),mul(square$2(b),1-this.decay));if(this.centered){const g=this.accumulatedMeanGrads[a].variable,c=add$1(mul(g,this.decay),mul(b,1-this.decay)),$=div$1(mul(b,this.learningRate),sqrt$2(sub$2(_e,add$1(square$2(c),this.epsilon)))),et=add$1(mul(j,this.momentum),$);_.assign(_e),g.assign(c),j.assign(et);const tt=sub$2(d,et);d.assign(tt)}else{const g=add$1(mul(_,this.decay),mul(square$2(b),1-this.decay)),c=add$1(mul(j,this.momentum),div$1(mul(b,this.learningRate),sqrt$2(add$1(g,this.epsilon))));_.assign(g),j.assign(c);const $=sub$2(d,c);d.assign($)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dispose(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dispose(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&dispose(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(e){e=await this.extractIterations(e);const s=this.centered?e.length/3:e.length/2,i=!1;this.accumulatedMeanSquares=e.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(i)})),this.accumulatedMoments=e.slice(s,s*2).map(a=>({originalName:a.name,variable:a.tensor.variable(i)})),this.centered&&(this.accumulatedMeanGrads=e.slice(s*2,s*3).map(a=>({originalName:a.name,variable:a.tensor.variable(i)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,s){return new e(s.learningRate,s.decay,s.momentum,s.epsilon,s.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OPTIMIZERS=[AdadeltaOptimizer,AdagradOptimizer,AdamOptimizer,AdamaxOptimizer,MomentumOptimizer,RMSPropOptimizer,SGDOptimizer];function registerOptimizers(){for(const o of OPTIMIZERS)registerClass(o)}function prepareAndValidate(o,e){const s=o.shape.length,i=e.shape.length;if(s<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${s}.`);if(i<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${i}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[i-1]>s)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[i-1]} vs. ${s}`);if(sizeFromShape(o.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${o.shape}.`);const a=e.shape,d=a[a.length-1];let h=1;for(let g=0;g<a.length-1;++g)h*=a[g];const b=o.shape,_=a.slice();_.pop();let j=1;for(let g=d;g<s;++g)j*=b[g],_.push(b[g]);const _e=[...computeStrides(o.shape).map(g=>g/j),1].slice(0,d);return[_,h,j,_e]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEW_AXIS=-2,SHRINK_AXIS=-1;function assertParamsValid(o,e,s){const i=o.shape.length;assert$1(i===e.length,()=>`Error in slice${i}D: Length of begin ${e} must match the rank of the array (${i}).`),assert$1(i===s.length,()=>`Error in slice${i}D: Length of size ${s} must match the rank of the array (${i}).`);for(let a=0;a<i;++a)assert$1(e[a]+s[a]<=o.shape[a],()=>`Error in slice${i}D: begin[${a}] + size[${a}] (${e[a]+s[a]}) would overflow input.shape[${a}] (${o.shape[a]})`)}function maskToAxes(o){const e=[];let s=0;for(;o>0;)o&1&&e.push(s),o/=2,s++;return e}function computeOutShape$2(o,e,s){const i=[];for(let a=0;a<o.length;a++)i[a]=Math.ceil((e[a]-o[a])/s[a]);return i}function stridesWithElidedDims(o,e,s,i){const a=[...o];for(let d=a.length;d<i.length;d++)a.push(1);for(let d=0;d<s;d++)d===0?a[e]=1:(a.splice(e,0,1),a.pop());return a}function unnormalizeAxis(o,e,s){return s<=o?s:s-(e-1)}function getElidedAxes(o,e){const s=[];for(let i=0;i<o;i++)s.push(e+i);return s}function getNormalizedAxes(o,e,s,i,a,d,h,b,_){const j=o.length;let _e=new Array(j),g=new Array(j),c=new Array(j);if(e.length&&s>0){const $=e[0],et=s+1;_e=startIndicesWithElidedDims(h,$,et,i,o),g=stopIndicesWithElidedDims(b,$,et,a,o),c=stridesWithElidedDims(d,$,et,o)}else for(let $=0;$<j;$++)_e[$]=startForAxis(h,i,d,o,$,_),g[$]=stopForAxis(b,a,d,o,$,_),c[$]=stridesForAxis(d,$,_);return{begin:_e,end:g,strides:c}}function startIndicesWithElidedDims(o,e,s,i,a){const d=[...a],h=getElidedAxes(s,e);for(let b=0;b<d.length;b++)if(h.indexOf(b)>-1)d[b]=0;else{const _=unnormalizeAxis(e,s,b);let j=i[_];o&1<<_&&(j=0),d[b]=j}return d}function stopIndicesWithElidedDims(o,e,s,i,a){const d=[...a],h=getElidedAxes(s,e);for(let b=0;b<d.length;b++)if(h.indexOf(b)>-1)d[b]=Number.MAX_SAFE_INTEGER;else{const _=unnormalizeAxis(e,s,b);let j=i[_];o&1<<_&&(j=Number.MAX_SAFE_INTEGER),d[b]=j}for(let b=0;b<d.length;b++){const _=a[b];d[b]<0&&(d[b]+=_),d[b]=clamp(0,d[b],a[b])}return d}function stridesForAxis(o,e,s){let i=o[e];return(s&1<<e||i==null)&&(i=1),i}function startForAxis(o,e,s,i,a,d){let h=e[a];const b=s[a]||1;(o&1<<a||d&1<<a||h==null)&&(b>0?h=Number.MIN_SAFE_INTEGER:h=Number.MAX_SAFE_INTEGER);const _=i[a];return h<0&&(h+=_),h=clamp(0,h,_-1),h}function stopForAxis(o,e,s,i,a,d){let h=e[a];const b=s[a]||1;(o&1<<a||d&1<<a||h==null)&&(b>0?h=Number.MAX_SAFE_INTEGER:h=Number.MIN_SAFE_INTEGER);const _=i[a];return h<0&&(h+=_),b>0?h=clamp(0,h,_):h=clamp(-1,h,_-1),h}function isSliceContinous(o,e,s){let i=s.length;for(let a=0;a<s.length;a++)if(s[a]>1){i=a;break}for(let a=i+1;a<s.length;a++)if(e[a]>0||s[a]!==o[a])return!1;return!0}function computeFlatOffset(o,e){let s=o.length>0?o[o.length-1]:1;for(let i=0;i<o.length-1;i++)s+=o[i]*e[i];return s}function parseSliceParams(o,e,s){let i;const a=o.shape.length;typeof e=="number"?i=[e,...new Array(a-1).fill(0)]:e.length<a?i=e.concat(new Array(a-e.length).fill(0)):i=e.slice(),i.forEach(h=>{assert$1(h!==-1,()=>"slice() does not support negative begin indexing.")});let d;return s==null?d=new Array(a).fill(-1):typeof s=="number"?d=[s,...new Array(a-1).fill(-1)]:s.length<a?d=s.concat(new Array(a-s.length).fill(-1)):d=s,d=d.map((h,b)=>h>=0?h:(assert$1(h===-1,()=>`Negative size values should be exactly -1 but got ${h} for the slice() size at index ${b}.`),o.shape[b]-i[b])),[i,d]}function sliceInfo(o,e,s,i,a,d,h,b,_){let j;if(i==null?(j=new Array(e.length),j.fill(1)):j=i,h!=null&&h&h-1)throw new Error("Multiple ellipses in slice is not allowed.");let _e=!1;const g={dims:j.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:s.slice(),strides:j.slice(),beginMask:a,endMask:d,ellipsisMask:h,newAxisMask:b,shrinkAxisMask:_};for(let st=0;st<g.dims;st++)_e&&1<<st&b&&g.numAddAxisAfterEllipsis++,1<<st&h&&(_e=!0);_e||(g.ellipsisMask|=1<<g.dims,g.dims++);const c={dims:o.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};buildDenseSpec(g,c);let $=!0,et=!0,tt=!0;const nt=[],rt=[];for(let st=0;st<o.length;++st){if(c.strides[st]===0)throw Error(`strides[${st}] must be non-zero`);const it=!!(c.shrinkAxisMask&1<<st),at=o[st];if(at===-1){nt.push(it?1:-1);continue}const lt=[c.beginMask&1<<st,c.endMask&1<<st],ut=[c.strides[st]>0?0:-1,c.strides[st]>0?at:at-1];if(it&&c.strides[st]<=0)throw Error("only stride 1 allowed on non-range indexing.");tt=tt&&c.strides[st]===1;const ct=!!(c.beginMask&1<<st&&c.endMask&1<<st);if(c.beginValid&&c.endValid){if(it){const xt=c.begin[st]<0?at+c.begin[st]:c.begin[st];if(c.begin[st]=xt,c.end[st]=c.begin[st]+1,xt<0||xt>=at)throw Error(`slice index ${c.begin[st]} of dimension ${st} out of bounds.`)}else c.begin[st]=canonical(c.begin[st],0,c.strides[st],at,lt,ut),c.end[st]=canonical(c.end[st],1,c.strides[st],at,lt,ut);const yt=c.strides[st]===1&&c.begin[st]===0&&c.end[st]===at;$=$&&yt,et=et&&(st===0&&c.strides[st]===1||yt)}else $=$&&c.strides[st]===1&&ct,et=et&&(st===0&&c.strides[st]===1||ct);let pt,ht=!1;if(c.beginValid&&c.endValid?(pt=c.end[st]-c.begin[st],ht=!0):it?(pt=1,ht=!0):ct&&at>=0&&(c.strides[st]<0?pt=-at:pt=at,ht=!0),ht){let yt;pt===0||pt<0!=c.strides[st]<0?yt=0:yt=Math.trunc(pt/c.strides[st])+(pt%c.strides[st]!==0?1:0),nt.push(yt)}else nt.push(-1)}for(let st=0;st<c.finalShapeGatherIndices.length;++st){const it=c.finalShapeGatherIndices[st];it>=0?rt.push(nt[it]):it===NEW_AXIS&&rt.push(1)}return{finalShapeSparse:rt.filter((st,it)=>c.finalShapeGatherIndices[it]!==NEW_AXIS),finalShape:rt,isIdentity:$,sliceDim0:et,isSimpleSlice:tt,begin:c.begin,end:c.end,strides:c.strides}}function buildDenseSpec(o,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let s=0;e.beginValid=o.begin!=null,e.endValid=o.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let i=0;i<o.dims;i++)if(1<<i&o.ellipsisMask){const a=Math.min(e.dims-(o.dims-i)+1+o.numAddAxisAfterEllipsis,e.dims);for(;s<a;s++)e.begin[s]=0,e.end[s]=0,e.strides[s]=1,e.beginMask|=1<<s,e.endMask|=1<<s,e.finalShapeGatherIndices.push(s),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[s]=i}else if(1<<i&o.newAxisMask)e.finalShapeGatherIndices.push(NEW_AXIS),e.finalShapeGatherIndicesSparse.push(-1);else{if(s===e.begin.length)throw Error(`Index out of range using input dim ${s}; input has only ${e.dims} dims, ${e.begin.length}.`);o.begin!=null&&(e.begin[s]=o.begin[i]),o.end!=null&&(e.end[s]=o.end[i]),e.strides[s]=o.strides[i],o.beginMask&1<<i&&(e.beginMask|=1<<s),o.endMask&1<<i&&(e.endMask|=1<<s),o.shrinkAxisMask&1<<i?(e.finalShapeGatherIndices.push(SHRINK_AXIS),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<s):(e.finalShapeGatherIndices.push(s),e.finalShapeGatherIndicesSparse.push(i)),e.inputShapeGatherIndicesSparse[s]=i,s++}}function canonical(o,e,s,i,a,d){if(a[e])return s>0?d[e]:d[e+1&1];{const h=o<0?i+o:o;return h<d[0]?d[0]:h>d[1]?d[1]:h}}const slice_util=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid,computeFlatOffset,computeOutShape:computeOutShape$2,getNormalizedAxes,isSliceContinous,maskToAxes,parseSliceParams,sliceInfo,startForAxis,startIndicesWithElidedDims,stopForAxis,stopIndicesWithElidedDims,stridesForAxis,stridesWithElidedDims},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OptimizerConstructors{static sgd(e){return new SGDOptimizer(e)}static momentum(e,s,i=!1){return new MomentumOptimizer(e,s,i)}static rmsprop(e,s=.9,i=0,a=null,d=!1){return new RMSPropOptimizer(e,s,i,a,d)}static adam(e=.001,s=.9,i=.999,a=null){return new AdamOptimizer(e,s,i,a)}static adadelta(e=.001,s=.95,i=null){return new AdadeltaOptimizer(e,s,i)}static adamax(e=.002,s=.9,i=.999,a=null,d=0){return new AdamaxOptimizer(e,s,i,a,d)}static adagrad(e,s=.1){return new AdagradOptimizer(e,s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const train=OptimizerConstructors;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const delayCallback=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:o=>o();function nextFrame(){return new Promise(o=>delayCallback(()=>o()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsConsistent(o,e){const s=o[0].length;o.forEach((a,d)=>{assert$1(a.length===s,()=>`Error in concat${s}D: rank of tensors[${d}] must be the same as the rank of the rest (${s})`)}),assert$1(e>=0&&e<s,()=>`Error in concat${s}D: axis must be between 0 and ${s-1}.`);const i=o[0];o.forEach((a,d)=>{for(let h=0;h<s;h++)assert$1(h===e||a[h]===i[h],()=>`Error in concat${s}D: Shape of tensors[${d}] (${a}) does not match the shape of the rest (${i}) along the non-concatenated axis ${d}.`)})}function computeOutShape$1(o,e){const s=o[0].slice();for(let i=1;i<o.length;i++)s[e]+=o[i][e];return s}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var RowPartitionType$1;(function(o){o[o.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",o[o.VALUE_ROWIDS=1]="VALUE_ROWIDS",o[o.ROW_LENGTHS=2]="ROW_LENGTHS",o[o.ROW_SPLITS=3]="ROW_SPLITS",o[o.ROW_LIMITS=4]="ROW_LIMITS",o[o.ROW_STARTS=5]="ROW_STARTS"})(RowPartitionType$1||(RowPartitionType$1={}));function combineRaggedTensorToTensorShapes(o,e,s){let i=new Array;if(s==null&&e==null)return i;if(e==null)for(;i.length<o+s.length;)i.push(-1);else i=e.slice();if(s==null)return i;if(o+s.length!==i.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${o+s.length}, but shape.rank = ${i.length}`);for(let a=1;a<s.length;++a){const d=s[a],h=i[i.length-s.length+a],b=i[h];if(d>=0)if(b>=0){if(b!==d)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${a+o}] = ${d} but shape[${a+o}] = ${b}`)}else i[h]=d}return i}function getRowPartitionTypesHelper(o){const e={FIRST_DIM_SIZE:RowPartitionType$1.FIRST_DIM_SIZE,VALUE_ROWIDS:RowPartitionType$1.VALUE_ROWIDS,ROW_LENGTHS:RowPartitionType$1.ROW_LENGTHS,ROW_SPLITS:RowPartitionType$1.ROW_SPLITS,ROW_LIMITS:RowPartitionType$1.ROW_LIMITS,ROW_STARTS:RowPartitionType$1.ROW_STARTS},s=[];for(const i of o)if(i in e)s.push(e[i]);else break;return s}function getRaggedRank(o){return o.length===0?0:o[0]===RowPartitionType$1.FIRST_DIM_SIZE?o.length-1:o.length}function validateDefaultValueShape(o,e){if(o==null||e==null)return;const s=o.length,i=e.length;if(s>=i)throw new Error(`defaultValue.shape=${o} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${s} must be less than ragged tensor input flatValues.rank = ${i})`);for(let a=0;a<Math.min(s,i-1);++a){const d=o[a],h=e[a+1];if(d>=0&&h>=0&&d!==1&&d!==h)throw new Error(`defaultValue.shape=${o}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${a-o.length}] = ${d} but ragged tensor input.flatValues.shape[${a-o.length}] = ${h}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(o){return o<=PARALLELIZE_THRESHOLD?o:nearestDivisor(o,Math.floor(Math.sqrt(o)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getImageCenter(o,e,s){const i=s*(typeof o=="number"?o:o[0]),a=e*(typeof o=="number"?o:o[1]);return[i,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReshaped(o,e,s,i=!0){let a=[];if(i)a=a.concat(e.slice(0)),a.push(o[0]/s),a=a.concat(o.slice(1));else{a=a.concat(o[0]);const d=e.length;for(let h=0;h<d;++h)a=a.concat([o[h+1]/e[h],e[h]]);a=a.concat(o.slice(d+1))}return a}function getPermuted(o,e,s=!0){const i=[];if(s){i.push(e);for(let a=e+1;a<o;++a)a<=2*e?(i.push(a),i.push(a-(e+1))):i.push(a)}else{const a=[],d=[];for(let h=1;h<o;++h)h>=e*2+1||h%2===1?d.push(h):a.push(h);i.push(...a),i.push(0),i.push(...d)}return i}function getReshapedPermuted(o,e,s,i=!0){const a=[];i?a.push(o[0]/s):a.push(o[0]*s);for(let d=1;d<o.length;++d)d<=e.length?i?a.push(e[d-1]*o[d]):a.push(o[d]/e[d-1]):a.push(o[d]);return a}function getSliceBeginCoords(o,e){const s=[0];for(let i=0;i<e;++i)s.push(o[i][0]);return s}function getSliceSize(o,e,s){const i=o.slice(0,1);for(let a=0;a<s;++a)i.push(o[a+1]-e[a][0]-e[a][1]);return i}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mergeRealAndImagArrays(o,e){if(o.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${o.length}, imag: ${e.length}.`);const s=new Float32Array(o.length*2);for(let i=0;i<s.length;i+=2)s[i]=o[i/2],s[i+1]=e[i/2];return s}function splitRealAndImagArrays(o){const e=new Float32Array(o.length/2),s=new Float32Array(o.length/2);for(let i=0;i<o.length;i+=2)e[i/2]=o[i],s[i/2]=o[i+1];return{real:e,imag:s}}function complexWithEvenIndex(o){const e=Math.ceil(o.length/4),s=new Float32Array(e),i=new Float32Array(e);for(let a=0;a<o.length;a+=4)s[Math.floor(a/4)]=o[a],i[Math.floor(a/4)]=o[a+1];return{real:s,imag:i}}function complexWithOddIndex(o){const e=Math.floor(o.length/4),s=new Float32Array(e),i=new Float32Array(e);for(let a=2;a<o.length;a+=4)s[Math.floor(a/4)]=o[a],i[Math.floor(a/4)]=o[a+1];return{real:s,imag:i}}function getComplexWithIndex(o,e){const s=o[e*2],i=o[e*2+1];return{real:s,imag:i}}function assignToTypedArray(o,e,s,i){o[i*2]=e,o[i*2+1]=s}function exponents(o,e){const s=new Float32Array(o/2),i=new Float32Array(o/2);for(let a=0;a<Math.ceil(o/2);a++){const d=(e?2:-2)*Math.PI*(a/o);s[a]=Math.cos(d),i[a]=Math.sin(d)}return{real:s,imag:i}}function exponent(o,e,s){const i=(s?2:-2)*Math.PI*(o/e),a=Math.cos(i),d=Math.sin(i);return{real:a,imag:d}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ARROW="->",ARROW_REGEX=/->/g,COMMA=",",ELLIPSIS="...";function decodeEinsumEquation(o,e){o=o.replace(/\s/g,"");const s=(o.length-o.replace(ARROW_REGEX,"").length)/ARROW.length;if(s<1)throw new Error("Equations without an arrow are not supported.");if(s>1)throw new Error(`Equation must contain exactly one arrow ("${ARROW}").`);const[i,a]=o.split(ARROW);assert$1(i.indexOf(ELLIPSIS)===-1,()=>`The ellipsis notation ("${ELLIPSIS}") is not supported yet.`);const d=i.split(COMMA),h=d.length;if(e!==h)throw new Error(`Expected ${h} input tensors, received ${e}`);if(h>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const b=[];for(let c=0;c<a.length;++c){const $=a[c];if(!d.some(et=>et.indexOf($)!==-1))throw new Error(`Output subscripts contain the label ${$} not present in the input subscripts.`);b.indexOf($)===-1&&b.push($)}for(let c=0;c<i.length;++c){const $=i[c];b.indexOf($)===-1&&$!==COMMA&&b.push($)}const _=new Array(d.length);for(let c=0;c<h;++c){if(new Set(d[c].split("")).size!==d[c].length)throw new Error(`Found duplicate axes in input component ${d[c]}. Support for duplicate axes in input is not implemented yet.`);_[c]=[];for(let $=0;$<d[c].length;++$)_[c].push(b.indexOf(d[c][$]))}const j=b.length,_e=a.length,g=[];for(let c=_e;c<j;++c)g.push(c);return{allDims:b,summedDims:g,idDims:_}}function getEinsumPermutation(o,e){let s=new Array(o);s.fill(-1);for(let a=0;a<e.length;++a)s[e[a]]=a;const i=[];for(let a=0;a<o;++a)s[a]===-1&&i.push(a);return s=s.filter(a=>a!==-1),{permutationIndices:s,expandDims:i}}function checkEinsumDimSizes(o,e,s){const i=new Array(o);for(let a=0;a<s.length;++a){const d=s[a].shape;for(let h=0;h<e[a].length;++h)i[e[a][h]]===void 0?i[e[a][h]]=d[h]:assert$1(i[e[a][h]]===d[h],()=>`Expected dimension ${i[e[a][h]]} at axis ${h} of input shaped ${JSON.stringify(d)}, but got dimension ${d[h]}`)}}function getEinsumComputePath(o,e){const s=o,i=[];let a=0;o.length===0&&s.push(-1),a=o.length+1;for(let h=0;h<a;++h)i.push([]);const d=[];for(let h=0;h<s.length;++h){const b=s[h],_=findTermsWithDim(e,b);for(const j of _)d.indexOf(j)===-1&&(i[h].push(j),d.push(j))}return{path:s,steps:i}}function isIdentityPermutation(o){return o.every((e,s)=>e===s)}function findTermsWithDim(o,e){const s=[];for(let i=0;i<o.length;++i)(o[i].length===0||o[i].indexOf(e)!==-1||e===-1)&&s.push(i);return s}function prepareSplitSize(o,e,s=0){let i=[];if(typeof e=="number")assert$1(o.shape[s]%e===0,()=>"Number of splits must evenly divide the axis."),i=new Array(e).fill(o.shape[s]/e);else{const a=e.reduce((h,b)=>(b===-1&&(h+=1),h),0);assert$1(a<=1,()=>"There should be only one negative value in split array.");const d=e.indexOf(-1);if(d!==-1){const h=e.reduce((b,_)=>_>0?b+_:b);e[d]=o.shape[s]-h}assert$1(o.shape[s]===e.reduce((h,b)=>h+b),()=>"The sum of sizes must match the size of the axis dimension."),i=e}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseFillEmptyRowsIndicesDenseShapeMismatch(o){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${o}`}function getSparseFillEmptyRowsNegativeIndexErrorMessage(o,e){return`indices(${o}, 0) is invalid: ${e} < 0`}function getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(o,e,s){return`indices(${o}, 0) is invalid: ${e} >= ${s}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(o,e){return`only one output dimension may be -1, not both ${o} and ${e}`}function getSparseReshapeNegativeOutputDimErrorMessage(o,e){return`size ${o} must be non-negative, not ${e}`}function getSparseReshapeEmptyTensorZeroOutputDimErrorMessage(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function getSparseReshapeInputOutputMultipleErrorMessage(o,e){const s=sizeFromShape(o),i=sizeFromShape(e);return`Input to reshape is a SparseTensor with ${s}
  dense values, but the requested shape requires a multiple of ${i}. inputShape=${o} outputShape= ${e}`}function getSparseReshapeInputOutputMismatchErrorMessage(o,e){const s=sizeFromShape(o),i=sizeFromShape(e);return`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${i}. inputShape=${o} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseSegmentReductionNegativeSegmentIdsErrorMessage(){return"segment ids must be >= 0"}function getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage(){return"segment ids are not increasing"}function getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(o,e){return`Segment id ${o} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function getSparseSegmentReductionIndicesOutOfRangeErrorMessage(o,e,s){return`Bad: indices[${o}] == ${e} out of range [0, ${s})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function segOpComputeOptimalWindowSize(o,e){let s=!1,i;for(o<=PARALLELIZE_THRESHOLD?(i=o,s=!0):i=nearestDivisor(o,Math.floor(Math.sqrt(o)));!s;)i>e||i===o?s=!0:i=nearestDivisor(o,i+1);return i}function computeOutShape(o,e,s){const i=[],a=o.length;for(let d=0;d<a;d++)d!==e?i.push(o[d]):i.push(s);return i}function collectGatherOpShapeInfo(o,e,s,i){const a=e.shape.length,d=o.shape.length;if(i!==0&&(i<-a||i>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${i}`);if(i<0&&(i+=a),i>d)throw new Error(`batchDims (${i}) must be less than rank(x) (
    ${d}).`);if(s<i)throw new Error(`batchDims (${i}) must be less than or equal to axis (${s}).`);for(let g=0;g<i;++g)if(o.shape[g]!==e.shape[g])throw new Error(`x.shape[${g}]: ${o.shape[g]} should be equal to indices.shape[${g}]: ${e.shape[g]}.`);const h=o.shape[s],b=[];let _=1,j=1,_e=1;for(let g=0;g<i;++g)b.push(o.shape[g]),_*=o.shape[g];for(let g=i;g<s;g++)b.push(o.shape[g]),j*=o.shape[g];for(let g=i;g<a;g++)b.push(e.shape[g]);for(let g=s+1;g<d;g++)b.push(o.shape[g]),_e*=o.shape[g];return{batchSize:_,sliceSize:_e,outerSize:j,dimSize:h,outputShape:b}}const segment_util=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo,computeOutShape,segOpComputeOptimalWindowSize},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fromUint8ToStringArray(o){try{return o.map(e=>decodeString(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fromStringArrayToUint8(o){return o.map(e=>encodeString(e))}const backend_util=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1,ERF_A2,ERF_A3,ERF_A4,ERF_A5,ERF_P,PARALLELIZE_THRESHOLD,get RowPartitionType(){return RowPartitionType$1},SELU_SCALE,SELU_SCALEALPHA,applyActivation:applyActivation$1,assertAndGetBroadcastShape,assertAxesAreInnerMostDims,assertParamsConsistent,assignToTypedArray,axesAreInnerMostDims,calculateShapes,checkEinsumDimSizes,checkPadOnDimRoundingMode,combineLocations,combineRaggedTensorToTensorShapes,complexWithEvenIndex,complexWithOddIndex,computeConv2DInfo,computeConv3DInfo,computeDefaultPad,computeDilation2DInfo,computeOptimalWindowSize,computeOutAndReduceShapes,computeOutShape:computeOutShape$1,computePool2DInfo,computePool3DInfo,convertConv2DDataFormat,decodeEinsumEquation,eitherStridesOrDilationsAreOne,expandShapeToKeepDim,exponent,exponents,fromStringArrayToUint8,fromUint8ToStringArray,getAxesPermutation,getBroadcastDims:getBroadcastDims$1,getComplexWithIndex,getEinsumComputePath,getEinsumPermutation,getFusedBiasGradient,getFusedDyActivation,getImageCenter,getInnerMostAxes,getPermuted,getRaggedRank,getReductionAxes,getReshaped,getReshapedPermuted,getRowPartitionTypesHelper,getSliceBeginCoords,getSliceSize,getSparseFillEmptyRowsIndicesDenseShapeMismatch,getSparseFillEmptyRowsNegativeIndexErrorMessage,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage,getSparseReshapeInputOutputMismatchErrorMessage,getSparseReshapeInputOutputMultipleErrorMessage,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage,getSparseReshapeNegativeOutputDimErrorMessage,getSparseSegmentReductionIndicesOutOfRangeErrorMessage,getSparseSegmentReductionNegativeSegmentIdsErrorMessage,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage,getUndoAxesPermutation,isIdentityPermutation,log:log$3,mergeRealAndImagArrays,prepareAndValidate,prepareSplitSize,segment_util,shouldFuse,slice_util,splitRealAndImagArrays,stridesOrDilationsArePositive,tupleValuesAreOne,upcastType,validateDefaultValueShape,validateInput,validateUpdateShape,warn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerOptimizers();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const absGradConfig={kernelName:Abs,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,step$2(cast$3(s,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosGradConfig={kernelName:Acos,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>{const i=square$2(cast$3(s,"float32")),a=sqrt$2(sub$2(scalar(1),i));return neg$2(div$1(o,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acoshGradConfig={kernelName:Acosh,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>{const i=sqrt$2(sub$2(square$2(cast$3(s,"float32")),1));return div$1(o,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addGradConfig={kernelName:Add$1,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{let b=o;const _=getReductionAxes(s.shape,a);return _.length>0&&(b=sum$2(b,_)),reshape$2(b,s.shape)},b:()=>{let b=o;const _=getReductionAxes(i.shape,a);return _.length>0&&(b=sum$2(b,_)),reshape$2(b,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addNGradConfig={kernelName:AddN,saveAllInputs:!0,gradFunc:(o,e)=>{const s={};return e.forEach((i,a)=>{s[a]=()=>o.clone()}),s}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMaxGradConfig={kernelName:ArgMax,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>zerosLike$2(s)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMinGradConfig={kernelName:ArgMin,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>zerosLike$2(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinGradConfig={kernelName:Asin,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,sqrt$2(sub$2(scalar(1),square$2(cast$3(s,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinhGradConfig={kernelName:Asinh,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>{const i=sqrt$2(add$1(scalar(1),square$2(cast$3(s,"float32"))));return div$1(o,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2GradConfig={kernelName:Atan2,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const b=add$1(square$2(s),square$2(i));let _=mul(o,div$1(i,b));const j=getReductionAxes(s.shape,a);return j.length>0&&(_=sum$2(_,j)),reshape$2(_,s.shape)},b:()=>{const b=add$1(square$2(s),square$2(i));let _=neg$2(mul(o,div$1(s,b)));const j=getReductionAxes(i.shape,a);return j.length>0&&(_=sum$2(_,j)),reshape$2(_,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanGradConfig={kernelName:Atan,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,add$1(square$2(cast$3(s,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanhGradConfig={kernelName:Atanh,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,sub$2(scalar(1),square$2(cast$3(s,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3dGrad_(o,e,s,i,a,d){const h=convertToTensor(o,"dy","avgPool3dGrad"),b=convertToTensor(e,"input","avgPool3dGrad");let _=h,j=b,_e=!1;b.rank===4&&(_e=!0,_=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]]),j=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]])),assert$1(_.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${_.rank}.`),assert$1(j.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${j.rank}.`),checkPadOnDimRoundingMode("avgPool3dGrad",a,d);const g={dy:_,input:j},c={filterSize:s,strides:i,pad:a,dimRoundingMode:d},$=ENGINE.runKernel(AvgPool3DGrad,g,c);return _e?reshape$2($,[$.shape[1],$.shape[2],$.shape[3],$.shape[4]]):$}const avgPool3dGrad=op({avgPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPool3DGradConfig$2={kernelName:AvgPool3D,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{filterSize:a,strides:d,pad:h,dimRoundingMode:b}=s;return{x:()=>avgPool3dGrad(o,i,a,d,h,b)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad_(o,e,s,i,a){const d=convertToTensor(o,"dy","avgPoolGrad"),h=convertToTensor(e,"input","avgPoolGrad");assert$1(h.rank===d.rank,()=>`Rank of input (${h.rank}) does not match rank of dy (${d.rank})`);let b=h,_=d,j=!1;h.rank===3&&(j=!0,b=reshape$2(h,[1,h.shape[0],h.shape[1],h.shape[2]]),_=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1(_.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${_.rank}.`),assert$1(b.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${b.rank}.`);const _e={dy:_,input:b},g={filterSize:s,strides:i,pad:a},c=ENGINE.runKernel(AvgPoolGrad,_e,g);return j?reshape$2(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const avgPoolGrad$2=op({avgPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPoolGradConfig$2={kernelName:AvgPool,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{filterSize:a,strides:d,pad:h}=s;return{x:()=>avgPoolGrad$2(o,i,a,d,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchMatMulGradConfig={kernelName:BatchMatMul,inputsToSave:["a","b"],gradFunc:(o,e,s)=>{const[i,a]=e,{transposeA:d,transposeB:h}=s;return!d&&!h?{a:()=>matMul$1(o,a,!1,!0),b:()=>matMul$1(i,o,!0,!1)}:!d&&h?{a:()=>matMul$1(o,a,!1,!1),b:()=>matMul$1(o,i,!0,!1)}:d&&!h?{a:()=>matMul$1(a,o,!1,!0),b:()=>matMul$1(i,o,!1,!1)}:{a:()=>matMul$1(a,o,!0,!0),b:()=>matMul$1(o,i,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceNDGradConfig={kernelName:BatchToSpaceND,gradFunc:(o,e,s)=>{const{blockShape:i,crops:a}=s;return{x:()=>spaceToBatchND$2(o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const broadcastToGradConfig={kernelName:BroadcastTo,gradFunc:(o,e,s)=>{const i=s,a=i.inputShape,d=i.shape,h=Array.from(d);for(let _=a.length-1;_>=0;_--)if(a[_]===d[_])h[_]=1;else if(a[_]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${d}].`);const b=[];for(let _=0;_<h.length;_++)h[_]>1&&b.push(_);return{x:()=>sum$2(o,b,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const castGradConfig={kernelName:Cast,gradFunc:o=>({x:()=>o.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilGradConfig={kernelName:Ceil,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValueGradConfig={kernelName:ClipByValue,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{clipValueMin:a,clipValueMax:d}=s;return{x:()=>where(logicalAnd$2(greaterEqual$2(i,a),lessEqual$2(i,d)),o,zerosLike$2(o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbsGradConfig={kernelName:ComplexAbs,inputsToSave:["x"],gradFunc:absGradConfig.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const concatGradConfig={kernelName:Concat,saveAllInputs:!0,gradFunc:(o,e,s)=>{const i=e.map(_=>_.shape),{axis:a}=s,d=parseAxisParam(a,e[0].shape)[0],h=i.map(_=>_[d]);return split$1(o,h,d).map(_=>()=>_)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DGradConfig={kernelName:Conv2D$1,inputsToSave:["x","filter"],gradFunc:(o,e,s)=>{const[i,a]=e,{dilations:d,strides:h,pad:b,dataFormat:_}=s;return assert$1(tupleValuesAreOne(d),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`),{x:()=>conv2DBackpropInput$2(i.shape,o,a,h,b,_),filter:()=>conv2DBackpropFilter$2(i,o,a.shape,h,b,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DBackpropInputGradConfig={kernelName:Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(o,e,s)=>{const[i,a]=e,{strides:d,pad:h,dataFormat:b,dimRoundingMode:_}=s;return{dy:()=>conv2d$2(o,a,d,h,b,1,_),filter:()=>conv2DBackpropFilter$2(o,i,a.shape,d,h,b,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilter_(o,e,s,i,a){let d=o;o.rank===4&&(d=reshape$2(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));let h=e;h.rank===4&&(h=reshape$2(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),assert$1(d.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${d.shape}.`),assert$1(h.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${h.shape}.`),assert$1(s.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${s}.`),assert$1(d.shape[4]===s[3],()=>`Error in conv3dDerFilter: depth of input ${d.shape[4]}) must match input depth in filter (${s[3]}.`),assert$1(h.shape[4]===s[4],()=>`Error in conv3dDerFilter: depth of dy (${h.shape[4]}) must match output depth for filter (${s[4]}).`);const b={x:d,dy:h},_={strides:i,pad:a,filterShape:s};return ENGINE.runKernel(Conv3DBackpropFilterV2,b,_)}const conv3DBackpropFilter=op({conv3DBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv3DGradConfig={kernelName:Conv3D$1,inputsToSave:["x","filter"],gradFunc:(o,e,s)=>{const{dilations:i,strides:a,pad:d}=s;assert$1(tupleValuesAreOne(i),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const[h,b]=e;return{x:()=>conv3DBackpropInput$1(h.shape,o,b,a,d),filter:()=>conv3DBackpropFilter(h,o,b.shape,a,d)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosGradConfig={kernelName:Cos,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(neg$2(sin$2(cast$3(s,"float32"))),o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coshGradConfig={kernelName:Cosh,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(sinh$2(cast$3(s,"float32")),o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cumsumGradConfig={kernelName:Cumsum,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{axis:a,exclusive:d,reverse:h}=s;return{x:()=>{const b=getAxesPermutation([a],i.rank);let _=cumsum$2(o,a,d,!h);return b!=null&&(_=transpose$2(_,b)),_}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const depthwiseConv2dNativeGradConfig={kernelName:DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(o,e,s)=>{const{dilations:i,strides:a,pad:d,dimRoundingMode:h}=s,b=i??[1,1];assert$1(tupleValuesAreOne(b),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${b}'`);const[_,j]=e;return assert$1(_.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${_.rank}.`),assert$1(j.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${j.rank}.`),assert$1(_.shape[3]===j.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${_.shape[3]}) must match the inChannels dimension in filter ${j.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(a,b),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${b}'.`),checkPadOnDimRoundingMode("depthwiseConv2d",d,h),{x:()=>depthwiseConv2dNativeBackpropInput$2(_.shape,o,j,a,d,b,h),filter:()=>depthwiseConv2dNativeBackpropFilter$2(_,o,j.shape,a,d,b,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dGradConfig={kernelName:Dilation2D,inputsToSave:["x","filter"],gradFunc:(o,e,s)=>{const[i,a]=e,d={x:i,filter:a,dy:o},h={x:i,filter:a,dy:o};return{x:()=>ENGINE.runKernel(Dilation2DBackpropInput,d,s),filter:()=>ENGINE.runKernel(Dilation2DBackpropFilter,h,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eluGradConfig$2={kernelName:Elu$1,outputsToSave:[!0],gradFunc:(o,e)=>{const[s]=e,i={dy:o,y:s};return{x:()=>ENGINE.runKernel(EluGrad,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const erfGradConfig={kernelName:Erf,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e,i=mul(exp$2(neg$2(square$2(s))),2/Math.sqrt(Math.PI));return{x:()=>mul(o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expGradConfig={kernelName:Exp,outputsToSave:[!0],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expandDimsGradConfig={kernelName:ExpandDims,inputsToSave:["input"],gradFunc:(o,e)=>{const[s]=e;return{input:()=>reshape$2(o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1GradConfig={kernelName:Expm1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,exp$2(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorGradConfig={kernelName:Floor,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivGradConfig={kernelName:FloorDiv,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const b=div$1(o,cast$3(i,"float32")),_=getReductionAxes(s.shape,a);return _.length>0?reshape$2(sum$2(b,_),s.shape):b},b:()=>{let b=mul(o,cast$3(s,"float32"));const _=getReductionAxes(i.shape,a);_.length>0&&(b=reshape$2(sum$2(b,_),i.shape));const j=square$2(i);return neg$2(div$1(b,cast$3(j,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fusedBatchNormGradConfig={kernelName:FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(o,e,s)=>{const{varianceEpsilon:i}=s,[a,d,h,b]=e,_=b??scalar(1),j=getReductionAxes(d.shape,a.shape),_e=[];if(d.rank===1){for(let it=0;it<a.shape.length-1;++it)_e.push(a.shape[it]);_e.push(1)}const g=sub$2(a,d),c=mul(o,_),$=rsqrt$2(add$1(h,scalar(i))),et=mul(mul(mul($,$),$),scalar(-.5));return{x:()=>d.rank===1?reshape$2(mul(mul(o,tile$3(reshape$2($,[1,1,1,d.shape[0]]),_e)),_),a.shape):reshape$2(mul(mul(o,$),_),a.shape),mean:()=>{let it=mul(mul($,scalar(-1)),c);return d.rank===1&&(it=sum$2(it,j)),reshape$2(it,d.shape)},variance:()=>{let it=mul(mul(et,g),c);return d.rank===1&&(it=sum$2(it,j)),reshape$2(it,d.shape)},scale:()=>{const it=mul(g,$);let at=mul(o,it);return d.rank===1&&(at=sum$2(at,j)),reshape$2(at,d.shape)},offset:()=>{let it=o;return d.rank===1&&(it=sum$2(it,j)),reshape$2(it,d.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gatherGradConfig={kernelName:GatherV2,inputsToSave:["x","indices"],gradFunc:(o,e,s)=>{const[i,a]=e,{axis:d,batchDims:h}=s,b=parseAxisParam(d,i.shape)[0],_=(j,_e,g)=>()=>{const c=j.shape,$=_e.size,et=c.slice(0,b),tt=et.length,nt=c.slice(d,c.length).slice(1),rt=nt.length,ot=arrayRange(0,tt),st=arrayRange(tt+1,tt+1+rt),it=arrayConcat([et,[$],nt]),at=reshape$2(g,it),lt=reshape$2(_e,[$]),ut=arrayConcat([[tt],ot,st]),ct=transpose$2(at,ut);let pt=unsortedSegmentSum$2(ct,lt,j.shape[b]);const ht=getUndoAxesPermutation(ut);return pt=transpose$2(pt,ht),pt};if(h===1){const j=i.shape[0],_e=i.split(j,0);return{x:()=>stack(_e.map(($,et)=>_($,a.slice(et,1),o.slice(et,1))())).reshape(i.shape),indices:()=>a}}else return{x:_(i,a,o),indices:()=>a}}};function arrayRange(o,e){const s=[];for(let i=o;i<e;++i)s.push(i);return s}function arrayConcat(o){const e=[];for(let s=0;s<o.length;++s)for(let i=0;i<o[s].length;++i)e.push(o[s][i]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualGradConfig={kernelName:GreaterEqual,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e;return{a:()=>zerosLike$2(s),b:()=>zerosLike$2(i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const identityGradConfig={kernelName:Identity$1,gradFunc:o=>({x:()=>cast$3(o,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFiniteGradConfig={kernelName:IsFinite,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInfGradConfig={kernelName:IsInf,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNanGradConfig={kernelName:IsNan,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const leakyReluGradConfig={kernelName:LeakyRelu,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{alpha:a}=s,d=greater$2(i,0);return{x:()=>where(d,o,mul(o,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1pGradConfig={kernelName:Log1p,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,add$1(s,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logGradConfig={kernelName:Log,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,cast$3(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logSoftmaxGradConfig={kernelName:LogSoftmax$1,inputsToSave:[],outputsToSave:[!0],gradFunc:(o,e,s)=>{const[i]=e,{axis:a}=s;return{logits:()=>{const h=exp$2(i);return sub$2(o,mul(sum$2(o,a,!0),h))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalizationBackprop_(o,e,s,i=5,a=1,d=1,h=.5){const b={x:o,y:e,dy:s},_={depthRadius:i,bias:a,alpha:d,beta:h};return ENGINE.runKernel(LRNGrad,b,_)}const localResponseNormalizationBackprop=op({localResponseNormalizationBackprop_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGradConfig={kernelName:LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(o,e,s)=>{const[i,a]=e,{depthRadius:d,bias:h,alpha:b,beta:_}=s;return{x:()=>localResponseNormalizationBackprop(i,a,o,d,h,b,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gradForMinAndMax(o,e,s,i){return e.rank<s.rank&&(e=reshape$2(e,expandShapeToKeepDim(e.shape,i))),o.rank<s.rank&&(o=reshape$2(o,expandShapeToKeepDim(o.shape,i))),{x:()=>mul(o,cast$3(equal$2(s,e),o.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxGradConfig={kernelName:Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(o,e,s)=>{const i=s,{reductionIndices:a}=i,d=e[0],h=e[1],b=parseAxisParam(a,d.shape),_=gradForMinAndMax(o,h,d,b);return{x:()=>_.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumGradConfig={kernelName:Maximum$1,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e;return{a:()=>mul(o,cast$3(greaterEqual$2(s,i),"float32")),b:()=>mul(o,cast$3(less$2(s,i),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3dGrad_(o,e,s,i,a,d,h){const b=convertToTensor(o,"dy","maxPool3dGrad"),_=convertToTensor(e,"input","maxPool3dGrad"),j=convertToTensor(s,"output","maxPool3dGrad");let _e=b,g=_,c=j,$=!1;_.rank===4&&($=!0,_e=reshape$2(b,[1,b.shape[0],b.shape[1],b.shape[2],b.shape[3]]),g=reshape$2(_,[1,_.shape[0],_.shape[1],_.shape[2],_.shape[3]]),c=reshape$2(j,[1,j.shape[0],j.shape[1],j.shape[2],j.shape[3]])),assert$1(_e.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${_e.rank}.`),assert$1(g.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${g.rank}.`),assert$1(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),checkPadOnDimRoundingMode("maxPool3dGrad",d,h);const et={dy:_e,input:g,output:c},tt={filterSize:i,strides:a,pad:d,dimRoundingMode:h},nt=ENGINE.runKernel(MaxPool3DGrad,et,tt);return $?reshape$2(nt,[nt.shape[1],nt.shape[2],nt.shape[3],nt.shape[4]]):nt}const maxPool3dGrad=op({maxPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPool3DGradConfig$2={kernelName:MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(o,e,s)=>{const[i,a]=e,{filterSize:d,strides:h,pad:b,dimRoundingMode:_}=s;return{x:()=>maxPool3dGrad(o,i,a,d,h,b,_)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad_(o,e,s,i,a,d,h){const b=convertToTensor(o,"dy","maxPoolGrad"),_=convertToTensor(e,"input","maxPoolGrad"),j=convertToTensor(s,"output","maxPoolGrad");assert$1(_.rank===b.rank,()=>`Rank of input (${_.rank}) does not match rank of dy (${b.rank})`),assert$1(b.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${b.rank}.`),assert$1(_.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${_.rank}.`),checkPadOnDimRoundingMode("maxPoolGrad",d,h);const _e={dy:b,input:_,output:j},g={filterSize:i,strides:a,pad:d,dimRoundingMode:h};return ENGINE.runKernel(MaxPoolGrad,_e,g)}const maxPoolGrad$2=op({maxPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolGradConfig$2={kernelName:MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(o,e,s)=>{const[i,a]=e,{filterSize:d,strides:h,pad:b}=s;return{x:()=>maxPoolGrad$2(o,i,a,d,h,b)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanGradConfig={kernelName:Mean,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{axis:a}=s,d=parseAxisParam(a,i.shape),b=computeOutAndReduceShapes(i.shape,d)[1],_=sizeFromShape(b);return{x:()=>{const _e=i.shape.slice();d.forEach($=>{_e[$]=1});const g=reshape$2(o,_e);return div$1(mul(g,ones(i.shape,"float32")),_)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minGradConfig={kernelName:Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(o,e,s)=>{const i=s,{axis:a}=i,[d,h]=e,b=parseAxisParam(a,d.shape),_=gradForMinAndMax(o,h,d,b);return{x:()=>_.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumGradConfig={kernelName:Minimum$1,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e;return{a:()=>mul(o,cast$3(lessEqual$2(s,i),"float32")),b:()=>mul(o,cast$3(greater$2(s,i),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadGradConfig={kernelName:MirrorPad,inputsToSave:["x"],gradFunc:(o,e,s)=>{const i=e[0],{paddings:a}=s,d=a.map(h=>h[0]);return{x:()=>slice$2(o,d,i.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modGradConfig={kernelName:Mod,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const b=getReductionAxes(s.shape,a);return b.length>0?reshape$2(sum$2(o,b),s.shape):o},b:()=>{const b=mul(o,neg$2(floor$2(div$1(s,i)))),_=getReductionAxes(i.shape,a);return _.length>0?reshape$2(sum$2(b,_),i.shape):b}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyGradConfig={kernelName:Multiply$1,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const b=mul(o,cast$3(i,"float32")),_=getReductionAxes(s.shape,a);return _.length>0?reshape$2(sum$2(b,_),s.shape):b},b:()=>{const b=mul(o,cast$3(s,"float32")),_=getReductionAxes(i.shape,a);return _.length>0?reshape$2(sum$2(b,_),i.shape):b}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const negGradConfig={kernelName:Neg,gradFunc:o=>({x:()=>neg$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHotGradConfig={kernelName:OneHot,inputsToSave:["indices"],gradFunc:(o,e)=>{const s=e[0];return{indices:()=>zeros$1(s.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const onesLikeGradConfig={kernelName:OnesLike,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const packGradConfig={kernelName:Pack,saveAllInputs:!0,gradFunc:(o,e,s)=>{const{axis:i}=s;return unstack(o,i).map(d=>()=>d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2GradConfig={kernelName:PadV2,inputsToSave:["x"],gradFunc:(o,e,s)=>{const i=e[0],{paddings:a}=s,d=a.map(h=>h[0]);return{x:()=>slice$2(o,d,i.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powGradConfig={kernelName:Pow,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(o,e)=>{const[s,i,a]=e,d=s,h=i,b=assertAndGetBroadcastShape(d.shape,h.shape);return{a:()=>{const _e=cast$3(h,"float32");let g=mul(o,mul(_e,pow$2(d,sub$2(_e,scalar(1)))));const c=getReductionAxes(d.shape,b);return c.length>0&&(g=sum$2(g,c)),reshape$2(g,d.shape)},b:()=>{const _e=greater$2(d,0),g=where(_e,log$2(d),zerosLike$2(d));let c=mul(o,mul(a,g));const $=getReductionAxes(h.shape,b);return $.length>0&&(c=sum$2(c,$)),reshape$2(c,h.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluGradConfig={kernelName:Prelu,inputsToSave:["x","alpha"],gradFunc:(o,e)=>{const[s,i]=e,a=greater$2(s,0);return{x:()=>where(a,o,mul(o,i)),alpha:()=>{let d=where(a,zerosLike$2(o),mul(o,s));const h=getReductionAxes(i.shape,o.shape);return h.length>0&&(d=sum$2(d,h)),reshape$2(d,i.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodGradFn_(o,e,s){const i=o.shape.slice();i[s]=1;const a=reshape$2(e,i),d=cumprod$2(o,s,!0,!1),h=cumprod$2(o,s,!0,!0),b=mul(d,h);return mul(a,b)}function prodsGradFn_(o,e,s){const i=o.shape.length,a=i-s.length,d=getAxesPermutation(s,i);let h=o;d!=null&&(h=transpose$2(o,d));const b=h.shape.slice(),j=b.splice(i-s.length,s.length).reduce((c,$)=>c*$,1);b.push(j);const _e=h.reshape(b);let g=prodGradFn_(_e,e,a);if(g=g.reshape(h.shape),d!=null){const c=getUndoAxesPermutation(d);g=transpose$2(g,c)}return g}const prodGradConfig={kernelName:Prod,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{axis:a}=s;let d=[];return a==null?d=i.shape.map((h,b)=>b):typeof a=="number"?d=[a]:d=a,{x:()=>prodsGradFn_(i,o,d)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const divGradConfig={kernelName:RealDiv,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const b=div$1(o,cast$3(i,"float32")),_=getReductionAxes(s.shape,a);return _.length>0?reshape$2(sum$2(b,_),s.shape):b},b:()=>{let b=mul(o,cast$3(s,"float32"));const _=getReductionAxes(i.shape,a);_.length>0&&(b=reshape$2(sum$2(b,_),i.shape));const j=square$2(i);return neg$2(div$1(b,cast$3(j,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocalGradConfig={kernelName:Reciprocal,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,neg$2(square$2(s)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6GradConfig={kernelName:Relu6$1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e,i=mul(lessEqual$2(s,6),step$2(s));return{x:()=>mul(o,cast$3(i,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reluGradConfig={kernelName:Relu$1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,cast$3(step$2(s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reshapeGradConfig={kernelName:Reshape$1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>reshape$2(o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeBilinearGradConfig$2={kernelName:ResizeBilinear,inputsToSave:["images"],gradFunc:(o,e,s)=>{const[i]=e,a={dy:o,images:i};return{images:()=>ENGINE.runKernel(ResizeBilinearGrad,a,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeNearestNeighborGradConfig$2={kernelName:ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(o,e,s)=>{const[i]=e,a={dy:o,images:i};return{images:()=>ENGINE.runKernel(ResizeNearestNeighborGrad,a,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reverseGradConfig={kernelName:Reverse,gradFunc:(o,e,s)=>{const{dims:i}=s,a=parseAxisParam(i,o.shape);return{x:()=>reverse$2(o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roundGradConfig={kernelName:Round,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtGradConfig={kernelName:Rsqrt,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>neg$2(div$1(o,mul(pow$2(s,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const selectGradConfig={kernelName:Select,inputsToSave:["condition"],gradFunc:(o,e)=>{const[s]=e;return{condition:()=>cast$3(zerosLike$2(s),"float32"),t:()=>mul(o,cast$3(s,o.dtype)),e:()=>mul(o,cast$3(logicalNot$2(s),o.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const seluGradConfig={kernelName:Selu$1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>{const i=greater$2(s,scalar(0)),a=scalar(SELU_SCALEALPHA),d=scalar(SELU_SCALE),h=mul(o,d),b=mul(mul(o,a),exp$2(cast$3(s,"float32")));return where(i,h,b)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidGradConfig={kernelName:Sigmoid$1,outputsToSave:[!0],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,mul(s,sub$2(scalar(1),s)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const signGradConfig={kernelName:Sign,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinGradConfig={kernelName:Sin,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(cos$2(cast$3(s,"float32")),o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinhGradConfig={kernelName:Sinh,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(cosh$2(cast$3(s,"float32")),o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sliceGradConfig={kernelName:Slice,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{begin:a,size:d}=s,h=i.shape,[b,_]=parseSliceParams(i,a,d),j=[];for(let _e=0;_e<o.rank;_e++)j.push([b[_e],h[_e]-b[_e]-_[_e]]);return{x:()=>pad(o,j)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softmaxGradConfig={kernelName:Softmax$2,outputsToSave:[!0],gradFunc:(o,e,s)=>{const[i]=e,{dim:a}=s,d=!0,h=mul(o,i);return{logits:()=>sub$2(h,mul(sum$2(h,[a],d),i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softplusGradConfig={kernelName:Softplus$1,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,sigmoid$2(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchNDGradConfig={kernelName:SpaceToBatchND,gradFunc:(o,e,s)=>{const{blockShape:i,paddings:a}=s;return{x:()=>batchToSpaceND$2(o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const splitVGradConfig={kernelName:SplitV,gradFunc:(o,e,s)=>{const{axis:i}=s;return{x:()=>concat$2(o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtGradConfig={kernelName:Sqrt,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,mul(sqrt$2(cast$3(s,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareGradConfig={kernelName:Square,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(o,mul(cast$3(s,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceGradConfig={kernelName:SquaredDifference,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=scalar(2);return{a:()=>mul(o,mul(a,sub$2(s,i))),b:()=>mul(o,mul(a,sub$2(i,s)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stepGradConfig={kernelName:Step,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subGradConfig={kernelName:Sub,inputsToSave:["a","b"],gradFunc:(o,e)=>{const[s,i]=e,a=assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{let b=o;const _=getReductionAxes(s.shape,a);return _.length>0&&(b=sum$2(b,_)),reshape$2(b,s.shape)},b:()=>{let b=o;const _=getReductionAxes(i.shape,a);return _.length>0&&(b=sum$2(b,_)),reshape$2(neg$2(b),i.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sumGradConfig={kernelName:Sum,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,a=i.shape.slice(),{axis:d}=s;parseAxisParam(d,i.shape).forEach(j=>{a[j]=1});const b=reshape$2(o,a),_=mul(b,ones(i.shape,"float32"));return{x:()=>_}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanGradConfig={kernelName:Tan,inputsToSave:["x"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>div$1(o,square$2(cos$2(s)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanhGradConfig={kernelName:Tanh$1,outputsToSave:[!0],gradFunc:(o,e)=>{const[s]=e;return{x:()=>mul(sub$2(scalar(1),square$2(s)),o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tileGradConfig={kernelName:Tile,inputsToSave:["x"],gradFunc:(o,e,s)=>{const[i]=e,{reps:a}=s;return{x:()=>{let h=zerosLike$2(i);if(i.rank===1)for(let b=0;b<a[0];++b)h=add$1(h,slice$2(o,[b*i.shape[0]],[i.shape[0]]));else if(i.rank===2)for(let b=0;b<a[0];++b)for(let _=0;_<a[1];++_)h=add$1(h,slice$2(o,[b*i.shape[0],_*i.shape[1]],[i.shape[0],i.shape[1]]));else if(i.rank===3)for(let b=0;b<a[0];++b)for(let _=0;_<a[1];++_)for(let j=0;j<a[2];++j)h=add$1(h,slice$2(o,[b*i.shape[0],_*i.shape[1],j*i.shape[2]],[i.shape[0],i.shape[1],i.shape[2]]));else if(i.rank===4)for(let b=0;b<a[0];++b)for(let _=0;_<a[1];++_)for(let j=0;j<a[2];++j)for(let _e=0;_e<a[3];++_e)h=add$1(h,slice$2(o,[b*i.shape[0],_*i.shape[1],j*i.shape[2],_e*i.shape[3]],[i.shape[0],i.shape[1],i.shape[2],i.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${i.rank} tensors yet.`);return h}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const transposeGradConfig={kernelName:Transpose,gradFunc:(o,e,s)=>{const i=s,{perm:a}=i,d=getUndoAxesPermutation(a);return{x:()=>transpose$2(o,d)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unpackGradConfig={kernelName:Unpack,gradFunc:(o,e,s)=>{const i=s,{axis:a}=i;return{value:()=>stack(o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unsortedSegmentSumGradConfig={kernelName:UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(o,e)=>{const[s]=e;return{x:()=>gatherDropNegatives(o,s)}}};function gatherDropNegatives(o,e){const s=maximum$2(e,zerosLike$2(e)),i=gather$1(o,s);let a=greaterEqual$2(e,scalar(0,"int32"));const d=i.rank-a.rank;for(let b=0;b<d;++b)a=expandDims$3(a,b+1);a=logicalAnd$2(a,ones(i.shape,"bool"));const h=zerosLike$2(i);return where(a,i,h)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zerosLikeGradConfig={kernelName:ZerosLike,gradFunc:o=>({x:()=>zerosLike$2(o)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gradConfigs=[absGradConfig,acosGradConfig,acoshGradConfig,addGradConfig,addNGradConfig,argMaxGradConfig,argMinGradConfig,asinGradConfig,asinhGradConfig,atan2GradConfig,atanGradConfig,atanhGradConfig,avgPool3DGradConfig$2,avgPoolGradConfig$2,batchMatMulGradConfig,batchToSpaceNDGradConfig,broadcastToGradConfig,castGradConfig,ceilGradConfig,clipByValueGradConfig,complexAbsGradConfig,concatGradConfig,conv2DBackpropInputGradConfig,conv2DGradConfig,conv3DGradConfig,cosGradConfig,coshGradConfig,cumsumGradConfig,depthwiseConv2dNativeGradConfig,dilation2dGradConfig,divGradConfig,eluGradConfig$2,erfGradConfig,expGradConfig,expandDimsGradConfig,expm1GradConfig,floorDivGradConfig,floorGradConfig,fusedBatchNormGradConfig,gatherGradConfig,greaterEqualGradConfig,identityGradConfig,isFiniteGradConfig,isInfGradConfig,isNanGradConfig,leakyReluGradConfig,log1pGradConfig,logGradConfig,logSoftmaxGradConfig,lrnGradConfig,maxGradConfig,maxGradConfig,maximumGradConfig,maxPool3DGradConfig$2,maxPoolGradConfig$2,meanGradConfig,minGradConfig,minimumGradConfig,mirrorPadGradConfig,modGradConfig,multiplyGradConfig,negGradConfig,oneHotGradConfig,onesLikeGradConfig,packGradConfig,padV2GradConfig,padV2GradConfig,powGradConfig,preluGradConfig,prodGradConfig,reciprocalGradConfig,relu6GradConfig,reluGradConfig,reshapeGradConfig,resizeBilinearGradConfig$2,resizeNearestNeighborGradConfig$2,reverseGradConfig,roundGradConfig,rsqrtGradConfig,selectGradConfig,seluGradConfig,sigmoidGradConfig,signGradConfig,sinGradConfig,sinhGradConfig,sliceGradConfig,softmaxGradConfig,softplusGradConfig,spaceToBatchNDGradConfig,spaceToBatchNDGradConfig,splitVGradConfig,splitVGradConfig,sqrtGradConfig,squaredDifferenceGradConfig,squareGradConfig,stepGradConfig,subGradConfig,sumGradConfig,tanGradConfig,tanhGradConfig,tileGradConfig,transposeGradConfig,unpackGradConfig,unsortedSegmentSumGradConfig,zerosLikeGradConfig];for(const o of gradConfigs)registerGradient(o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.abs=function(){return this.throwIfDisposed(),abs$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.acos=function(){return this.throwIfDisposed(),acos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.acosh=function(){return this.throwIfDisposed(),acosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.add=function(o){return this.throwIfDisposed(),add$1(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.all=function(o,e){return this.throwIfDisposed(),all$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.any=function(o,e){return this.throwIfDisposed(),any$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.argMax=function(o){return this.throwIfDisposed(),argMax$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.argMin=function(o){return this.throwIfDisposed(),argMin$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asScalar=function(){return this.throwIfDisposed(),assert$1(this.size===1,()=>"The array must have only 1 element."),reshape$2(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asType=function(o){return this.throwIfDisposed(),cast$3(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as1D=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as2D=function(o,e){return this.throwIfDisposed(),reshape$2(this,[o,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as3D=function(o,e,s){return this.throwIfDisposed(),reshape$2(this,[o,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as4D=function(o,e,s,i){return this.throwIfDisposed(),reshape$2(this,[o,e,s,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as5D=function(o,e,s,i,a){return this.throwIfDisposed(),reshape$2(this,[o,e,s,i,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asin=function(){return this.throwIfDisposed(),asin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asinh=function(){return this.throwIfDisposed(),asinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atan=function(){return this.throwIfDisposed(),atan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atan2=function(o){return this.throwIfDisposed(),atan2$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atanh=function(){return this.throwIfDisposed(),atanh$2(this)};getGlobalTensorClass().prototype.avgPool=function(o,e,s,i){return this.throwIfDisposed(),avgPool$2(this,o,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.batchToSpaceND=function(o,e){return this.throwIfDisposed(),batchToSpaceND$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.batchNorm=function(o,e,s,i,a){return this.throwIfDisposed(),batchNorm$2(this,o,e,s,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.broadcastTo=function(o){return this.throwIfDisposed(),broadcastTo(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cast=function(o){return this.throwIfDisposed(),cast$3(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.ceil=function(){return this.throwIfDisposed(),ceil$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.clipByValue=function(o,e){return this.throwIfDisposed(),clipByValue$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.concat=function(o,e){return this.throwIfDisposed(),o instanceof Tensor&&(o=[o]),concat$2([this,...o],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv1d=function(o,e,s,i,a,d){return this.throwIfDisposed(),conv1d(this,o,e,s,i,a,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv2dTranspose=function(o,e,s,i,a){return this.throwIfDisposed(),conv2dTranspose(this,o,e,s,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv2d=function(o,e,s,i,a,d){return this.throwIfDisposed(),conv2d$2(this,o,e,s,i,a,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cos=function(){return this.throwIfDisposed(),cos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cosh=function(){return this.throwIfDisposed(),cosh$2(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cumprod=function(o,e,s){return this.throwIfDisposed(),cumprod$2(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cumsum=function(o,e,s){return this.throwIfDisposed(),cumsum$2(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.depthToSpace=function(o,e){return this.throwIfDisposed(),depthToSpace$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.depthwiseConv2d=function(o,e,s,i,a,d){return this.throwIfDisposed(),depthwiseConv2d$1(this,o,e,s,i,a,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.dilation2d=function(o,e,s,i,a){return this.throwIfDisposed(),dilation2d(this,o,e,s,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.divNoNan=function(o){return this.throwIfDisposed(),divNoNan(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.div=function(o){return this.throwIfDisposed(),div$1(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.dot=function(o){return this.throwIfDisposed(),dot$1(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.elu=function(){return this.throwIfDisposed(),elu$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.equal=function(o){return this.throwIfDisposed(),equal$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.erf=function(){return this.throwIfDisposed(),erf$2(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.euclideanNorm=function(o,e){return this.throwIfDisposed(),euclideanNorm(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.exp=function(){return this.throwIfDisposed(),exp$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.expandDims=function(o){return this.throwIfDisposed(),expandDims$3(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.expm1=function(){return this.throwIfDisposed(),expm1$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.fft=function(){return this.throwIfDisposed(),fft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.flatten=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.floor=function(){return this.throwIfDisposed(),floor$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.floorDiv=function(o){return this.throwIfDisposed(),floorDiv$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.gather=function(o,e,s){return this.throwIfDisposed(),gather$1(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.greaterEqual=function(o){return this.throwIfDisposed(),greaterEqual$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.greater=function(o){return this.throwIfDisposed(),greater$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.ifft=function(){return this.throwIfDisposed(),ifft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.irfft=function(){return this.throwIfDisposed(),irfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isFinite=function(){return this.throwIfDisposed(),isFinite$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isInf=function(){return this.throwIfDisposed(),isInf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isNaN=function(){return this.throwIfDisposed(),isNaN$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.leakyRelu=function(o){return this.throwIfDisposed(),leakyRelu$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.lessEqual=function(o){return this.throwIfDisposed(),lessEqual$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.less=function(o){return this.throwIfDisposed(),less$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.localResponseNormalization=function(o,e,s,i){return this.throwIfDisposed(),localResponseNormalization(this,o,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSigmoid=function(){return this.throwIfDisposed(),logSigmoid(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSoftmax=function(o){return this.throwIfDisposed(),logSoftmax(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSumExp=function(o,e){return this.throwIfDisposed(),logSumExp(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.log=function(){return this.throwIfDisposed(),log$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.log1p=function(){return this.throwIfDisposed(),log1p$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalAnd=function(o){return this.throwIfDisposed(),logicalAnd$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalNot=function(){return this.throwIfDisposed(),logicalNot$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalOr=function(o){return this.throwIfDisposed(),logicalOr$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalXor=function(o){return this.throwIfDisposed(),logicalXor(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.matMul=function(o,e,s){return this.throwIfDisposed(),matMul$1(this,o,e,s)};getGlobalTensorClass().prototype.maxPool=function(o,e,s,i){return this.throwIfDisposed(),maxPool$2(this,o,e,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.max=function(o,e){return this.throwIfDisposed(),max$3(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.maximum=function(o){return this.throwIfDisposed(),maximum$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mean=function(o,e){return this.throwIfDisposed(),mean$1(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.min=function(o,e){return this.throwIfDisposed(),min$3(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.minimum=function(o){return this.throwIfDisposed(),minimum$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mirrorPad=function(o,e){return this.throwIfDisposed(),mirrorPad$1(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mod=function(o){return this.throwIfDisposed(),mod$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mul=function(o){return this.throwIfDisposed(),mul(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.neg=function(){return this.throwIfDisposed(),neg$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.norm=function(o,e,s){return this.throwIfDisposed(),norm(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.notEqual=function(o){return this.throwIfDisposed(),notEqual$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.oneHot=function(o,e=1,s=0){return this.throwIfDisposed(),oneHot$2(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.onesLike=function(){return this.throwIfDisposed(),onesLike$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.pad=function(o,e){return this.throwIfDisposed(),pad(this,o,e)};getGlobalTensorClass().prototype.pool=function(o,e,s,i,a,d){return this.throwIfDisposed(),pool$1(this,o,e,s,i,a,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.pow=function(o){return this.throwIfDisposed(),pow$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.prelu=function(o){return this.throwIfDisposed(),prelu$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.prod=function(o,e){return this.throwIfDisposed(),prod$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reciprocal=function(){return this.throwIfDisposed(),reciprocal$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.relu=function(){return this.throwIfDisposed(),relu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.relu6=function(){return this.throwIfDisposed(),relu6$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reshapeAs=function(o){return this.throwIfDisposed(),reshape$2(this,o.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reshape=function(o){return this.throwIfDisposed(),reshape$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.resizeBilinear=function(o,e,s){return this.throwIfDisposed(),resizeBilinear$3(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.resizeNearestNeighbor=function(o,e,s){return this.throwIfDisposed(),resizeNearestNeighbor$2(this,o,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reverse=function(o){return this.throwIfDisposed(),reverse$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.rfft=function(){return this.throwIfDisposed(),rfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.round=function(){return this.throwIfDisposed(),round$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.rsqrt=function(){return this.throwIfDisposed(),rsqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.selu=function(){return this.throwIfDisposed(),selu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.separableConv2d=function(o,e,s,i,a,d){return this.throwIfDisposed(),separableConv2d(this,o,e,s,i,a,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sigmoid=function(){return this.throwIfDisposed(),sigmoid$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sign=function(){return this.throwIfDisposed(),sign$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sin=function(){return this.throwIfDisposed(),sin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sinh=function(){return this.throwIfDisposed(),sinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.slice=function(o,e){return this.throwIfDisposed(),slice$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.softmax=function(o){return this.throwIfDisposed(),softmax$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.softplus=function(){return this.throwIfDisposed(),softplus$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.spaceToBatchND=function(o,e){return this.throwIfDisposed(),spaceToBatchND$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.split=function(o,e){return this.throwIfDisposed(),split$1(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sqrt=function(){return this.throwIfDisposed(),sqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.square=function(){return this.throwIfDisposed(),square$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.squaredDifference=function(o){return this.throwIfDisposed(),squaredDifference$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.squeeze=function(o){return this.throwIfDisposed(),squeeze(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.stack=function(o,e){this.throwIfDisposed();const s=o instanceof Tensor?[this,o]:[this,...o];return stack(s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.step=function(o){return this.throwIfDisposed(),step$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.stridedSlice=function(o,e,s,i,a,d,h,b){return this.throwIfDisposed(),stridedSlice$2(this,o,e,s,i,a,d,h,b)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sub=function(o){return this.throwIfDisposed(),sub$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sum=function(o,e){return this.throwIfDisposed(),sum$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tan=function(){return this.throwIfDisposed(),tan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tanh=function(){return this.throwIfDisposed(),tanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tile=function(o){return this.throwIfDisposed(),tile$3(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toBool=function(){return this.throwIfDisposed(),cast$3(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toFloat=function(){return this.throwIfDisposed(),cast$3(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toInt=function(){return this.throwIfDisposed(),cast$3(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.topk=function(o,e){return this.throwIfDisposed(),topk(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.transpose=function(o){return this.throwIfDisposed(),transpose$2(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unique=function(o){return this.throwIfDisposed(),unique$3(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unsortedSegmentSum=function(o,e){return this.throwIfDisposed(),unsortedSegmentSum$2(this,o,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unstack=function(o){return this.throwIfDisposed(),unstack(this,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.where=function(o,e){return this.throwIfDisposed(),where(o,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.zerosLike=function(){return this.throwIfDisposed(),zerosLike$2(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AttributeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AssertionError.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LruCache{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let s;return this.cache.has(e)&&(s=this.cache.get(e),this.cache.delete(e),this.cache.set(e,s)),s}put(e,s){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const i=this.cache.keys().next().value;this.cache.delete(i)}this.cache.set(e,s)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let s=0;s<this.maxEntries-e;s++){const i=this.cache.keys().next().value;this.cache.delete(i)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pyListRepeat(o,e){if(Array.isArray(o)){let s=[];for(let i=0;i<e;i++)s=s.concat(o);return s}else{const s=new Array(e);return s.fill(o),s}}function assert(o,e){if(!o)throw new AssertionError(e)}function count(o,e){let s=0;for(const i of o)i===e&&s++;return s}function singletonOrArray(o){return o.length===1?o[0]:o}function toList(o){return Array.isArray(o)?o:[o]}function toSnakeCase(o){const s=o.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return s[0]!=="_"?s:"private"+s}function toCamelCase(o){return o.length<=1||o.indexOf("_")===-1?o:o.replace(/[_]+(\w|$)/g,(e,s)=>s.toUpperCase())}let _GLOBAL_CUSTOM_OBJECTS={};function serializeKerasObject(o){if(o==null)return null;const e={};return e.className=o.getClassName(),e.config=o.getConfig(),e}function convertNDArrayScalarsInConfig(o){if(!(o==null||typeof o!="object"))if(Array.isArray(o))o.forEach(e=>convertNDArrayScalarsInConfig(e));else{const e=Object.keys(o);for(const s of e){const i=o[s];i!=null&&typeof i=="object"&&(!Array.isArray(i)&&i.type==="ndarray"&&typeof i.value=="number"?o[s]=i.value:convertNDArrayScalarsInConfig(i))}}}function deserializeKerasObject(o,e={},s={},i="object",a=!1){if(typeof o=="string"){const d=o;let h;if(d in s)h=s[d];else if(d in _GLOBAL_CUSTOM_OBJECTS)h=_GLOBAL_CUSTOM_OBJECTS[d];else if(h=e[d],h==null)throw new ValueError(`Unknown ${i}: ${o}. This may be due to one of the following reasons:
1. The ${i} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${i} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return h}else{const d=o;if(d.className==null||d.config==null)throw new ValueError(`${i}: Improper config format: ${JSON.stringify(d)}.
'className' and 'config' must set.`);const h=d.className;let b,_;if(h in s?[b,_]=s[h]:h in _GLOBAL_CUSTOM_OBJECTS?[b,_]=_GLOBAL_CUSTOM_OBJECTS.className:h in e&&([b,_]=e[h]),b==null)throw new ValueError(`Unknown ${i}: ${h}. This may be due to one of the following reasons:
1. The ${i} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${i} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(_!=null){const j={};for(const $ of Object.keys(_GLOBAL_CUSTOM_OBJECTS))j[$]=_GLOBAL_CUSTOM_OBJECTS[$];for(const $ of Object.keys(s))j[$]=s[$];const _e=d.config;_e.customObjects=j;const g=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const $ of Object.keys(s))_GLOBAL_CUSTOM_OBJECTS[$]=s[$];convertNDArrayScalarsInConfig(d.config);const c=_(b,d.config,s,a);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},g),c}else{const j=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const g of Object.keys(s))_GLOBAL_CUSTOM_OBJECTS[g]=s[g];const _e=new b(d.config);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},j),_e}}}function numberCompare(o,e){return o<e?-1:o>e?1:0}function reverseNumberCompare(o,e){return-1*numberCompare(o,e)}function unique$2(o){if(o==null)return o;const e=[];for(const s of o)e.indexOf(s)===-1&&e.push(s);return e}function isObjectEmpty(o){if(o==null)throw new ValueError(`Invalid value in obj: ${JSON.stringify(o)}`);for(const e in o)if(o.hasOwnProperty(e))return!1;return!0}function checkStringTypeUnionValue(o,e,s){if(s!=null&&o.indexOf(s)<0)throw new ValueError(`${s} is not a valid ${e}.  Valid values are ${o} or null/undefined.`)}function checkArrayTypeAndLength(o,e,s=0,i=1/0){return assert(s>=0),assert(i>=s),Array.isArray(o)&&o.length>=s&&o.length<=i&&o.every(a=>typeof a===e)}function assertPositiveInteger(o,e){Array.isArray(o)?(assert$1(o.length>0,()=>`${e} is unexpectedly an empty array.`),o.forEach((s,i)=>assertPositiveInteger(s,`element ${i+1} of ${e}`))):assert$1(Number.isInteger(o)&&o>0,()=>`Expected ${e} to be a positive integer, but got ${formatAsFriendlyString(o)}.`)}function formatAsFriendlyString(o){return o===null?"null":Array.isArray(o)?"["+o.map(e=>formatAsFriendlyString(e)).join(",")+"]":typeof o=="string"?`"${o}"`:`${o}`}function debounce(o,e,s){let i=s!=null?s():now(),a;return(...h)=>{const b=s!=null?s():now();return b-i<e||(i=b,a=o(...h)),a}}function mapActivationToFusedKernel(o){return o==="relu"?"relu":o==="linear"?"linear":o==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _nextUniqueTensorId=0;function getNextUniqueTensorId(){return _nextUniqueTensorId++}const _uidPrefixes={};function getUid(o=""){return o in _uidPrefixes||(_uidPrefixes[o]=0),_uidPrefixes[o]+=1,o+_uidPrefixes[o].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_DATA_FORMAT_VALUES=["channelsFirst","channelsLast"],VALID_INTERPOLATION_FORMAT_VALUES=["nearest","bilinear"],VALID_PADDING_MODE_VALUES=["valid","same","causal"],VALID_POOL_MODE_VALUES=["max","avg"],VALID_BIDIRECTIONAL_MERGE_MODES=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nameMap=new Map;function checkDataFormat(o){checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES,"DataFormat",o)}function checkInterpolationFormat(o){checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",o)}function checkPaddingMode(o){checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES,"PaddingMode",o)}function checkPoolMode(o){checkStringTypeUnionValue(VALID_POOL_MODE_VALUES,"PoolMode",o)}const _nameScopeStack=[],_nameScopeDivider="/";function nameScope(o,e){_nameScopeStack.push(o);try{const s=e();return _nameScopeStack.pop(),s}catch(s){throw _nameScopeStack.pop(),s}}function currentNameScopePrefix(){return _nameScopeStack.length===0?"":_nameScopeStack.join(_nameScopeDivider)+_nameScopeDivider}function getScopedTensorName(o){if(!isValidTensorName(o))throw new Error("Not a valid tensor name: '"+o+"'");return currentNameScopePrefix()+o}function getUniqueTensorName(o){if(!isValidTensorName(o))throw new Error("Not a valid tensor name: '"+o+"'");nameMap.has(o)||nameMap.set(o,0);const e=nameMap.get(o);if(nameMap.set(o,nameMap.get(o)+1),e>0){const s=`${o}_${e}`;return nameMap.set(s,1),s}else return o}const tensorNameRegex=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(o){return!!o.match(tensorNameRegex)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isInteger(o){return o===parseInt(o.toString(),10)}function arrayProd(o,e,s){e==null&&(e=0),s==null&&(s=o.length);let i=1;for(let a=e;a<s;++a)i*=o[a];return i}function min$2(o){if(o.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let s=0;s<o.length;s++){const i=o[s];i<e&&(e=i)}return e}function max$2(o){if(o.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let s=0;s<o.length;s++){const i=o[s];i>e&&(e=i)}return e}function range$2(o,e){if(e<o)throw new ValueError(`end (${e}) < begin (${o}) is forbidden.`);const s=[];for(let i=o;i<e;++i)s.push(i);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _epsilon;function epsilon$1(){return _epsilon==null&&(_epsilon=backend().epsilon()),_epsilon}function imageDataFormat(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cast$2(o,e){return cast$3(o,e)}function expandDims$2(o,e=-1){const s=o.shape.slice();return e<0&&(e=s.length+e+1),s.splice(e,0,1),reshape$2(o,s)}function repeat(o,e){return tidy(()=>{if(o.shape.length!==2)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${o.shape.length} tensor.`);const s=expandDims$2(o,1);return tile$2(s,[1,e,1])})}function flatten(o){const e=[arrayProd(o.shape)];return reshape$2(o,e)}function batchFlatten(o){if(o.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${o.rank}.`);const e=[o.shape[0],arrayProd(o.shape,1)];return reshape$2(o,e)}function sliceAlongFirstAxis(o,e,s){return tidy(()=>{switch(o.rank){case 1:return slice1d(o,e,s);case 2:return slice2d(o,[e,0],[s,o.shape[1]]);case 3:return slice3d(o,[e,0,0],[s,o.shape[1],o.shape[2]]);case 4:return slice4d(o,[e,0,0,0],[s,o.shape[1],o.shape[2],o.shape[3]]);case 5:return slice$2(o,[e,0,0,0,0],[s,o.shape[1],o.shape[2],o.shape[3],o.shape[4]]);case 6:return slice$2(o,[e,0,0,0,0,0],[s,o.shape[1],o.shape[2],o.shape[3],o.shape[4],o.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${o.rank}`)}})}function sliceAlongLastAxis(o,e,s){return tidy(()=>{switch(o.rank){case 1:return slice1d(o,e,s);case 2:return slice2d(o,[0,e],[o.shape[0],s]);case 3:return slice3d(o,[0,0,e],[o.shape[0],o.shape[1],s]);case 4:return slice4d(o,[0,0,0,e],[o.shape[0],o.shape[1],o.shape[2],s]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${o.rank}`)}})}function sliceAlongAxis(o,e,s,i){return tidy(()=>{switch(o.rank){case 1:return slice1d(o,e,s);case 2:switch(i){case 1:return sliceAlongFirstAxis(o,e,s);case 2:return sliceAlongLastAxis(o,e,s);default:throw new ValueError(`The axis is not within the rank of the tensor ${i}`)}case 3:switch(i){case 1:return sliceAlongFirstAxis(o,e,s);case 2:return slice3d(o,[0,e,0],[o.shape[0],s,o.shape[2]]);case 3:return sliceAlongLastAxis(o,e,s);default:throw new ValueError(`The axis is not within the rank of the tensor ${i}`)}case 4:switch(i){case 1:return sliceAlongFirstAxis(o,e,s);case 2:return slice4d(o,[0,e,0,0],[o.shape[0],s,o.shape[2],o.shape[3]]);case 3:return slice4d(o,[0,0,e,0],[o.shape[0],o.shape[1],s,o.shape[3]]);case 4:return sliceAlongLastAxis(o,e,s);default:throw new ValueError(`The axis is not within the rank of the tensor ${i}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${o.rank}`)}})}function concatenate(o,e=-1){let s;return e<0&&(s=o[0].rank,s!==0?e=s:e=0),e===o[0].rank&&(e=-1),concat$2(o,e)}function concatAlongFirstAxis(o,e){switch(o.rank){case 1:return concat1d([o,e]);case 2:return concat2d([o,e],0);case 3:return concat3d([o,e],0);case 4:return concat4d([o,e],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${o.rank}`)}}function tile$2(o,e){if(Array.isArray(e)||(e=[e]),o.rank!==e.length)throw new ValueError(`The length of input n (${e.length}) does not match the number of dimensions in input x (${o.rank})`);return tile$3(o,e)}function randomNormal(o,e=0,s=1,i,a){return randomNormal$1(o,e,s,i,a)}function dot(o,e,s,i){if(o.rank<2||e.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${o.shape} and y shape = ${e.shape}`);if(e.rank>=3){const a=o.shape.slice(-1)[0],d=e.shape.slice(-2)[0];if(a!==d)throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${o.shape} and  y shape = ${e.shape}`)}if(o.rank===2&&e.rank===2)return matMul({a:o,b:e,transposeA:!1,transposeB:!1,bias:i?reshapeBias(o.rank,i,imageDataFormat()):null,activation:s});{const a=o.shape.slice(),d=a.pop();o=reshape$2(o,[-1,d]);const h=e.shape.slice(),b=h.pop(),_=h.pop(),j=[...h,b],_e=Array.from({length:e.rank},(et,tt)=>tt===0?e.rank-2:tt<=e.rank-2?tt-1:tt);e=reshape$2(transpose$2(e,_e),[_,-1]);const g=[...a,...j];return reshape$2(matMul({a:o,b:e,transposeA:!1,transposeB:!1,bias:i?reshapeBias(o.rank,i,imageDataFormat()):null,activation:s}),g)}}function gather(o,e,s){return tidy(()=>(Array.isArray(e)?e=tensor1d(e,"int32"):e=cast$3(e,"int32"),gather$1(o,e,s)))}function square$1(o){return mul(o,o)}function reshapeBias(o,e,s){const i=e.shape;if(e.rank!==1&&e.rank!==o)throw new ValueError(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${o}`);if(o===5){if(s==="channelsFirst")return i.length===1?reshape$2(e,[1,i[0],1,1,1]):reshape$2(e,[1,i[3],i[0],i[1],i[2]]);if(s==="channelsLast")return i.length===1?reshape$2(e,[1,1,1,1,i[0]]):reshape$2(e,[1].concat(i))}else if(o===4){if(s==="channelsFirst")return i.length===1?reshape$2(e,[1,i[0],1,1]):reshape$2(e,[1,i[2],i[0],i[1]]);if(s==="channelsLast")return i.length===1?reshape$2(e,[1,1,1,i[0]]):reshape$2(e,[1].concat(i))}else if(o===3){if(s==="channelsFirst")return i.length===1?reshape$2(e,[1,i[0],1]):reshape$2(e,[1,i[1],i[0]]);if(s==="channelsLast")return i.length===1?reshape$2(e,[1,1,i[0]]):reshape$2(e,[1].concat(i))}else if(o<3)return e;throw new ValueError(`Unsupported input rank by biasAdd: ${e.rank}`)}function biasAdd(o,e,s){return tidy(()=>(s==null&&(s=imageDataFormat()),checkDataFormat(s),add$1(o,reshapeBias(o.rank,e,s))))}function elu$2(o,e=1){if(e!==1)throw new NotImplementedError(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return elu$3(o)}function softsign(o){return tidy(()=>div$1(o,add$1(abs$2(o),1)))}function dropout(o,e,s,i){return tidy(()=>dropout$1(o,e,s,i))}function hardSigmoid(o){return tidy(()=>{const e=add$1(.5,mul(.2,o));return clipByValue$2(e,0,1)})}function inTrainPhase(o,e,s=!1){return s?o():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_FAN_MODE_VALUES=["fanIn","fanOut","fanAvg"],VALID_DISTRIBUTION_VALUES=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkFanMode(o){checkStringTypeUnionValue(VALID_FAN_MODE_VALUES,"FanMode",o)}function checkDistribution(o){checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES,"Distribution",o)}class Initializer extends Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zeros extends Initializer{apply(e,s){return zeros$1(e,s)}}Zeros.className="Zeros";registerClass(Zeros);class Ones extends Initializer{apply(e,s){return ones(e,s)}}Ones.className="Ones";registerClass(Ones);class Constant extends Initializer{constructor(e){if(super(),typeof e!="object")throw new ValueError(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ValueError(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return tidy(()=>mul(scalar(this.value),ones(e,s)))}getConfig(){return{value:this.value}}}Constant.className="Constant";registerClass(Constant);class RandomUniform extends Initializer{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return randomUniform(e,this.minval,this.maxval,s,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RandomUniform.className="RandomUniform";registerClass(RandomUniform);class RandomNormal extends Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if(s=s||"float32",s!=="float32"&&s!=="int32")throw new NotImplementedError(`randomNormal does not support dType ${s}.`);return randomNormal(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RandomNormal.className="RandomNormal";registerClass(RandomNormal);class TruncatedNormal extends Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if(s=s||"float32",s!=="float32"&&s!=="int32")throw new NotImplementedError(`truncatedNormal does not support dType ${s}.`);return truncatedNormal(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}TruncatedNormal.className="TruncatedNormal";registerClass(TruncatedNormal);class Identity extends Initializer{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,s){return tidy(()=>{if(e.length!==2||e[0]!==e[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return mul(this.gain,eye(e[0]))})}getConfig(){return{gain:this.gain}}}Identity.className="Identity";registerClass(Identity);function computeFans(o,e="channelsLast"){let s,i;if(checkDataFormat(e),o.length===2)s=o[0],i=o[1];else if([3,4,5].indexOf(o.length)!==-1){if(e==="channelsFirst"){const a=arrayProd(o,2);s=o[1]*a,i=o[0]*a}else if(e==="channelsLast"){const a=arrayProd(o,0,o.length-2);s=o[o.length-2]*a,i=o[o.length-1]*a}}else{const a=arrayProd(o);s=Math.sqrt(a),i=Math.sqrt(a)}return[s,i]}class VarianceScaling extends Initializer{constructor(e){if(super(),e.scale<0)throw new ValueError(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,checkFanMode(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,checkDistribution(this.distribution),this.seed=e.seed}apply(e,s){const i=computeFans(e),a=i[0],d=i[1];let h=this.scale;if(this.mode==="fanIn"?h/=Math.max(1,a):this.mode==="fanOut"?h/=Math.max(1,d):h/=Math.max(1,(a+d)/2),this.distribution==="normal"){const b=Math.sqrt(h);if(s=s||"float32",s!=="float32"&&s!=="int32")throw new NotImplementedError(`${this.getClassName()} does not support dType ${s}.`);return truncatedNormal(e,0,b,s,this.seed)}else{const b=Math.sqrt(3*h);return randomUniform(e,-b,b,s,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}VarianceScaling.className="VarianceScaling";registerClass(VarianceScaling);class GlorotUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotUniform.className="GlorotUniform";registerClass(GlorotUniform);class GlorotNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotNormal.className="GlorotNormal";registerClass(GlorotNormal);class HeNormal extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeNormal.className="HeNormal";registerClass(HeNormal);class HeUniform extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeUniform.className="HeUniform";registerClass(HeUniform);class LeCunNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunNormal.className="LeCunNormal";registerClass(LeCunNormal);class LeCunUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunUniform.className="LeCunUniform";registerClass(LeCunUniform);class Orthogonal extends Initializer{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,s){return tidy(()=>{if(e.length<2)throw new NotImplementedError("Shape must be at least 2D.");if(s!=="int32"&&s!=="float32"&&s!==void 0)throw new TypeError(`Unsupported data type ${s}.`);s=s;const i=sizeFromShape(e.slice(0,-1)),a=e[e.length-1],d=i*a;d>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${d}) elements: Slowness may result.`);const h=[Math.max(a,i),Math.min(a,i)],b=randomNormal(h,0,1,s,this.seed),_=linalg.qr(b,!1);let j=_[0];const g=_[1].flatten().stridedSlice([0],[Math.min(a,i)*Math.min(a,i)],[Math.min(a,i)+1]);return j=mul(j,g.sign()),i<a&&(j=j.transpose()),mul(scalar(this.gain),j.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Orthogonal.className="Orthogonal";registerClass(Orthogonal);const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(o,e={}){return deserializeKerasObject(o,SerializationMap.getMap().classNameMap,e,"initializer")}function serializeInitializer(o){return serializeKerasObject(o)}function getInitializer(o){if(typeof o=="string"){const e=o in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[o]:o;if(e==="GlorotNormal")return new GlorotNormal;if(e==="GlorotUniform")return new GlorotUniform;if(e==="HeNormal")return new HeNormal;if(e==="HeUniform")return new HeUniform;if(e==="LeCunNormal")return new LeCunNormal;if(e==="LeCunUniform")return new LeCunUniform;{const s={};return s.className=e,s.config={},deserializeInitializer(s)}}else return o instanceof Initializer?o:deserializeInitializer(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayOfShapes(o){return Array.isArray(o)&&Array.isArray(o[0])}function normalizeShapeList(o){return o.length===0?[]:Array.isArray(o[0])?o:[o]}function getExactlyOneTensor(o){let e;if(Array.isArray(o)){if(o.length!==1)throw new ValueError(`Expected Tensor length to be 1; got ${o.length}`);e=o[0]}else e=o;return e}function getExactlyOneShape(o){if(Array.isArray(o)&&Array.isArray(o[0])){if(o.length===1)return o=o,o[0];throw new ValueError(`Expected exactly 1 Shape; got ${o.length}`)}else return o}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function countParamsInWeights(o){let e=0;for(const s of o)s.shape.length===0?e+=1:e+=s.shape.reduce((i,a)=>i*a);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VARIABLE_NAME_PREFIX="Variable";class LayerVariable{constructor(e,s="float32",i=DEFAULT_VARIABLE_NAME_PREFIX,a=!0,d=null){this.dtype=s??"float32",this.shape=e.shape,this.id=getNextUniqueTensorId(),i=i??DEFAULT_VARIABLE_NAME_PREFIX,this.originalName=getScopedTensorName(i),this.name=getUniqueTensorName(this.originalName),this.trainable_=a,this.constraint=d,this.val=variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),checkShapesMatch(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function checkShapesMatch(o,e){if(o.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(o.shape)+" vs. "+JSON.stringify(e.shape))}function batchGetValue(o){return o.map(e=>e.read())}function batchSetValue(o){o.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputSpec{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class SymbolicTensor{constructor(e,s,i,a,d,h,b){this.dtype=e,this.shape=s,this.sourceLayer=i,this.inputs=a,this.callArgs=d,this.outputTensorIndex=b,this.id=getNextUniqueTensorId(),h!=null&&(this.originalName=getScopedTensorName(h),this.name=getUniqueTensorName(this.originalName)),this.rank=s.length}}let _nextNodeID=0;class Node{constructor(e,s){this.callArgs=s,this.id=_nextNodeID++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const i of e.inboundLayers)i!=null&&i.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const s of this.inboundLayers)s!=null?e.push(s.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _nextLayerID=0;class Layer extends Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_nextLayerID++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let s=e.name;if(!s){const i=this.getClassName();s=toSnakeCase(i)+"_"+getUid(i)}if(this.name=s,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let i;if(e.batchInputShape!=null)i=e.batchInputShape;else if(e.inputShape!=null){let d=null;e.batchSize!=null&&(d=e.batchSize),i=[d].concat(e.inputShape)}this.batchInputShape=i;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,s){return e.name+"_ib-"+s.toString()}getNodeAtIndex(e,s){if(this.inboundNodes.length===0)throw new RuntimeError(`The layer has never been called and thus has no defined ${s}.`);if(this.inboundNodes.length<=e)throw new ValueError(`Asked to get ${s} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(s=>s.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const s=toList(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const i=toList(this.inputSpec);if(s.length!==i.length)throw new ValueError(`Layer ${this.name} expects ${i.length} inputs, but it received ${s.length} input tensors. Input received: ${e}`);for(let a=0;a<s.length;a++){const d=s[a],h=i[a];if(h==null)continue;const b=d.rank;if(h.ndim!=null&&b!==h.ndim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${h.ndim}, found ndim=${b}`);if(h.maxNDim!=null&&b>h.maxNDim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${h.maxNDim}, found ndim=${b}`);if(h.minNDim!=null&&b<h.minNDim)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${h.minNDim}, found ndim=${b}.`);if(h.dtype!=null&&d.dtype!==h.dtype)throw new ValueError(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${h.dtype}, found dtype=${d.dtype}.`);if(h.axes){const _=d.shape;for(const j in h.axes){const _e=Number(j),g=h.axes[j],c=_e>=0?_[_e]:_[_.length+_e];if(g!=null&&[g,null].indexOf(c)===-1)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected axis ${_e} of input shape to have value ${g} but got shape ${_}.`)}}if(h.shape!=null)for(let _=0;_<h.shape.length;++_){const j=h.shape[_],_e=d.shape[_];if(j!=null&&_e!=null&&j!==_e)throw new ValueError(`Input ${a} is incompatible with layer ${this.name}: expected shape=${h.shape}, found shape=${d.shape}.`)}}}call(e,s){return e}invokeCallHook(e,s){this._callHook!=null&&this._callHook(e,s)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,s){s=s||{},this.assertNotDisposed();const i=toList(e),a=checkAllSymbolic(e),d=checkNoneSymbolic(e);if(a===d)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const h=[];for(const b of toList(e))h.push(b.shape);this.build(singletonOrArray(h)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&d&&(this._refCount=1)}if(this.assertInputCompatibility(e),d){let h=this.call(e,s);this.supportsMasking&&this.setMaskMetadata(e,h);const b=toList(h),_=[];for(let j of b)i.indexOf(j)!==-1&&(j=j.clone()),_.push(j);if(h=singletonOrArray(_),this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return h}else{const h=collectInputShape(e),b=this.computeOutputShape(h);let _;const j=guessOutputDType(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?h[0]:h),b!=null&&b.length>0&&Array.isArray(b[0])?_=b.map((_e,g)=>new SymbolicTensor(j,_e,this,toList(e),s,this.name,g)):_=new SymbolicTensor(j,b,this,toList(e),s,this.name),this.addInboundNode(e,_,null,null,h,b,s),this._refCount++,this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return _}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let s=!1;this.batchInputShape.forEach((i,a)=>{i!=null&&e[a]!=null&&e[a]!==i&&(s=!0)}),s&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const s of this.inboundNodes){const i=JSON.stringify(s.outputShapes);e.indexOf(i)===-1&&e.push(i)}if(e.length===1){const s=this.inboundNodes[0].outputShapes;return Array.isArray(s)&&Array.isArray(s[0])&&s.length===1?s[0]:s}else throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(e){this.built=!0}getWeights(e=!1){return batchGetValue(e?this.trainableWeights:this.weights)}setWeights(e){tidy(()=>{const s=this.weights;if(s.length!==e.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${s.length} weights. Provided weights: ${e}...`);if(s.length===0)return;const i=[],a=batchGetValue(s);for(let d=0;d<a.length;++d){const h=a[d],b=s[d],_=e[d];if(!arraysEqual(h.shape,_.shape))throw new ValueError(`Layer weight shape ${h.shape} not compatible with provided weight shape ${_.shape}`);i.push([b,_])}batchSetValue(i)})}addWeight(e,s,i,a,d,h,b,_){if(this._addedWeightNames.indexOf(e)!==-1)throw new ValueError(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),i==null&&(i="float32"),this.fastWeightInitDuringBuild&&(a=_!=null?_():getInitializer("zeros"));const j=a.apply(s,i),_e=new LayerVariable(j,i,e,h,b);return j.dispose(),d!=null&&this.addLoss(()=>d.apply(_e.read())),h==null&&(h=!0),h?this._trainableWeights.push(_e):this._nonTrainableWeights.push(_e),_e}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=toList(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,s){if(!this.supportsMasking){if(s!=null)if(Array.isArray(s))s.forEach(i=>{if(i!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return s}setMaskMetadata(e,s,i){if(!this.supportsMasking)return;const a=this.computeMask(e,i),d=toList(s),h=toList(a);if(d.length!==h.length)throw new Error(`${this.name} outputs ${d.length} tensors but ${d.length} masks for those tensors`);for(let b=0;b<d.length;b++)d[b].kerasMask=h[b]}addInboundNode(e,s,i,a,d,h,b=null){const _=toList(e);s=toList(s),i=toList(i),a=toList(a),d=normalizeShapeList(d),h=normalizeShapeList(h);const j=[],_e=[],g=[];for(const c of _)j.push(c.sourceLayer),_e.push(c.nodeIndex),g.push(c.tensorIndex);new Node({outboundLayer:this,inboundLayers:j,nodeIndices:_e,tensorIndices:g,inputTensors:_,outputTensors:s,inputMasks:i,outputMasks:a,inputShapes:d,outputShapes:h},b);for(let c=0;c<s.length;c++)s[c].sourceLayer=this,s[c].nodeIndex=this.inboundNodes.length-1,s[c].tensorIndex=c}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function collectInputShape(o){o=toList(o);const e=[];for(const s of o)e.push(s.shape);return singletonOrArray(e)}function guessOutputDType(o){return"float32"}function getSourceInputs(o,e,s){if((e==null||s!=null&&s>0)&&(e=o.sourceLayer,s=o.nodeIndex),e.inboundNodes.length===0)return[o];{const i=e.inboundNodes[s];if(i.inboundLayers.length===0)return i.inputTensors;{const a=[];for(let d=0;d<i.inboundLayers.length;d++){const h=i.inputTensors[d],b=i.inboundLayers[d],_=i.nodeIndices[d],j=getSourceInputs(h,b,_);for(const _e of j)a.indexOf(_e)===-1&&a.push(_e)}return a}}}function checkAllSymbolic(o){let e=!0;for(const s of toList(o))if(!(s instanceof SymbolicTensor)){e=!1;break}return e}function checkNoneSymbolic(o){let e=!0;for(const s of toList(o))if(s instanceof SymbolicTensor){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputLayer extends Layer{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:getUid("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(s==null){if(e.inputShape==null)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const i=e.dtype||"float32";this.batchInputShape=s,this.dtype=i,this.inputSpec=[{shape:s}];const a=new SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}InputLayer.className="InputLayer";registerClass(InputLayer);function Input(o){if(o.batchShape==null&&o.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(o.batchShape!=null&&o.shape!=null)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=o.batchShape;o.shape!=null&&e==null&&(e=[null].concat(o.shape));let s=o.dtype;return s==null&&(s="float32"),new InputLayer({batchInputShape:e,name:o.name,dtype:s,sparse:o.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertFeedCompatibility(o,e){if(o.dtype==null||o.dtype===e.dtype)return e;try{return cast$3(e,o.dtype)}catch{throw new ValueError(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${o.name}' (${o.dtype}).`)}}class FeedDict{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof FeedDict)for(const s in e.id2Value)this.id2Value[s]=e.id2Value[s],s in e.id2Mask&&(this.id2Mask[s]=e.id2Mask[s]);else{if(e==null)return;for(const s of e)this.add(s.key,s.value)}}add(e,s,i){if(this.id2Value[e.id]==null)this.id2Value[e.id]=assertFeedCompatibility(e,s),this.name2Id[e.name]=e.id,i!=null&&(this.id2Mask[e.id]=i);else throw new ValueError(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const s=this.name2Id[e];if(s==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[s]}}getMask(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const s=this.name2Id[e];if(s==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[s]}}disposeMasks(){this.id2Mask!=null&&dispose(this.id2Mask)}}const cachedSorted=new LruCache,cachedRecipientCounts=new LruCache;function updateCacheMaxEntries(o){cachedSorted!=null&&cachedSorted.setMaxEntries(o),cachedRecipientCounts!=null&&cachedRecipientCounts.setMaxEntries(o)}function execute(o,e,s,i){const a=s==null?!1:s.training,d=Array.isArray(o),h=d?o:[o],b=h.map(et=>et.name),_=[],j=e.names();for(const et of b)j.indexOf(et)!==-1?_.push(e.getValue(et)):_.push(null);i!=null&&(i.maxNumTensors=-1/0,i.minNumTensors=1/0);const _e=b.join(",")+"|"+e.names().sort().join(",");let g=cachedSorted.get(_e),c;if(g==null){const et=getTopologicalSortAndRecipientCounts(h,e);g=et.sorted,c=et.recipientCounts,cachedSorted.put(_e,g),cachedRecipientCounts.put(_e,c)}c={},a||Object.assign(c,cachedRecipientCounts.get(_e));const $=new FeedDict(e);for(let et=0;et<g.length;++et){if(i!=null){const pt=memory().numTensors;pt>i.maxNumTensors&&(i.maxNumTensors=pt),pt<i.minNumTensors&&(i.minNumTensors=pt)}const tt=g[et],nt=tt.sourceLayer;if(nt instanceof InputLayer)continue;const rt=[],ot=[],st=[];let it=!1;for(const pt of tt.inputs){const ht=$.getValue(pt),yt=$.getMask(pt);rt.push(ht),ot.push(yt),yt!=null&&(it=!0),a||(c[pt.name]--,c[pt.name]===0&&!e.hasKey(pt)&&b.indexOf(pt.name)===-1&&!ht.isDisposed&&pt.sourceLayer.stateful!==!0&&st.push(ht))}it&&(s=s||{},s.mask=ot[0]);const at=toList(nt.apply(rt,s));let lt=null;nt.supportsMasking&&(lt=nt.computeMask(rt,ot));const ut=getNodeOutputs(tt),ct=Array.isArray(ut)?ut:[ut];for(let pt=0;pt<ct.length;++pt){$.hasKey(ct[pt])||$.add(ct[pt],at[pt],Array.isArray(lt)?lt[0]:lt);const ht=b.indexOf(ct[pt].name);ht!==-1&&(_[ht]=at[pt])}a||dispose(st)}return $.disposeMasks(),d?_:_[0]}function getTopologicalSortAndRecipientCounts(o,e){assert$1(o!=null&&o.length>0,()=>"Expected at least one fetch, got none");let s=[],i={};if(o.length===1){const a=getTopologicalSortAndRecipientCountsForOneFetch(o[0],e);s=a.sorted,i=a.recipientMap}else{const a=new Set;for(const d of o){const{sorted:h,recipientMap:b}=getTopologicalSortAndRecipientCountsForOneFetch(d,e);for(const _ of h)a.has(_.name)||(s.push(_),a.add(_.name));for(const _ in b)i[_]==null&&(i[_]=new Set),b[_].forEach(j=>i[_].add(j))}}return{sorted:s,recipientCounts:recipientMap2Counts(i)}}function recipientMap2Counts(o){const e={};for(const s in o)e[s]=o[s].size;return e}function getTopologicalSortAndRecipientCountsForOneFetch(o,e){const s=new Set,i=[],a={};for(const b of e.names())s.add(b);const d=[],h=[];for(d.push(o);d.length>0;){const b=d[d.length-1];if(s.has(b.name)){d.pop();continue}const _=h[h.length-1]===d.length-1;if(b.inputs.length===0||_)d.pop(),i.push(b),s.add(b.name),_&&h.pop();else{h.push(d.length-1);for(const j of b.inputs)a[j.name]==null&&(a[j.name]=new Set),a[j.name].add(b.name),!s.has(j.name)&&d.push(j)}}return{sorted:i,recipientMap:a}}function getNodeOutputs(o){let e;if(o.sourceLayer.inboundNodes.length===1)e=o.sourceLayer.output;else{let s=null;for(let i=0;i<o.sourceLayer.inboundNodes.length;++i)for(const a of o.sourceLayer.inboundNodes[i].outputTensors)if(a.id===o.id){s=i;break}e=o.sourceLayer.getOutputAt(s)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$2=env();ENV$2.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,updateCacheMaxEntries);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function calcL2Norms(o,e){return tidy(()=>sqrt$2(sum$2(mul(o,o),e,!0)))}class Constraint extends Serializable{getConfig(){return{}}}class MaxNorm extends Constraint{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const s=calcL2Norms(e,this.axis),i=clipByValue$2(s,0,this.maxValue);return mul(e,div$1(i,add$1(epsilon$1(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}MaxNorm.className="MaxNorm";registerClass(MaxNorm);class UnitNorm extends Constraint{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>div$1(e,add$1(epsilon$1(),calcL2Norms(e,this.axis))))}getConfig(){return{axis:this.axis}}}UnitNorm.className="UnitNorm";registerClass(UnitNorm);class NonNeg extends Constraint{apply(e){return relu$2(e)}}NonNeg.className="NonNeg";registerClass(NonNeg);class MinMaxNorm extends Constraint{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const s=calcL2Norms(e,this.axis),i=add$1(mul(this.rate,clipByValue$2(s,this.minValue,this.maxValue)),mul(1-this.rate,s));return mul(e,div$1(i,add$1(epsilon$1(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}MinMaxNorm.className="MinMaxNorm";registerClass(MinMaxNorm);const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(o){return serializeKerasObject(o)}function deserializeConstraint(o,e={}){return deserializeKerasObject(o,SerializationMap.getMap().classNameMap,e,"constraint")}function getConstraint(o){if(o==null)return null;if(typeof o=="string"){const s={className:o in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP?CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[o]:o,config:{}};return deserializeConstraint(s)}else return o instanceof Constraint?o:deserializeConstraint(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function resolveScalarsInLogs(o){if(o==null)return;const e=[],s=[],i=[];for(const a in o){const d=o[a];if(typeof d!="number"){const h=d;e.push(h.data()),s.push(a),i.push(h)}}if(e.length>0){const a=await Promise.all(e);for(let d=0;d<a.length;++d)o[s[d]]=a[d][0];dispose(i)}}function disposeTensorsInLogs(o){if(o!=null)for(const e in o){const s=o[e];typeof s!="number"&&s.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ModelLoggingVerbosity;(function(o){o[o.SILENT=0]="SILENT",o[o.VERBOSE=1]="VERBOSE"})(ModelLoggingVerbosity||(ModelLoggingVerbosity={}));const DEFAULT_YIELD_EVERY_MS=125;class BaseCallback{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,s){}async onEpochEnd(e,s){}async onBatchBegin(e,s){}async onBatchEnd(e,s){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class CallbackList{constructor(e,s=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=s}append(e){this.callbacks.push(e)}setParams(e){for(const s of this.callbacks)s.setParams(e)}setModel(e){for(const s of this.callbacks)s.setModel(e)}async onEpochBegin(e,s){s==null&&(s={});for(const i of this.callbacks)await i.onEpochBegin(e,s)}async onEpochEnd(e,s){s==null&&(s={});for(const i of this.callbacks)await i.onEpochEnd(e,s)}async onBatchBegin(e,s){s==null&&(s={});for(const i of this.callbacks)await i.onBatchBegin(e,s)}async onBatchEnd(e,s){s==null&&(s={});for(const i of this.callbacks)await i.onBatchEnd(e,s)}async onTrainBegin(e){e==null&&(e={});for(const s of this.callbacks)await s.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const s of this.callbacks)await s.onTrainEnd(e)}}class BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,s){s==null&&(s={});const i=s.size==null?0:s.size;this.seen+=i;for(const a in s){const d=s[a];if(typeof d=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+d*i;else{let h;a in this.totals?h=this.totals[a]:this.totals[a]=0;const b=tidy(()=>add$1(this.totals[a],mul(d,i)));this.totals[a]=b,h!=null&&h.dispose()}}}async onEpochEnd(e,s){if(s!=null)for(const i of this.params.metrics)this.totals[i]!=null&&(typeof this.totals[i]=="number"?s[i]=this.totals[i]/this.seen:tidy(()=>{const a=mul(div$1(1,this.seen),this.totals[i]);s[i]=a,this.totals[i].dispose(),keep(s[i])}))}}class History extends BaseCallback{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,s){s==null&&(s={}),this.epoch.push(e);for(const i in s)this.history[i]==null&&(this.history[i]=[]),this.history[i].push(s[i])}async syncData(){const e=[],s=[],i=[];for(const d in this.history){const h=this.history[d];for(let b=0;b<h.length;++b)if(typeof h[b]!="number"){const _=h[b];e.push(_.data()),s.push(d),i.push(b)}}const a=await Promise.all(e);for(let d=0;d<a.length;++d)this.history[s[d]][i[d]].dispose(),this.history[s[d]][i[d]]=a[d][0]}}class CustomCallback extends BaseCallback{constructor(e,s){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||nextFrame,this.yieldEvery=s||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DEFAULT_YIELD_EVERY_MS),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");isNumber(this.yieldEvery)&&(this.maybeWait=debounce(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,s,i){const a=[];this.yield!=null&&(await resolveScalarsInLogs(i),a.push(this.yield(e,s,i))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,s){this.currentEpoch=e,this.epochBegin!=null&&(await resolveScalarsInLogs(s),await this.epochBegin(e,s))}async onEpochEnd(e,s){const i=[];this.epochEnd!=null&&(await resolveScalarsInLogs(s),i.push(this.epochEnd(e,s))),this.yieldEvery==="epoch"&&i.push(this.nextFrameFunc()),await Promise.all(i)}async onBatchBegin(e,s){this.batchBegin!=null&&(await resolveScalarsInLogs(s),await this.batchBegin(e,s))}async onBatchEnd(e,s){const i=[];this.batchEnd!=null&&(await resolveScalarsInLogs(s),i.push(this.batchEnd(e,s))),this.yieldEvery==="batch"?i.push(this.nextFrameFunc()):isNumber(this.yieldEvery)&&i.push(this.maybeWait(this.currentEpoch,e,s)),await Promise.all(i)}async onTrainBegin(e){this.trainBegin!=null&&(await resolveScalarsInLogs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await resolveScalarsInLogs(e),await this.trainEnd(e))}}function standardizeCallbacks(o,e){return o==null&&(o={}),o instanceof BaseCallback?[o]:Array.isArray(o)&&o[0]instanceof BaseCallback?o:toList(o).map(i=>new CustomCallback(i,e))}class CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(e,s){assert$1(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),CallbackConstructorRegistry.checkForDuplicate(s),CallbackConstructorRegistry.constructors[e]==null&&(CallbackConstructorRegistry.constructors[e]=[]),CallbackConstructorRegistry.constructors[e].push(s)}static checkForDuplicate(e){for(const s in CallbackConstructorRegistry.constructors)CallbackConstructorRegistry.constructors[+s].forEach(a=>{if(a===e)throw new ValueError("Duplicate callback constructor.")})}static clear(){CallbackConstructorRegistry.constructors={}}static createCallbacks(e){const s=[];for(const i in CallbackConstructorRegistry.constructors){const a=+i;e>=a&&s.push(...CallbackConstructorRegistry.constructors[a])}return s.map(i=>new i)}}CallbackConstructorRegistry.constructors={};function configureCallbacks(o,e,s,i,a,d,h,b,_){const j=new History,_e=[new BaseLogger,...CallbackConstructorRegistry.createCallbacks(e)];o!=null&&_e.push(...o),_e.push(j);const g=new CallbackList(_e);return g.setParams({epochs:s,initialEpoch:i,samples:a,steps:d,batchSize:h,verbose:e,doValidation:b,metrics:_}),{callbackList:g,history:j}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function deserialize(o,e={},s=!1){return deserializeKerasObject(o,SerializationMap.getMap().classNameMap,e,"layer",s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l2Normalize(o,e){return tidy(()=>{o.dtype!=="float32"&&(o=cast$3(o,"float32"));const s=sum$2(square$1(o),e,!0),i=fill$2(s.shape,epsilon$1()),a=sqrt$2(maximum$2(s,i));return div$1(o,a)})}function meanSquaredError(o,e){return tidy(()=>mean$1(square$1(sub$2(e,o)),-1))}function meanAbsoluteError(o,e){return tidy(()=>mean$1(abs$2(sub$2(e,o)),-1))}function meanAbsolutePercentageError(o,e){return tidy(()=>{const s=sub$2(o,e),i=clipByValue$2(abs$2(o),epsilon$1(),Number.MAX_VALUE),a=abs$2(div$1(s,i));return mul(100,mean$1(a,-1))})}function meanSquaredLogarithmicError(o,e){return tidy(()=>{const s=clipByValue$2(e,epsilon$1(),Number.MAX_VALUE),i=log$2(add$1(1,s)),a=clipByValue$2(o,epsilon$1(),Number.MAX_VALUE),d=log$2(add$1(1,a));return mean$1(square$1(sub$2(i,d)),-1)})}function squaredHinge(o,e){return tidy(()=>{const s=maximum$2(0,sub$2(1,mul(o,e)));return mean$1(square$1(s),-1)})}function hinge(o,e){return tidy(()=>{const s=maximum$2(0,sub$2(1,mul(o,e)));return mean$1(s,-1)})}function categoricalHinge(o,e){return tidy(()=>{const s=sum$2(mul(o,e),-1),i=max$3(mul(sub$2(1,o),e),-1);return maximum$2(0,add$1(1,sub$2(i,s)))})}function logcosh(o,e){return tidy(()=>{const s=Math.log(2),i=sub$2(e,o),a=sub$2(add$1(i,softplus$2(mul(-2,i))),s);return mean$1(a,-1)})}function categoricalCrossentropy$1(o,e,s=!1){return tidy(()=>{if(s)e=softmax$2(e);else{const i=sum$2(e,e.shape.length-1,!0);e=div$1(e,i)}return e=clipByValue$2(e,epsilon$1(),1-epsilon$1()),neg$2(sum$2(mul(cast$3(o,"float32"),log$2(e)),e.shape.length-1))})}function sparseCategoricalCrossentropy$1(o,e,s=!1){return tidy(()=>{const i=cast$3(floor$2(flatten(o)),"int32");e=clipByValue$2(e,epsilon$1(),1-epsilon$1());const a=e.shape,d=reshape$2(oneHot$2(i,a[a.length-1]),a);return categoricalCrossentropy$1(d,e,s)})}function sigmoidCrossEntropyWithLogits(o,e){if(!arraysEqual(o.shape,e.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(o.shape)} and ${JSON.stringify(e.shape)}`);return tidy(()=>{const s=relu$2(e),i=neg$2(abs$2(e));return add$1(sub$2(s,mul(e,o)),log1p$2(exp$2(i)))})}function binaryCrossentropy$1(o,e){return tidy(()=>{let s;return s=clipByValue$2(e,epsilon$1(),1-epsilon$1()),s=log$2(div$1(s,sub$2(1,s))),mean$1(sigmoidCrossEntropyWithLogits(o,s),-1)})}function kullbackLeiblerDivergence(o,e){return tidy(()=>{const s=clipByValue$2(o,epsilon$1(),1),i=clipByValue$2(e,epsilon$1(),1);return sum$2(mul(o,log$2(div$1(s,i))),-1)})}function poisson(o,e){return tidy(()=>{const s=log$2(add$1(epsilon$1(),e));return mean$1(sub$2(e,mul(o,s)),-1)})}function cosineProximity(o,e){return tidy(()=>{const s=l2Normalize(o,-1),i=l2Normalize(e,-1),a=mul(s,i);return neg$2(sum$2(a,-1))})}const lossesMap={meanSquaredError,meanAbsoluteError,meanAbsolutePercentageError,meanSquaredLogarithmicError,squaredHinge,hinge,categoricalHinge,logcosh,categoricalCrossentropy:categoricalCrossentropy$1,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy$1,binaryCrossentropy:binaryCrossentropy$1,kullbackLeiblerDivergence,poisson,cosineProximity};function get$1(o){if(typeof o=="string"){if(o in lossesMap)return lossesMap[o];let e=`Unknown loss ${o}`;throw o.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${o}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(e)}else return o}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function binaryAccuracy(o,e){return tidy(()=>{const s=mul(.5,onesLike$2(e)),i=cast$2(greater$2(e,s),o.dtype);return mean$1(equal$2(o,i),-1)})}function categoricalAccuracy(o,e){return tidy(()=>cast$2(equal$2(argMax$2(o,-1),argMax$2(e,-1)),"float32"))}function truePositives(o,e){return tidy(()=>cast$3(sum$2(logicalAnd$2(equal$2(o,1),equal$2(e,1))),"float32"))}function falsePositives(o,e){return tidy(()=>cast$3(sum$2(logicalAnd$2(equal$2(o,0),equal$2(e,1))),"float32"))}function precision(o,e){return tidy(()=>{const s=truePositives(o,e),i=falsePositives(o,e),a=add$1(s,i);return cast$3(where(greater$2(a,0),div$1(s,a),0),"float32")})}function binaryCrossentropy(o,e){return binaryCrossentropy$1(o,e)}function sparseCategoricalAccuracy(o,e){return o.rank===e.rank&&(o=squeeze(o,[o.rank-1])),e=argMax$2(e,-1),e.dtype!==o.dtype&&(e=cast$3(e,o.dtype)),cast$3(equal$2(o,e),"float32")}const mse=meanSquaredError,MSE=meanSquaredError,mae=meanAbsoluteError,MAE=meanAbsoluteError,mape=meanAbsolutePercentageError,MAPE=meanAbsolutePercentageError,categoricalCrossentropy=categoricalCrossentropy$1,cosine=cosineProximity,sparseCategoricalCrossentropy=sparseCategoricalCrossentropy$1,metricsMap={binaryAccuracy,categoricalAccuracy,precision,categoricalCrossentropy,sparseCategoricalCrossentropy,mse,MSE,mae,MAE,mape,MAPE,cosine};function get(o){if(typeof o=="string"&&o in metricsMap)return metricsMap[o];if(typeof o!="string"&&o!=null)return o;throw new ValueError(`Unknown metric ${o}`)}function getLossOrMetricName(o){if(assert(o!==null,`Unknown LossOrMetricFn ${o}`),typeof o=="string")return o;{let e;for(const s of Object.keys(lossesMap))if(lossesMap[s]===o){e=s;break}if(e!==void 0)return e;for(const s of Object.keys(metricsMap))if(metricsMap[s]===o){e=s;break}return e!==void 0?e:o.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function getOptimizer(o){const e={Adagrad:()=>train.adagrad(.01),Adadelta:()=>train.adadelta(1,.95,epsilon$1()),Adam:()=>train.adam(.001,.9,.999,epsilon$1()),Adamax:()=>train.adamax(.002,.9,.999,epsilon$1(),0),RMSProp:()=>train.rmsprop(.001,.9,0,epsilon$1()),SGD:()=>train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,o in e)return e[o]();throw new ValueError(`Unknown Optimizer ${o}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH=1*1024*1024;function checkUserDefinedMetadata(o,e,s=!1){if(o==null||typeof o!="object"||Object.getPrototypeOf(o)!==Object.prototype||!plainObjectCheck(o))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(s){const i=JSON.stringify(o);i.length>MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${i.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`)}}function plainObjectCheck(o){if(o===null)return!0;if(typeof o=="object")if(Object.getPrototypeOf(o)===Object.prototype){const e=Object.keys(o);for(const s of e)if(typeof s!="string"||!plainObjectCheck(o[s]))return!1;return!0}else if(Array.isArray(o)){for(const e of o)if(!plainObjectCheck(e))return!1;return!0}else return!1;else{const e=typeof o;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function printSummary(o,e,s,i=console.log){const a=isModelSequentialLike(o),d=["Layer (type)","Input Shape","Output shape","Param #"];a?(e=e||90,s=s||[.32,.61,.89,1]):(e=e||115,s=s||[.24,.48,.7,.8,1]),s[s.length-1]<=1&&(s=s.map(_e=>Math.floor(e*_e)));let h;if(!a){d.push("Receives inputs"),h=[];for(const _e in o.nodesByDepth)h.push(...o.nodesByDepth[_e])}i("_".repeat(e)),printRow(d,s,i),i("=".repeat(e));const b=o.layers;for(let _e=0;_e<b.length;++_e)a?printLayerSummary(b[_e],s,i):printLayerSummaryWithConnections(b[_e],s,h,i),i((_e===b.length-1?"=":"_").repeat(e));o.checkTrainableWeightsConsistency();const _=countTrainableParams(o),j=countParamsInWeights(o.nonTrainableWeights);i(`Total params: ${_+j}`),i(`Trainable params: ${_}`),i(`Non-trainable params: ${j}`),i("_".repeat(e))}function countTrainableParams(o){let e;return o.collectedTrainableWeights!=null?e=countParamsInWeights(o.collectedTrainableWeights):e=countParamsInWeights(o.trainableWeights),e}function isModelSequentialLike(o){let e=!0;const s=[],i=[];for(const a in o.nodesByDepth)s.push(o.nodesByDepth[a]);for(const a of s){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){e=!1;break}i.push(...a)}if(e)for(const a of o.layers){let d=!1;for(const h of a.inboundNodes)if(i.indexOf(h)!==-1)if(d){e=!1;break}else d=!0;if(!e)break}return e}function printRow(o,e,s=console.log){let i="";for(let a=0;a<o.length;++a)a>0&&(i=i.slice(0,i.length-1)+" "),i+=o[a],i=i.slice(0,e[a]),i+=" ".repeat(e[a]-i.length);s(i)}function printLayerSummary(o,e,s){let i,a;try{a=o.inboundNodes.map(_=>JSON.stringify(_.inputShapes)).join(",")}catch{a="multiple"}try{i=JSON.stringify(o.outputShape)}catch{i="multiple"}const d=o.name,h=o.getClassName(),b=[`${d} (${h})`,a,i,o.countParams().toString()];printRow(b,e,s)}function printLayerSummaryWithConnections(o,e,s,i){let a,d;try{d=o.inboundNodes.map(g=>JSON.stringify(g.inputShapes)).join(",")}catch{d="multiple"}try{a=JSON.stringify(o.outputShape)}catch{a="multiple"}const h=[];for(const g of o.inboundNodes)if(!(s!=null&&s.length>0&&s.indexOf(g)===-1))for(let c=0;c<g.inboundLayers.length;++c){const $=g.inboundLayers[c].name,et=g.nodeIndices[c],tt=g.tensorIndices[c];h.push(`${$}[${et}][${tt}]`)}const b=o.name,_=o.getClassName(),j=h.length===0?"":h[0],_e=[`${b} (${_})`,d,a,o.countParams().toString(),j];printRow(_e,e,i);for(let g=1;g<h.length;++g)printRow(["","","","",h[g]],e,i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayItemInputOrOutputName(o,e,s){return(o==="inboundNodes"||o==="outputLayers"||o==="inputLayers")&&e===0&&typeof s=="string"}function convertPythonicToTs(o,e){if(o===null)return null;if(typeof o=="string")return toCamelCase(o);if(typeof o=="number"||typeof o=="boolean")return o;if(o instanceof Array){const s=[],i=o.length;for(let a=0;a<i;++a){const d=o[a];isArrayItemInputOrOutputName(e,a,d)?s.push(d):s.push(convertPythonicToTs(d,e))}return s}else{const s={};for(const i of Object.keys(o)){const a=o[i];if(i==="name"&&typeof a=="string")s[i]=a;else{const d=toCamelCase(i);s[d]=convertPythonicToTs(a,d)}}return s}}function convertTsToPythonic(o,e){if(o==null)return null;if(typeof o=="string")return toSnakeCase(o);if(typeof o=="number"||typeof o=="boolean")return o;if(o instanceof Array){const s=[],i=o.length;for(let a=0;a<i;++a){const d=o[a];isArrayItemInputOrOutputName(e,a,d)?s.push(d):s.push(convertTsToPythonic(d,e))}return s}else{const s={};for(const i of Object.keys(o)){const a=o[i],d=toSnakeCase(i);(i==="name"||i==="className")&&typeof a=="string"?s[d]=a:s[d]=convertTsToPythonic(a,i)}return s}}/** @license See the LICENSE file. */const version="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const isKerasSavedModelFormat=o=>{const e=Object.keys(o);if(e.length===0)return!1;const s=e[0].split("/");return!isNaN(parseInt(s[s.length-1],10))};class Container extends Layer{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const ot=this.getClassName().toLowerCase();this.name=getUid(ot)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],unique$2(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(ot=>ot.name)}`);unique$2(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(ot=>ot.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const ot of this.outputs){const st=ot.sourceLayer,it=ot.nodeIndex,at=ot.tensorIndex;this.outputLayers.push(st),this.outputLayersNodeIndices.push(it),this.outputLayersTensorIndices.push(at)}for(const ot of this.inputs){const st=ot.sourceLayer,it=ot.nodeIndex,at=ot.tensorIndex;assert(it===0,"input layer has >1 nodes"),assert(at===0,"input layer has >1 tensors"),this.inputLayers.push(st),this.inputLayersNodeIndices.push(it),this.inputLayersTensorIndices.push(at)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let ot=0;ot<this.inputLayers.length;ot++){const st=this.inputLayers[ot];if(!(st instanceof InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${ot} (0-based) originates from layer type ${st.getClassName()}.`);this.inputNames.push(st.name),this.feedInputShapes.push(st.batchInputShape),this.feedInputNames.push(st.name)}for(const ot of this.outputLayers)this.outputNames.push(ot.name);this.internalInputShapes=this.inputs.map(ot=>ot.shape),this.internalOutputShapes=this.outputs.map(ot=>ot.shape);const s={},i={},a={},d={},h={},b=[],_=(ot,st,it,at,lt,ut)=>{(at==null||lt==null||ut==null)&&(at=ot.sourceLayer,lt=ot.nodeIndex,ut=ot.tensorIndex);const ct=at.inboundNodes[lt];if(it.indexOf(ct)!==-1)throw new RuntimeError(`The tensor ${ot.name} at layer "${at.name}" is part of a cycle.`);if(st.indexOf(ct)!==-1)return;this.containerNodes.add(Container.nodeKey(at,lt)),at.id in h||(h[at.id]=Object.keys(h).length),it.indexOf(ct)===-1&&it.push(ct);const pt=ct.inboundLayers.length;for(let ht=0;ht<pt;ht++){const yt=ct.inputTensors[ht],xt=ct.inboundLayers[ht],ft=ct.nodeIndices[ht],wt=ct.tensorIndices[ht];_(yt,st,it,xt,ft,wt)}for(st.push(ct);it.indexOf(ct)>=0;)it.splice(it.indexOf(ct),1);b.push(ct)},j=[],_e=[];for(const ot of this.outputs)_(ot,j,_e);const g=b.slice().reverse();for(const ot of g){i[ot.id]=ot,ot.id in s||(s[ot.id]=0);let st=s[ot.id];const it=a[ot.outboundLayer.id]==null?0:a[ot.outboundLayer.id];st=Math.max(st,it),a[ot.outboundLayer.id]=st,d[ot.outboundLayer.id]=ot.outboundLayer,s[ot.id]=st;for(let at=0;at<ot.inboundLayers.length;at++){const lt=ot.inboundLayers[at],ut=ot.nodeIndices[at],ct=lt.inboundNodes[ut],pt=s[ct.id]==null?0:s[ct.id];s[ct.id]=Math.max(st+1,pt),i[ct.id]=ct}}const c={};for(const ot in s){const st=s[ot];st in c||(c[st]=[]),c[st].push(i[ot])}const $={};for(const ot in a){const st=a[ot];st in $||($[st]=[]),$[st].push(d[ot])}let et=Object.keys($).map(ot=>parseInt(ot,10)).sort(reverseNumberCompare);this.layers=[];for(const ot of et){const st=$[ot];st.sort((it,at)=>{const lt=h[it.id],ut=h[at.id];return lt<ut?-1:lt>ut?1:0});for(const it of st)it instanceof Container&&this.internalContainerRefs.push(it),this.layers.push(it)}this.layersByDepth=$,et=Object.keys(c).map(ot=>parseInt(ot,10)).sort(reverseNumberCompare);const tt=this.inputs.slice(),nt=[];for(const ot of et)for(const st of c[ot]){const it=st.outboundLayer;if(it!=null){for(const at of st.inputTensors)if(tt.indexOf(at)===-1)throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${at} at layer "${it.name}". The following previous layers were accessed without issue: ${nt}`);for(const at of st.outputTensors)tt.push(at);nt.push(it.name)}}this.nodesByDepth=c;const rt=this.layers.map(ot=>ot.name);for(const ot of rt){const st=rt.filter(it=>it===ot).length;if(st!==1)throw new RuntimeError(`The name "${ot}" is used ${st} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(rt))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(ot=>null),outputMasks:this.outputs.map(ot=>null),inputShapes:this.inputs.map(ot=>ot.shape),outputShapes:this.outputs.map(ot=>ot.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const s of this.layers)e.numDisposedVariables+=s.dispose().numDisposedVariables;for(const s of this.internalContainerRefs)e.numDisposedVariables+=s.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(s=>{s._trainableWeights.forEach(i=>i.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const s of this.layers)e=e.concat(s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.layers)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const i of this.layers)s.push(...i.trainableWeights);return s.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,s=!0){const i={};let a=0;const d=isKerasSavedModelFormat(e);d&&this.parseWeights(e);for(const b of this.layers)for(const[_,j]of b.weights.entries()){const _e=d?`${j.name.split("/").slice(0,-1).join("/")+"/"}${_}`:j.originalName;if(i[_e]!=null)throw new ValueError(`Duplicate weight name: ${_e}`);i[_e]=j,a++}const h=[];for(const b in e){let _=b;if(i[b]==null){const j=b.split("/");_=j.slice(0,-2).concat([j[j.length-1]]).join("/")}if(i[_]!=null)h.push([i[_],e[b]]);else if(s)throw new ValueError(`Provided weight data has no target variable: ${b}`);delete i[_]}if(s){const b=[];for(const _ in i)b.push(_);if(b.length>0)throw new ValueError(`${b.length} of ${a} weights are not set: ${b}`)}batchSetValue(h)}parseWeights(e){for(const s in Object.keys(e)){const i=s.split("/"),a=["vars","layer_checkpoint_dependencies"],d=i.map(h=>h.startsWith("_")?h.slice(1):h).filter(h=>!a.includes(h)).join("/");d!==s&&(e[d]=e[s],delete e[s])}}updatedConfig(){const e=this.getConfig(),s={};return s.className=this.getClassName(),s.config=e,s.kerasVersion=`tfjs-layers ${version}`,s.backend="TensorFlow.js",s}toJSON(e,s=!0){const i=convertTsToPythonic(this.updatedConfig());return s?JSON.stringify(i):i}call(e,s){return tidy(()=>{e=toList(e);const i=new FeedDict;for(let a=0;a<this.inputs.length;++a)i.add(this.inputs[a],e[a]);return execute(this.outputs,i,s)})}computeMask(e,s){return tidy(()=>{e=toList(e);let i;return s==null?i=pyListRepeat(null,e.length):i=toList(s),this.runInternalGraph(e,i)[1]})}computeOutputShape(e){const s=normalizeShapeList(e);if(s.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const i={};for(let b=0;b<s.length;b++){const _=this.inputLayers[b],j=s[b],_e=_.name+"_0_0";i[_e]=j}const a=Object.keys(this.nodesByDepth).map(b=>parseInt(b,10)).sort(reverseNumberCompare);if(a.length>1)for(const b of a){const _=this.nodesByDepth[b];for(const j of _){const _e=j.outboundLayer;if(this.inputLayers.map(tt=>tt.id).indexOf(_e.id)!==-1)continue;const g=[];for(let tt=0;tt<j.inboundLayers.length;tt++){const nt=j.inboundLayers[tt],rt=j.nodeIndices[tt],ot=j.tensorIndices[tt],st=`${nt.name}_${rt}_${ot}`,it=i[st];g.push(it)}const c=_e.computeOutputShape(singletonOrArray(g)),$=normalizeShapeList(c),et=_e.inboundNodes.indexOf(j);for(let tt=0;tt<$.length;tt++){const nt=`${_e.name}_${et}_${tt}`;i[nt]=$[tt]}}}const d=[],h=[];for(let b=0;b<this.outputLayers.length;b++){const _=this.outputLayers[b],j=this.outputLayersNodeIndices[b],_e=this.outputLayersTensorIndices[b],g=`${_.name}_${j}_${_e}`;h.push(g)}for(let b=0;b<h.length;b++){const _=h[b];assert(_ in i),d.push(i[_])}return singletonOrArray(d)}runInternalGraph(e,s){s==null&&(s=pyListRepeat(null,e.length));const i={};for(let _=0;_<this.inputs.length;++_){const j=this.inputs[_],_e=e[_],g=s[_];i[j.id]=[_e,g]}const a=Object.keys(this.nodesByDepth).map(_=>parseInt(_,10)).sort(reverseNumberCompare);for(const _ of a){const j=this.nodesByDepth[_];for(const _e of j){const g=_e.outboundLayer,c=_e.inputTensors,$=_e.outputTensors,et=new Array;for(const tt of c)tt.id in i&&et.push(i[tt.id]);if(et.length===c.length){let tt={},nt,rt,ot,st;if(_e.callArgs!=null&&(tt=_e.callArgs),et.length===1){const[it,at]=et[0];tt.mask==null&&(tt.mask=at),ot=toList(g.call(it,tt)),st=toList(g.computeMask(it,at)),nt=[it],rt=[at]}else nt=et.map(it=>it[0]),rt=et.map(it=>it[1]),tt.mask==null&&(tt.mask=rt),ot=toList(g.call(nt,tt)),st=toList(g.computeMask(nt,rt));if(g.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let it=0;it<$.length;++it){const at=$[it],lt=ot[it],ut=st[it];i[at.id]=[lt,ut]}}}}const d=[],h=[],b=[];for(const _ of this.outputs){assert(_.id in i,`Could not compute output ${_.name} : ${_.id}`);const[j,_e]=i[_.id];b.push(j.shape),d.push(j),h.push(_e)}return[d,h,b]}buildNodeConversionMap(e){const s={};let i;for(const a of this.layers){i=a instanceof Container?1:0;for(let d=0;d<a.inboundNodes.length;d++){const h=Container.nodeKey(a,d);this.containerNodes.has(h)&&(s[h]=i,i+=1)}}return s}getLayer(e,s){if(s!=null)return this.findLayer(s);if(e==null)throw new ValueError("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const i of this.layers)if(i.name===e)return i;throw new ValueError(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ValueError(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return tidy(()=>{const e=[];for(const s of this.layers)for(let i=0;i<s.inboundNodes.length;++i){const a=Container.nodeKey(s,i);this.containerNodes.has(a)&&e.push(...s.calculateLosses())}return e})}getConfig(){const e={name:this.name},s=this.buildNodeConversionMap(this.layers),i=[];for(const h of this.layers){const b=h.getClassName(),_=h.getConfig(),j=[];for(let g=0;g<h.inboundNodes.length;g++){const c=h.inboundNodes[g],$=Container.nodeKey(h,g);let et={};if(this.containerNodes.has($)){if(c.callArgs)try{JSON.stringify(c.callArgs),et=c.callArgs}catch{console.warn(`Layer ${h.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),et={}}if(c.inboundLayers.length>0){const tt=[];for(let nt=0;nt<c.inboundLayers.length;nt++){const rt=c.inboundLayers[nt],ot=c.nodeIndices[nt],st=c.tensorIndices[nt],it=Container.nodeKey(rt,ot);let at=s[it];at==null&&(at=0),tt.push([rt.name,at,st,et])}j.push(tt)}}}const _e={};_e.name=h.name,_e.className=b,_e.config=_,_e.inboundNodes=j,i.push(_e)}e.layers=i;const a=[];for(let h=0;h<this.inputLayers.length;h++){const b=this.inputLayers[h],_=this.inputLayersNodeIndices[h],j=Container.nodeKey(b,_);if(!this.containerNodes.has(j))continue;let _e=s[j];_e==null&&(_e=0);const g=this.inputLayersTensorIndices[h];a.push([b.name,_e,g])}e.inputLayers=a;const d=[];for(let h=0;h<this.outputLayers.length;h++){const b=this.outputLayers[h],_=this.outputLayersNodeIndices[h],j=Container.nodeKey(b,_);if(!this.containerNodes.has(j))continue;let _e=s[j];_e==null&&(_e=0);const g=this.outputLayersTensorIndices[h];d.push([b.name,_e,g])}return e.outputLayers=d,e}static fromConfig(e,s,i={},a=!1){const d={},h={};function b(nt,rt){nt.name in h?h[nt.name].push(rt):h[nt.name]=[rt]}function _(nt,rt){const ot=[];let st;for(const it of rt){const at=it[0],lt=it[1],ut=it[2];if(st=it[3]==null?{}:it[3],!(at in d)){b(nt,rt);return}const ct=d[at];if(ct.inboundNodes.length<=lt){b(nt,rt);return}const pt=ct.inboundNodes[lt];ot.push(pt.outputTensors[ut])}ot.length>0&&nt.apply(singletonOrArray(ot),st)}function j(nt){const rt=nt.name,ot=deserialize(nt,s.customObjects!=null?s.customObjects:{});ot.setFastWeightInitDuringBuild(a),d[rt]=ot,nt.inboundNodes.forEach(it=>{if(!(it instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${it}`);b(ot,it)})}const _e=s.name,g=s.layers;for(const nt of g)j(nt);for(;!isObjectEmpty(h);)for(const nt of g){const rt=d[nt.name];if(rt.name in h){const ot=h[rt.name];delete h[rt.name];for(const st of ot)_(rt,st)}}const c=[],$=[],et=s.inputLayers;for(const nt of et){const rt=nt[0],ot=nt[1],st=nt[2];assert(rt in d);const at=d[rt].inboundNodes[ot].outputTensors;c.push(at[st])}const tt=s.outputLayers;for(const nt of tt){const rt=nt[0],ot=nt[1],st=nt[2];assert(rt in d);const at=d[rt].inboundNodes[ot].outputTensors;$.push(at[st])}return new e({inputs:c,outputs:$,name:_e})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){tidy(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeSampleOrClassWeights(o,e,s){const i=e.length;if(o==null||Array.isArray(o)&&o.length===0)return e.map(a=>null);if(i===1)return Array.isArray(o)&&o.length===1?o:typeof o=="object"&&e[0]in o?[o[e[0]]]:[o];if(Array.isArray(o)){if(o.length!==i)throw new Error(`Provided ${s} is an array of ${o.length} element(s), but the model has ${i} outputs. Make sure a set of weights is provided for each model output.`);return o}else if(typeof o=="object"&&Object.keys(o).length>0&&typeof o[Object.keys(o)[0]]=="object"){const a=[];return e.forEach(d=>{d in o?a.push(o[d]):a.push(null)}),a}else throw new Error(`The model has multiple (${i}) outputs, so ${s} must be either an array with ${i} elements or an object with ${e} keys. Provided ${s} not understood: ${JSON.stringify(o)}`)}function standardizeClassWeights(o,e){return standardizeSampleOrClassWeights(o,e,"classWeight")}async function standardizeWeights(o,e,s,i){if(e!=null||i!=null)throw new Error("Support sampleWeight is not implemented yet");if(s!=null){const a=tidy(()=>{if(o.shape.length===1)return clone(o);if(o.shape.length===2){if(o.shape[1]>1)return argMax$2(o,1);if(o.shape[1]===1)return reshape$2(o,[o.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${o.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${o.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),d=Array.from(await a.data());dispose(a);const h=[];return d.forEach(b=>{if(s[b]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${b} exists in the data but not in classWeight`);h.push(s[b])}),tensor1d(h,"float32")}else return null}function computeWeightedLoss(o,e){return mul(o,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VALIDATION_BATCH_SIZE=32;function standardizeDataIteratorOutput(o,e){let s,i;const a=e;s=a.xs,i=a.ys,assert$1(s!=null&&i!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const d=flattenTensorOrArrayOrMap("input",o.inputNames,s),h=flattenTensorOrArrayOrMap("output",o.outputNames,i),b=d[0].shape[0];assert$1(d.length===o.inputs.length,()=>`LayersModel has ${o.inputs.length} inputs, but the dataset provides ${d.length} inputs.  (Expected input keys: ${JSON.stringify(o.inputNames)})`),assert$1(h.length===o.outputs.length,()=>`LayersModel has ${o.outputs.length} outputs, but the dataset provides ${h.length} outputs.  (Expected output keys: ${JSON.stringify(o.outputNames)})`);for(let _=0;_<d.length;_++)assert$1(d[_].shape[0]===b,()=>`Batch size mismatch: input ${o.inputNames[_]} has ${d[_].shape[0]}; expected  ${b} based on input ${o.inputNames[0]}.`);for(let _=0;_<h.length;_++)assert$1(h[_].shape[0]===b,()=>`Batch size mismatch: output ${o.outputNames[_]} has ${h[_].shape[0]}; expected  ${b} based on input ${o.inputNames[0]}.`);return{xs:d,ys:h}}function flattenTensorOrArrayOrMap(o,e,s){if(s instanceof Tensor)return[s];if(Array.isArray(s))return assert$1(s.length===e.length,()=>`Received an array of ${s.length} Tensors, but expected ${e.length} to match the ${o} keys ${e}.`),s;{const i=[];for(const a of e){if(s[a]==null)throw new ValueError(`The feature data generated by the dataset lacks the required ${o} key '${a}'.`);i.push(s[a])}return i}}function standardizeTensorValidationData(o){if(o.length===3)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:o[0],ys:o[1]}}async function fitDataset(o,e,s){const i=s.batchesPerEpoch!=null;if(assert$1(o.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),assert$1(s!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),assert$1(s.epochs!=null&&s.epochs>0&&Number.isInteger(s.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${s.epochs}`),assert$1(!i||s.batchesPerEpoch>0&&Number.isInteger(s.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${s.batchesPerEpoch}`),assert$1(s.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),o.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");o.isTraining=!0;try{const a=s.validationData!=null;let d,h;if(a)if(isDatasetObject(s.validationData))assert$1(s.validationBatches==null||s.validationBatches>0&&Number.isInteger(s.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${s.validationBatches}`);else{const nt=standardizeTensorValidationData(s.validationData);d=nt.xs,h=nt.ys}const b=o.makeTrainFunction(),_=o.getDedupedMetricsNames();let j;a?j=_.slice().concat(_.map(nt=>"val_"+nt)):j=_.slice();const _e=standardizeCallbacks(s.callbacks,s.yieldEvery),g=s.verbose==null?1:s.verbose,{callbackList:c,history:$}=configureCallbacks(_e,g,s.epochs,null,null,getStepsPerEpoch(e,s),null,a,j);c.setModel(o),o.history=$,await c.onTrainBegin(),o.stopTraining_=!1;let et=s.initialEpoch==null?0:s.initialEpoch,tt=await e.iterator();for(;et<s.epochs;){const nt={};await c.onEpochBegin(et);let rt=0,ot=0;for(i||(tt=await e.iterator());!i||rt<s.batchesPerEpoch;){const st=await tt.next();if(i&&st.done){console.warn(`You provided \`batchesPerEpoch\` as ${s.batchesPerEpoch}, but your dataset iterator ran out of data after ${rt} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${s.batchesPerEpoch*s.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(st.value!=null){const{xs:it,ys:at}=standardizeDataIteratorOutput(o,st.value),lt={};lt.batch=ot,lt.size=it[0].shape[0],await c.onBatchBegin(ot,lt);const ut=[];if(s.classWeight!=null){const ht=standardizeClassWeights(s.classWeight,o.outputNames);for(let yt=0;yt<ht.length;++yt)ut.push(await standardizeWeights(at[yt],null,ht[yt]))}const ct=it.concat(at).concat(ut),pt=b(ct);dispose(ct);for(let ht=0;ht<_.length;++ht){const yt=_[ht],xt=pt[ht];lt[yt]=xt,keep(xt)}await c.onBatchEnd(ot,lt),disposeTensorsInLogs(lt),ot++,rt++}if(i?rt>=s.batchesPerEpoch:st.done){if(a){let it;isDatasetObject(s.validationData)?it=toList(await o.evaluateDataset(s.validationData,{batches:s.validationBatches})):it=toList(o.evaluate(d,h,{batchSize:s.validationBatchSize==null?DEFAULT_VALIDATION_BATCH_SIZE:s.validationBatchSize,verbose:0}));for(let at=0;at<o.metricsNames.length;++at)nt[`val_${o.metricsNames[at]}`]=it[at]}break}if(o.stopTraining_)break}if(await c.onEpochEnd(et,nt),et++,o.stopTraining_)break}return await c.onTrainEnd(),await o.history.syncData(),o.history}finally{o.isTraining=!1}}function getStepsPerEpoch(o,e){let s=null;return e.batchesPerEpoch!=null?s=e.batchesPerEpoch:Number.isFinite(o.size)&&(s=o.size),s}function isDatasetObject(o){return typeof o.iterator=="function"}function isLazyIteratorObject(o){return typeof o.next=="function"}async function evaluateDataset(o,e,s){s=s||{};const i=s.batches!=null,a=o.testFunction;let d=[];if(s.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");assert$1(!i||s.batches>0&&Number.isInteger(s.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(s.batches)}`);const h=isLazyIteratorObject(e)?e:await e.iterator();let b=0,_=0;for(;!i||_<s.batches;){const j=await h.next();if(d=tidy(()=>{if(j.value){const{xs:_e,ys:g}=standardizeDataIteratorOutput(o,j.value),c=_e.concat(g),$=tidy(()=>a(c));if(dispose(c),_===0)for(let tt=0;tt<$.length;++tt)d.push(scalar(0));const et=c[0].shape[0];for(let tt=0;tt<$.length;++tt){const nt=$[tt],rt=d[tt];d[tt]=tidy(()=>add$1(d[tt],mul(et,nt))),_>0&&dispose(rt)}dispose($),b+=et,++_}return d}),j.done){i&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${s.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let j=0;j<d.length;++j){const _e=d[j];d[j]=div$1(d[j],b),dispose(_e)}return singletonOrArray(d)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkBatchSize(o){assert$1(o>0&&Number.isInteger(o),()=>`batchSize is required to be a positive integer, but got ${o}`)}function sliceArrays(o,e,s){return o==null?[null]:Array.isArray(o)?o.map(i=>sliceAlongFirstAxis(i,e,s-e)):sliceAlongFirstAxis(o,e,s-e)}function sliceArraysByIndices(o,e){return tidy(()=>o==null?null:Array.isArray(o)?o.map(s=>sliceArraysByIndices(s,e)):gather(o,e.dtype==="int32"?e:cast$3(e,"int32")))}function makeBatches(o,e){const s=[];let i=0,a=null;for(;i<o;)a=i+e,a>=o&&(a=o),s.push([i,a]),i=a;return s}function ensureTensorsRank2OrHigher(o){const e=[];o instanceof Tensor&&(o=[o]);for(let s=0;s<o.length;++s){const i=o[s];if(i.rank===1)e.push(expandDims$2(i,1));else{if(i.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(i)}}return e}function disposeNewTensors(o,e){if(o==null)return;const s=[];if(e instanceof Tensor)s.push(e.id);else if(Array.isArray(e))e.forEach(a=>s.push(a.id));else if(e!=null)for(const a in e){const d=e[a];s.push(d.id)}const i=[];if(o instanceof Tensor)s.indexOf(o.id)===-1&&i.push(o);else if(Array.isArray(o))o.forEach(a=>{s.indexOf(a.id)===-1&&i.push(a)});else if(o!=null)for(const a in o){const d=o[a];s.indexOf(d.id)===-1&&i.push(d)}i.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isDataTensor(o){return o instanceof Tensor}function isDataArray(o){return Array.isArray(o)}function isDataDict(o){return!isDataTensor(o)&&!isDataArray(o)}function standardizeInputData(o,e,s,i=!0,a=""){if(e==null||e.length===0){if(o!=null){let h=!1;if(isDataArray(o)&&o.length>0)h=!0;else if(isDataDict(o)){for(const b in o)if(o.hasOwnProperty(b)){h=!0;break}}else h=!0;if(h)throw new ValueError(`Error when checking model ${a} expected no data, but got ${o}`)}return[]}if(o==null)return e.map(h=>null);let d;if(isDataDict(o)){o=o,d=[];for(const h of e){if(o[h]==null)throw new ValueError(`No data provided for "${h}". Need data for each key in: ${e}`);d.push(o[h])}}else if(isDataArray(o)){if(o=o,o.length!==e.length)throw new ValueError(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${o}`);d=o}else{if(o=o,e.length>1)throw new ValueError(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${o.shape}`);d=[o]}if(d=ensureTensorsRank2OrHigher(d),s!=null)for(let h=0;h<e.length;++h){if(s[h]==null)continue;const b=d[h];if(b.shape.length!==s[h].length)throw new ValueError(`Error when checking ${a}: expected ${e[h]} to have ${s[h].length} dimension(s). but got array with shape ${b.shape}`);for(let _=0;_<s[h].length;++_){if(_===0&&!i)continue;const j=b.shape[_],_e=s[h][_];if(_e!=null&&_e>=0&&j!==_e)throw new ValueError(`${a} expected a batch of elements where each example has shape [${s[h].slice(1,s[h].length)}] (i.e.,tensor shape [*,${s[h].slice(1,s[h].length)}]) but the ${a} received an input with ${b.shape[0]} examples, each with shape [${b.shape.slice(1,b.shape.length)}] (tensor shape [${b.shape}])`)}}return d}function checkArrayLengths(o,e,s){const i=unique$2(o.map(d=>d.shape[0]));i.sort();const a=unique$2(e.map(d=>d.shape[0]));if(a.sort(),i.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(o.map(d=>d.shape))}`);if(a.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(d=>d.shape))}`);if(i.length>0&&a.length>0&&!arraysEqual(i,a))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${i[0]} input sample(s) and ${a[0]} target sample(s).`)}function checkLossAndTargetCompatibility(o,e,s){const i=[meanSquaredError,binaryCrossentropy$1,categoricalCrossentropy$1];for(let a=0;a<o.length;++a){const d=o[a],h=e[a],b=s[a];if(h!=null){if(h===categoricalCrossentropy$1&&d.shape[d.shape.length-1]===1)throw new ValueError(`You are passing a target array of shape ${d.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(i.indexOf(h)!==-1){const _=d.shape.slice(1),j=b.slice(1);for(let _e=0;_e<_.length;++_e){const g=_[_e],c=j[_e];if(c!=null&&g!==c)throw new ValueError(`A target Tensor with shape ${d.shape} was passed for an output of shape ${b}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function checkInputData(o,e,s,i=!0,a=""){let d;if(Array.isArray(o)){if(o.length!==e.length)throw new ValueError(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${o.length} Tensors(s).`);d=o}else{if(e.length>1)throw new ValueError(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(o.shape)}.`);d=[o]}if(s!=null)for(let h=0;h<e.length;++h){if(s[h]==null)continue;const b=d[h];if(b.shape.length!==s[h].length)throw new ValueError(`Error when checking ${a}: expected ${e[h]} to have ${s[h].length} dimension(s), but got array with shape ${JSON.stringify(b.shape)}`);for(let _=0;_<s[h].length;++_){if(_===0&&!i)continue;const j=b.shape[_],_e=s[h][_];if(_e!=null&&_e!==j)throw new ValueError(`Error when checking ${a}: expected ${e[h]} to have shape ${JSON.stringify(s[h])} but got array with shape ${JSON.stringify(b.shape)}.`)}}}function collectMetrics(o,e){if(o==null||Array.isArray(o)&&o.length===0)return e.map(i=>[]);let s;if(typeof o=="string"||typeof o=="function")s=[o];else if(Array.isArray(o)||typeof o=="object")s=o;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${o}`);if(Array.isArray(s))return e.map(i=>s);{const i=[];for(const a of e){let d=s.hasOwnProperty(a)?s[a]:[];Array.isArray(d)||(d=[d]),i.push(d)}return i}}const LAYERS_MODEL_FORMAT_NAME="layers-model";class LayersModel extends Container{constructor(e){super(e),this.isTraining=!1}summary(e,s,i=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,e,s,i)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=getOptimizer(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Optimizer))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const h in e.loss)if(this.outputNames.indexOf(h)===-1)throw new ValueError(`Unknown entry in loss dictionary: "${h}". Only expected the following keys: ${this.outputNames}`);for(const h of this.outputNames)e.loss[h]==null&&console.warn(`Output "${h}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${h} during training`),s.push(get$1(e.loss[h]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(b=>get$1(b))}else{const h=get$1(e.loss);this.outputs.forEach(b=>{s.push(h)})}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let h=0;h<this.outputs.length;++h){const b=this.internalOutputShapes[h],_=this.outputNames[h];this.feedOutputNames.push(_),this.feedOutputShapes.push(b),this.feedLossFns.push(this.lossFunctions[h])}const i=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",()=>{for(let h=0;h<this.outputs.length;++h){if(i.indexOf(h)!==-1)continue;const b=this.lossFunctions[h];this.outputs.length>1&&(this.metricsTensors.push([b,h]),this.metricsNames.push(this.outputNames[h]+"_loss"))}});const a=collectMetrics(e.metrics,this.outputNames),d=(h,b,_)=>{this.outputNames.length>1&&(b=this.outputNames[h]+"_"+b),this.metricsNames.push(b),this.metricsTensors.push([_,h])};nameScope("metric",()=>{for(let h=0;h<this.outputs.length;++h){if(i.indexOf(h)!==-1)continue;const b=a[h];(j=>{const _e="";let g,c,$;for(const et of j){if(typeof et=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(et)!==-1){const nt=this.internalOutputShapes[h];nt[nt.length-1]===1||this.lossFunctions[h]===binaryCrossentropy$1?["accuracy","acc"].indexOf(et)!==-1?c=binaryAccuracy:["crossentropy","ce"].indexOf(et)!==-1&&(c=binaryCrossentropy):this.lossFunctions[h]===sparseCategoricalCrossentropy$1?["accuracy","acc"].indexOf(et)!==-1?c=sparseCategoricalAccuracy:["crossentropy","ce"].indexOf(et)!==-1&&(c=sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(et)!==-1?c=categoricalAccuracy:["crossentropy","ce"].indexOf(et)!==-1&&(c=categoricalCrossentropy);let rt;["accuracy","acc"].indexOf(et)!==-1?rt="acc":["crossentropy","ce"].indexOf(et)!==-1&&(rt="ce"),$=c,g=_e+rt}else $=get(et),g=_e+getLossOrMetricName(et);let tt;nameScope(g,()=>{tt=$}),d(h,g,tt)}})(b)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,i={}){const a=i.batchSize==null?32:i.batchSize;checkBatchSize(a);const h=this.standardizeUserDataXY(e,s,!0,a);try{const b=h[0].concat(h[1]);this.makeTestFunction();const _=this.testFunction,j=this.testLoop(_,b,a,i.verbose,i.steps);return singletonOrArray(j)}finally{disposeNewTensors(h[0],e),disposeNewTensors(h[1],s)}}async evaluateDataset(e,s){return this.makeTestFunction(),evaluateDataset(this,e,s)}checkNumSamples(e,s,i,a="steps"){let d;if(i!=null){if(d=null,s!=null)throw new ValueError(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else if(e!=null)Array.isArray(e)?d=e[0].shape[0]:d=e.shape[0];else throw new ValueError(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return d}execute(e,s){if(Array.isArray(s)&&s.length===0)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const i=Array.isArray(s),a=i?s:[s],d=this.retrieveSymbolicTensors(a),h=new FeedDict;if(e instanceof Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let _=0;_<this.inputs.length;++_)h.add(this.inputs[_],e[_])}else for(const _ of this.inputs){const j=e[_.name];if(j==null)throw new ValueError(`No value is provided for the model's input ${_.name}`);h.add(_,j)}const b=execute(d,h);return i?b:b[0]}retrieveSymbolicTensors(e){const s=pyListRepeat(null,e.length);let i=e.length;for(const a of this.layers){const d=Array.isArray(a.output)?a.output:[a.output],h=d.map(b=>b.name);for(let b=0;b<e.length;++b){const _=h.indexOf(e[b]);if(_!==-1&&(s[b]=d[_],i--),i===0)break}if(i===0)break}if(i>0){const a=[];throw s.forEach((d,h)=>{d==null&&a.push(e[h])}),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return s}predictLoop(e,s=32,i=!1){return tidy(()=>{const a=this.checkNumSamples(e);if(i)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const d=makeBatches(a,s),h=this.outputs.map(b=>[]);for(let b=0;b<d.length;++b)tidy(()=>{const j=d[b][0],_e=d[b][1],g=sliceArrays(e,j,_e),c=[];if(Array.isArray(g))for(let et=0;et<g.length;++et)c.push({key:this.inputs[et],value:g[et]});else c.push({key:this.inputs[0],value:g});const $=new FeedDict(c);return execute(this.outputs,$)}).forEach((j,_e)=>h[_e].push(j));return singletonOrArray(h.map(b=>concat$2(b,0)))})}predict(e,s={}){const i=ensureTensorsRank2OrHigher(e);checkInputData(i,this.inputNames,this.feedInputShapes,!1);try{const a=s.batchSize==null?32:s.batchSize;return checkBatchSize(a),this.predictLoop(i,a)}finally{disposeNewTensors(i,e)}}predictOnBatch(e){checkInputData(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,i=!0,a){if(this.optimizer_==null)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const d=[];for(let h=0;h<this.feedOutputShapes.length;++h){const b=this.feedOutputShapes[h];this.feedLossFns[h]===sparseCategoricalCrossentropy$1?d.push(b.slice(0,b.length-1).concat([1])):d.push(b)}if(e=standardizeInputData(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=standardizeInputData(s,this.feedOutputNames,d,!1,"target"),checkArrayLengths(e,s),checkLossAndTargetCompatibility(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!==0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}async standardizeUserData(e,s,i,a,d=!0,h){const[b,_]=this.standardizeUserDataXY(e,s,d,h);if(i!=null)throw new Error("sample weight is not supported yet.");let j=null;if(a!=null){const _e=standardizeClassWeights(a,this.outputNames);j=[];for(let g=0;g<_e.length;++g)j.push(await standardizeWeights(_[g],null,_e[g]))}return[b,_,j]}testLoop(e,s,i,a=0,d){return tidy(()=>{const h=this.checkNumSamples(s,i,d,"steps"),b=[];if(a>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(d!=null)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const _=makeBatches(h,i),j=tensor1d(range$2(0,h));for(let _e=0;_e<_.length;++_e){const g=_[_e][0],c=_[_e][1],$=sliceAlongFirstAxis(j,g,c-g),et=sliceArraysByIndices(s,$),tt=e(et);if(_e===0)for(let nt=0;nt<tt.length;++nt)b.push(scalar(0));for(let nt=0;nt<tt.length;++nt){const rt=tt[nt];b[nt]=add$1(b[nt],mul(c-g,rt))}}for(let _e=0;_e<b.length;++_e)b[_e]=div$1(b[_e],h)}return b})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let i=0;i<e.length;++i){const a=e[i];let d=a;if(count(e,a)>1){const h=count(e.slice(0,i),a);d+=`_${h}`}s.push(d)}return s}makeTrainFunction(){return e=>{const s=[],i=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),d=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),h=[],b=()=>{const g=[];for(let tt=0;tt<this.inputs.length;++tt)g.push({key:this.inputs[tt],value:i[tt]});const c=new FeedDict(g),$=execute(this.outputs,c,{training:!0});let et;for(let tt=0;tt<this.lossFunctions.length;++tt){const nt=this.lossFunctions[tt];let rt=nt(a[tt],$[tt]);d[tt]!=null&&(rt=computeWeightedLoss(rt,d[tt]));const ot=mean$1(rt);s.push(ot),tt===0?et=rt:et=add$1(et,rt)}for(let tt=0;tt<this.metricsTensors.length;++tt){let nt;if(this.outputs.length>1&&tt<this.outputs.length)nt=s[tt];else{const rt=this.metricsTensors[tt][0],ot=this.metricsTensors[tt][1];nt=mean$1(rt(a[ot],$[ot]))}keep(nt),h.push(nt)}return et=mean$1(et),this.calculateLosses().forEach(tt=>{et=add$1(et,tt)}),et},_=this.collectedTrainableWeights.map(g=>g.read());return[this.optimizer_.minimize(b,!0,_)].concat(h)}}makeTestFunction(){this.testFunction=e=>tidy(()=>{const s=[];let i;const a=e.slice(0,this.inputs.length),d=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),h=[];for(let j=0;j<this.inputs.length;++j)h.push({key:this.inputs[j],value:a[j]});const b=new FeedDict(h),_=execute(this.outputs,b);for(let j=0;j<this.lossFunctions.length;++j){const _e=this.lossFunctions[j],g=mean$1(_e(d[j],_[j]));j===0?i=g:i=add$1(i,g),s.push(i)}for(let j=0;j<this.metricsTensors.length;++j){const _e=this.metricsTensors[j][0],g=this.metricsTensors[j][1],c=mean$1(_e(d[g],_[g]));s.push(c)}return s})}async fit(e,s,i={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,d,h,b,_,j,_e,g,c;try{const $=i.batchSize==null?32:i.batchSize;checkBatchSize($);const tt=await this.standardizeUserData(e,s,i.sampleWeight,i.classWeight,!1,$);a=tt[0],d=tt[1],c=tt[2];let nt=!1,rt;if(i.validationData!=null&&i.validationData.length>0){if(nt=!0,i.validationData.length===2)_=i.validationData[0],j=i.validationData[1];else throw i.validationData.length===3?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${i.validationData} is invalid.`);const ht=await this.standardizeUserData(_,j,null,null,!0,$);_e=ht[0],g=ht[1],rt=_e.concat(g)}else if(i.validationSplit!=null&&i.validationSplit>0&&i.validationSplit<1){nt=!0;const pt=Math.floor(a[0].shape[0]*(1-i.validationSplit)),ht=a[0].shape[0];_e=sliceArrays(a,pt,ht),h=a,a=sliceArrays(a,0,pt),g=sliceArrays(d,pt,ht),b=d,d=sliceArrays(d,0,pt),rt=_e.concat(g)}else i.validationSteps!=null&&(nt=!0);const ot=a.concat(d).concat(c);this.checkTrainableWeightsConsistency();const st=this.makeTrainFunction(),it=this.getDedupedMetricsNames();let at,lt;nt?(this.makeTestFunction(),at=this.testFunction,lt=it.slice().concat(it.map(pt=>"val_"+pt))):(at=null,rt=[],lt=it.slice());const ut=standardizeCallbacks(i.callbacks,i.yieldEvery);return await this.fitLoop(st,ot,it,$,i.epochs,i.verbose,ut,at,rt,i.shuffle,lt,i.initialEpoch,null,null)}finally{this.isTraining=!1,disposeNewTensors(a,e),disposeNewTensors(d,s),disposeNewTensors(h,e),disposeNewTensors(b,s),disposeNewTensors(_e,_),disposeNewTensors(g,j),c!=null&&dispose(c)}}async fitLoop(e,s,i,a,d,h,b,_,j,_e,g,c,$,et){a==null&&(a=32),d==null&&(d=1),_e==null&&(_e=!0),c==null&&(c=0);let tt=!1;if(_!=null&&j!=null&&(tt=!0),et!=null&&(tt=!0,$==null))throw new ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const nt=this.checkNumSamples(s,a,$,"steps_per_epoch");let rt;nt!=null&&(rt=range$2(0,nt)),h==null&&(h=1);const{callbackList:ot,history:st}=configureCallbacks(b,h,d,c,nt,$,a,tt,g);ot.setModel(this),this.history=st,await ot.onTrainBegin(),this.stopTraining_=!1;for(let it=c;it<d;++it){await ot.onEpochBegin(it);const at={};if($!=null)throw new NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if(_e==="batch")throw new NotImplementedError("batch shuffling is not implemneted yet");_e&&shuffle(rt);const lt=tensor1d(rt),ut=makeBatches(nt,a);for(let ct=0;ct<ut.length;++ct){const pt={};if(await ot.onBatchBegin(ct,pt),tidy(()=>{const ht=ut[ct][0],yt=ut[ct][1],xt=sliceAlongFirstAxis(lt,ht,yt-ht);pt.batch=ct,pt.size=yt-ht;const ft=sliceArraysByIndices(s,xt),wt=e(ft);for(let dt=0;dt<i.length;++dt){const mt=i[dt],bt=wt[dt];pt[mt]=bt,keep(bt)}if(ct===ut.length-1&&tt){const dt=this.testLoop(_,j,a);for(let mt=0;mt<i.length;++mt){const bt=i[mt],vt=dt[mt];keep(vt),at["val_"+bt]=vt}}}),await ot.onBatchEnd(ct,pt),disposeTensorsInLogs(pt),this.stopTraining_)break}lt.dispose()}if(await ot.onEpochEnd(it,at),this.stopTraining_)break}return await ot.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,s){return fitDataset(this,e,s)}async trainOnBatch(e,s){const i=await this.standardizeUserData(e,s),a=i[0],d=i[1],b=this.makeTrainFunction()(a.concat(d)),_=[];for(const j of b){const _e=await j.data();_.push(_e[0])}return dispose(b),disposeNewTensors(i[0],e),disposeNewTensors(i[1],s),singletonOrArray(_)}getNamedWeights(e){const s=[],i=e!=null&&e.trainableOnly,a=i?this.trainableWeights:this.weights,d=this.getWeights(i);for(let h=0;h<a.length;++h)i&&!a[h].trainable||s.push({name:a[h].originalName,tensor:d[h]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const s=memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-memory().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if(typeof s!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>toSnakeCase(s))}else{const s=Object.keys(this.loss);e={};const i=this.loss;for(const a of s)if(typeof i[a]=="string")e[a]=toSnakeCase(i[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>toSnakeCase(getLossOrMetricName(e)));{const e={};for(const s in this.metrics)e[s]=toSnakeCase(getLossOrMetricName(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const s=convertPythonicToTs(e.optimizer_config),i=deserialize(s);let a;if(typeof e.loss=="string")a=toCamelCase(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(h=>toCamelCase(h));else if(e.loss!=null){a={};for(const h in e.loss)a[h]=toCamelCase(e.loss[h])}let d;if(Array.isArray(e.metrics))d=e.metrics.map(h=>toCamelCase(h));else if(e.metrics!=null){d={};for(const h in e.metrics)d[h]=toCamelCase(e.metrics[h])}this.compile({loss:a,metrics:d,optimizer:i})}async save(e,s){if(typeof e=="string"){const j=getSaveHandlers(e);if(j.length===0)throw new ValueError(`Cannot find any save handlers for URL '${e}'`);if(j.length>1)throw new ValueError(`Found more than one (${j.length}) save handlers for URL '${e}'`);e=j[0]}if(e.save==null)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const i=await encodeWeights(this.getNamedWeights(s)),b={modelTopology:this.toJSON(null,!1),format:LAYERS_MODEL_FORMAT_NAME,generatedBy:`TensorFlow.js tfjs-layers v${version}`,convertedBy:null};if((s==null?!1:s.includeOptimizer)&&this.optimizer!=null){b.trainingConfig=this.getTrainingConfig();const j="optimizer",{data:_e,specs:g}=await encodeWeights(await this.optimizer.getWeights(),j);i.specs.push(...g),i.data=concatenateArrayBuffers([i.data,_e])}return this.userDefinedMetadata!=null&&(checkUserDefinedMetadata(this.userDefinedMetadata,this.name,!0),b.userDefinedMetadata=this.userDefinedMetadata),b.weightData=i.data,b.weightSpecs=i.specs,e.save(b)}setUserDefinedMetadata(e){checkUserDefinedMetadata(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}LayersModel.className="Model";registerClass(LayersModel);class Functional extends LayersModel{}Functional.className="Functional";registerClass(Functional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sequential extends LayersModel{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:getUid("sequential_"),e.layers!=null)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(i=>i<0))throw new ValueError(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof Sequential||e instanceof LayersModel;let i;if(s){if(i=e,i.outputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(i.inputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=Input({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(s)this.outputs=i.outputs,this.inputs=i.inputs;else{if(e.inboundNodes.length!==1)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return this.model==null&&this.build(),this.model.call(e,s)}build(e){if(getExactlyOneShape(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,i=console.log){this.built||this.build(),super.summary(e,s,i)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,s,i={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(e,s,i)}async evaluateDataset(e,s){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,s)}predict(e,s={}){return this.model==null&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,s,i={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(e,s,i)}async fitDataset(e,s){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(e,s)}async trainOnBatch(e,s){return this.model.trainOnBatch(e,s)}static fromConfig(e,s,i={},a=!1){let d,h={};if(s instanceof Array){if(s[0].className==null||s[0].className==="Merge")throw new ValueError("Legacy serialization format not supported yet.");d=s}else assert$1(s.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),d=s.layers,delete s.layers,h=s;const b=new e(h);if(!(b instanceof Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${b}`);for(const _ of d){const _e=deserialize(_,void 0,a);a&&_e.setFastWeightInitDuringBuild(!0),b.add(_e)}return b}set stopTraining(e){if(this.model==null)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const i={};i.className=s.getClassName(),i.config=s.getConfig(),e.push(i)}return{name:this.name,layers:e}}}Sequential.className="Sequential";registerClass(Sequential);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Activation$1=class extends Serializable{getConfig(){return{}}};class Elu extends Activation$1{apply(e,s=1){return elu$2(e,s)}}Elu.className="elu";registerClass(Elu);class Selu extends Activation$1{apply(e){return selu$2(e)}}Selu.className="selu";registerClass(Selu);class Relu extends Activation$1{apply(e){return relu$2(e)}}Relu.className="relu";registerClass(Relu);class Relu6 extends Activation$1{apply(e){return tidy(()=>minimum$2(6,relu$2(e)))}}Relu6.className="relu6";registerClass(Relu6);class Linear extends Activation$1{apply(e){return e}}Linear.className="linear";registerClass(Linear);class Sigmoid extends Activation$1{apply(e){return sigmoid$2(e)}}Sigmoid.className="sigmoid";registerClass(Sigmoid);class HardSigmoid extends Activation$1{apply(e){return hardSigmoid(e)}}HardSigmoid.className="hardSigmoid";registerClass(HardSigmoid);class Softplus extends Activation$1{apply(e){return softplus$2(e)}}Softplus.className="softplus";registerClass(Softplus);class Softsign extends Activation$1{apply(e){return softsign(e)}}Softsign.className="softsign";registerClass(Softsign);class Tanh extends Activation$1{apply(e){return tanh$2(e)}}Tanh.className="tanh";registerClass(Tanh);let Softmax$1=class extends Activation$1{apply(e,s=-1){return softmax$2(e,s)}};Softmax$1.className="softmax";registerClass(Softmax$1);class LogSoftmax extends Activation$1{apply(e,s=-1){return logSoftmax(e,s)}}LogSoftmax.className="logSoftmax";registerClass(LogSoftmax);class Swish extends Activation$1{apply(e,s=1){return tidy(()=>mul(sigmoid$2(mul(e,s)),e))}}Swish.className="swish";registerClass(Swish);class Mish extends Activation$1{apply(e){return tidy(()=>mul(e,tanh$2(softplus$2(e))))}}Mish.className="mish";registerClass(Mish);function serializeActivation(o){return o.getClassName()}function deserializeActivation(o,e={}){return deserializeKerasObject(o,SerializationMap.getMap().classNameMap,e,"activation")}function getActivation(o){if(o==null){const e={};return e.className="linear",e.config={},deserializeActivation(e)}if(typeof o=="string"){const e={};return e.className=o,e.config={},deserializeActivation(e)}else return o instanceof Activation$1?o:deserializeActivation(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertObjectArgs(o){if(o!=null&&typeof o!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${o}`)}class Regularizer extends Serializable{}class L1L2 extends Regularizer{constructor(e){super(),assertObjectArgs(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return tidy(()=>{let s=zeros$1([1]);return this.hasL1&&(s=add$1(s,sum$2(mul(this.l1,abs$2(e))))),this.hasL2&&(s=add$1(s,sum$2(mul(this.l2,square$1(e))))),reshape$2(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}L1L2.className="L1L2";registerClass(L1L2);const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={l1l2:"L1L2"};function serializeRegularizer(o){return serializeKerasObject(o)}function deserializeRegularizer(o,e={}){return deserializeKerasObject(o,SerializationMap.getMap().classNameMap,e,"regularizer")}function getRegularizer(o){if(o==null)return null;if(typeof o=="string"){const s={className:o in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[o]:o,config:{}};return deserializeRegularizer(s)}else return o instanceof Regularizer?o:deserializeRegularizer(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ReLU extends Layer{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,s){e=getExactlyOneTensor(e);let i=relu$2(e);return this.maxValue!=null&&(i=clipByValue$2(i,0,this.maxValue)),i}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}ReLU.className="ReLU";registerClass(ReLU);class LeakyReLU extends Layer{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,s){const i=getExactlyOneTensor(e);return leakyRelu$2(i,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}LeakyReLU.className="LeakyReLU";registerClass(LeakyReLU);class PReLU extends Layer{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(e.alphaRegularizer),this.alphaConstraint=getConstraint(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=getExactlyOneShape(e);const s=e.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)s[a-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const i={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)i[a]=e[a];this.inputSpec=[new InputSpec({ndim:e.length,axes:i})],this.built=!0}call(e,s){return e=getExactlyOneTensor(e),prelu$2(e,this.alpha.read())}getConfig(){const e={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}PReLU.className="PReLU";registerClass(PReLU);let ELU$3=class extends Layer{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,s){const i=getExactlyOneTensor(e);return elu$3(i)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}};ELU$3.className="ELU";registerClass(ELU$3);class ThresholdedReLU extends Layer{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,s){const i=getExactlyOneTensor(e);return mul(i,cast$3(greater$2(i,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}ThresholdedReLU.className="ThresholdedReLU";registerClass(ThresholdedReLU);class Softmax extends Layer{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Softmax$1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,s){return tidy(()=>{let i=getExactlyOneTensor(e);const a=s.mask;if(a!=null){const d=mul(sub$2(ones(i.shape),cast$3(a,i.dtype)),scalar(-1e9));i=add$1(i,d)}return this.axis instanceof Array?this.axis.length>1?exp$2(sub$2(i,logSumExp(i,this.axis,!0))):this.softmax(i,this.axis[0]):this.softmax(i,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}Softmax.className="Softmax";registerClass(Softmax);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function normalizeArray(o,e,s){if(typeof o=="number")return pyListRepeat(o,e);if(o.length!==e)throw new ValueError(`The ${s} argument must be an integer or tuple of ${e} integers. Received: ${o.length} elements.`);for(let i=0;i<e;++i){const a=o[i];if(!isInteger(a))throw new ValueError(`The ${s} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(o)} including a non-integer number ${a}`)}return o}function convOutputLength(o,e,s,i,a=1){if(o==null)return o;const d=e+(e-1)*(a-1);let h;return s==="same"?h=o:h=o-d+1,Math.floor((h+i-1)/i)}function deconvLength(o,e,s,i){if(o==null)return null;if(i==="valid")o=o*e+max$2([s-e,0]);else if(i==="same")o=o*e;else throw new ValueError(`Unsupport padding mode: ${i}.`);return o}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function preprocessConv2DInput(o,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$2(o,[0,2,3,1]):o))}function preprocessConv3DInput(o,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$2(o,[0,2,3,4,1]):o))}function conv1dWithBias(o,e,s,i=1,a="valid",d,h=1){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),o.shape.length!==3)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${o.shape.length} instead.`);if(e.shape.length!==3)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(s!=null&&s.shape.length!==1)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(d==="channelsFirst"&&(o=transpose$2(o,[0,2,1])),a==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let b=conv1d(o,e,i,a==="same"?"same":"valid","NWC",h);return s!=null&&(b=biasAdd(b,s)),b})}function conv2dWithBiasActivation(o,e,s,i=[1,1],a="valid",d,h,b=null){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),o.rank!==3&&o.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${o.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${o.rank}.`);let _=preprocessConv2DInput(o,d);if(a==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return _=conv2d$1({x:_,filter:e,strides:i,pad:a==="same"?"same":"valid",dilations:h,dataFormat:"NHWC",bias:s,activation:b}),d==="channelsFirst"&&(_=transpose$2(_,[0,3,1,2])),_})}function conv3dWithBias(o,e,s,i=[1,1,1],a="valid",d,h){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),o.rank!==4&&o.rank!==5)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${o.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${o.rank}.`);let b=preprocessConv3DInput(o,d);if(a==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return b=conv3d(b,e,i,a==="same"?"same":"valid","NDHWC",h),s!=null&&(b=biasAdd(b,s)),d==="channelsFirst"&&(b=transpose$2(b,[0,4,1,2,3])),b})}class BaseConv extends Layer{constructor(e,s){if(super(s),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BaseConv.verifyArgs(s),this.rank=e,assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(s.kernelSize,e,"kernelSize"),this.strides=normalizeArray(s.strides==null?1:s.strides,e,"strides"),this.padding=s.padding==null?"valid":s.padding,checkPaddingMode(this.padding),this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(s.activation),this.useBias=s.useBias==null?!0:s.useBias,this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(s.biasConstraint),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.activityRegularizer=getRegularizer(s.activityRegularizer),this.dilationRate=normalizeArray(s.dilationRate==null?1:s.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(assert("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}class Conv extends BaseConv{constructor(e,s){super(e,s),this.kernel=null,Conv.verifyArgs(s),this.filters=s.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(s.kernelConstraint),this.kernelRegularizer=getRegularizer(s.kernelRegularizer)}build(e){e=getExactlyOneShape(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[s]}`);const i=e[s],a=this.kernelSize.concat([i,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[s]:i}}],this.built=!0}call(e,s){return tidy(()=>{e=getExactlyOneTensor(e);let i;const a=this.bias==null?null:this.bias.read(),d=mapActivationToFusedKernel(this.activation.getClassName());if(d!=null&&this.rank===2)i=conv2dWithBiasActivation(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,d);else{if(this.rank===1)i=conv1dWithBias(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)i=conv2dWithBiasActivation(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)i=conv3dWithBias(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(i=this.activation.apply(i))}return i})}computeOutputShape(e){e=getExactlyOneShape(e);const s=[],i=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let d=0;d<i.length;++d){const h=convOutputLength(i[d],this.kernelSize[d],this.padding,this.strides[d],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[d]);s.push(h)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(s),a.push(this.filters)):(a.push(this.filters),a=a.concat(s)),a}getConfig(){const e={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},s=super.getConfig();return Object.assign(e,s),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Conv2D extends Conv{constructor(e){super(2,e),Conv2D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv2D.className="Conv2D";registerClass(Conv2D);class Conv3D extends Conv{constructor(e){super(3,e),Conv3D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Conv3D.className="Conv3D";registerClass(Conv3D);class Conv2DTranspose extends Conv2D{constructor(e){if(super(e),this.inputSpec=[new InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=getExactlyOneShape(e),e.length!==4)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const i=e[s],a=this.kernelSize.concat([this.filters,i]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[s]:i}})],this.built=!0}call(e,s){return tidy(()=>{let i=getExactlyOneTensor(e);if(i.shape.length!==4)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${i.shape.length}`);const a=i.shape,d=a[0];let h,b;this.dataFormat==="channelsFirst"?(h=2,b=3):(h=1,b=2);const _=a[h],j=a[b],_e=this.kernelSize[0],g=this.kernelSize[1],c=this.strides[0],$=this.strides[1],et=deconvLength(_,c,_e,this.padding),tt=deconvLength(j,$,g,this.padding),nt=[d,et,tt,this.filters];this.dataFormat!=="channelsLast"&&(i=transpose$2(i,[0,2,3,1]));let rt=conv2dTranspose(i,this.kernel.read(),nt,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(rt=transpose$2(rt,[0,3,1,2])),this.bias!=null&&(rt=biasAdd(rt,this.bias.read(),this.dataFormat)),this.activation!=null&&(rt=this.activation.apply(rt)),rt})}computeOutputShape(e){e=getExactlyOneShape(e);const s=e.slice();let i,a,d;this.dataFormat==="channelsFirst"?(i=1,a=2,d=3):(i=3,a=1,d=2);const h=this.kernelSize[0],b=this.kernelSize[1],_=this.strides[0],j=this.strides[1];return s[i]=this.filters,s[a]=deconvLength(s[a],_,h,this.padding),s[d]=deconvLength(s[d],j,b,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Conv2DTranspose.className="Conv2DTranspose";registerClass(Conv2DTranspose);class Conv3DTranspose extends Conv3D{constructor(e){if(super(e),this.inputSpec=[new InputSpec({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=getExactlyOneShape(e),e.length!==5)throw new ValueError("Input should have rank 5; Received input shape: "+JSON.stringify(e));const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const i=e[s],a=this.kernelSize.concat([this.filters,i]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:5,axes:{[s]:i}})],this.built=!0}call(e,s){return tidy(()=>{let i=getExactlyOneTensor(e);if(i.shape.length!==5)throw new ValueError(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${i.shape.length}`);const a=i.shape,d=a[0];let h,b,_;this.dataFormat==="channelsFirst"?(_=2,h=3,b=4):(_=1,h=2,b=3);const j=a[_],_e=a[h],g=a[b],c=this.kernelSize[0],$=this.kernelSize[1],et=this.kernelSize[2],tt=this.strides[0],nt=this.strides[1],rt=this.strides[2],ot=deconvLength(j,tt,c,this.padding),st=deconvLength(_e,nt,$,this.padding),it=deconvLength(g,rt,et,this.padding),at=[d,ot,st,it,this.filters];this.dataFormat!=="channelsLast"&&(i=transpose$2(i,[0,2,3,4,1]));let lt=conv3dTranspose(i,this.kernel.read(),at,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(lt=transpose$2(lt,[0,4,1,2,3])),this.bias!==null&&(lt=biasAdd(lt,this.bias.read(),this.dataFormat)),this.activation!==null&&(lt=this.activation.apply(lt)),lt})}computeOutputShape(e){e=getExactlyOneShape(e);const s=e.slice();let i,a,d,h;this.dataFormat==="channelsFirst"?(i=1,a=2,d=3,h=4):(i=4,a=1,d=2,h=3);const b=this.kernelSize[0],_=this.kernelSize[1],j=this.kernelSize[2],_e=this.strides[0],g=this.strides[1],c=this.strides[2];return s[i]=this.filters,s[a]=deconvLength(s[a],_e,b,this.padding),s[d]=deconvLength(s[d],g,_,this.padding),s[h]=deconvLength(s[h],c,j,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Conv3DTranspose.className="Conv3DTranspose";registerClass(Conv3DTranspose);class SeparableConv extends Conv{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,s.filters==null)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(s.kernelInitializer!=null||s.kernelRegularizer!=null||s.kernelConstraint!=null)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(s.padding!=null&&s.padding!=="same"&&s.padding!=="valid")throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=s.depthMultiplier==null?1:s.depthMultiplier,this.depthwiseInitializer=getInitializer(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(s.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(s.depthwiseConstraint),this.pointwiseInitializer=getInitializer(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(s.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(s.pointwiseConstraint)}build(e){if(e=getExactlyOneShape(e),e.length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null||e[s]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const i=e[s],a=this.kernelSize.concat([i,this.depthMultiplier]),d=[];for(let b=0;b<this.rank;++b)d.push(1);d.push(i*this.depthMultiplier,this.filters);const h=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,h,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",d,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,h,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,h,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[s]:i}})],this.built=!0}call(e,s){return tidy(()=>{e=getExactlyOneTensor(e);let i;if(this.rank===1)throw new NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=transpose$2(e,[0,2,3,1])),i=separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(i=biasAdd(i,this.bias.read(),this.dataFormat)),this.activation!=null&&(i=this.activation.apply(i)),this.dataFormat==="channelsFirst"&&(i=transpose$2(i,[0,3,1,2])),i})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),e.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),e}}SeparableConv.className="SeparableConv";class SeparableConv2D extends SeparableConv{constructor(e){super(2,e)}}SeparableConv2D.className="SeparableConv2D";registerClass(SeparableConv2D);class Conv1D extends Conv{constructor(e){super(1,e),Conv1D.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv1D.className="Conv1D";registerClass(Conv1D);class Cropping2D extends Layer{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return tidy(()=>{if(e=getExactlyOneTensor(e),this.dataFormat==="channelsLast"){const i=sliceAlongAxis(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(i,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const i=sliceAlongAxis(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(i,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}Cropping2D.className="Cropping2D";registerClass(Cropping2D);class UpSampling2D extends Layer{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,checkInterpolationFormat(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const s=e[2]==null?null:this.size[0]*e[2],i=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],s,i]}else{const s=e[1]==null?null:this.size[0]*e[1],i=e[2]==null?null:this.size[1]*e[2];return[e[0],s,i,e[3]]}}call(e,s){return tidy(()=>{let i=getExactlyOneTensor(e);const a=i.shape;if(this.dataFormat==="channelsFirst"){i=transpose$2(i,[0,2,3,1]);const d=this.size[0]*a[2],h=this.size[1]*a[3],b=this.interpolation==="nearest"?image.resizeNearestNeighbor(i,[d,h]):image.resizeBilinear(i,[d,h]);return transpose$2(b,[0,3,1,2])}else{const d=this.size[0]*a[1],h=this.size[1]*a[2];return this.interpolation==="nearest"?image.resizeNearestNeighbor(i,[d,h]):image.resizeBilinear(i,[d,h])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}}UpSampling2D.className="UpSampling2D";registerClass(UpSampling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function depthwiseConv2d(o,e,s=[1,1],i="valid",a,d){return tidy(()=>{a==null&&(a=imageDataFormat()),checkDataFormat(a);let h=preprocessConv2DInput(o,a);if(o.rank!==4)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${o.rank}-D`);if(e.rank!==4)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return h=depthwiseConv2d$1(h,e,s,i==="same"?"same":"valid","NHWC",d),a==="channelsFirst"&&(h=transpose$2(h,[0,3,1,2])),h})}class DepthwiseConv2D extends BaseConv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=getInitializer(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(e.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(e.depthwiseRegularizer)}build(e){if(e=getExactlyOneShape(e),e.length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s=this.dataFormat==="channelsFirst"?1:3;if(e[s]==null||e[s]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const i=e[s],a=[this.kernelSize[0],this.kernelSize[1],i,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[i*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,s){return tidy(()=>{e=getExactlyOneTensor(e);let i=depthwiseConv2d(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(i=biasAdd(i,this.bias.read(),this.dataFormat)),this.activation!=null&&(i=this.activation.apply(i)),i})}computeOutputShape(e){e=getExactlyOneShape(e);const s=this.dataFormat==="channelsFirst"?e[2]:e[1],i=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,d=convOutputLength(s,this.kernelSize[0],this.padding,this.strides[0]),h=convOutputLength(i,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,d,h]:[e[0],d,h,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),e}}DepthwiseConv2D.className="DepthwiseConv2D";registerClass(DepthwiseConv2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeArgs(o,e,s,i){if(Array.isArray(o)){if(e!=null||s!=null)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");i!=null&&(s=o.slice(o.length-i,o.length),o=o.slice(0,o.length-i)),o.length>1&&(e=o.slice(1,o.length)),o=o[0]}function a(d){return d==null||Array.isArray(d)?d:[d]}return e=a(e),s=a(s),{inputs:o,initialState:e,constants:s}}function rnn(o,e,s,i=!1,a,d,h=!1,b=!1){return tidy(()=>{const _=e.shape.length;if(_<3)throw new ValueError(`Input should be at least 3D, but is ${_}D.`);const j=[1,0].concat(range$2(2,_));if(e=transpose$2(e,j),d!=null)throw new NotImplementedError("The rnn() functoin of the deeplearn.js backend does not support constants yet.");h&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=cast$3(cast$3(a,"bool"),"float32"),a.rank===_-1&&(a=expandDims$3(a,-1)),a=transpose$2(a,j)),i&&(e=reverse$2(e,0),a!=null&&(a=reverse$2(a,0)));const _e=[];let g,c=s;const $=e.shape[0],et=unstack(e);let tt;a!=null&&(tt=unstack(a));for(let rt=0;rt<$;++rt){const ot=et[rt],st=tidy(()=>o(ot,c));if(a==null)g=st[0],c=st[1];else{const it=tidy(()=>{const at=tt[rt],lt=sub$2(onesLike$2(at),at),ut=add$1(mul(st[0],at),mul(c[0],lt)),ct=c.map((pt,ht)=>add$1(mul(st[1][ht],at),mul(pt,lt)));return{output:ut,newStates:ct}});g=it.output,c=it.newStates}b&&_e.push(g)}let nt;return b&&(nt=stack(_e,1)),[g,nt,c]})}class RNN extends Layer{constructor(e){super(e);let s;if(e.cell==null)throw new ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?s=new StackedRNNCells({cells:e.cell}):s=e.cell,s.stateSize==null)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return range$2(0,e).map(s=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const i=s[0];let a;if(this.returnSequences?a=[e[0],e[1],i]:a=[e[0],i],this.returnState){const d=[];for(const h of s)d.push([e[0],h]);return[a].concat(d)}else return a}computeMask(e,s){return tidy(()=>{Array.isArray(s)&&(s=s[0]);const i=this.returnSequences?s:null;if(this.returnState){const a=this.states.map(d=>null);return[i].concat(a)}else return i})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let i=0;i<e;++i)s.push(null);return s}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(e)&&(e=e[0]),e=e;const s=this.stateful?e[0]:null,i=e.slice(2);this.inputSpec[0]=new InputSpec({shape:[s,null,...i]});const a=[e[0]].concat(e.slice(2));this.cell.build(a);let d;if(Array.isArray(this.cell.stateSize)?d=this.cell.stateSize:d=[this.cell.stateSize],this.stateSpec!=null){if(!arraysEqual(this.stateSpec.map(h=>h.shape[h.shape.length-1]),d))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=d.map(h=>new InputSpec({shape:[null,h]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const i=this.inputSpec[0].shape[0];if(i==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>zeros$1([i,a])):this.states_=[zeros$1([i,this.cell.stateSize])];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>zeros$1([i,a])):this.states_[0]=zeros$1([i,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s===!0?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let a=0;a<this.states_.length;++a){const d=e[a],h=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,b=[i,h];if(!arraysEqual(d.shape,b))throw new ValueError(`State ${a} is incompatible with layer ${this.name}: expected shape=${b}, received shape=${d.shape}`);this.states_[a]=d}}this.states_=this.states_.map(a=>keep(a.clone()))})}apply(e,s){let i=s==null?null:s.initialState,a=s==null?null:s.constants;s==null&&(s={});const d=standardizeArgs(e,i,a,this.numConstants);e=d.inputs,i=d.initialState,a=d.constants;let h=[],b=[];if(i!=null){s.initialState=i,h=h.concat(i),this.stateSpec=[];for(const j of i)this.stateSpec.push(new InputSpec({shape:j.shape}));b=b.concat(this.stateSpec)}if(a!=null&&(s.constants=a,h=h.concat(a),this.numConstants=a.length),h[0]instanceof SymbolicTensor){const j=[e].concat(h),_e=this.inputSpec.concat(b),g=this.inputSpec;this.inputSpec=_e;const c=super.apply(j,s);return this.inputSpec=g,c}else return super.apply(e,s)}call(e,s){return tidy(()=>{const i=s==null?null:s.mask,a=s==null?null:s.training;let d=s==null?null:s.initialState;e=getExactlyOneTensor(e),d==null&&(this.stateful?d=this.states_:d=this.getInitialState(e));const h=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(d.length!==h)throw new ValueError(`RNN Layer has ${h} state(s) but was passed ${d.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const b={training:a},j=rnn((et,tt)=>{const nt=this.cell.call([et].concat(tt),b);return[nt[0],nt.slice(1)]},e,d,this.goBackwards,i,null,this.unroll,this.returnSequences),_e=j[0],g=j[1],c=j[2];this.stateful&&this.resetStates(c,a);const $=this.returnSequences?g:_e;return this.returnState?[$].concat(c):$})}getInitialState(e){return tidy(()=>{let s=zeros$1(e.shape);return s=sum$2(s,[1,2]),s=expandDims$2(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(i=>i>1?tile$2(s,[1,i]):s):this.cell.stateSize>1?[tile$2(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(s.numConstants=this.numConstants);const i=this.cell.getConfig();return this.getClassName()===RNN.className&&(s.cell={className:this.cell.getClassName(),config:i}),Object.assign(Object.assign(Object.assign({},i),e),s)}static fromConfig(e,s,i={}){const a=s.cell,d=deserialize(a,i);return new e(Object.assign(s,{cell:d}))}}RNN.className="RNN";registerClass(RNN);class RNNCell extends Layer{}class SimpleRNNCell extends RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,s){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let i=e[1];e=e[0];const a=s.training==null?!1:s.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(i),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let d;const h=this.dropoutMask,b=this.recurrentDropoutMask;h!=null?d=dot(mul(e,h),this.kernel.read()):d=dot(e,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),b!=null&&(i=mul(i,b));let _=add$1(d,dot(i,this.recurrentKernel.read()));return this.activation!=null&&(_=this.activation.apply(_)),[_,_]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),s)}}SimpleRNNCell.className="SimpleRNNCell";registerClass(SimpleRNNCell);class SimpleRNN extends RNN{constructor(e){e.cell=new SimpleRNNCell(e),super(e)}call(e,s){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const i=s==null?null:s.mask,a=s==null?null:s.training,d=s==null?null:s.initialState;return super.call(e,{mask:i,training:a,initialState:d})})}static fromConfig(e,s){return new e(s)}}SimpleRNN.className="SimpleRNN";registerClass(SimpleRNN);class GRUCell extends RNNCell{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,s){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const i=s.training==null?!1:s.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:i,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(a),rate:this.recurrentDropout,training:i,count:3,dropoutFunc:this.dropoutFunc}));const d=this.dropoutMask,h=this.recurrentDropoutMask;let b,_,j;0<this.dropout&&this.dropout<1&&(e=mul(e,d[0]));let _e=dot(e,this.kernel.read());this.useBias&&(_e=biasAdd(_e,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=mul(a,h[0]));const g=this.recurrentKernel.read(),[c,$]=split$1(g,[2*this.units,this.units],g.rank-1),et=dot(a,c),[tt,nt,rt]=split$1(_e,3,_e.rank-1),[ot,st]=split$1(et,2,et.rank-1);b=this.recurrentActivation.apply(add$1(tt,ot)),_=this.recurrentActivation.apply(add$1(nt,st));const it=dot(mul(_,a),$);j=this.activation.apply(add$1(rt,it));const at=add$1(mul(b,a),mul(add$1(1,neg$2(b)),j));return[at,at]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),s)}}GRUCell.className="GRUCell";registerClass(GRUCell);class GRU extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new GRUCell(e),super(e)}call(e,s){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const i=s==null?null:s.mask,a=s==null?null:s.training,d=s==null?null:s.initialState;return super.call(e,{mask:i,training:a,initialState:d})})}static fromConfig(e,s){return s.implmentation===0&&(s.implementation=1),new e(s)}}GRU.className="GRU";registerClass(GRU);class LSTMCell extends RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;e=getExactlyOneShape(e);const i=e[e.length-1];this.kernel=this.addWeight("kernel",[i,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const d=this.biasInitializer,h=this.units;a=new(s=class extends Initializer{apply(_,j){const _e=d.apply([h]),g=new Ones().apply([h]),c=d.apply([h*2]);return concatAlongFirstAxis(concatAlongFirstAxis(_e,g),c)}},s.className="CustomInit",s)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return tidy(()=>{const i=s.training==null?!1:s.training;if(e=e,e.length!==3)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const d=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:i,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(a),rate:this.recurrentDropout,training:i,count:4,dropoutFunc:this.dropoutFunc}));const h=this.dropoutMask,b=this.recurrentDropoutMask;let _,j,_e,g;0<this.dropout&&this.dropout<1&&(e=mul(e,h[0]));let c=dot(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=mul(a,b[0])),c=add$1(c,dot(a,this.recurrentKernel.read())),this.useBias&&(c=biasAdd(c,this.bias.read()));const[$,et,tt,nt]=split$1(c,4,c.rank-1);_=this.recurrentActivation.apply($),j=this.recurrentActivation.apply(et),_e=add$1(mul(j,d),mul(_,this.activation.apply(tt))),g=this.recurrentActivation.apply(nt);const rt=mul(g,this.activation.apply(_e));return[rt,rt,_e]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),s)}}LSTMCell.className="LSTMCell";registerClass(LSTMCell);class LSTM extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new LSTMCell(e),super(e)}call(e,s){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const i=s==null?null:s.mask,a=s==null?null:s.training,d=s==null?null:s.initialState;return super.call(e,{mask:i,training:a,initialState:d})})}static fromConfig(e,s){return s.implmentation===0&&(s.implementation=1),new e(s)}}LSTM.className="LSTM";registerClass(LSTM);class StackedRNNCells extends RNNCell{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return tidy(()=>{e=e;let i=e.slice(1);const a=[];for(const b of this.cells.slice().reverse())Array.isArray(b.stateSize)?a.push(i.splice(0,b.stateSize.length)):a.push(i.splice(0,1));a.reverse();const d=[];let h;for(let b=0;b<this.cells.length;++b){const _=this.cells[b];i=a[b],b===0?h=[e[0]].concat(i):h=[h[0]].concat(i),h=_.call(h,s),d.push(h.slice(1))}i=[];for(const b of d.slice().reverse())i.push(...b);return[h[0]].concat(i)})}build(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let s;this.cells.forEach((i,a)=>{nameScope(`RNNCell_${a}`,()=>{i.build(e),Array.isArray(i.stateSize)?s=i.stateSize[0]:s=i.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),s=d=>({className:d.getClassName(),config:d.getConfig()}),a={cells:this.cells.map(s)};return Object.assign(Object.assign({},e),a)}static fromConfig(e,s,i={}){const a=[];for(const d of s.cells)a.push(deserialize(d,i));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const i of this.cells)s.push(...i.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return batchGetValue(e)}setWeights(e){const s=[];for(const i of this.cells){const a=i.weights.length,d=e.splice(a);for(let h=0;h<i.weights.length;++h)s.push([i.weights[h],d[h]])}batchSetValue(s)}}StackedRNNCells.className="StackedRNNCells";registerClass(StackedRNNCells);function generateDropoutMask(o){const{ones:e,rate:s,training:i=!1,count:a=1,dropoutFunc:d}=o,h=()=>d!=null?d(e(),s):dropout(e(),s),b=()=>inTrainPhase(h,e,i);return!a||a<=1?keep(b().clone()):Array(a).fill(void 0).map(b).map(j=>keep(j.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var __rest=function(o,e){var s={};for(var i in o)Object.prototype.hasOwnProperty.call(o,i)&&e.indexOf(i)<0&&(s[i]=o[i]);if(o!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,i=Object.getOwnPropertySymbols(o);a<i.length;a++)e.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(o,i[a])&&(s[i[a]]=o[i[a]]);return s};class ConvRNN2D extends RNN{constructor(e){if(e.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new InputSpec({ndim:5})]}call(e,s){return tidy(()=>{if(this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new ValueError("ConvRNN2D cell does not support constants");const i=s==null?null:s.mask,a=s==null?null:s.training,d=s==null?null:s.initialState;return super.call(e,{mask:i,training:a,initialState:d})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return tidy(()=>{const{stateSize:s}=this.cell,i=e.shape,a=this.computeSingleOutputShape(i),d=[a[0],...a.slice(2)],h=zeros$1(d);return Array.isArray(s)?Array(s.length).fill(h):[h]})}resetStates(e,s=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const i=this.inputSpec[0].shape,a=this.computeSingleOutputShape(i),d=[a[0],...a.slice(2)];if(i[0]==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(d)):this.states_=[zeros$1(d)];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(d)):this.states_[0]=zeros$1(d);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let b=0;b<this.states_.length;++b){const _=e[b],j=d;if(!arraysEqual(_.shape,j))throw new ValueError(`State ${b} is incompatible with layer ${this.name}: expected shape=${j}, received shape=${_.shape}`);this.states_[b]=_}}this.states_=this.states_.map(b=>keep(b.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:i,kernelSize:a,padding:d,strides:h,dilationRate:b}=this.cell,_=s==="channelsFirst",j=e[_?3:2],_e=e[_?4:3],g=convOutputLength(j,a[0],d,h[0],b[0]),c=convOutputLength(_e,a[1],d,h[1],b[1]);return[...e.slice(0,2),..._?[i,g,c]:[g,c,i]]}}ConvRNN2D.className="ConvRNN2D";class ConvLSTM2DCell extends LSTMCell{constructor(e){const{filters:s,kernelSize:i,strides:a,padding:d,dataFormat:h,dilationRate:b}=e;super(Object.assign(Object.assign({},e),{units:s})),this.filters=s,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(i,2,"kernelSize"),this.kernelSize.forEach(_=>assertPositiveInteger(_,"kernelSize")),this.strides=normalizeArray(a||1,2,"strides"),this.strides.forEach(_=>assertPositiveInteger(_,"strides")),this.padding=d||"valid",checkPaddingMode(this.padding),this.dataFormat=h||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray(b||1,2,"dilationRate"),this.dilationRate.forEach(_=>assertPositiveInteger(_,"dilationRate"))}build(e){var s;e=getExactlyOneShape(e);const i=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[i]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[i]}`);const a=e[i],d=4,h=this.kernelSize.concat([a,this.filters*d]);this.kernel=this.addWeight("kernel",h,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const b=this.kernelSize.concat([this.filters,this.filters*d]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",b,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let _;if(this.unitForgetBias){const j=this.biasInitializer,_e=this.filters;_=new(s=class extends Initializer{apply(c,$){const et=j.apply([_e]),tt=ones([_e]),nt=j.apply([_e*2]);return concatenate([et,tt,nt])}},s.className="CustomInit",s)}else _=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*d],null,_,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return tidy(()=>{if(e.length!==3)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const i=s.training||!1,a=e[0],d=e[1],h=e[2],b=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(a),rate:this.dropout,training:i,count:b,dropoutFunc:this.dropoutFunc}));const _=this.dropoutMask,j=(Et,Ct,kt)=>!Ct||!Ct[kt]?Et:mul(Ct[kt],Et);let _e=j(a,_,0),g=j(a,_,1),c=j(a,_,2),$=j(a,_,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(d),rate:this.recurrentDropout,training:i,count:b,dropoutFunc:this.dropoutFunc}));const et=this.recurrentDropoutMask;let tt=j(d,et,0),nt=j(d,et,1),rt=j(d,et,2),ot=j(d,et,3);const st=3,[it,at,lt,ut]=split$1(this.kernel.read(),b,st),[ct,pt,ht,yt]=this.useBias?split$1(this.bias.read(),b):[null,null,null,null];_e=this.inputConv(_e,it,ct,this.padding),g=this.inputConv(g,at,pt,this.padding),c=this.inputConv(c,lt,ht,this.padding),$=this.inputConv($,ut,yt,this.padding);const[xt,ft,wt,dt]=split$1(this.recurrentKernel.read(),b,st);tt=this.recurrentConv(tt,xt),nt=this.recurrentConv(nt,ft),rt=this.recurrentConv(rt,wt),ot=this.recurrentConv(ot,dt);const mt=this.recurrentActivation.apply(add$1(_e,tt)),bt=this.recurrentActivation.apply(add$1(g,nt)),vt=add$1(mul(bt,h),mul(mt,this.activation.apply(add$1(c,rt)))),Tt=mul(this.recurrentActivation.apply(add$1($,ot)),this.activation.apply(vt));return[Tt,Tt,vt]})}getConfig(){const e=super.getConfig(),s=__rest(e,["units"]),i={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),i)}inputConv(e,s,i,a){const d=conv2d$2(e,s,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return i?biasAdd(d,i,this.dataFormat):d}recurrentConv(e,s){return conv2d$2(e,s,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ConvLSTM2DCell.className="ConvLSTM2DCell";registerClass(ConvLSTM2DCell);class ConvLSTM2D extends ConvRNN2D{constructor(e){const s=new ConvLSTM2DCell(e);super(Object.assign(Object.assign({},e),{cell:s}))}static fromConfig(e,s){return new e(s)}}ConvLSTM2D.className="ConvLSTM2D";registerClass(ConvLSTM2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dropout extends Layer{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const s=e.shape,i=[];for(let a=0;a<this.noiseShape.length;++a)i.push(this.noiseShape[a]==null?s[a]:this.noiseShape[a]);return i}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e);if(0<this.rate&&this.rate<1){const a=s.training==null?!1:s.training,d=this.getNoiseShape(i);return inTrainPhase(()=>dropout(i,this.rate,d,this.seed),()=>i,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}Dropout.className="Dropout";registerClass(Dropout);class SpatialDropout1D extends Dropout{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}SpatialDropout1D.className="SpatialDropout1D";registerClass(SpatialDropout1D);class Dense extends Layer{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(e.kernelConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=getExactlyOneShape(e);const s=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){e=getExactlyOneShape(e);const s=e.slice();return s[s.length-1]=this.units,s}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e),a=mapActivationToFusedKernel(this.activation.getClassName());let d;return a!=null?d=dot(i,this.kernel.read(),a,this.bias?this.bias.read():null):(d=dot(i,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),this.activation!=null&&(d=this.activation.apply(d))),d})}getConfig(){const e={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}Dense.className="Dense";registerClass(Dense);class Flatten extends Layer{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=getExactlyOneShape(e);for(const s of e.slice(1))if(s==null)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],arrayProd(e,1)]}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);let i=getExactlyOneTensor(e);if(this.dataFormat==="channelsFirst"&&i.rank>1){const a=[0];for(let d=2;d<i.rank;++d)a.push(d);a.push(1),i=transpose$2(i,a)}return batchFlatten(i)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}Flatten.className="Flatten";registerClass(Flatten);class Activation extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.activation=getActivation(e.activation)}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e);return this.activation.apply(i)})}getConfig(){const e={activation:serializeActivation(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}Activation.className="Activation";registerClass(Activation);class RepeatVector extends Layer{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return tidy(()=>(e=getExactlyOneTensor(e),repeat(e,this.n)))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}RepeatVector.className="RepeatVector";registerClass(RepeatVector);class Reshape extends Layer{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,s){const i="Total size of new array must be unchanged.",a=s.slice();let d=1,h=null;for(let _=0;_<a.length;++_){const j=a[_];if(this.isUnknown(j))if(h===null)h=_;else throw new ValueError("Can only specifiy one unknown dimension.");else d*=j}const b=arrayProd(e);if(h!==null){if(d===0||b%d!==0)throw new ValueError(i);a[h]=b/d}else if(b!==d)throw new ValueError(i);return a}computeOutputShape(e){let s=!1;for(let i=0;i<e.length;++i)if(this.isUnknown(e[i])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e),a=i.shape,d=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return reshape$2(i,d)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}Reshape.className="Reshape";registerClass(Reshape);class Permute extends Layer{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=range$2(1,e.dims.length+1);if(!arraysEqual(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(e){e=getExactlyOneShape(e);const s=e.slice();return this.dims.forEach((i,a)=>{s[a+1]=e[i]}),s}call(e,s){return transpose$2(getExactlyOneTensor(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}Permute.className="Permute";registerClass(Permute);class Masking extends Layer{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const i=getExactlyOneTensor(e);return any$2(notEqual$2(i,this.maskValue),-1)}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e),h=any$2(notEqual$2(i,this.maskValue),-1,!0);return mul(i,cast$3(h,i.dtype))})}}Masking.className="Masking";registerClass(Masking);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Embedding extends Layer{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let s=null;e.batchSize!=null&&(s=e.batchSize),e.inputLength==null?this.batchInputShape=[s,null]:this.batchInputShape=[s].concat(toList(e.inputLength))}this.inputDim=e.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=e.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(e.embeddingsRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.embeddingsConstraint=getConstraint(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return tidy(()=>this.maskZero?(e=getExactlyOneTensor(e),notEqual$2(e,zerosLike$2(e))):null)}computeOutputShape(e){if(e=getExactlyOneShape(e),this.inputLength==null)return[...e,this.outputDim];const s=toList(this.inputLength);if(s.length!==e.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let i=0;for(let a=0;a<s.length;++a){const d=s[a],h=e[a+1];if(d!=null&&h!=null&&d!==h)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);d==null&&(s[i]=h),i++}}return[e[0],...s,this.outputDim]}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);let i=getExactlyOneTensor(e);i.dtype!=="int32"&&(i=cast$2(i,"int32"));const a=gather(this.embeddings.read(),reshape$2(i,[i.size]));return reshape$2(a,getExactlyOneShape(this.computeOutputShape(i.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}Embedding.className="Embedding";registerClass(Embedding);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Merge extends Layer{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new NotImplementedError}computeElementwiseOpOutputShape(e,s){if(e==null||s==null)return null;if(e.length<s.length)return this.computeElementwiseOpOutputShape(s,e);if(s.length===0)return e;const i=e.slice(0,e.length-s.length);for(let a=0;a<s.length;++a){const d=e[e.length-s.length+a],h=s[a];if(d==null||h==null||d<0||h<0)i.push(null);else if(d===1)i.push(h);else if(h===1)i.push(d);else{if(d!==h)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(s));i.push(d)}}return i}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[getExactlyOneShape(e)]),e=e,e.length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let s=[];for(const d of e)d!=null&&d[0]!==null&&s.push(d[0]);if(s=unique$2(s),s.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let i=e[0]==null?null:e[0].slice(1);for(let d=1;d<e.length;++d){const h=e[d]==null?null:e[d].slice(1);i=this.computeElementwiseOpOutputShape(i,h)}const a=e.map(d=>d.length);e.indexOf(null)===-1&&unique$2(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,s){return tidy(()=>{if(e=e,this.reshapeRequired){const i=[],a=e.map(d=>d.rank);if(a.indexOf(null)===-1){const d=max$2(a);for(let h of e){const b=h.rank;for(let _=0;_<d-b;++_)h=expandDims$2(h,1);i.push(h)}return this.mergeFunction(i)}else{let d=!1;for(const _ of e){const j=_.rank;if(j==null){const _e=_.shape,g=_e[0],c=_e.slice(1).concat([g]);let $=reshape$2(_,[g].concat(arrayProd(_e.slice(1))));$=transpose$2($,[1,0]),$=reshape$2($,c),i.push($),d=!0}else if(j>1){const _e=range$2(1,j).concat([0]);i.push(transpose$2(_,_e)),d=!0}else i.push(_)}let h=this.mergeFunction(i);const b=h.rank;if(d){if(b==null){const _=h.shape,j=_.length,_e=_[j-1],g=[_e].concat(_.slice(0,_.length-1));h=reshape$2(transpose$2(reshape$2(h,[-1,_e]),[1,0]),g)}else if(b>1){const _=[b-1].concat(range$2(0,b-1));h=transpose$2(h,_)}}return h}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let s;e[0]==null?s=null:s=e[0].slice(1);for(let a=1;a<e.length;++a){const d=e[a]==null?null:e[a].slice(1);s=this.computeElementwiseOpOutputShape(s,d)}let i=[];for(const a of e)a!=null&&a[0]!==null&&i.push(a[0]);return i=unique$2(i),i.length===1?s=i.concat(s):s=[null].concat(s),s}computeMask(e,s){return tidy(()=>{if(s==null)return null;if(!Array.isArray(s))throw new ValueError("`mask` should be an Array");if(!Array.isArray(e))throw new ValueError("`inputs` should be an Array");if(s.length!==e.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${s.length})`);if(s.every(a=>a==null))return null;s=s.map(a=>a==null?a:expandDims$3(a,0));let i=s[0];for(let a=1;a<s.length-1;++a)i=logicalAnd$2(i,s[a]);return i})}}class Add extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let s=e[0].clone();for(let i=1;i<e.length;++i)s=add$1(s,e[i]);return s})}}Add.className="Add";registerClass(Add);class Multiply extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let s=e[0].clone();for(let i=1;i<e.length;++i)s=mul(s,e[i]);return s})}}Multiply.className="Multiply";registerClass(Multiply);class Average extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let s=e[0].clone();for(let i=1;i<e.length;++i)s=add$1(s,e[i]);return mul(1/e.length,s)})}}Average.className="Average";registerClass(Average);class Maximum extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let s=e[0];for(let i=1;i<e.length;++i)s=maximum$2(s,e[i]);return s})}}Maximum.className="Maximum";registerClass(Maximum);class Minimum extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let s=e[0];for(let i=1;i<e.length;++i)s=minimum$2(s,e[i]);return s})}}Minimum.className="Minimum";registerClass(Minimum);class Concatenate extends Merge{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let s=!0;for(const a of e)if(a!=null){s=!1;break}if(s)return;const i=[];for(let a=0;a<e.length;++a){const d=e[a].slice();d.splice(this.axis,1);let h=!1;for(const b of i)if(arraysEqual(b,d)){h=!0;break}h||i.push(d)}if(i.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return tidy(()=>concatenate(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const s=e,i=s[0].slice(),a=this.axis<0?i.length+this.axis:this.axis;for(const d of s.slice(1)){if(i[a]==null||d[a]==null){i[a]=null;break}i[a]+=d[a]}return i}computeMask(e,s){if(s==null)return null;if(!Array.isArray(s))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ValueError("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new ValueError(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return tidy(()=>{let i=!0;if(s.forEach(h=>{if(h!=null){i=!1;return}}),i)return null;const a=[];for(let h=0;h<e.length;++h)s[h]==null?a.push(cast$3(onesLike$2(e[h]),"bool")):s[h].rank<e[h].rank?a.push(expandDims$3(s[h],-1)):a.push(s[h]);const d=concat$2(a,this.axis);return all$2(d,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}Concatenate.className="Concatenate";registerClass(Concatenate);function interpretAxis(o,e){for(;o<0;)o+=e;return o}function batchDot(o,e,s){if(o.shape.length>3||e.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(assert$1(o.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${o.shape.length}`),assert$1(o.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof s=="number"&&(s=[s,s]),o.dtype==="complex64"||e.dtype==="complex64")throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const i=o.shape.length,a=e.shape.length;s==null&&(s=[i-1,a-2]);const d=s;return tidy(()=>{let h;if(i>a){h=i-a;const _=[];for(let j=0;j<h;++j)_.push(1);e=reshape$2(e,e.shape.concat(_))}else if(a>i){h=a-i;const _=[];for(let j=0;j<h;++j)_.push(1);o=reshape$2(o,o.shape.concat(_))}else h=0;let b;if(o.shape.length===2&&e.shape.length===2)d[0]===d[1]?b=sum$2(mul(o,e),d[0]):b=sum$2(mul(transpose$2(o,[1,0]),e),d[1]);else{const _=d[0]!==o.shape.length-1,j=d[1]===e.shape.length-1;b=matMul$1(o,e,_,j)}if(h>0){let _;i>a?_=i+a-3:_=i-1;const j=[];for(let _e=_;_e<_+h;++_e)j.push(_e);b=squeeze(b,j)}return b.shape.length===1&&(b=expandDims$3(b,1)),b})}class Dot extends Merge{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){assert$1(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],i=e[1];if(s.length>3||i.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,i);if(s[a[0]]!==i[a[1]])throw new ValueError(`Dimension incompatibility: ${s[a[0]]} !== ${i[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let s=e[0],i=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((d,h)=>interpretAxis(d,e[h].shape.length)):a=[interpretAxis(this.axes,s.shape.length),interpretAxis(this.axes,i.shape.length)],this.normalize&&(s=l2Normalize(s,a[0]),i=l2Normalize(i,a[1])),batchDot(s,i,a)}interpretAxes(e,s){let i;return Array.isArray(this.axes)?i=this.axes:i=[interpretAxis(this.axes,e.length),interpretAxis(this.axes,s.length)],i}computeOutputShape(e){assert$1(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),i=e[1].slice();if(s.length>3||i.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,i);s.splice(a[0],1),i.splice(a[1],1),i.splice(0,1);const d=s.concat(i);return d.length===1&&d.push(1),d}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}Dot.className="Dot";registerClass(Dot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GaussianNoise extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e);return inTrainPhase(()=>add$1(randomNormal(i.shape,0,this.stddev),i),()=>i,s.training||!1)})}}GaussianNoise.className="GaussianNoise";registerClass(GaussianNoise);class GaussianDropout extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return tidy(()=>{this.invokeCallHook(e,s);const i=getExactlyOneTensor(e);return this.rate>0&&this.rate<1?inTrainPhase(()=>{const d=Math.sqrt(this.rate/(1-this.rate));return mul(i,randomNormal(i.shape,1,d))},()=>i,s.training||!1):i})}}GaussianDropout.className="GaussianDropout";registerClass(GaussianDropout);class AlphaDropout extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||getExactlyOneTensor(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return tidy(()=>{if(this.rate<1&&this.rate>0){const i=this._getNoiseShape(e);return inTrainPhase(()=>{const d=getExactlyOneTensor(e),_=-1.6732632423543772*1.0507009873554805;let j=greaterEqual$2(randomUniform(i),this.rate);j=cast$2(j,"float32");const _e=((1-this.rate)*(1+this.rate*_**2))**-.5,g=-_e*_*this.rate,c=add$1(mul(d,j),mul(add$1(j,-1),_));return add$1(mul(c,_e),g)},()=>getExactlyOneTensor(e),s.training||!1)}return e})}}AlphaDropout.className="AlphaDropout";registerClass(AlphaDropout);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function batchNormalization(o,e,s,i,a,d=.001){let h;if(o.rank===2)h=batchNorm2d(o,e,s,i,a,d);else if(o.rank===3)h=batchNorm3d(o,e,s,i,a,d);else if(o.rank===4)h=batchNorm4d(o,e,s,i,a,d);else throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${o.rank} yet`);return h}function regularNormalizeBatchInTraining(o,e,s,i,a=.001){return tidy(()=>{const d=moments(o,i),h=d.mean,b=d.variance;return[batchNormalization(o,h,b,s,e,a),h,b]})}function broadcastNormalizeBatchInTraining(o,e,s,i,a=.001){return tidy(()=>{const d=moments(o,i),h=d.mean,b=d.variance,_=[];for(const et of range$2(0,o.rank))i.indexOf(et)!==-1?_.push(1):_.push(o.shape[et]);const j=reshape$2(h,_),_e=reshape$2(b,_),g=e==null?null:reshape$2(e,_),c=s==null?null:reshape$2(s,_);return[batchNormalization(o,j,_e,c,g,a),h,b]})}function normalizeBatchInTraining(o,e,s,i,a=.001){return arraysEqual(i.slice().sort(),range$2(0,o.rank-1))?regularNormalizeBatchInTraining(o,e,s,i,a):broadcastNormalizeBatchInTraining(o,e,s,i,a)}class BatchNormalization extends Layer{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(e.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(e.betaConstraint),this.gammaConstraint=getConstraint(e.gammaConstraint),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer)}build(e){e=getExactlyOneShape(e);const s=this.axis>=0?this.axis:this.axis+e.length,i=e[s];if(i==null)throw new ValueError(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new InputSpec({ndim:e.length,axes:{[s]:i}})];const a=[i];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return tidy(()=>{const i=s.training==null?!1:s.training,a=getExactlyOneTensor(e),d=a.shape,h=d.length,b=range$2(0,h),_=this.axis>=0?this.axis:this.axis+h;b.splice(_,1);const j=pyListRepeat(1,h);j[_]=d[_];const _e=b.slice();_e.sort();const g=!arraysEqual(_e,range$2(0,h).slice(0,h-1)),c=()=>{if(g){const ot=reshape$2(this.movingMean.read(),j),st=reshape$2(this.movingVariance.read(),j),it=this.center?reshape$2(this.beta.read(),j):null,at=this.scale?reshape$2(this.gamma.read(),j):null;return batchNormalization(a,ot,st,it,at,this.epsilon)}else return batchNormalization(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!i)return c();const[$,et,tt]=normalizeBatchInTraining(a,this.gamma.read(),this.beta.read(),b,this.epsilon),nt=(ot,st,it)=>{tidy(()=>{const at=1-it,lt=ot.read(),ut=mul(sub$2(lt,st),at);ot.write(sub$2(lt,ut))})};return(()=>{nt(this.movingMean,et,this.momentum),nt(this.movingVariance,tt,this.momentum)})(),$})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}BatchNormalization.className="BatchNormalization";registerClass(BatchNormalization);class LayerNormalization extends Layer{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=getExactlyOneShape(e);const s=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let d=0;d<this.axis.length;++d)this.axis[d]<0&&(this.axis[d]+=s);for(const d of this.axis)if(d<0||d>=s)throw new Error(`Invalid axis: ${d}`);if(this.axis.length!==unique$2(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const i=this.axis.map(d=>e[d]),a=!0;this.scale?this.gamma=this.addWeight("gamma",i,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",i,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,s){const i=getExactlyOneTensor(e),a=i.shape,d=a.length;return tidy(()=>{let{mean:b,variance:_}=moments(i,this.axis,!0);const j=pyListRepeat(1,d);for(const tt of this.axis)j[tt]=a[tt];const _e=tt=>tt!=null&&tt.shape.length!==d?reshape$2(tt,j):tt;let g=this.scale?_e(this.gamma.read()):null,c=this.center?_e(this.beta.read()):null;const $=[],et=[];for(let tt=0;tt<d;++tt)this.axis.indexOf(tt)!==-1?($.push(a[tt]),et.push(1)):($.push(1),et.push(a[tt]));return b=tile$3(b,$),_=tile$3(_,$),g!=null&&(g=tile$3(g,et)),c!=null&&(c=tile$3(c,et)),batchNormalization(i,b,_,c,g,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}LayerNormalization.className="LayerNormalization";registerClass(LayerNormalization);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function spatial2dPadding(o,e,s){return tidy(()=>{if(o.rank!==4)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${o.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(s==null&&(s=imageDataFormat()),s!=="channelsLast"&&s!=="channelsFirst")throw new ValueError(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let i;return s==="channelsFirst"?i=[[0,0],[0,0],e[0],e[1]]:i=[[0,0],e[0],e[1],[0,0]],pad(o,i)})}class ZeroPadding2D extends Layer{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?imageDataFormat():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,i;if(typeof e.padding[0]=="number")s=[e.padding[0],e.padding[0]],i=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],e.padding[1].length!==2)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);i=e.padding[1]}this.padding=[s,i]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let s,i;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?s=e[2]+this.padding[0][0]+this.padding[0][1]:s=null,e[3]!=null&&e[3]>=0?i=e[3]+this.padding[1][0]+this.padding[1][1]:i=null,[e[0],e[1],s,i]):(e[1]!=null&&e[1]>=0?s=e[1]+this.padding[0][0]+this.padding[0][1]:s=null,e[2]!=null&&e[2]>=0?i=e[2]+this.padding[1][0]+this.padding[1][1]:i=null,[e[0],s,i,e[3]])}call(e,s){return tidy(()=>spatial2dPadding(getExactlyOneTensor(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}ZeroPadding2D.className="ZeroPadding2D";registerClass(ZeroPadding2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pool2d(o,e,s,i,a,d){return tidy(()=>{checkDataFormat(a),checkPoolMode(d),checkPaddingMode(i),s==null&&(s=[1,1]),i==null&&(i="valid"),a==null&&(a=imageDataFormat()),d==null&&(d="max"),o=preprocessConv2DInput(o,a);let h;const b=i==="same"?"same":"valid";return d==="max"?h=maxPool$2(o,e,s,b):h=avgPool$2(o,e,s,b),a==="channelsFirst"&&(h=transpose$2(h,[0,3,1,2])),h})}function pool3d$1(o,e,s,i,a,d){return tidy(()=>{checkDataFormat(a),checkPoolMode(d),checkPaddingMode(i),s==null&&(s=[1,1,1]),i==null&&(i="valid"),a==null&&(a=imageDataFormat()),d==null&&(d="max"),o=preprocessConv3DInput(o,a);let h;const b=i==="same"?"same":"valid";return d==="max"?h=maxPool3d$1(o,e,s,b):h=avgPool3d(o,e,s,b),a==="channelsFirst"&&(h=transpose$2(h,[0,4,1,2,3])),h})}class Pooling1D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(assertPositiveInteger(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){e=getExactlyOneShape(e);const s=convOutputLength(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],s,e[2]]}call(e,s){return tidy(()=>{this.invokeCallHook(e,s),e=expandDims$2(getExactlyOneTensor(e),2);const i=this.poolingFunction(getExactlyOneTensor(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return squeeze(i,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},s=super.getConfig();return Object.assign(e,s),e}}class MaxPooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool2d(e,s,i,a,d,"max")}}MaxPooling1D.className="MaxPooling1D";registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool2d(e,s,i,a,d,"avg")}}AveragePooling1D.className="AveragePooling1D";registerClass(AveragePooling1D);class Pooling2D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let s=this.dataFormat==="channelsFirst"?e[2]:e[1],i=this.dataFormat==="channelsFirst"?e[3]:e[2];return s=convOutputLength(s,this.poolSize[0],this.padding,this.strides[0]),i=convOutputLength(i,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],s,i]:[e[0],s,i,e[3]]}call(e,s){return tidy(()=>(this.invokeCallHook(e,s),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}class MaxPooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool2d(e,s,i,a,d,"max")}}MaxPooling2D.className="MaxPooling2D";registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool2d(e,s,i,a,d,"avg")}}AveragePooling2D.className="AveragePooling2D";registerClass(AveragePooling2D);class Pooling3D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(e){e=getExactlyOneShape(e);let s=this.dataFormat==="channelsFirst"?e[2]:e[1],i=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return s=convOutputLength(s,this.poolSize[0],this.padding,this.strides[0]),i=convOutputLength(i,this.poolSize[1],this.padding,this.strides[1]),a=convOutputLength(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],s,i,a]:[e[0],s,i,a,e[4]]}call(e,s){return tidy(()=>(this.invokeCallHook(e,s),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}class MaxPooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool3d$1(e,s,i,a,d,"max")}}MaxPooling3D.className="MaxPooling3D";registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,s,i,a,d){return checkDataFormat(d),checkPaddingMode(a),pool3d$1(e,s,i,a,d,"avg")}}AveragePooling3D.className="AveragePooling3D";registerClass(AveragePooling3D);class GlobalPooling1D extends Layer{constructor(e){super(e),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,s){throw new NotImplementedError}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e);return mean$1(i,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D";registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e);return max$3(i,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D";registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends Layer{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,s){throw new NotImplementedError}getConfig(){const e={dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}class GlobalAveragePooling2D extends GlobalPooling2D{call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?mean$1(i,[1,2]):mean$1(i,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D";registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?max$3(i,[1,2]):max$3(i,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D";registerClass(GlobalMaxPooling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wrapper extends Layer{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},s=super.getConfig();return Object.assign(e,s),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,s,i={}){const a=s.layer,d=deserialize(a,i);delete s.layer;const h={layer:d};return Object.assign(h,s),new e(h)}}class TimeDistributed extends Wrapper{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=getExactlyOneShape(e),e.length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=getExactlyOneShape(e);const s=[e[0]].concat(e.slice(2)),i=this.layer.computeOutputShape(s),a=e[1];return[i[0],a].concat(i.slice(1))}call(e,s){return tidy(()=>(e=getExactlyOneTensor(e),rnn((h,b)=>[getExactlyOneTensor(this.layer.call(h,s)),[]],e,[],!1,null,null,!1,!0)[1]))}}TimeDistributed.className="TimeDistributed";registerClass(TimeDistributed);function checkBidirectionalMergeMode(o){checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",o)}const DEFAULT_BIDIRECTIONAL_MERGE_MODE="concat";class Bidirectional extends Wrapper{constructor(e){super(e);const s=e.layer.getConfig(),i={};i.className=e.layer.getClassName(),i.config=s,this.forwardLayer=deserialize(i),s.goBackwards=s.goBackwards!==!0;const a={};if(a.className=e.layer.getClassName(),a.config=s,this.backwardLayer=deserialize(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?DEFAULT_BIDIRECTIONAL_MERGE_MODE:e.mergeMode,checkBidirectionalMergeMode(this.mergeMode),e.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const s=e.length,i=Math.floor(s/2);this.forwardLayer.setWeights(e.slice(0,i)),this.backwardLayer.setWeights(e.slice(i))}computeOutputShape(e){let s=this.forwardLayer.computeOutputShape(e);Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s;let i,a,d;return this.returnState&&(d=s.slice(1)),i=s[0],i=i,this.mergeMode==="concat"?(i[i.length-1]*=2,a=[i]):this.mergeMode==null?a=[i,i.slice()]:a=[i],this.returnState?this.mergeMode==null?a.concat(d).concat(d.slice()):[i].concat(d).concat(d.slice()):singletonOrArray(a)}apply(e,s){let i=s==null?null:s.initialState,a=s==null?null:s.constants;s==null&&(s={});const d=standardizeArgs(e,i,a,this.numConstants);if(e=d.inputs,i=d.initialState,a=d.constants,Array.isArray(e)&&(i=e.slice(1),e=e[0]),(i==null||i.length===0)&&a==null)return super.apply(e,s);const h=[],b=[];if(i!=null){const j=i.length;if(j%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=i,h.push(...i);const _e=i.map(g=>new InputSpec({shape:g.shape}));this.forwardLayer.stateSpec=_e.slice(0,j/2),this.backwardLayer.stateSpec=_e.slice(j/2),b.push(..._e)}if(a!=null)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const _=h[0]instanceof SymbolicTensor;for(const j of h)if(j instanceof SymbolicTensor!==_)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(_){const j=[e].concat(h),_e=this.inputSpec.concat(b),g=this.inputSpec;this.inputSpec=_e;const c=super.apply(j,s);return this.inputSpec=g,c}else return super.apply(e,s)}call(e,s){return tidy(()=>{const i=s.initialState;let a,d;if(i==null)a=this.forwardLayer.call(e,s),d=this.backwardLayer.call(e,s);else{const _=i.slice(0,i.length/2),j=i.slice(i.length/2);a=this.forwardLayer.call(e,Object.assign(s,{initialState:_})),d=this.backwardLayer.call(e,Object.assign(s,{initialState:j}))}let h;this.returnState&&(Array.isArray(a)&&(h=a.slice(1).concat(d.slice(1))),a=a[0],d=d[0]),this.returnSequences&&(d=reverse$2(d,1));let b;return this.mergeMode==="concat"?b=concatenate([a,d]):this.mergeMode==="sum"?b=add$1(a,d):this.mergeMode==="ave"?b=mul(.5,add$1(a,d)):this.mergeMode==="mul"?b=mul(a,d):this.mergeMode==null&&(b=[a,d]),this.returnState?this.mergeMode==null?b.concat(h):[b].concat(h):b})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nameScope(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),nameScope(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){Array.isArray(s)&&(s=s[0]);let i;if(this.returnSequences?this.mergeMode==null?i=[s,s]:i=s:this.mergeMode==null?i=[null,null]:i=null,this.returnState){const d=this.forwardLayer.states.map(h=>null);return Array.isArray(i)?i.concat(d).concat(d):[i].concat(d).concat(d)}else return i}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const i=deserialize(s.layer);if(delete s.layer,s.numConstants!=null)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=s;return a.layer=i,new e(a)}}Bidirectional.className="Bidirectional";registerClass(Bidirectional);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rescaling extends Layer{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return tidy(()=>(e=getExactlyOneTensor(e),e.dtype!=="float32"&&(e=cast$2(e,"float32")),add$1(mul(e,this.scale),this.offset)))}}Rescaling.className="Rescaling";registerClass(Rescaling);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:resizeBilinear$2,cropAndResize:cropAndResize$2}=image;class CenterCrop extends Layer{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,s,i,a,d,h,b,_){return tidy(()=>{let j,_e=!1;const g=s/h,c=i/b,$=(a+s)/h,et=(d+i)/b,tt=[g,c,$,et],nt=[];e.rank===3?(_e=!0,j=stack([e])):j=e;for(let at=0;at<j.shape[0];at++)nt.push(tt);const rt=tensor(nt,[nt.length,4]),ot=range$3(0,nt.length,1,"int32"),it=cropAndResize$2(j,rt,ot,[a,d],"nearest");return cast$2(_e?getExactlyOneTensor(unstack(it)):it,_)})}upsize(e,s,i,a){return tidy(()=>{const d=resizeBilinear$2(e,[s,i]);return cast$2(d,a)})}call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e),a=i.dtype,d=i.shape,h=d[d.length-3],b=d[d.length-2];let _=0;h!==this.height&&(_=Math.floor((h-this.height)/2));let j=0;return b!==this.width&&(j=Math.floor((b-this.width)/2),j===0&&(j=1)),_>=0&&j>=0?this.centerCrop(i,_,j,this.height,this.width,h,b,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){e=getExactlyOneShape(e);const s=e.length-3,i=e.length-2;return e[s]=this.height,e[i]=this.width,e}}CenterCrop.className="CenterCrop";registerClass(CenterCrop);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function encodeCategoricalInputs(o,e,s,i){let a=getExactlyOneTensor(o);if(a.dtype!=="int32"&&(a=cast$2(a,"int32")),e==="int")return a;const d=a.shape;if(a.rank===0&&(a=expandDims$3(a,-1)),e==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=expandDims$3(a,-1)),a.rank>2)throw new ValueError(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${d} which would result in output rank ${a.rank}.`);const h=["multiHot","oneHot"].includes(e),b=a;let _;if(typeof i<"u"&&e==="count"?_=denseBincount$2(b,i,s,h):_=denseBincount$2(b,[],s,h),e!=="tfIdf")return _;if(i)return mul(_,i);throw new ValueError("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CategoryEncoding extends Layer{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return e=getExactlyOneShape(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,s){return tidy(()=>{e=getExactlyOneTensor(e),e.dtype!=="int32"&&(e=cast$2(e,"int32"));let i;if(typeof s.countWeights<"u"){if(this.outputMode!=="count")throw new ValueError(`countWeights is not used when outputMode !== count.
              Received countWeights=${s.countWeights}`);i=getExactlyOneTensor(s.countWeights)}const a=max$3(e),d=min$3(e),h=greater$2(this.numTokens,a).bufferSync().get(0),b=greaterEqual$2(d,0).bufferSync().get(0);if(!(h&&b))throw new ValueError(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return encodeCategoricalInputs(e,this.outputMode,this.numTokens,i)})}}CategoryEncoding.className="CategoryEncoding";registerClass(CategoryEncoding);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const INTERPOLATION_KEYS$1=["bilinear","nearest"],INTERPOLATION_METHODS$1=new Set(INTERPOLATION_KEYS$1);class Resizing extends Layer{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(INTERPOLATION_METHODS$1.has(e.interpolation))this.interpolation=e.interpolation;else throw new ValueError(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=getExactlyOneShape(e);const s=e[2];return[this.height,this.width,s]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return tidy(()=>{const i=[this.height,this.width];if(this.interpolation==="bilinear")return image.resizeBilinear(e,i,!this.cropToAspectRatio);if(this.interpolation==="nearest")return image.resizeNearestNeighbor(e,i,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...INTERPOLATION_METHODS$1]} are supported`)})}}Resizing.className="Resizing";registerClass(Resizing);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RandomSeed{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}RandomSeed.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class BaseRandomLayer extends Layer{constructor(e){super(e),this.randomGenerator=new RandomSeed(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},s=super.getConfig();return Object.assign(e,s),e}}BaseRandomLayer.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const INTERPOLATION_KEYS=["bilinear","nearest"],INTERPOLATION_METHODS=new Set(INTERPOLATION_KEYS);class RandomWidth extends BaseRandomLayer{constructor(e){super(e);const{factor:s,interpolation:i="bilinear"}=e;if(this.factor=s,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new ValueError(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new ValueError(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ValueError(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(i)if(INTERPOLATION_METHODS.has(i))this.interpolation=i;else throw new ValueError(`Invalid interpolation parameter: ${i} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){e=getExactlyOneShape(e);const s=e[2];return[this.imgHeight,-1,s]}call(e,s){return tidy(()=>{const i=getExactlyOneTensor(e);this.imgHeight=i.shape[i.shape.length-3];const a=i.shape[i.shape.length-2];this.widthFactor=randomUniform([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let d=this.widthFactor.dataSync()[0]*a;d=Math.round(d);const h=[this.imgHeight,d];switch(this.interpolation){case"bilinear":return image.resizeBilinear(e,h);case"nearest":return image.resizeNearestNeighbor(e,h);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...INTERPOLATION_METHODS]} are supported`)}})}}RandomWidth.className="RandomWidth";registerClass(RandomWidth);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$1=env();ENV$1.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,o=>{o&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var DataType;(function(o){o[o.DT_INVALID=0]="DT_INVALID",o[o.DT_FLOAT=1]="DT_FLOAT",o[o.DT_DOUBLE=2]="DT_DOUBLE",o[o.DT_INT32=3]="DT_INT32",o[o.DT_UINT8=4]="DT_UINT8",o[o.DT_INT16=5]="DT_INT16",o[o.DT_INT8=6]="DT_INT8",o[o.DT_STRING=7]="DT_STRING",o[o.DT_COMPLEX64=8]="DT_COMPLEX64",o[o.DT_INT64=9]="DT_INT64",o[o.DT_BOOL=10]="DT_BOOL",o[o.DT_QINT8=11]="DT_QINT8",o[o.DT_QUINT8=12]="DT_QUINT8",o[o.DT_QINT32=13]="DT_QINT32",o[o.DT_BFLOAT16=14]="DT_BFLOAT16",o[o.DT_QINT16=15]="DT_QINT16",o[o.DT_QUINT16=16]="DT_QUINT16",o[o.DT_UINT16=17]="DT_UINT16",o[o.DT_COMPLEX128=18]="DT_COMPLEX128",o[o.DT_HALF=19]="DT_HALF",o[o.DT_RESOURCE=20]="DT_RESOURCE",o[o.DT_VARIANT=21]="DT_VARIANT",o[o.DT_UINT32=22]="DT_UINT32",o[o.DT_UINT64=23]="DT_UINT64",o[o.DT_FLOAT_REF=101]="DT_FLOAT_REF",o[o.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",o[o.DT_INT32_REF=103]="DT_INT32_REF",o[o.DT_UINT8_REF=104]="DT_UINT8_REF",o[o.DT_INT16_REF=105]="DT_INT16_REF",o[o.DT_INT8_REF=106]="DT_INT8_REF",o[o.DT_STRING_REF=107]="DT_STRING_REF",o[o.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",o[o.DT_INT64_REF=109]="DT_INT64_REF",o[o.DT_BOOL_REF=110]="DT_BOOL_REF",o[o.DT_QINT8_REF=111]="DT_QINT8_REF",o[o.DT_QUINT8_REF=112]="DT_QUINT8_REF",o[o.DT_QINT32_REF=113]="DT_QINT32_REF",o[o.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",o[o.DT_QINT16_REF=115]="DT_QINT16_REF",o[o.DT_QUINT16_REF=116]="DT_QUINT16_REF",o[o.DT_UINT16_REF=117]="DT_UINT16_REF",o[o.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",o[o.DT_HALF_REF=119]="DT_HALF_REF",o[o.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",o[o.DT_VARIANT_REF=121]="DT_VARIANT_REF",o[o.DT_UINT32_REF=122]="DT_UINT32_REF",o[o.DT_UINT64_REF=123]="DT_UINT64_REF"})(DataType||(DataType={}));var SaverDef;(function(o){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(o.CheckpointFormatVersion||(o.CheckpointFormatVersion={}))})(SaverDef||(SaverDef={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ZipMismatchMode;(function(o){o[o.FAIL=0]="FAIL",o[o.SHORTEST=1]="SHORTEST",o[o.LONGEST=2]="LONGEST"})(ZipMismatchMode||(ZipMismatchMode={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertNotComplex$1(o,e){Array.isArray(o)||(o=[o]),o.forEach(s=>{s!=null&&assert$1(s.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl$1=whereImpl$2;class MathBackendCPU extends KernelBackend{nextDataId(){return MathBackendCPU.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new DataStorage(this,engine())}write(e,s,i){this.firstUse&&(this.firstUse=!1,env().get("IS_NODE")&&warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:i,refCount:1}),a}makeTensorInfo(e,s,i){let a;if(s==="string"&&i!=null&&i.length>0&&isString(i[0])){const d=i.map(h=>encodeString(h));a=this.write(d,e,s)}else a=this.write(i,e,s);return{dataId:a,shape:e,dtype:s}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const s=this.data.get(e);s.refCount++}decRef(e){if(this.data.has(e)){const s=this.data.get(e);s.refCount--}}move(e,s,i,a,d){this.data.set(e,{values:s,dtype:a,refCount:d})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:s,complexTensorInfos:i}=this.data.get(e);if(s==="complex64"){const a=this.readSync(i.real.dataId),d=this.readSync(i.imag.dataId);return mergeRealAndImagArrays(a,d)}return convertBackendValuesAndArrayBuffer(this.data.get(e).values,s)}bufferSync(e){const s=this.readSync(e.dataId);if(e.dtype==="string")try{const i=s.map(a=>decodeString(a));return buffer(e.shape,e.dtype,i)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}makeOutput(e,s,i){return engine().makeTensorFromTensorInfo(this.makeTensorInfo(s,i,e),this)}disposeData(e,s=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!s&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:i}=this.data.get(e);i!=null&&(this.disposeData(i.real.dataId,!0),this.disposeData(i.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const s=now();return e(),{kernelMs:now()-s}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){assertNotComplex$1([e],"where");const s=this.readSync(e.dataId);return whereImpl$1(e.shape,s)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}MathBackendCPU.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function simpleAbsImpl(o){const e=new Float32Array(o.length);for(let s=0;s<o.length;++s)e[s]=Math.abs(o[s]);return e}const abs$1=o=>{const{x:e}=o.inputs,s=o.backend;assertNotComplex$1(e,"abs");let i=new Float32Array(sizeFromShape(e.shape));const a=s.data.get(e.dataId).values;return i=simpleAbsImpl(a),s.makeOutput(i,e.shape,e.dtype)},absConfig$1={kernelName:Abs,backendName:"cpu",kernelFunc:abs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleBinaryKernelImpl(o){return(e,s,i,a,d)=>{const h=assertAndGetBroadcastShape(e,s),b=h.length,_=computeStrides(h),j=sizeFromShape(h),_e=getTypedArrayFromDType(d,j),g=e.length,c=s.length,$=computeStrides(e),et=computeStrides(s),tt=getBroadcastDims$1(e,h),nt=getBroadcastDims$1(s,h);if(tt.length+nt.length===0)for(let rt=0;rt<_e.length;++rt)_e[rt]=o(i[rt%i.length],a[rt%a.length]);else for(let rt=0;rt<_e.length;++rt){const ot=indexToLoc(rt,b,_),st=ot.slice(-g);tt.forEach(ut=>st[ut]=0);const it=locToIndex(st,g,$),at=ot.slice(-c);nt.forEach(ut=>at[ut]=0);const lt=locToIndex(at,c,et);_e[rt]=o(i[it],a[lt])}return[_e,h]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex$1(o){const{inputs:e,backend:s}=o,{real:i,imag:a}=e,d=s.data.get(i.dataId).values,h=s.data.get(a.dataId).values,b=s.makeTensorInfo(i.shape,"complex64"),_=s.data.get(b.dataId);return _.complexTensorInfos={real:s.makeTensorInfo(i.shape,"float32",d),imag:s.makeTensorInfo(a.shape,"float32",h)},b}const complexConfig$1={kernelName:Complex,backendName:"cpu",kernelFunc:complex$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros(o,e,s="float32"){if(s==="complex64"){const a=zeros(o,e,"float32"),d=zeros(o,e,"float32");return complex$1({inputs:{real:a,imag:d},backend:o})}const i=makeZerosTypedArray(sizeFromShape(e),s);return o.makeTensorInfo(e,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity$1(o){const{inputs:e,backend:s}=o,{x:i}=e;return s.incRef(i.dataId),{dataId:i.dataId,shape:i.shape,dtype:i.dtype}}const identityConfig$1={kernelName:Identity$1,backendName:"cpu",kernelFunc:identity$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real$1(o){const{inputs:e,backend:s}=o,{input:i}=e,a=s.data.get(i.dataId).complexTensorInfos.real,d=s.data.get(a.dataId).values;return s.makeTensorInfo(a.shape,a.dtype,d)}const realConfig$1={kernelName:Real,backendName:"cpu",kernelFunc:real$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function castImpl(o,e,s,i){if(i==="int32"){const a=Int32Array.from(o);return[e,"int32",a]}if(i==="bool"){const a=toTypedArray([0],s),[d,h]=createSimpleBinaryKernelImpl((b,_)=>b!==_?1:0)(e,[],o,a,"bool");return[h,"bool",d]}throw new Error(`Error in Cast: failed to cast ${s} to ${i}`)}function cast$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{dtype:d}=i;if(d==="complex64"){if(a.dtype==="complex64")return identity$1({inputs:{x:a},backend:s});const _e=zeros(s,a.shape,a.dtype),g=cast$1({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),c=complex$1({inputs:{real:g,imag:_e},backend:s});return s.disposeIntermediateTensorInfo(_e),s.disposeIntermediateTensorInfo(g),c}if(a.dtype==="complex64"){const _e=real$1({inputs:{input:a},backend:s}),g=cast$1({inputs:{x:_e},backend:s,attrs:{dtype:d}});return s.disposeIntermediateTensorInfo(_e),g}if(!hasEncodingLoss(a.dtype,d)){const _e=identity$1({inputs:{x:a},backend:s});return{dataId:_e.dataId,shape:_e.shape,dtype:d}}const h=s.data.get(a.dataId).values,[b,_,j]=castImpl(h,a.shape,a.dtype,d);return s.makeTensorInfo(b,_,j)}const castConfig$1={kernelName:Cast,backendName:"cpu",kernelFunc:cast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryKernelFunc$1(o,e,s,i){return s==null?({inputs:a,backend:d})=>{const{a:h,b}=a,_=d;assertNotComplex$1([h,b],o);const j=_.data.get(h.dataId).values,_e=_.data.get(b.dataId).values,g=h.dtype==="string"?fromUint8ToStringArray(j):j,c=h.dtype==="string"?fromUint8ToStringArray(_e):_e,$=i||h.dtype,[et,tt]=e(h.shape,b.shape,g,c,$);return _.makeTensorInfo(tt,$,et)}:({inputs:a,backend:d})=>{const{a:h,b}=a,_=d;if(h.dtype==="complex64"||b.dtype==="complex64"){const j=cast$1({inputs:{x:h},backend:_,attrs:{dtype:"complex64"}}),_e=_.data.get(j.dataId),g=_e.complexTensorInfos.real,c=_e.complexTensorInfos.imag,$=_.data.get(g.dataId).values,et=_.data.get(c.dataId).values,tt=cast$1({inputs:{x:b},backend:_,attrs:{dtype:"complex64"}}),nt=_.data.get(tt.dataId),rt=nt.complexTensorInfos.real,ot=nt.complexTensorInfos.imag,st=_.data.get(rt.dataId).values,it=_.data.get(ot.dataId).values,[at,lt,ut]=s(h.shape,b.shape,$,et,st,it),ct=_.makeTensorInfo(ut,"float32",at),pt=_.makeTensorInfo(ut,"float32",lt),ht=complex$1({inputs:{real:ct,imag:pt},backend:_});return _.disposeIntermediateTensorInfo(j),_.disposeIntermediateTensorInfo(tt),_.disposeIntermediateTensorInfo(ct),_.disposeIntermediateTensorInfo(pt),ht}else{const j=_.data.get(h.dataId).values,_e=_.data.get(b.dataId).values,g=i||h.dtype,[c,$]=e(h.shape,b.shape,j,_e,g);return _.makeTensorInfo($,g,c)}}}function createComplexBinaryKernelImpl(o){return(e,s,i,a,d,h)=>{const b=assertAndGetBroadcastShape(e,s),_=sizeFromShape(b),j=b.length,_e=computeStrides(b),g=getTypedArrayFromDType("float32",_),c=getTypedArrayFromDType("float32",_),$=getBroadcastDims$1(e,b),et=getBroadcastDims$1(s,b),tt=mergeRealAndImagArrays(i,a),nt=mergeRealAndImagArrays(d,h),rt=e.length,ot=computeStrides(e),st=s.length,it=computeStrides(s);if($.length+et.length===0)for(let at=0;at<g.length;at++){const lt=at%tt.length,ut=at%nt.length,ct=o(tt[lt*2],tt[lt*2+1],nt[ut*2],nt[ut*2+1]);g[at]=ct.real,c[at]=ct.imag}else for(let at=0;at<g.length;at++){const lt=indexToLoc(at,j,_e),ut=lt.slice(-rt);$.forEach(xt=>ut[xt]=0);const ct=locToIndex(ut,rt,ot),pt=lt.slice(-st);et.forEach(xt=>pt[xt]=0);const ht=locToIndex(pt,st,it),yt=o(tt[ct*2],tt[ct*2+1],nt[ht*2],nt[ht*2+1]);g[at]=yt.real,c[at]=yt.imag}return[g,c,b]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addImpl=createSimpleBinaryKernelImpl((o,e)=>o+e),addComplexImpl=createComplexBinaryKernelImpl((o,e,s,i)=>({real:o+s,imag:e+i})),add=binaryKernelFunc$1(Add$1,addImpl,addComplexImpl),addConfig$1={kernelName:Add$1,backendName:"cpu",kernelFunc:add};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincountImpl(o,e,s,i,a){const d=sizeFromShape(i),h=makeZerosTypedArray(a,s);for(let b=0;b<o.length;b++){const _=o[b];if(_<0)throw new Error("Input x must be non-negative!");_>=a||(d>0?h[_]+=e[b]:h[_]+=1)}return h}function bincountReduceImpl(o,e,s,i=!1){const a=o.shape[0],d=o.shape[1],h=buffer([a,s],e.dtype);for(let b=0;b<a;b++)for(let _=0;_<d;_++){const j=o.get(b,_);if(j<0)throw new Error("Input x must be non-negative!");j>=s||(i?h.set(1,b,j):e.size>0?h.set(h.get(b,j)+e.get(b,_),b,j):h.set(h.get(b,j)+1,b,j))}return h}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bitwiseAndImpl=createSimpleBinaryKernelImpl((o,e)=>o&e),bitwiseAnd$1=binaryKernelFunc$1(BitwiseAnd,bitwiseAndImpl),bitwiseAndConfig$1={kernelName:BitwiseAnd,backendName:"cpu",kernelFunc:bitwiseAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleUnaryImpl(o){return(e,s,i)=>{const a=getArrayFromDType(s,e.length);for(let d=0;d<e.length;++d)a[d]=o(e[d],i);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unaryKernelFunc$1(o,e,s){const i=createSimpleUnaryImpl(e);return unaryKernelFuncFromImpl(o,i,s)}function unaryKernelFuncFromImpl(o,e,s){return({inputs:i,attrs:a,backend:d})=>{const{x:h}=i;assertNotComplex$1(h,o);const b=d,_=b.data.get(h.dataId).values;let j;if(h.dtype==="string"){if(!Array.isArray(_))throw new Error("String tensor's value was not an instance of Array");j=fromUint8ToStringArray(_)}else j=_;const _e=s||h.dtype,g=e(j,_e,a);return b.makeTensorInfo(h.shape,_e,g)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilImpl=createSimpleUnaryImpl(o=>Math.ceil(o)),ceil$1=unaryKernelFuncFromImpl(Ceil,ceilImpl),ceilConfig$1={kernelName:Ceil,backendName:"cpu",kernelFunc:ceil$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl$1(o,e,s,i){const a=getArrayFromDType(s,sizeFromShape(e));if(i&&s!=="string"){let d=0;o.forEach(h=>{const b=sizeFromShape(h.shape);a.set(h.vals,d),d+=b})}else{let d=0;o.forEach(h=>{const b=s==="string"?fromUint8ToStringArray(h.vals):h.vals;let _=0;for(let j=0;j<h.shape[0];++j){const _e=j*e[1]+d;for(let g=0;g<h.shape[1];++g)a[_e+g]=b[_++]}d+=h.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const equalImpl=createSimpleBinaryKernelImpl((o,e)=>o===e?1:0),equal$1=binaryKernelFunc$1(Equal,equalImpl,null,"bool"),equalConfig$1={kernelName:Equal,backendName:"cpu",kernelFunc:equal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expImpl=createSimpleUnaryImpl(o=>Math.exp(o)),exp$1=unaryKernelFuncFromImpl(Exp,expImpl,"float32"),expConfig$1={kernelName:Exp,backendName:"cpu",kernelFunc:exp$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1Impl=createSimpleUnaryImpl(o=>Math.expm1(o)),expm1$1=unaryKernelFuncFromImpl(Expm1,expm1Impl),expm1Config$1={kernelName:Expm1,backendName:"cpu",kernelFunc:expm1$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorImpl=createSimpleUnaryImpl(o=>Math.floor(o)),floor$1=unaryKernelFuncFromImpl(Floor,floorImpl),floorConfig$1={kernelName:Floor,backendName:"cpu",kernelFunc:floor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivImpl=createSimpleBinaryKernelImpl((o,e)=>Math.floor(o/e)),floorDiv$1=binaryKernelFunc$1(FloorDiv,floorDivImpl,null,"int32"),floorDivConfig$1={kernelName:FloorDiv,backendName:"cpu",kernelFunc:floorDiv$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNdImpl(o,e,s,i,a,d,h,b,_){const j=buffer([i,d],s);for(let _e=0;_e<i;_e++){const g=[];let c=0;for(let $=0;$<a;$++){const et=o[_e*a+$];c+=et*h[$],g.push(et)}if(c<0||c>=_/d)throw new Error(`Invalid indices: ${g} does not index into ${b}`);for(let $=0;$<d;$++)j.values[_e*d+$]=e.get(...e.indexToLoc(c*d+$))}return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2Impl(o,e,s){const i=buffer(s,o.dtype);for(let a=0;a<i.size;++a){const h=i.indexToLoc(a).slice(),b=h[0],_=h[2],j=e.locToIndex([b,_]);h[2]=e.values[j];const _e=o.locToIndex(h);0<=_e&&_e<o.values.length&&(i.values[a]=o.values[_e])}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterImpl=createSimpleBinaryKernelImpl((o,e)=>o>e?1:0),greater$1=binaryKernelFunc$1(Greater,greaterImpl,null,"bool"),greaterConfig$1={kernelName:Greater,backendName:"cpu",kernelFunc:greater$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualImpl=createSimpleBinaryKernelImpl((o,e)=>o>=e?1:0),greaterEqual$1=binaryKernelFunc$1(GreaterEqual,greaterEqualImpl,null,"bool"),greaterEqualConfig$1={kernelName:GreaterEqual,backendName:"cpu",kernelFunc:greaterEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessImpl=createSimpleBinaryKernelImpl((o,e)=>o<e?1:0),less$1=binaryKernelFunc$1(Less,lessImpl,null,"bool"),lessConfig$1={kernelName:Less,backendName:"cpu",kernelFunc:less$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessEqualImpl=createSimpleBinaryKernelImpl((o,e)=>o<=e?1:0),lessEqual$1=binaryKernelFunc$1(LessEqual,lessEqualImpl,null,"bool"),lessEqualConfig$1={kernelName:LessEqual,backendName:"cpu",kernelFunc:lessEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpaceImpl(o,e,s){const i=(e-o)/(s-1),a=makeZerosTypedArray(s,"float32");a[0]=o;for(let d=1;d<a.length;d++)a[d]=a[d-1]+i;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logImpl=createSimpleUnaryImpl(o=>Math.log(o)),log$1=unaryKernelFuncFromImpl(Log,logImpl),logConfig$1={kernelName:Log,backendName:"cpu",kernelFunc:log$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl$1(o,e,s,i){const a=getTypedArrayFromDType(i,sizeFromShape(s));for(let d=0;d<a.length;++d){const h=d*e;let b=o[h];for(let _=0;_<e;++_){const j=o[h+_];(Number.isNaN(j)||j>b)&&(b=j)}a[d]=b}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumImpl=createSimpleBinaryKernelImpl((o,e)=>Math.max(o,e)),maximum$1=binaryKernelFunc$1(Maximum$1,maximumImpl),maximumConfig$1={kernelName:Maximum$1,backendName:"cpu",kernelFunc:maximum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumImpl=createSimpleBinaryKernelImpl((o,e)=>Math.min(o,e)),minimum$1=binaryKernelFunc$1(Minimum$1,minimumImpl),minimumConfig$1={kernelName:Minimum$1,backendName:"cpu",kernelFunc:minimum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyImpl=createSimpleBinaryKernelImpl((o,e)=>o*e),multiplyComplexImpl=createComplexBinaryKernelImpl((o,e,s,i)=>({real:o*s-e*i,imag:o*i+e*s})),multiply$1=binaryKernelFunc$1(Multiply$1,multiplyImpl,multiplyComplexImpl),multiplyConfig$1={kernelName:Multiply$1,backendName:"cpu",kernelFunc:multiply$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function negImpl(o,e,s){const i=createScalarValue(-1,s);return multiplyImpl([],e,i,o,s)}function neg$1(o){const{inputs:e,backend:s}=o,{x:i}=e;assertNotComplex$1(i,"neg");const a=s.data.get(i.dataId).values,[d,h]=negImpl(a,i.shape,i.dtype);return s.makeTensorInfo(h,i.dtype,d)}const negConfig$1={kernelName:Neg,backendName:"cpu",kernelFunc:neg$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const notEqualImpl=createSimpleBinaryKernelImpl((o,e)=>o!==e?1:0),notEqual$1=binaryKernelFunc$1(NotEqual,notEqualImpl,null,"bool"),notEqualConfig$1={kernelName:NotEqual,backendName:"cpu",kernelFunc:notEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl$1(o,e,s,i,a){const d=e.length,h=sizeFromShape(e),b=computeStrides(e),_=computeStrides(a),j=getTypedArrayFromDType(s,sizeFromShape(a));for(let _e=0;_e<h;++_e){const g=indexToLoc(_e,d,b),c=new Array(g.length);for(let et=0;et<c.length;et++)c[et]=g[i[et]];const $=locToIndex(c,d,_);j[$]=o[_e]}return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$1(o){const{inputs:e,attrs:s,backend:i}=o,{x:a}=e,{perm:d}=s;assertNotComplex$1(a,"transpose");const h=a.shape.length,b=new Array(h);for(let g=0;g<b.length;g++)b[g]=a.shape[d[g]];const _=i.data.get(a.dataId).values,j=transposeImpl$1(_,a.shape,a.dtype,d,b);return{dataId:i.write(j,b,a.dtype),shape:b,dtype:a.dtype}}const transposeConfig$1={kernelName:Transpose,backendName:"cpu",kernelFunc:transpose$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodImpl(o,e,s,i){const[a,d]=computeOutAndReduceShapes(o,i),h=upcastType(e,"int32"),b=makeZerosTypedArray(sizeFromShape(a),h),_=sizeFromShape(d);for(let j=0;j<b.length;++j){const _e=j*_;let g=1;for(let c=0;c<_;++c)g*=s[_e+c];b[j]=g}return{outVals:b,outShape:a,outDtype:h}}function prod$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;assertNotComplex$1(a,"prod");const b=a.shape.length,_=parseAxisParam(d,a.shape),j=getAxesPermutation(_,b);let _e=_,g=a;const c=[];j!=null&&(g=transpose$1({inputs:{x:a},backend:s,attrs:{perm:j}}),c.push(g),_e=getInnerMostAxes(_e.length,b));const $=s.data.get(g.dataId).values,{outVals:et,outShape:tt,outDtype:nt}=prodImpl(g.shape,g.dtype,$,_e);let rt=tt;return h&&(rt=expandShapeToKeepDim(tt,_)),c.forEach(ot=>s.disposeIntermediateTensorInfo(ot)),s.makeTensorInfo(rt,nt,et)}const prodConfig$1={kernelName:Prod,backendName:"cpu",kernelFunc:prod$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function validateIndices(o,e,s){o.forEach((i,a)=>{if(i<0||i>=s){const d=indexToLoc(a,e.length,computeStrides(e)).join(",");throw new Error(`indices[${d}] = ${i} is not in [0, ${s})`)}})}function validateSplits(o,e){for(let s=0;s<o.length;++s){const i=o[s],a=s===o.length-1?e:o[s+1].length;if(i.length===0)throw new Error("Ragged splits may not be empty");if(i[0]<0)throw new Error("Ragged splits must be non-negative");if(i[i.length-1]>a)throw new Error("Ragged splits must not point past values");for(let d=1;d<i.length;++d)if(i[d-1]>i[d])throw new Error("Ragged splits must be sorted in ascending order")}}function makeSplits(o,e,s,i){const a=[];let d=0;const h=e.length-1+s.length,b=new Array(h).fill(null).map(()=>[0]);validateSplits(s,i);let _=1;for(let j=0;j<e.length-1;++j){_*=e[j];const _e=e[j+1];for(let g=1;g<_+1;++g)b[j].push(g*_e)}for(let j=0;j<o.length;++j){let _e=o[j],g=o[j]+1;for(let c=0;c<s.length;++c){const $=s[c],et=c+e.length-1;if(et>=0){const tt=b[et],nt=tt[tt.length-1]-$[_e];for(let rt=_e;rt<g;++rt)b[et].push($[rt+1]+nt)}_e=$[_e],g=$[g]}g!==_e&&(a.push([_e,g]),d+=g-_e)}return{outSplits:b,valueSlices:a,numValues:d}}function getSplits(o){const e=[];for(let s=0;s<o.length;++s){const i=o[s].length,a=getArrayFromDType("int32",i);e.push(a),o[s].forEach((d,h)=>a[h]=d)}return e}function computeFlatOuterDims(o,e){const s=o.slice(0,e);for(;s.length<e;)s.push(1);for(let i=e;i<o.length;i++)s[e-1]*=o[i];return s}function writeValueSlices(o,e,s,i,a,d){const h=computeFlatOuterDims(e,2)[1],b=computeFlatOuterDims(d,2)[1];let _=0;for(const j of s)for(let _e=j[0];_e<j[1];++_e){for(let g=0;g<i;++g)a[_*b+g]=o[_e*h+g];++_}}function getValues(o,e,s,i,a){const d=e.slice();d[0]=a;const h=getArrayFromDType(s,sizeFromShape(d)),b=o.length,_=b===0?0:b/e[0];return writeValueSlices(o,e,i,_,h,d),[h,d]}function raggedGatherImpl(o,e,s,i,a,d,h,b){if(o.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const _=e[0][0]-1;if(validateIndices(d,h,_),i.length===0)throw new Error("params.rank must be nonzero");const j=i[0],{outSplits:_e,valueSlices:g,numValues:c}=makeSplits(d,h,o,j),$=getSplits(_e),et=getValues(s,i,a,g,c);return[$,et[0],et[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT32_MAX=2147483647;function raggedRangeImpl(o,e,s,i,a,d,h){if(e.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(h.length>1)throw new Error("deltas must be a scalar or vector");const b=e.length===0,_=a.length===0,j=h.length===0,_e=[];b||_e.push(e[0]),_||_e.push(a[0]),j||_e.push(h[0]);for(let nt=1;nt<_e.length;++nt)if(_e[nt]!==_e[nt-1])throw new Error("starts, limits, and deltas must have the same shape");const g=_e.length===0?1:_e[0],c=getArrayFromDType("int32",g+1);c[0]=0;for(let nt=0;nt<g;++nt){const rt=b?o[0]:o[nt],ot=_?i[0]:i[nt],st=j?d[0]:d[nt];if(st===0)throw new Error("Requires delta != 0");let it;if(st>0&&ot<rt||st<0&&ot>rt)it=0;else if(it=Math.ceil(Math.abs((ot-rt)/st)),it>INT32_MAX)throw new Error(`Requires ((limit - start) / delta) <= ${INT32_MAX}`);c[nt+1]=c[nt]+it}const $=c[g],et=getArrayFromDType(s,$);let tt=0;for(let nt=0;nt<g;++nt){const rt=c[nt+1]-c[nt];let ot=b?o[0]:o[nt];const st=j?d[0]:d[nt];for(let it=0;it<rt;++it)et[tt++]=ot,ot+=st}return[c,et]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var RowPartitionType=RowPartitionType$1;class RaggedTensorToTensorOp{constructor(e,s,i,a,d,h,b,_,j,_e){this.shape=e,this.shapeShape=s,this.values=i,this.valuesShape=a,this.valuesDType=d,this.defaultValue=h,this.defaultValueShape=b,this.rowPartitionValues=_,this.rowPartitionValuesShapes=j,this.rowPartitionTypes=getRowPartitionTypesHelper(_e),this.raggedRank=getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===RowPartitionType.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===RowPartitionType.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const s=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case RowPartitionType.VALUE_ROWIDS:return RaggedTensorToTensorOp.getMaxWidthValueRowID(s);case RowPartitionType.ROW_SPLITS:return RaggedTensorToTensorOp.getMaxWidthRowSplit(s);default:throw new Error(`Cannot handle partition type ${RowPartitionType[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const s=e.length;if(s===0||s===1)return 0;let i=0;for(let a=0;a<s-1;++a){const d=e[a+1]-e[a];d>i&&(i=d)}return i}static getMaxWidthValueRowID(e){const s=e.length;if(s===0)return 0;let i=0,a=e[0],d=0;for(let h=1;h<s;++h){const b=e[h];b!==a&&(a=b,d=Math.max(h-i,d),i=h)}return Math.max(s-i,d)}tensorShapeFromTensor(e,s,i=!0){if(s.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return makeShape(e,i)}calculateOutputSize(e){const s=this.valuesShape,i=this.defaultValueShape;validateDefaultValueShape(i,s);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),h=combineRaggedTensorToTensorShapes(this.raggedRank,a,s);h[0]<0&&(h[0]=e);for(let b=1;b<=this.raggedRank;++b)h[b]<0&&(h[b]=this.getMaxWidth(b));return h}calculateFirstParentOutputIndex(e,s,i){const a=Math.min(e,i),d=[];let h=0;for(let b=0;b<a;++b,h+=s)d.push(h);for(let b=a;b<e;++b)d.push(-1);return assert$1(d.length===e,()=>"Final length of result must be equal to firstDimension."),d}calculateOutputIndexRowSplit(e,s,i,a){const d=e.length,h=[];for(let b=0;b<d-1;++b){const _=e[b+1]-e[b];let j=Math.min(a,_),_e=s[b];_e===-1&&(j=0);for(let g=0;g<j;++g)h.push(_e),_e+=i;for(let g=0;g<_-j;++g)h.push(-1)}if(d>0&&h.length!==e[d-1])throw new Error("Invalid row split size.");return h}calculateOutputIndexValueRowID(e,s,i,a){const d=e.length,h=[];if(d===0)return[];let b=0,_=e[0];if(_>=s.length)throw new Error(`Got currentValueRowId=${_}, which is not less than ${s.length}`);let j=s[_];h.push(j);for(let _e=1;_e<d;++_e){const g=e[_e];if(g===_)j>=0&&(++b,b<a?j+=i:j=-1);else{if(b=0,_=g,g>=s.length)throw new Error(`Got nextValueRowId=${g} which is not less than ${s.length}`);j=s[g]}h.push(j)}if(h.length!==e.length)throw new Error("Invalid row ids.");return h}calculateOutputIndex(e,s,i,a){const d=this.getRowPartitionTensor(e),h=this.getRowPartitionTypeByDimension(e);switch(h){case RowPartitionType.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(d,s,i,a);case RowPartitionType.ROW_SPLITS:if(d.length-1>s.length)throw new Error(`Row partition size is greater than output size: ${d.length-1} > ${s.length}`);return this.calculateOutputIndexRowSplit(d,s,i,a);default:throw new Error(`Unsupported partition type: ${RowPartitionType[h]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const s=this.rowPartitionTypes[0];switch(s){case RowPartitionType.FIRST_DIM_SIZE:return e[0];case RowPartitionType.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RowPartitionType.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RowPartitionType[s]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const s=this.getFirstDimensionSize(),i=this.calculateOutputSize(s),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let _=a.length-2;_>=0;--_)a[_]=a[_+1]*i[_+1];const d=makeShape(i,!1),h=getArrayFromDType(this.valuesDType,sizeFromShape(d));if(a[0]*i[0]>0){let _=this.calculateFirstParentOutputIndex(s,a[0],i[0]);for(let j=1;j<=this.raggedRank;++j)_=this.calculateOutputIndex(j-1,_,a[j],i[j]);this.setOutput(this.raggedRank,_,h,d)}return[d,h]}setOutput(e,s,i,a){if(i.length===0)return;const d=this.values,h=i;let b=a.slice();b=b.slice(e+1);const _=sizeFromShape(b),j=s.length;let _e=this.defaultValue;if(_e.length!==_&&_e.length!==1){const et=this.defaultValueShape;tidy(()=>{const tt=reshape$2(_e,et);_e=broadcastTo(tt,b).dataSync()})}let g=0,c=0,$=0;for(let et=0;et<=j;++et){let tt=et<j?s[et]:-1;if(tt===$){++$;continue}if(c<$){const nt=d.subarray(g*_),rt=h.subarray(c*_),ot=($-c)*_;copyArray(rt,nt,ot)}if(et>=j){const nt=i.length;tt=Math.floor(nt/_)}if(tt>$)if(this.defaultValue.length===1)h.subarray($*_,tt*_).fill(this.defaultValue[0]),$=tt;else for(;tt>$;){const nt=h.slice($*_);copyArray(nt,_e,_),++$}tt<0?(g=et+1,c=$):(g=et,c=$,$=c+1)}}}function copyArray(o,e,s){for(let i=0;i<s;i++)o[i]=e[i]}function makeShape(o,e){const s=[];for(let i of o){if(i<0){if(!e)throw new Error(`Dimension ${i} must be >= 0`);if(i<-1)throw new Error(`Dimension ${i} must be >= -1`);i=-1}s.push(i)}return s}function raggedTensorToTensorImpl(o,e,s,i,a,d,h,b,_,j){return new RaggedTensorToTensorOp(o,e,s,i,a,d,h,b,_,j).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rangeImpl(o,e,s,i){const a=o===e,d=o<e&&s<0,h=e<o&&s>1;if(a||d||h)return makeZerosTypedArray(0,i);const b=Math.abs(Math.ceil((e-o)/s)),_=makeZerosTypedArray(b,i);e<o&&s===1&&(s=-1),_[0]=o;for(let j=1;j<_.length;j++)_[j]=_[j-1]+s;return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtImpl=createSimpleUnaryImpl(o=>1/Math.sqrt(o)),rsqrt$1=unaryKernelFuncFromImpl(Rsqrt,rsqrtImpl),rsqrtConfig$1={kernelName:Rsqrt,backendName:"cpu",kernelFunc:rsqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterImpl(o,e,s,i,a,d,h,b,_,j){const _e=[i/a,a],g=o.values,c=e.values;if(i===0)return buffer(s,e.dtype);const $=_ instanceof TensorBuffer?_:buffer(_e,e.dtype);typeof _=="string"||typeof _=="number"?$.values.fill(_):typeof _=="boolean"&&$.values.fill(+_);for(let et=0;et<d;et++){const tt=[];let nt=0;for(let rt=0;rt<h;rt++){const ot=g[et*h+rt];tt.push(ot),nt+=ot*b[rt]}if(nt<0||nt>=i/a)throw new Error(`Invalid indices: ${tt} does not index into ${s}`);for(let rt=0;rt<a;rt++)j?$.values[nt*a+rt]+=c[et*a+rt]:$.values[nt*a+rt]=e.rank===0?c[0]:c[et*a+rt]}return $}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidImpl=createSimpleUnaryImpl(o=>1/(1+Math.exp(-o))),sigmoid$1=unaryKernelFunc$1(Sigmoid$1,o=>1/(1+Math.exp(-o))),sigmoidConfig$1={kernelName:Sigmoid$1,backendName:"cpu",kernelFunc:sigmoid$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sliceImpl(o,e,s,i,a){const d=isSliceContinous(i,e,s),h=sizeFromShape(s),b=computeStrides(i);if(d){const g=computeFlatOffset(e,b);return a==="string"?o.slice(g,g+h):o.subarray(g,g+h)}const _=a==="string"?fromUint8ToStringArray(o):o,j=buffer(i,a,_),_e=buffer(s,a);for(let g=0;g<_e.size;++g){const c=_e.indexToLoc(g),$=c.map((et,tt)=>et+e[tt]);_e.set(j.get(...$),...c)}return a==="string"?fromStringArrayToUint8(_e.values):_e.values}function slice$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{begin:d,size:h}=i;assertNotComplex$1(a,"slice");const[b,_]=parseSliceParams(a,d,h);assertParamsValid(a,b,_);const j=s.data.get(a.dataId).values,_e=sliceImpl(j,b,_,a.shape,a.dtype);return s.makeTensorInfo(_,a.dtype,_e)}const sliceConfig$1={kernelName:Slice,backendName:"cpu",kernelFunc:slice$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRowsImpl(o,e,s,i,a,d,h){const b=e[0],_=d[0],j=new Array(_),_e=new Array(b),g=e[1];if(_===0){if(b!==0)throw new Error(getSparseFillEmptyRowsIndicesDenseShapeMismatch(b));const nt=getArrayFromDType(s,0),rt=getArrayFromDType(a,0);return[nt,[0,g],rt,j,_e]}let c=!0,$=0;const et=new Array(_).fill(0);for(let nt=0;nt<b;++nt){const rt=o[nt*g];if(rt<0)throw new Error(getSparseFillEmptyRowsNegativeIndexErrorMessage(nt,rt));if(rt>=_)throw new Error(getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(nt,rt,_));++et[rt],c=c&&rt>=$,$=rt}let tt=!0;for(let nt=0;nt<_;++nt){const rt=et[nt]===0;j[nt]=rt,tt=tt&&!rt,et[nt]=Math.max(et[nt],1),nt>0&&(et[nt]+=et[nt-1])}if(tt&&c){const nt=o,rt=i;for(let ot=0;ot<b;++ot)_e[ot]=ot;return[nt,[b,g],rt,j,_e]}else{const nt=et[_-1],rt=getArrayFromDType(s,nt*g),ot=getArrayFromDType(a,nt),st=new Array(_).fill(0);for(let it=0;it<b;++it){const at=o[it*g],lt=st[at],ut=(at===0?0:et[at-1])+lt;st[at]++;for(let ct=0;ct<g;++ct)rt[ut*g+ct]=o[it*g+ct];ot[ut]=i[it],_e[it]=ut}for(let it=0;it<_;++it)if(st[it]===0){const lt=it===0?0:et[it-1];rt[lt*g+0]=it;for(let ut=1;ut<g;++ut)rt[lt*g+ut]=0;ot[lt]=h}return[rt,[nt,g],ot,j,_e]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshapeImpl(o,e,s,i,a){const d=sizeFromShape(i),h=e[0],b=a.length,_=[];let j=1,_e=-1;for(let nt=0;nt<b;++nt){const rt=a[nt];if(rt===-1){if(_e!==-1)throw new Error(getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(_e,nt));_e=nt,_.push(1)}else{if(rt<0)throw new Error(getSparseReshapeNegativeOutputDimErrorMessage(nt,rt));j*=rt,_.push(rt)}}if(_e!==-1){if(j<=0)throw new Error(getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const nt=Math.trunc(d/j);if(j*nt!==d)throw new Error(getSparseReshapeInputOutputMultipleErrorMessage(i,_));_[_e]=nt}if(sizeFromShape(_)!==d)throw new Error(getSparseReshapeInputOutputMismatchErrorMessage(i,_));const c=i.length,$=[];if(c>0){$[c-1]=1;for(let nt=c-2;nt>=0;--nt)$[nt]=$[nt+1]*i[nt+1]}const et=[];if(b>0){et[b-1]=1;for(let nt=b-2;nt>=0;--nt)et[nt]=et[nt+1]*_[nt+1]}const tt=getArrayFromDType(s,h*b);for(let nt=0;nt<h;++nt){let rt=0;for(let ot=0;ot<c;++ot)rt+=o[nt*c+ot]*$[ot];for(let ot=0;ot<b;++ot)tt[nt*b+ot]=Math.trunc(rt/et[ot]),rt%=et[ot]}return[tt,[h,b],_]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentReductionImpl(o,e,s,i,a,d=!1,h=0){const b=i.length,_=[e[0],o.length/e[0]],j=_[1],g=b>0?a[b-1]+1:0;if(g<0)throw new Error(getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=e.slice();c[0]=g;const $=c.reduce((st,it)=>st*it,1),et=getArrayFromDType(s,$);if(b===0)return g>0&&et.fill(h),[et,c];if(g<=0)throw new Error(getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let tt=0,nt=1,rt=0,ot=a[tt];for(;;){let st=0;if(nt<b){if(st=a[nt],ot===st){++nt;continue}if(ot>=st)throw new Error(getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(ot<0||ot>=g)throw new Error(getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(ot,g));ot>rt&&et.fill(h,rt*j,ot*j);for(let it=tt;it<nt;++it){const at=i[it];if(at<0||at>=_[0])throw new Error(getSparseSegmentReductionIndicesOutOfRangeErrorMessage(it,i[it],_[0]));for(let lt=0;lt<j;lt++)et[ot*j+lt]+=o[at*j+lt]}if(d)for(let it=0;it<j;it++)et[ot*j+it]/=nt-tt;if(tt=nt,++nt,rt=ot+1,ot=st,nt>b)break}return rt<g&&et.fill(h,rt*j,g*j),[et,c]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtImpl=createSimpleUnaryImpl(o=>Math.sqrt(o)),sqrt$1=unaryKernelFunc$1(Sqrt,o=>Math.sqrt(o)),sqrtConfig$1={kernelName:Sqrt,backendName:"cpu",kernelFunc:sqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceImpl=createSimpleBinaryKernelImpl((o,e)=>{const s=o-e;return s*s}),squaredDifference$1=binaryKernelFunc$1(SquaredDifference,squaredDifferenceImpl),squaredDifferenceConfig$1={kernelName:SquaredDifference,backendName:"cpu",kernelFunc:squaredDifference$1};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const staticRegexReplaceImpl=createSimpleUnaryImpl((o,e)=>{const{pattern:s,replaceGlobal:i,rewrite:a}=e;return o.replace(new RegExp(s,i?"g":""),a)}),staticRegexReplace$1=unaryKernelFuncFromImpl(StaticRegexReplace,staticRegexReplaceImpl),staticRegexReplaceConfig$1={kernelName:StaticRegexReplace,backendName:"cpu",kernelFunc:staticRegexReplace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSliceImpl(o,e,s,i){const a=buffer(o,e.dtype);for(let d=0;d<a.size;d++){const h=a.indexToLoc(d),b=new Array(h.length);for(let _=0;_<b.length;_++)b[_]=h[_]*s[_]+i[_];a.set(e.get(...b),...h)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StringNGramsOp{constructor(e,s,i,a,d,h){this.separator=encodeString(e),this.nGramWidths=s,this.leftPad=encodeString(i),this.rightPad=encodeString(a),this.padWidth=d,this.preserveShort=h}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,s){const i=this.getPadWidth(s);return Math.max(0,e+2*i-s+1)}createNGrams(e,s,i,a,d,h){for(let b=0;b<d;++b){const _=this.getPadWidth(h),j=Math.max(0,_-b),_e=Math.max(0,_-(d-(b+1))),g=h-(j+_e),c=s+(j>0?0:b-_);let $=0;$+=j*this.leftPad.length;for(let ot=0;ot<g;++ot)$+=e[c+ot].length;$+=_e*this.rightPad.length;const et=j+_e+g-1;$+=et*this.separator.length,i[a+b]=new Uint8Array($);const tt=i[a+b];let nt=0;const rt=ot=>ot.forEach(st=>tt[nt++]=st);for(let ot=0;ot<j;++ot)rt(this.leftPad),rt(this.separator);for(let ot=0;ot<g-1;++ot)rt(e[c+ot]),rt(this.separator);if(g>0){rt(e[c+g-1]);for(let ot=0;ot<_e;++ot)rt(this.separator),rt(this.rightPad)}else{for(let ot=0;ot<_e-1;++ot)rt(this.rightPad),rt(this.separator);rt(this.rightPad)}}}compute(e,s){const i=e.length,a=s.length;if(a>0){let _=s[0];if(_!==0)throw new Error(`First split value must be 0, got ${_}`);for(let j=1;j<a;++j){let _e=s[j]>=_;if(_e=_e&&s[j]<=i,!_e)throw new Error(`Invalid split value ${s[j]}, must be in [${_}, ${i}]`);_=s[j]}if(_!==i)throw new Error(`Last split value must be data size. Expected ${i}, got ${_}`)}const d=a-1,h=getArrayFromDType("int32",a);if(i===0||a===0){const _=new Array(i);for(let j=0;j<=d;++j)h[j]=0;return[_,h]}h[0]=0;for(let _=1;_<=d;++_){const j=s[_]-s[_-1];let _e=0;this.nGramWidths.forEach(g=>{_e+=this.getNumNGrams(j,g)}),this.preserveShort&&j>0&&_e===0&&(_e=1),h[_]=h[_-1]+_e}const b=new Array(h[d]);for(let _=0;_<d;++_){const j=s[_];let _e=h[_];if(this.nGramWidths.forEach(g=>{const c=s[_+1]-s[_],$=this.getNumNGrams(c,g);this.createNGrams(e,j,b,_e,$,g),_e+=$}),this.preserveShort&&_e===h[_]){const g=s[_+1]-s[_];if(g===0)continue;const c=g+2*this.padWidth;this.createNGrams(e,j,b,_e,1,c)}}return[b,h]}}function stringNGramsImpl(o,e,s,i,a,d,h,b){return new StringNGramsOp(s,i,a,d,h,b).compute(o,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split(o,e,s,i){if(!o.length)return;if(e.length===0){for(let d=0;d<o.length;++d)i.push(o.subarray(d,d+1));return}if(e.length===1){const d=e[0];let h=o.indexOf(d);for(;h!==-1;){const b=o.subarray(0,h);(!s||b.length!==0)&&i.push(b),o=o.subarray(h+1),h=o.indexOf(d)}(!s||o.length!==0)&&i.push(o);return}let a=0;for(let d=0;d<o.length+1;d++)if(d===o.length||e.indexOf(o[d])!==-1){const h=o.subarray(a,d);(!s||h.length!==0)&&i.push(h),a=d+1}}function stringSplitImpl(o,e,s){const i=o.length,a=[];let d=0,h=0;const b=new Array(i);for(let c=0;c<i;++c){const $=a.length;split(o[c],e,s,a);const et=a.length-$;b[c]=et,d+=et,h=Math.max(h,et)}const _=getArrayFromDType("int32",d*2),j=new Array(d),_e=[i,h];let g=0;for(let c=0;c<i;++c)for(let $=0;$<b[c];++$)_[g*2]=c,_[g*2+1]=$,j[g]=a[g],++g;return[_,j,_e]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFastImpl(o,e){const s=getArrayFromDType("int32",o.length);for(let i=0;i<o.length;++i)s[i]=fingerPrint64(o[i]).modulo(e).getLowBitsUnsigned();return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subImpl=createSimpleBinaryKernelImpl((o,e)=>o-e),subComplexImpl=createComplexBinaryKernelImpl((o,e,s,i)=>({real:o-s,imag:e-i})),sub$1=binaryKernelFunc$1(Sub,subImpl,subComplexImpl),subConfig$1={kernelName:Sub,backendName:"cpu",kernelFunc:sub$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tileImpl(o,e){const s=new Array(o.rank);for(let a=0;a<s.length;a++)s[a]=o.shape[a]*e[a];const i=buffer(s,o.dtype);for(let a=0;a<i.values.length;++a){const d=i.indexToLoc(a),h=new Array(o.rank);for(let _=0;_<h.length;_++)h[_]=d[_]%o.shape[_];const b=o.locToIndex(h);i.values[a]=o.values[b]}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const comparePair=(o,e)=>{const s=e.value-o.value;return s===0?o.index-e.index:s};function select$2(o,e,s=0,i=o.length-1){for(;i>s;){if(i-s>600){const b=i-s+1,_=e-s+1,j=Math.log(b),_e=.5*Math.exp(2*j/3),g=.5*Math.sqrt(j*_e*(b-_e)/b)*Math.sign(_-b/2),c=Math.max(s,Math.floor(e-_*_e/b+g)),$=Math.min(i,Math.floor(e+(b-_)*_e/b+g));select$2(o,e,c,$)}const a=o[e];let d=s,h=i;for(swap(o,s,e),comparePair(o[i],a)>0&&swap(o,s,i);d<h;){for(swap(o,d,h),d++,h--;comparePair(o[d],a)<0;)d=d+1;for(;comparePair(o[h],a)>0;)h=h-1}comparePair(o[s],a)===0?swap(o,s,h):(h=h+1,swap(o,h,i)),h<=e&&(s=h+1),e<=h&&(i=h-1)}}function topKImpl(o,e,s,i,a){const d=e[e.length-1],[h,b]=[o.length/d,d],_=getTypedArrayFromDType(s,h*i),j=getTypedArrayFromDType("int32",h*i);for(let g=0;g<h;g++){const c=g*b,$=o.subarray(c,c+b);let et=new Array($.length);$.forEach((ot,st)=>et[st]={value:ot,index:st}),i<et.length&&(select$2(et,i),et=et.slice(0,i)),a&&et.sort(comparePair);const tt=g*i,nt=_.subarray(tt,tt+i),rt=j.subarray(tt,tt+i);for(let ot=0;ot<i;ot++)nt[ot]=et[ot].value,rt[ot]=et[ot].index}const _e=e.slice();return _e[_e.length-1]=i,[buffer(_e,s,_),buffer(_e,"int32",j)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uniqueImpl(o,e,s,i){const a=parseAxisParam(e,s)[0],d=[1,s[0],1];for(let et=0;et<a;et++)d[0]*=s[et];d[1]=s[a];for(let et=a+1;et<s.length;et++)d[2]*=s[et];const h=new Map,b=new Int32Array(s[a]),_=new TensorBuffer(d,i,o),j=[],_e=d[0]===1&&d[2]===1;for(let et=0;et<s[a];et++){let tt;if(_e)tt=o[et].toString();else{const rt=[];for(let ot=0;ot<d[0];ot++)for(let st=0;st<d[2];st++)rt.push(_.get(ot,et,st));tt=rt.join(",")}const nt=h.get(tt);if(nt!=null)b[et]=nt;else{const rt=h.size;h.set(tt,rt),b[et]=rt,j.push(et)}}const g=d.slice();g[1]=h.size;const c=new TensorBuffer(g,i);j.forEach((et,tt)=>{for(let nt=0;nt<d[0];nt++)for(let rt=0;rt<d[2];rt++)c.set(_.get(nt,et,rt),nt,tt,rt)});const $=s.slice();return $[a]=g[1],{outputValues:c.values,outputShape:$,indices:b}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const shared=Object.freeze(Object.defineProperty({__proto__:null,addImpl,bincountImpl,bincountReduceImpl,bitwiseAndImpl,castImpl,ceilImpl,concatImpl:concatImpl$1,equalImpl,expImpl,expm1Impl,floorDivImpl,floorImpl,gatherNdImpl,gatherV2Impl,greaterEqualImpl,greaterImpl,lessEqualImpl,lessImpl,linSpaceImpl,logImpl,maxImpl:maxImpl$1,maximumImpl,minimumImpl,multiplyImpl,negImpl,notEqualImpl,prodImpl,raggedGatherImpl,raggedRangeImpl,raggedTensorToTensorImpl,rangeImpl,rsqrtImpl,scatterImpl,sigmoidImpl,simpleAbsImpl,sliceImpl,sparseFillEmptyRowsImpl,sparseReshapeImpl,sparseSegmentReductionImpl,sqrtImpl,squaredDifferenceImpl,staticRegexReplaceImpl,stridedSliceImpl,stringNGramsImpl,stringSplitImpl,stringToHashBucketFastImpl,subImpl,tileImpl,topKImpl,transposeImpl:transposeImpl$1,uniqueImpl},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerBackend("cpu",()=>new MathBackendCPU,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elu$1=unaryKernelFunc$1(Elu$1,o=>o>=0?o:Math.exp(o)-1),eluConfig$1={kernelName:Elu$1,backendName:"cpu",kernelFunc:elu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{alpha:d}=i;assertNotComplex$1([a],"leakyRelu");const h=sizeFromShape(a.shape),b=s.data.get(a.dataId).values,_=getTypedArrayFromDType("float32",h);for(let j=0;j<b.length;j++)_[j]=b[j]<0?d*b[j]:b[j];return s.makeTensorInfo(a.shape,"float32",_)}const leakyReluConfig$1={kernelName:LeakyRelu,backendName:"cpu",kernelFunc:leakyRelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluImpl=createSimpleBinaryKernelImpl((o,e)=>o<0?e*o:o);function prelu$1(o){const{inputs:e,backend:s}=o,{x:i,alpha:a}=e;assertNotComplex$1([i,a],"prelu");const d=s.data.get(i.dataId).values,h=s.data.get(a.dataId).values,[b,_]=preluImpl(i.shape,a.shape,d,h,"float32");return s.makeTensorInfo(_,"float32",b)}const preluConfig$1={kernelName:Prelu,backendName:"cpu",kernelFunc:prelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu$1=unaryKernelFunc$1(Relu$1,o=>Math.max(0,o)),reluConfig$1={kernelName:Relu$1,backendName:"cpu",kernelFunc:relu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6$1=unaryKernelFunc$1(Relu6$1,o=>Math.min(Math.max(0,o),6)),relu6Config$1={kernelName:Relu6$1,backendName:"cpu",kernelFunc:relu6$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function applyActivation(o,e,s,i,a){if(s==="linear")return identity$1({inputs:{x:e},backend:o});if(s==="relu")return relu$1({inputs:{x:e},backend:o});if(s==="elu")return elu$1({inputs:{x:e},backend:o});if(s==="relu6")return relu6$1({inputs:{x:e},backend:o});if(s==="prelu")return prelu$1({inputs:{x:e,alpha:i},backend:o});if(s==="leakyrelu")return leakyRelu$1({inputs:{x:e},backend:o,attrs:{alpha:a}});if(s==="sigmoid")return sigmoid$1({inputs:{x:e},backend:o});throw new Error(`Activation ${s} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{shape:d}=i,h=sizeFromShape(a.shape),b=inferFromImplicitShape(d,h),_=sizeFromShape(b);assert$1(h===_,()=>`The new shape (${b}) has ${_} elements and the old shape (${a.shape}) has ${h} elements. The new shape and old shape must have the same number of elements.`),s.incRef(a.dataId);const j=s.data.get(a.dataId);if(j.complexTensorInfos!=null){const _e=j.complexTensorInfos.real,g=j.complexTensorInfos.imag;_e.shape=b,g.shape=b}return{dataId:a.dataId,shape:b,dtype:a.dtype}}const reshapeConfig$1={kernelName:Reshape$1,backendName:"cpu",kernelFunc:reshape$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul$1(o){const{inputs:e,backend:s,attrs:i}=o,{a,b:d}=e,{transposeA:h,transposeB:b}=i;assertNotComplex$1([a,d],"matMul");const _=a.shape.length,j=d.shape.length,_e=h?a.shape[_-2]:a.shape[_-1],g=b?d.shape[j-1]:d.shape[j-2],c=h?a.shape[_-1]:a.shape[_-2],$=b?d.shape[j-2]:d.shape[j-1],et=a.shape.slice(0,-2),tt=d.shape.slice(0,-2),nt=sizeFromShape(et),rt=sizeFromShape(tt),st=assertAndGetBroadcastShape(a.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,$]);assert$1(_e===g,()=>`Error in matMul: inner shapes (${_e}) and (${g}) of Tensors with shapes ${a.shape} and ${d.shape} and transposeA=${h} and transposeB=${b} must match.`);const it=h?[nt,_e,c]:[nt,c,_e],at=b?[rt,$,g]:[rt,g,$],lt=reshape$1({inputs:{x:a},backend:s,attrs:{shape:it}}),ut=reshape$1({inputs:{x:d},backend:s,attrs:{shape:at}}),ct=h?lt.shape[1]:lt.shape[2],pt=h?lt.shape[2]:lt.shape[1],ht=b?ut.shape[1]:ut.shape[2],yt=Math.max(nt,rt),xt=s.data.get(lt.dataId).values,ft=s.data.get(ut.dataId).values,wt=computeStrides(lt.shape),dt=computeStrides(ut.shape),[mt,bt,vt]=h?[wt[0],1,wt[1]]:[wt[0],wt[1],1],[Tt,Et,Ct]=b?[1,dt[1],dt[0]]:[dt[1],1,dt[0]],kt=pt*ht,Dt=buffer([yt,pt,ht],lt.dtype),Rt=Dt.values,Ot=s.blockSize;for(let zt=0;zt<yt;zt++){const Bt=zt%nt,Gt=zt%rt;for(let jt=0;jt<pt;jt+=Ot){const Kt=Math.min(jt+Ot,pt);for(let Wt=0;Wt<ht;Wt+=Ot){const Jt=Math.min(Wt+Ot,ht);for(let Xt=0;Xt<ct;Xt+=Ot){const tn=Math.min(Xt+Ot,ct);for(let en=jt;en<Kt;en++)for(let Zt=Wt;Zt<Jt;Zt++){let nn=0;for(let rn=Xt;rn<tn;rn++){const un=xt[Bt*mt+en*bt+rn*vt],ln=ft[rn*Tt+Zt*Et+Gt*Ct];nn+=un*ln}Rt[zt*kt+(en*ht+Zt)]+=nn}}}}}return s.disposeIntermediateTensorInfo(lt),s.disposeIntermediateTensorInfo(ut),s.makeTensorInfo(st,Dt.dtype,Dt.values)}const batchMatMulConfig$1={kernelName:BatchMatMul,backendName:"cpu",kernelFunc:batchMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul$1(o){const{inputs:e,backend:s,attrs:i}=o,{a,b:d,bias:h,preluActivationWeights:b}=e,{transposeA:_,transposeB:j,activation:_e,leakyreluAlpha:g}=i;let c,$,et;const tt=[];c=batchMatMul$1({inputs:{a,b:d},attrs:{transposeA:_,transposeB:j},backend:s}),h&&($=add({inputs:{a:c,b:h},backend:s}),tt.push(c),c=$),_e&&(et=applyActivation(s,c,_e,b,g),tt.push(c),c=et);for(const rt of tt)s.disposeIntermediateTensorInfo(rt);return c}const _fusedMatMulConfig$1={kernelName:_FusedMatMul,backendName:"cpu",kernelFunc:_fusedMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acos$1=unaryKernelFunc$1(Acos,o=>Math.acos(o)),acosConfig$1={kernelName:Acos,backendName:"cpu",kernelFunc:acos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosh$1=unaryKernelFunc$1(Acosh,o=>Math.acosh(o)),acoshConfig$1={kernelName:Acosh,backendName:"cpu",kernelFunc:acosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN$1(o){const{inputs:e,backend:s}=o,i=e;assertNotComplex$1(e,"addN");const a=i.map(b=>s.data.get(b.dataId).values),d=buffer(i[0].shape,i[0].dtype),h=d.values;for(let b=0;b<i.length;b++){const _=a[b];for(let j=0;j<h.length;j++)h[j]+=_[j]}return s.makeTensorInfo(d.shape,d.dtype,d.values)}const addNConfig$1={kernelName:AddN,backendName:"cpu",kernelFunc:addN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;assertNotComplex$1(a,"all");const b=parseAxisParam(d,a.shape);let _=b;const j=getAxesPermutation(_,a.shape.length);let _e=a;j!=null&&(_e=transpose$1({inputs:{x:a},backend:s,attrs:{perm:j}}),_=getInnerMostAxes(_.length,a.shape.length)),assertAxesAreInnerMostDims("all",_,_e.shape.length);const[g,c]=computeOutAndReduceShapes(_e.shape,_),$=sizeFromShape(c),et=makeZerosTypedArray(sizeFromShape(g),_e.dtype),tt=s.data.get(_e.dataId).values;for(let rt=0;rt<et.length;++rt){const ot=rt*$;let st=tt[ot];for(let it=0;it<$;++it){const at=tt[ot+it];st=st&&at}et[rt]=st}j!=null&&s.disposeIntermediateTensorInfo(_e);const nt=s.makeTensorInfo(g,_e.dtype,et);if(h){const rt=expandShapeToKeepDim(g,b),ot=reshape$1({inputs:{x:nt},backend:s,attrs:{shape:rt}});return s.disposeIntermediateTensorInfo(nt),ot}return nt}const allConfig$1={kernelName:All,backendName:"cpu",kernelFunc:all$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;assertNotComplex$1(a,"any");const b=parseAxisParam(d,a.shape);let _=b;const j=getAxesPermutation(_,a.shape.length);let _e=a;j!=null&&(_e=transpose$1({inputs:{x:a},backend:s,attrs:{perm:j}}),_=getInnerMostAxes(_.length,a.shape.length)),assertAxesAreInnerMostDims("any",_,_e.shape.length);const[g,c]=computeOutAndReduceShapes(_e.shape,_),$=sizeFromShape(c),et=makeZerosTypedArray(sizeFromShape(g),_e.dtype),tt=s.data.get(_e.dataId).values;for(let rt=0;rt<et.length;++rt){const ot=rt*$;let st=tt[ot];for(let it=0;it<$;++it){const at=tt[ot+it];st=st||at}et[rt]=st}j!=null&&s.disposeIntermediateTensorInfo(_e);const nt=s.makeTensorInfo(g,_e.dtype,et);if(h){const rt=expandShapeToKeepDim(g,b),ot=reshape$1({inputs:{x:nt},backend:s,attrs:{shape:rt}});return s.disposeIntermediateTensorInfo(nt),ot}return nt}const anyConfig$1={kernelName:Any,backendName:"cpu",kernelFunc:any$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d}=i;assertNotComplex$1(a,"argMax");let h=parseAxisParam(d,a.shape);const b=getAxesPermutation(h,a.shape.length);let _=a;const j=[];b!=null&&(_=transpose$1({inputs:{x:a},backend:s,attrs:{perm:b}}),j.push(_),h=getInnerMostAxes(h.length,_.shape.length)),h=[h[0]],assertAxesAreInnerMostDims("argMax",h,_.shape.length);const[_e,g]=computeOutAndReduceShapes(_.shape,h),c=sizeFromShape(_e),$=makeZerosTypedArray(c,"int32"),et=sizeFromShape(g),tt=s.data.get(_.dataId).values;for(let nt=0;nt<$.length;++nt){const rt=nt*et;let ot=tt[rt],st=0;for(let it=0;it<et;++it){const at=tt[rt+it];at>ot&&(ot=at,st=it)}$[nt]=st}return j.forEach(nt=>s.disposeIntermediateTensorInfo(nt)),s.makeTensorInfo(_e,"int32",$)}const argMaxConfig$1={kernelName:ArgMax,backendName:"cpu",kernelFunc:argMax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d}=i;assertNotComplex$1(a,"argMin");let h=parseAxisParam(d,a.shape);const b=getAxesPermutation(h,a.shape.length);let _=a;const j=[];b!=null&&(_=transpose$1({inputs:{x:a},backend:s,attrs:{perm:b}}),j.push(_),h=getInnerMostAxes(h.length,_.shape.length)),h=[h[0]],assertAxesAreInnerMostDims("argMin",h,_.shape.length);const[_e,g]=computeOutAndReduceShapes(_.shape,h),c=sizeFromShape(_e),$=makeZerosTypedArray(c,"int32"),et=sizeFromShape(g),tt=s.data.get(_.dataId).values;for(let nt=0;nt<$.length;++nt){const rt=nt*et;let ot=tt[rt],st=0;for(let it=0;it<et;++it){const at=tt[rt+it];at<ot&&(ot=at,st=it)}$[nt]=st}return j.forEach(nt=>s.disposeIntermediateTensorInfo(nt)),s.makeTensorInfo(_e,"int32",$)}const argMinConfig$1={kernelName:ArgMin,backendName:"cpu",kernelFunc:argMin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asin$1=unaryKernelFunc$1(Asin,o=>Math.asin(o)),asinConfig$1={kernelName:Asin,backendName:"cpu",kernelFunc:asin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinh$1=unaryKernelFunc$1(Asinh,o=>Math.asinh(o)),asinhConfig$1={kernelName:Asinh,backendName:"cpu",kernelFunc:asinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan$1=unaryKernelFunc$1(Atan,o=>Math.atan(o)),atanConfig$1={kernelName:Atan,backendName:"cpu",kernelFunc:atan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2Impl=createSimpleBinaryKernelImpl((o,e)=>Math.atan2(o,e)),atan2$1=binaryKernelFunc$1(Atan2,atan2Impl),atan2Config$1={kernelName:Atan2,backendName:"cpu",kernelFunc:atan2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanh$1=unaryKernelFunc$1(Atanh,o=>Math.atanh(o)),atanhConfig$1={kernelName:Atanh,backendName:"cpu",kernelFunc:atanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool(o,e,s,i,a,d){const h=a.strideHeight,b=a.strideWidth,_=a.dilationHeight,j=a.dilationWidth,_e=a.effectiveFilterHeight,g=a.effectiveFilterWidth,c=a.padInfo.top,$=a.padInfo.left,et=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,tt=buffer(a.outShape,s),nt=tt.values,rt=a.outShape[1]*a.outShape[2]*a.outShape[3],ot=a.outShape[2]*a.outShape[3],st=a.outShape[3];for(let it=0;it<a.batchSize;++it){const at=it*rt,lt=it*i[0];for(let ut=0;ut<a.inChannels;++ut)for(let ct=0;ct<a.outHeight;++ct){const pt=ct*h-c,ht=Math.max(0,pt),yt=Math.min(a.inHeight,_e+pt),xt=at+ct*ot;for(let ft=0;ft<a.outWidth;++ft){const wt=ft*b-$,dt=Math.max(0,wt),mt=Math.min(a.inWidth,g+wt);let bt=et,vt=0,Tt=0;for(let Ct=ht;Ct<yt;Ct+=_){const kt=lt+Ct*i[1];for(let Dt=dt;Dt<mt;Dt+=j){const Rt=kt+Dt*i[2],Ot=o[Rt+ut];d==="max"&&Ot>bt?bt=Ot:d==="avg"&&(vt+=Ot,Tt++)}if(isNaN(bt))break}const Et=xt+ft*st+ut;nt[Et]=d==="avg"?vt/Tt:bt}}}return tt}function maxPoolPositions(o,e,s,i,a=!1,d=!1){const h=buffer(i.outShape,"int32"),b=i.strideHeight,_=i.strideWidth,j=i.dilationHeight,_e=i.dilationWidth,g=i.effectiveFilterHeight,c=i.effectiveFilterWidth,$=i.padInfo.top,et=i.padInfo.left,tt=buffer(e,s,o);for(let nt=0;nt<i.batchSize;++nt)for(let rt=0;rt<i.inChannels;++rt)for(let ot=0;ot<i.outHeight;++ot){const st=ot*b-$;let it=st;for(;it<0;)it+=j;const at=Math.min(i.inHeight,g+st);for(let lt=0;lt<i.outWidth;++lt){const ut=lt*_-et;let ct=ut;for(;ct<0;)ct+=_e;const pt=Math.min(i.inWidth,c+ut);let ht=Number.NEGATIVE_INFINITY,yt=-1;for(let xt=it;xt<at;xt+=j){const ft=xt-st;for(let wt=ct;wt<pt;wt+=_e){const dt=wt-ut,mt=tt.get(nt,xt,wt,rt);mt>ht&&(ht=mt,a?yt=d?((nt*i.inHeight+xt)*i.inWidth+wt)*i.inChannels+rt:(xt*i.inWidth+wt)*i.inChannels+rt:yt=ft*c+dt)}}h.set(yt,nt,ot,lt,rt)}}return h}function pool3d(o,e,s,i,a,d){const h=a.strideDepth,b=a.strideHeight,_=a.strideWidth,j=a.dilationDepth,_e=a.dilationHeight,g=a.dilationWidth,c=a.effectiveFilterDepth,$=a.effectiveFilterHeight,et=a.effectiveFilterWidth,tt=a.padInfo.front,nt=a.padInfo.top,rt=a.padInfo.left,ot=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,st=buffer(a.outShape,s),it=st.values,at=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],lt=a.outShape[2]*a.outShape[3]*a.outShape[4],ut=a.outShape[3]*a.outShape[4],ct=a.outShape[4];for(let pt=0;pt<a.batchSize;++pt){const ht=pt*at,yt=pt*i[0];for(let xt=0;xt<a.inChannels;++xt)for(let ft=0;ft<a.outDepth;++ft){const wt=ft*h-tt;let dt=wt;for(;dt<0;)dt+=j;const mt=Math.min(a.inDepth,c+wt),bt=ht+ft*lt;for(let vt=0;vt<a.outHeight;++vt){const Tt=vt*b-nt;let Et=Tt;for(;Et<0;)Et+=_e;const Ct=Math.min(a.inHeight,$+Tt),kt=bt+vt*ut;for(let Dt=0;Dt<a.outWidth;++Dt){const Rt=Dt*_-rt;let Ot=Rt;for(;Ot<0;)Ot+=g;const zt=Math.min(a.inWidth,et+Rt),Bt=kt+Dt*ct;let Gt=ot,jt=0,Kt=0;for(let Jt=dt;Jt<mt;Jt+=j){const Xt=yt+Jt*i[1];for(let tn=Et;tn<Ct;tn+=_e){const en=Xt+tn*i[2];for(let Zt=Ot;Zt<zt;Zt+=g){const nn=en+Zt*i[3],rn=o[nn+xt];if(d==="max"&&rn>Gt?Gt=rn:d==="avg"&&(jt+=rn,Kt++),isNaN(Gt))break}if(isNaN(Gt))break}if(isNaN(Gt))break}const Wt=Bt+xt;it[Wt]=d==="avg"?jt/Math.max(Kt,1):Gt}}}}return st}function maxPool3dPositions(o,e){const s=buffer(e.outShape,"int32"),i=e.strideDepth,a=e.strideHeight,d=e.strideWidth,h=e.dilationDepth,b=e.dilationHeight,_=e.dilationWidth,j=e.effectiveFilterDepth,_e=e.effectiveFilterHeight,g=e.effectiveFilterWidth,c=e.padInfo.front,$=e.padInfo.top,et=e.padInfo.left;for(let tt=0;tt<e.batchSize;++tt)for(let nt=0;nt<e.inChannels;++nt)for(let rt=0;rt<e.outDepth;++rt){const ot=rt*i-c;let st=ot;for(;st<0;)st+=h;const it=Math.min(e.inDepth,j+ot);for(let at=0;at<e.outHeight;++at){const lt=at*a-$;let ut=lt;for(;ut<0;)ut+=b;const ct=Math.min(e.inHeight,_e+lt);for(let pt=0;pt<e.outWidth;++pt){const ht=pt*d-et;let yt=ht;for(;yt<0;)yt+=_;const xt=Math.min(e.inWidth,g+ht);let ft=Number.NEGATIVE_INFINITY,wt=-1;for(let dt=st;dt<it;dt+=h){const mt=dt-ot;for(let bt=ut;bt<ct;bt+=b){const vt=bt-lt;for(let Tt=yt;Tt<xt;Tt+=_){const Et=Tt-ht,Ct=o.get(tt,dt,bt,Tt,nt);Ct>=ft&&(ft=Ct,wt=mt*_e*g+vt*_e+Et)}}}s.set(wt,tt,rt,at,pt,nt)}}}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e;assertNotComplex$1(a,"avgPool");const{filterSize:d,strides:h,pad:b,dimRoundingMode:_}=i,j=1;assert$1(eitherStridesOrDilationsAreOne(h,j),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${j}'`);const _e=computePool2DInfo(a.shape,d,h,j,b,_);let g;if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))g=identity$1({inputs:{x:a},backend:s});else{const c=s.data.get(a.dataId).values,$=computeStrides(a.shape),et=pool(c,a.shape,a.dtype,$,_e,"avg");g=s.makeTensorInfo(_e.outShape,a.dtype,et.values)}return g}const avgPoolConfig$1={kernelName:AvgPool,backendName:"cpu",kernelFunc:avgPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{filterSize:d,strides:h,pad:b,dimRoundingMode:_,dataFormat:j}=i;assertNotComplex$1(a,"avgPool3d");const _e=computePool3DInfo(a.shape,d,h,1,b,_,j),g=s.data.get(a.dataId).values,c=pool3d(g,a.shape,a.dtype,computeStrides(a.shape),_e,"avg");return s.makeTensorInfo(c.shape,"float32",c.values)}const avgPool3DConfig$1={kernelName:AvgPool3D,backendName:"cpu",kernelFunc:avgPool3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,{filterSize:h,strides:b,pad:_,dimRoundingMode:j}=i;assertNotComplex$1([a,d],"avgPool3DGrad");const _e=computePool3DInfo(d.shape,h,b,1,_,j),g=_e.strideDepth,c=_e.strideHeight,$=_e.strideWidth,et=_e.filterDepth,tt=_e.filterHeight,nt=_e.filterWidth,rt=_e.dilationDepth,ot=_e.dilationHeight,st=_e.dilationWidth,it=_e.effectiveFilterDepth,at=_e.effectiveFilterHeight,lt=_e.effectiveFilterWidth,ut=it-1-_e.padInfo.front,ct=lt-1-_e.padInfo.left,pt=at-1-_e.padInfo.top,ht=buffer(d.shape,"float32"),yt=1/(et*tt*nt),xt=s.bufferSync(a);for(let ft=0;ft<_e.batchSize;++ft)for(let wt=0;wt<_e.inChannels;++wt)for(let dt=0;dt<_e.inDepth;++dt)for(let mt=0;mt<_e.inHeight;++mt)for(let bt=0;bt<_e.inWidth;++bt){const vt=dt-ut,Tt=mt-pt,Et=bt-ct;let Ct=0;for(let kt=0;kt<it;kt+=rt){const Dt=(vt+kt)/g;if(!(Dt<0||Dt>=_e.outDepth||Math.floor(Dt)!==Dt))for(let Rt=0;Rt<at;Rt+=ot){const Ot=(Tt+Rt)/c;if(!(Ot<0||Ot>=_e.outHeight||Math.floor(Ot)!==Ot))for(let zt=0;zt<lt;zt+=st){const Bt=(Et+zt)/$;if(Bt<0||Bt>=_e.outWidth||Math.floor(Bt)!==Bt)continue;const Gt=xt.get(ft,Dt,Ot,Bt,wt);Ct+=Gt}}}ht.set(Ct*yt,ft,dt,mt,bt,wt)}return s.makeTensorInfo(ht.shape,ht.dtype,ht.values)}const avgPool3DGradConfig$1={kernelName:AvgPool3DGrad,backendName:"cpu",kernelFunc:avgPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,h=d;assertNotComplex$1([a,d],"avgPoolGrad");const{filterSize:b,strides:_,pad:j}=i,_e=computePool2DInfo(h.shape,b,_,1,j),g=_e.strideHeight,c=_e.strideWidth,$=_e.filterHeight,et=_e.filterWidth,tt=_e.dilationHeight,nt=_e.dilationWidth,rt=_e.effectiveFilterHeight,ot=_e.effectiveFilterWidth,st=ot-1-_e.padInfo.left,it=rt-1-_e.padInfo.top,at=buffer(h.shape,"float32"),lt=1/($*et),ut=s.data.get(a.dataId).values,ct=buffer(a.shape,"float32",ut);for(let pt=0;pt<_e.batchSize;++pt)for(let ht=0;ht<_e.inChannels;++ht)for(let yt=0;yt<_e.inHeight;++yt)for(let xt=0;xt<_e.inWidth;++xt){const ft=yt-it,wt=xt-st;let dt=0;for(let mt=0;mt<rt;mt+=tt){const bt=(ft+mt)/g;if(!(bt<0||bt>=_e.outHeight||Math.floor(bt)!==bt))for(let vt=0;vt<ot;vt+=nt){const Tt=(wt+vt)/c;if(Tt<0||Tt>=_e.outWidth||Math.floor(Tt)!==Tt)continue;const Et=ct.get(pt,bt,Tt,ht);dt+=Et}}at.set(dt*lt,pt,yt,xt,ht)}return s.makeTensorInfo(at.shape,at.dtype,at.values)}const avgPoolGradConfig$1={kernelName:AvgPoolGrad,backendName:"cpu",kernelFunc:avgPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,scale:d,offset:h,mean:b,variance:_}=e;assert$1(b.shape.length===_.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(h==null||b.shape.length===h.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(d==null||b.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),assertNotComplex$1([a,b,_,d,h],"batchNorm");let{varianceEpsilon:j}=i;j==null&&(j=.001);const _e=s.data.get(a.dataId).values,g=s.data.get(b.dataId).values,c=s.data.get(_.dataId).values,$=d?s.data.get(d.dataId).values:new Float32Array([1]),et=h?s.data.get(h.dataId).values:new Float32Array([0]),tt=new Float32Array(_e.length),nt=et.length,rt=$.length,ot=c.length,st=g.length;let it=0,at=0,lt=0,ut=0;for(let ct=0;ct<_e.length;++ct)tt[ct]=et[it++]+(_e[ct]-g[at++])*$[lt++]/Math.sqrt(c[ut++]+j),it>=nt&&(it=0),at>=st&&(at=0),lt>=rt&&(lt=0),ut>=ot&&(ut=0);return s.makeTensorInfo(a.shape,a.dtype,tt)}const batchNormConfig$1={kernelName:FusedBatchNorm,backendName:"cpu",kernelFunc:batchNorm$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockShape:d,crops:h}=i;assertNotComplex$1([a],"batchToSpaceND");const b=d.reduce((rt,ot)=>rt*ot),_=getReshaped(a.shape,d,b),j=getPermuted(_.length,d.length),_e=getReshapedPermuted(a.shape,d,b),g=getSliceBeginCoords(h,d.length),c=getSliceSize(_e,h,d.length),$=reshape$1({inputs:{x:a},backend:s,attrs:{shape:_}}),et=transpose$1({inputs:{x:$},backend:s,attrs:{perm:j}}),tt=reshape$1({inputs:{x:et},backend:s,attrs:{shape:_e}}),nt=slice$1({inputs:{x:tt},backend:s,attrs:{begin:g,size:c}});return s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(tt),nt}const batchToSpaceNDConfig$1={kernelName:BatchToSpaceND,backendName:"cpu",kernelFunc:batchToSpaceND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,weights:d}=e,{size:h}=i,b=s.data.get(a.dataId).values,_=s.data.get(d.dataId).values,j=bincountImpl(b,_,d.dtype,d.shape,h);return s.makeTensorInfo([h],d.dtype,j)}const bincountConfig$1={kernelName:Bincount,backendName:"cpu",kernelFunc:bincount$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastArgs$1(o){const{inputs:e,backend:s}=o,{s0:i,s1:a}=e,d=s.data.get(i.dataId).values,h=s.data.get(a.dataId).values,b=assertAndGetBroadcastShape(Array.from(d),Array.from(h));return s.makeTensorInfo([b.length],"int32",Int32Array.from(b))}const broadcastArgsConfig$1={kernelName:BroadcastArgs,backendName:"cpu",kernelFunc:broadcastArgs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValue$1=unaryKernelFunc$1(ClipByValue,(o,e)=>{const s=e;return o>s.clipValueMax?s.clipValueMax:o<s.clipValueMin?s.clipValueMin:o}),clipByValueConfig$1={kernelName:ClipByValue,backendName:"cpu",kernelFunc:clipByValue$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbs$1=o=>{const{x:e}=o.inputs,s=o.backend,i=new Float32Array(sizeFromShape(e.shape)),a=s.data.get(e.dataId),d=a.complexTensorInfos.real,h=a.complexTensorInfos.imag,b=s.data.get(d.dataId).values,_=s.data.get(h.dataId).values;for(let j=0;j<b.length;j++){const _e=b[j],g=_[j];i[j]=Math.hypot(_e,g)}return s.makeOutput(i,e.shape,"float32")},complexAbsConfig$1={kernelName:ComplexAbs,backendName:"cpu",kernelFunc:complexAbs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag$1(o){const{inputs:e,backend:s}=o,{input:i}=e,a=s.data.get(i.dataId).complexTensorInfos.imag,d=s.data.get(a.dataId).values;return s.makeTensorInfo(a.shape,a.dtype,d)}const imagConfig$1={kernelName:Imag,backendName:"cpu",kernelFunc:imag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat$1(o){const{inputs:e,backend:s,attrs:i}=o,{axis:a}=i,d=parseAxisParam(a,e[0].shape)[0],h=e.map(tt=>tt.shape);assertParamsConsistent(h,d);let b=computeOutShape$1(e.map(tt=>tt.shape),d);if(sizeFromShape(b)===0)return s.makeTensorInfo(b,e[0].dtype,[]);const _=e.filter(tt=>sizeFromShape(tt.shape)>0);if(_.length===1)return identity$1({inputs:{x:_[0]},backend:s});if(_[0].dtype==="complex64"){const tt=_.map(it=>real$1({inputs:{input:it},backend:s})),nt=_.map(it=>imag$1({inputs:{input:it},backend:s})),rt=concat$1({inputs:tt,backend:s,attrs:{axis:d}}),ot=concat$1({inputs:nt,backend:s,attrs:{axis:d}}),st=complex$1({inputs:{real:rt,imag:ot},backend:s});return tt.forEach(it=>s.disposeIntermediateTensorInfo(it)),nt.forEach(it=>s.disposeIntermediateTensorInfo(it)),s.disposeIntermediateTensorInfo(rt),s.disposeIntermediateTensorInfo(ot),st}const j=_.map(tt=>{const rt=[-1,sizeFromShape(tt.shape.slice(d))];return reshape$1({inputs:{x:tt},backend:s,attrs:{shape:rt}})}),_e=j.map(tt=>({vals:s.data.get(tt.dataId).values,shape:tt.shape}));b=computeOutShape$1(j.map(tt=>tt.shape),1);const g=j[0].shape[0]===1,c=concatImpl$1(_e,b,e[0].dtype,g),$=computeOutShape$1(_.map(tt=>tt.shape),d),et=s.makeTensorInfo($,e[0].dtype,c);return j.forEach(tt=>s.disposeIntermediateTensorInfo(tt)),et}const concatConfig$1={kernelName:Concat,backendName:"cpu",kernelFunc:concat$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dataFormat:_,dilations:j,dimRoundingMode:_e}=i;assertNotComplex$1([a,d],"conv2d");const g=convertConv2DDataFormat(_),c=computeConv2DInfo(a.shape,d.shape,h,j,b,_e,!1,g),$=c.filterHeight,et=c.filterWidth,tt=c.dilationHeight,nt=c.dilationWidth,rt=c.padInfo.left,ot=c.padInfo.top,st=c.dataFormat==="channelsLast",it=new TensorBuffer(c.outShape,a.dtype),at=computeStrides(a.shape),lt=computeStrides(d.shape),ut=at[0],ct=st?at[1]:at[2],pt=st?at[2]:1,ht=st?1:at[1],yt=it.strides[0],xt=st?it.strides[1]:it.strides[2],ft=st?it.strides[2]:1,wt=st?1:it.strides[1],dt=s.data.get(a.dataId).values,mt=s.data.get(d.dataId).values,bt=it.values;for(let vt=0;vt<c.batchSize;++vt){const Tt=vt*ut,Et=vt*yt;for(let Ct=0;Ct<c.outHeight;++Ct){const kt=Et+Ct*xt,Dt=Ct*c.strideHeight-ot;for(let Rt=0;Rt<$;++Rt){const Ot=Dt+Rt*tt;if(Ot<0||Ot>=c.inHeight)continue;const zt=Rt*lt[0],Bt=Tt+Ot*ct;for(let Gt=0;Gt<c.outWidth;++Gt){const jt=kt+Gt*ft,Kt=Gt*c.strideWidth-rt;for(let Wt=0;Wt<et;++Wt){const Jt=Kt+Wt*nt;if(Jt<0||Jt>=c.inWidth)continue;const Xt=zt+Wt*lt[1],tn=Bt+Jt*pt;let en=Xt;for(let Zt=0;Zt<c.inChannels;++Zt){const nn=dt[tn+Zt*ht];for(let rn=0;rn<c.outChannels;++rn)bt[jt+rn*wt]+=nn*mt[en+rn];en+=c.outChannels}}}}}}return s.makeTensorInfo(it.shape,it.dtype,bt)}const conv2DConfig$1={kernelName:Conv2D$1,backendName:"cpu",kernelFunc:conv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,pad:b,dataFormat:_,dimRoundingMode:j,filterShape:_e}=i;assertNotComplex$1([a,d],"conv2dBackpropFilter");const g=convertConv2DDataFormat(_),c=computeConv2DInfo(a.shape,_e,h,1,b,j,!1,g),{strideHeight:$,strideWidth:et,filterHeight:tt,filterWidth:nt}=c,rt=c.dataFormat==="channelsLast",ot=new TensorBuffer(c.filterShape,"float32"),st=c.padInfo.left,it=c.padInfo.top,at=s.data.get(a.dataId).values,lt=s.data.get(d.dataId).values,ut=new TensorBuffer(a.shape,a.dtype,at),ct=new TensorBuffer(d.shape,d.dtype,lt);for(let pt=0;pt<tt;++pt){const ht=Math.max(0,Math.ceil((it-pt)/$)),yt=Math.min(c.outHeight,(c.inHeight+it-pt)/$);for(let xt=0;xt<nt;++xt){const ft=Math.max(0,Math.ceil((st-xt)/et)),wt=Math.min(c.outWidth,(c.inWidth+st-xt)/et);for(let dt=0;dt<c.inChannels;++dt)for(let mt=0;mt<c.outChannels;++mt){let bt=0;for(let vt=0;vt<c.batchSize;++vt)for(let Tt=ht;Tt<yt;++Tt){const Et=pt+Tt*$-it;for(let Ct=ft;Ct<wt;++Ct){const kt=xt+Ct*et-st;rt?bt+=ut.get(vt,Et,kt,dt)*ct.get(vt,Tt,Ct,mt):bt+=ut.get(vt,dt,Et,kt)*ct.get(vt,mt,Tt,Ct)}}ot.set(bt,pt,xt,dt,mt)}}}return s.makeTensorInfo(ot.shape,ot.dtype,ot.values)}const conv2DBackpropFilterConfig$1={kernelName:Conv2DBackpropFilter,backendName:"cpu",kernelFunc:conv2DBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{inputShape:h,strides:b,pad:_,dataFormat:j,dimRoundingMode:_e}=i;assertNotComplex$1([a,d],"conv2dBackpropInput");const g=computeStrides(d.shape),c=computeStrides(a.shape);let $=convertConv2DDataFormat(j);const et=computeConv2DInfo(h,d.shape,b,1,_,_e,!1,$),tt=new TensorBuffer(et.inShape,"float32"),nt=tt.values,rt=s.data.get(a.dataId).values,ot=s.data.get(d.dataId).values,[st,it,at]=g,{batchSize:lt,filterHeight:ut,filterWidth:ct,inChannels:pt,inHeight:ht,inWidth:yt,outChannels:xt,outHeight:ft,outWidth:wt,strideHeight:dt,strideWidth:mt}=et;$=et.dataFormat;const bt=ut-1-et.padInfo.top,vt=ct-1-et.padInfo.left,Tt=$==="channelsLast",Et=tt.strides[0],Ct=Tt?tt.strides[1]:tt.strides[2],kt=Tt?tt.strides[2]:1,Dt=Tt?1:tt.strides[1],Rt=c[0],Ot=Tt?c[1]:c[2],zt=Tt?c[2]:1,Bt=Tt?1:c[1];for(let Gt=0;Gt<lt;++Gt)for(let jt=0;jt<pt;++jt)for(let Kt=0;Kt<ht;++Kt){const Wt=Kt-bt,Jt=Math.max(0,Math.ceil(Wt/dt)),Xt=Math.min(ft,(ut+Wt)/dt);for(let tn=0;tn<yt;++tn){const en=tn-vt,Zt=Math.max(0,Math.ceil(en/mt)),nn=Math.min(wt,(ct+en)/mt);let rn=0;for(let ln=Jt;ln<Xt;++ln){const mn=ln*dt-Wt;for(let an=Zt;an<nn;++an){const gn=an*mt-en,yn=Rt*Gt+Ot*ln+zt*an,Sn=st*(ut-1-mn)+it*(ct-1-gn)+at*jt;for(let wn=0;wn<xt;++wn){const $n=rt[yn+Bt*wn],In=ot[Sn+wn];rn+=$n*In}}}const un=Et*Gt+Ct*Kt+kt*tn+Dt*jt;nt[un]=rn}}return s.makeTensorInfo(tt.shape,tt.dtype,tt.values)}const conv2DBackpropInputConfig$1={kernelName:Conv2DBackpropInput,backendName:"cpu",kernelFunc:conv2DBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dilations:_}=i;assertNotComplex$1([a,d],"conv3d");const j=computeConv3DInfo(a.shape,d.shape,h,_,b),{filterDepth:_e,filterHeight:g,filterWidth:c,dilationDepth:$,dilationHeight:et,dilationWidth:tt,padInfo:nt}=j,rt=nt.front,ot=nt.left,st=nt.top,it=new TensorBuffer(j.outShape,a.dtype),at=s.data.get(a.dataId).values,lt=s.data.get(d.dataId).values,ut=it.values,ct=computeStrides(a.shape),pt=computeStrides(d.shape);for(let ht=0;ht<j.batchSize;++ht){const yt=ht*ct[0],xt=ht*it.strides[0];for(let ft=0;ft<j.outDepth;++ft){const wt=xt+ft*it.strides[1],dt=ft*j.strideDepth-rt;for(let mt=0;mt<_e;++mt){const bt=dt+mt*$;if(bt<0||bt>=j.inDepth)continue;const vt=mt*pt[0],Tt=yt+bt*ct[1];for(let Et=0;Et<j.outHeight;++Et){const Ct=wt+Et*it.strides[2],kt=Et*j.strideHeight-st;for(let Dt=0;Dt<g;++Dt){const Rt=kt+Dt*et;if(Rt<0||Rt>=j.inHeight)continue;const Ot=vt+Dt*pt[1],zt=Tt+Rt*ct[2];for(let Bt=0;Bt<j.outWidth;++Bt){const Gt=Ct+Bt*j.outChannels,jt=Bt*j.strideWidth-ot;for(let Kt=0;Kt<c;++Kt){const Wt=jt+Kt*tt;if(Wt<0||Wt>=j.inWidth)continue;const Jt=Ot+Kt*pt[2],Xt=zt+Wt*j.inChannels;let tn=Jt;for(let en=0;en<j.inChannels;++en){const Zt=at[Xt+en];for(let nn=0;nn<j.outChannels;++nn)ut[Gt+nn]+=Zt*lt[tn+nn];tn+=j.outChannels}}}}}}}}return s.makeTensorInfo(it.shape,it.dtype,it.values)}const conv3DConfig$1={kernelName:Conv3D$1,backendName:"cpu",kernelFunc:conv3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,pad:b,filterShape:_}=i;assertNotComplex$1([a,d],"conv3dBackpropFilterV2");const j=computeStrides(a.shape),_e=computeStrides(d.shape),g=computeConv3DInfo(a.shape,_,h,1,b),c=g.strideDepth,$=g.strideHeight,et=g.strideWidth,tt=g.filterDepth,nt=g.filterHeight,rt=g.filterWidth,ot=new TensorBuffer(g.filterShape,"float32"),st=ot.values,[it,at,lt,ut]=ot.strides,ct=s.data.get(d.dataId).values,[pt,ht,yt,xt]=_e,ft=s.data.get(a.dataId).values,[wt,dt,mt,bt]=j,vt=g.padInfo.front,Tt=g.padInfo.left,Et=g.padInfo.top;for(let Ct=0;Ct<tt;++Ct){const kt=Math.max(0,Math.ceil((vt-Ct)/c)),Dt=Math.min(g.outDepth,(g.inDepth+vt-Ct)/c),Rt=Ct*it;for(let Ot=0;Ot<nt;++Ot){const zt=Math.max(0,Math.ceil((Et-Ot)/$)),Bt=Math.min(g.outHeight,(g.inHeight+Et-Ot)/$),Gt=Ot*at+Rt;for(let jt=0;jt<rt;++jt){const Kt=Math.max(0,Math.ceil((Tt-jt)/et)),Wt=Math.min(g.outWidth,(g.inWidth+Tt-jt)/et),Jt=jt*lt+Gt;for(let Xt=0;Xt<g.inChannels;++Xt){const tn=Xt*ut+Jt;for(let en=0;en<g.outChannels;++en){let Zt=0;for(let nn=0;nn<g.batchSize;++nn){const rn=nn*wt,un=nn*pt;for(let ln=kt;ln<Dt;++ln){const an=(Ct+ln*c-vt)*dt+rn,gn=ln*ht+un;for(let yn=zt;yn<Bt;++yn){const wn=(Ot+yn*$-Et)*mt+an,$n=yn*yt+gn;for(let In=Kt;In<Wt;++In){const On=(jt+In*et-Tt)*bt+wn,Dn=In*xt+$n;Zt+=ft[On+Xt]*ct[Dn+en]}}}}st[tn+en]=Zt}}}}}return s.makeTensorInfo(ot.shape,ot.dtype,ot.values)}const conv3DBackpropFilterV2Config$1={kernelName:Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:conv3DBackpropFilterV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInputV2(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{pad:h,strides:b,inputShape:_}=i;assertNotComplex$1([a],"conv3dBackpropInputV2");const j=computeStrides(a.shape),_e=computeStrides(d.shape),g=computeConv3DInfo(_,d.shape,b,1,h),c=new TensorBuffer(g.inShape,"float32"),$=c.values,[et,tt,nt,rt]=c.strides,ot=s.data.get(a.dataId).values,[st,it,at,lt]=j,ut=s.data.get(d.dataId).values,[ct,pt,ht,yt]=_e,{batchSize:xt,filterDepth:ft,filterHeight:wt,filterWidth:dt,inChannels:mt,inDepth:bt,inHeight:vt,inWidth:Tt,outChannels:Et,outDepth:Ct,outHeight:kt,outWidth:Dt,strideDepth:Rt,strideHeight:Ot,strideWidth:zt}=g,Bt=ft-1-g.padInfo.front,Gt=wt-1-g.padInfo.top,jt=dt-1-g.padInfo.left;for(let Kt=0;Kt<xt;++Kt)for(let Wt=0;Wt<mt;++Wt)for(let Jt=0;Jt<bt;++Jt){const Xt=Jt-Bt,tn=Math.max(0,Math.ceil(Xt/Rt)),en=Math.min(Ct,(ft+Xt)/Rt);for(let Zt=0;Zt<vt;++Zt){const nn=Zt-Gt,rn=Math.max(0,Math.ceil(nn/Ot)),un=Math.min(kt,(wt+nn)/Ot);for(let ln=0;ln<Tt;++ln){const mn=ln-jt,an=Math.max(0,Math.ceil(mn/zt)),gn=Math.min(Dt,(dt+mn)/zt);let yn=0;for(let Sn=tn;Sn<en;++Sn){const wn=Sn*Rt-Xt;for(let $n=rn;$n<un;++$n){const In=$n*Ot-nn;for(let kn=an;kn<gn;++kn){const On=kn*zt-mn,Dn=st*Kt+it*Sn+at*$n+lt*kn,_n=ct*(ft-1-wn)+pt*(wt-1-In)+ht*(dt-1-On)+yt*Wt;for(let Nn=0;Nn<Et;++Nn){const Rn=ot[Dn+Nn],Yt=ut[_n+Nn];yn+=Rn*Yt}}}}$[et*Kt+tt*Jt+nt*Zt+rt*ln+Wt]=yn}}}return s.makeTensorInfo(c.shape,c.dtype,c.values)}const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:conv3DBackpropInputV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cos$1=unaryKernelFunc$1(Cos,o=>Math.cos(o)),cosConfig$1={kernelName:Cos,backendName:"cpu",kernelFunc:cos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosh$1=unaryKernelFunc$1(Cosh,o=>Math.cosh(o)),coshConfig$1={kernelName:Cosh,backendName:"cpu",kernelFunc:cosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize$1(o){const{inputs:e,backend:s,attrs:i}=o,{image:a,boxes:d,boxInd:h}=e,{cropSize:b,method:_,extrapolationValue:j}=i,[_e,g,c,$]=a.shape,et=d.shape[0],[tt,nt]=b,rt=buffer([et,tt,nt,$],"float32"),ot=s.data.get(d.dataId).values,st=s.data.get(h.dataId).values,it=s.data.get(a.dataId).values,at=computeStrides(a.shape),lt=computeStrides(rt.shape);for(let ut=0;ut<et;ut++){const ct=ut*4,pt=ot[ct],ht=ot[ct+1],yt=ot[ct+2],xt=ot[ct+3],ft=st[ut];if(ft>=_e)continue;const wt=tt>1?(yt-pt)*(g-1)/(tt-1):0,dt=nt>1?(xt-ht)*(c-1)/(nt-1):0;for(let mt=0;mt<tt;mt++){const bt=tt>1?pt*(g-1)+mt*wt:.5*(pt+yt)*(g-1);if(bt<0||bt>g-1){for(let vt=0;vt<nt;vt++)for(let Tt=0;Tt<$;Tt++){const Et=Tt+vt*lt[2]+mt*lt[1]+ut*lt[0];rt.values[Et]=j}continue}if(_==="bilinear"){const vt=Math.floor(bt),Tt=Math.ceil(bt),Et=bt-vt;for(let Ct=0;Ct<nt;Ct++){const kt=nt>1?ht*(c-1)+Ct*dt:.5*(ht+xt)*(c-1);if(kt<0||kt>c-1){for(let zt=0;zt<$;zt++){const Bt=zt+Ct*lt[2]+mt*lt[1]+ut*lt[0];rt.values[Bt]=j}continue}const Dt=Math.floor(kt),Rt=Math.ceil(kt),Ot=kt-Dt;for(let zt=0;zt<$;zt++){let Bt=zt+Dt*at[2]+vt*at[1]+ft*at[0];const Gt=it[Bt];Bt=zt+Rt*at[2]+vt*at[1]+ft*at[0];const jt=it[Bt];Bt=zt+Dt*at[2]+Tt*at[1]+ft*at[0];const Kt=it[Bt];Bt=zt+Rt*at[2]+Tt*at[1]+ft*at[0];const Wt=it[Bt],Jt=Gt+(jt-Gt)*Ot,Xt=Kt+(Wt-Kt)*Ot;Bt=zt+Ct*lt[2]+mt*lt[1]+ut*lt[0],rt.values[Bt]=Jt+(Xt-Jt)*Et}}}else for(let vt=0;vt<nt;++vt){const Tt=nt>1?ht*(c-1)+vt*dt:.5*(ht+xt)*(c-1);if(Tt<0||Tt>c-1){for(let kt=0;kt<$;kt++){const Dt=kt+vt*lt[2]+mt*lt[1]+ut*lt[0];rt.values[Dt]=j}continue}const Et=Math.round(Tt),Ct=Math.round(bt);for(let kt=0;kt<$;kt++){const Dt=kt+Et*at[2]+Ct*at[1]+ft*at[0],Rt=kt+vt*lt[2]+mt*lt[1]+ut*lt[0];rt.values[Rt]=it[Dt]}}}}return s.makeTensorInfo(rt.shape,rt.dtype,rt.values)}const cropAndResizeConfig$1={kernelName:CropAndResize,backendName:"cpu",kernelFunc:cropAndResize$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,exclusive:h,reverse:b}=i;assertNotComplex$1(a,"cumprod");const _=getAxesPermutation([d],a.shape.length);let j=a;_!=null&&(j=transpose$1({inputs:{x:a},backend:s,attrs:{perm:_}}));const _e=getInnerMostAxes(1,a.shape.length)[0];if(_e!==j.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${j.shape.length-1} but got axis=${_e}`);const g=upcastType(j.dtype,"int32"),c=makeOnesTypedArray(sizeFromShape(j.shape),g),$=s.data.get(j.dataId).values,et=j.shape[j.shape.length-1],tt=b?(rt,ot)=>rt+et-ot-1:(rt,ot)=>rt+ot;for(let rt=0;rt<$.length;rt+=et)for(let ot=0;ot<et;ot++){const st=tt(rt,ot);if(ot===0)c[st]=h?1:$[st];else{const it=tt(rt,ot-1);c[st]=h?$[it]*c[it]:$[st]*c[it]}}const nt=s.makeTensorInfo(j.shape,g,c);if(_!=null){const rt=getUndoAxesPermutation(_),ot=transpose$1({inputs:{x:nt},backend:s,attrs:{perm:rt}});return s.disposeIntermediateTensorInfo(nt),s.disposeIntermediateTensorInfo(j),ot}return nt}const cumprodConfig$1={kernelName:Cumprod,backendName:"cpu",kernelFunc:cumprod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,exclusive:h,reverse:b}=i;assertNotComplex$1(a,"cumsum");const _=getAxesPermutation([d],a.shape.length);let j=a;_!=null&&(j=transpose$1({inputs:{x:a},backend:s,attrs:{perm:_}}));const _e=getInnerMostAxes(1,a.shape.length)[0];if(_e!==j.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${j.shape.length-1} but got axis=${_e}`);const g=upcastType(j.dtype,"int32"),c=makeZerosTypedArray(sizeFromShape(j.shape),g),$=s.data.get(j.dataId).values,et=j.shape[j.shape.length-1],tt=b?(rt,ot)=>rt+et-ot-1:(rt,ot)=>rt+ot;for(let rt=0;rt<$.length;rt+=et)for(let ot=0;ot<et;ot++){const st=tt(rt,ot);if(ot===0)c[st]=h?0:$[st];else{const it=tt(rt,ot-1);c[st]=h?$[it]+c[it]:$[st]+c[it]}}const nt=s.makeTensorInfo(j.shape,g,c);if(_!=null){const rt=getUndoAxesPermutation(_),ot=transpose$1({inputs:{x:nt},backend:s,attrs:{perm:rt}});return s.disposeIntermediateTensorInfo(nt),s.disposeIntermediateTensorInfo(j),ot}return nt}const cumsumConfig$1={kernelName:Cumsum,backendName:"cpu",kernelFunc:cumsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,weights:d}=e,{size:h,binaryOutput:b}=i;if(a.shape.length===1){const _=s.data.get(a.dataId).values,j=s.data.get(d.dataId).values,_e=bincountImpl(_,j,d.dtype,d.shape,h);return s.makeTensorInfo([h],d.dtype,_e)}else if(a.shape.length===2){const _=s.bufferSync(a),j=s.bufferSync(d),_e=bincountReduceImpl(_,j,h,b);return s.makeTensorInfo(_e.shape,d.dtype,_e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const denseBincountConfig$1={kernelName:DenseBincount,backendName:"cpu",kernelFunc:denseBincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockSize:d,dataFormat:h}=i;assert$1(h==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${h}`);const b=a.shape[0],_=a.shape[1],j=a.shape[2],_e=a.shape[3],g=_*d,c=j*d,$=_e/(d*d),et=s.data.get(a.dataId).values,tt=new Float32Array(b*g*c*$);let nt=0;for(let rt=0;rt<b;++rt)for(let ot=0;ot<g;++ot){const st=Math.floor(ot/d),it=ot%d;for(let at=0;at<c;++at){const lt=Math.floor(at/d),ut=at%d,ct=(it*d+ut)*$;for(let pt=0;pt<$;++pt){const yt=pt+ct+_e*(lt+j*(st+_*rt));tt[nt++]=et[yt]}}}return s.makeTensorInfo([b,g,c,$],a.dtype,tt)}const depthToSpaceConfig$1={kernelName:DepthToSpace,backendName:"cpu",kernelFunc:depthToSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dilations:_,dimRoundingMode:j}=i;assertNotComplex$1([a,d],"depthwiseConv2DNative");const _e=computeStrides(a.shape),g=computeStrides(d.shape);let c=_;c==null&&(c=[1,1]),assert$1(eitherStridesOrDilationsAreOne(h,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${h} and dilations '${c}'`);const $=computeConv2DInfo(a.shape,d.shape,h,c,b,j,!0),{filterHeight:et,filterWidth:tt,dilationHeight:nt,dilationWidth:rt,padInfo:ot}=$,st=ot.left,it=ot.top,at=$.outChannels/$.inChannels,lt=new TensorBuffer($.outShape,a.dtype),ut=s.data.get(a.dataId).values,ct=s.data.get(d.dataId).values,pt=lt.values;for(let ht=0;ht<$.batchSize;++ht){const yt=ht*_e[0],xt=ht*lt.strides[0];for(let ft=0;ft<$.outHeight;++ft){const wt=xt+ft*lt.strides[1],dt=ft*$.strideHeight-it;for(let mt=0;mt<et;++mt){const bt=dt+mt*nt;if(bt<0||bt>=$.inHeight)continue;const vt=mt*g[0],Tt=yt+bt*_e[1];for(let Et=0;Et<$.outWidth;++Et){const Ct=wt+Et*lt.strides[2],kt=Et*$.strideWidth-st;for(let Dt=0;Dt<tt;++Dt){const Rt=kt+Dt*rt;if(Rt<0||Rt>=$.inWidth)continue;const Ot=vt+Dt*g[1],zt=Tt+Rt*$.inChannels;let Bt=Ct,Gt=Ot;for(let jt=0;jt<$.inChannels;++jt){const Kt=ut[zt+jt];for(let Wt=0;Wt<at;++Wt)pt[Bt+Wt]+=Kt*ct[Gt+Wt];Bt+=at,Gt+=at}}}}}}return s.makeTensorInfo(lt.shape,lt.dtype,lt.values)}const depthwiseConv2dNativeConfig$1={kernelName:DepthwiseConv2dNative,backendName:"cpu",kernelFunc:depthwiseConv2dNative$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,dilations:b,pad:_,dimRoundingMode:j,filterShape:_e}=i;assertNotComplex$1([a,d],"depthwiseConv2dNativeBackpropFilter");const g=computeConv2DInfo(a.shape,_e,h,b,_,j,!0),{strideHeight:c,strideWidth:$,filterHeight:et,filterWidth:tt}=g,nt=new TensorBuffer(g.filterShape,"float32"),rt=g.padInfo.left,ot=g.padInfo.top,st=g.outChannels/g.inChannels,it=s.data.get(a.dataId).values,at=new TensorBuffer(a.shape,a.dtype,it),lt=s.data.get(d.dataId).values,ut=new TensorBuffer(d.shape,d.dtype,lt);for(let ct=0;ct<et;++ct){const pt=Math.max(0,Math.ceil((ot-ct)/c)),ht=Math.min(g.outHeight,(g.inHeight+ot-ct)/c);for(let yt=0;yt<tt;++yt){const xt=Math.max(0,Math.ceil((rt-yt)/$)),ft=Math.min(g.outWidth,(g.inWidth+rt-yt)/$);for(let wt=0;wt<g.outChannels;++wt){const dt=Math.trunc(wt/st),mt=wt%st;let bt=0;for(let vt=0;vt<g.batchSize;++vt)for(let Tt=pt;Tt<ht;++Tt){const Et=ct+Tt*c-ot;for(let Ct=xt;Ct<ft;++Ct){const kt=yt+Ct*$-rt;bt+=at.get(vt,Et,kt,dt)*ut.get(vt,Tt,Ct,wt)}}nt.set(bt,ct,yt,dt,mt)}}}return s.makeTensorInfo(nt.shape,nt.dtype,nt.values)}const depthwiseConv2dNativeBackpropFilterConfig$1={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{strides:h,dilations:b,pad:_,dimRoundingMode:j,inputShape:_e}=i;assertNotComplex$1([a,d],"depthwiseConv2DNativeBackpropInput");const g=computeStrides(a.shape),c=computeStrides(d.shape),$=computeConv2DInfo(_e,d.shape,h,b,_,j,!0),et=new TensorBuffer($.inShape,"float32"),tt=et.values,[nt,rt,ot]=et.strides,st=s.data.get(a.dataId).values,[it,at,lt]=g,ut=s.data.get(d.dataId).values,[ct,pt,ht]=c,{batchSize:yt,filterHeight:xt,filterWidth:ft,inChannels:wt,inHeight:dt,inWidth:mt,outChannels:bt,outHeight:vt,outWidth:Tt,strideHeight:Et,strideWidth:Ct}=$,kt=xt-1-$.padInfo.top,Dt=ft-1-$.padInfo.left,Rt=bt/wt;for(let Ot=0;Ot<yt;++Ot)for(let zt=0;zt<wt;++zt)for(let Bt=0;Bt<dt;++Bt){const Gt=Bt-kt,jt=Math.max(0,Math.ceil(Gt/Et)),Kt=Math.min(vt,(xt+Gt)/Et);for(let Wt=0;Wt<mt;++Wt){const Jt=Wt-Dt,Xt=Math.max(0,Math.ceil(Jt/Ct)),tn=Math.min(Tt,(ft+Jt)/Ct);let en=0;for(let Zt=jt;Zt<Kt;++Zt){const nn=Zt*Et-Gt;for(let rn=Xt;rn<tn;++rn){const un=rn*Ct-Jt,ln=it*Ot+at*Zt+lt*rn,mn=ct*(xt-1-nn)+pt*(ft-1-un)+ht*zt;for(let an=0;an<Rt;++an){const gn=zt*Rt+an,yn=st[ln+gn],Sn=ut[mn+an];en+=yn*Sn}}}tt[nt*Ot+rt*Bt+ot*Wt+zt]=en}}return s.makeTensorInfo(et.shape,et.dtype,et.values)}const depthwiseConv2dNativeBackpropInputConfig$1={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag$1(o){const{inputs:e,backend:s}=o,{x:i}=e,a=sizeFromShape(i.shape),d=s.data.get(i.dataId).values,h=buffer([a,a],i.dtype),b=h.values;for(let j=0;j<d.length;j++)b[j*a+j]=d[j];const _=[...i.shape,...i.shape];return s.makeTensorInfo(_,h.dtype,h.values)}const diagConfig$1={kernelName:Diag,backendName:"cpu",kernelFunc:diag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DConfig$1={kernelName:Dilation2D,backendName:"cpu",kernelFunc:({inputs:o,backend:e,attrs:s})=>{const{x:i,filter:a}=o,{strides:d,pad:h,dilations:b}=s,_=e,j=_.data.get(i.dataId).values,_e=i.shape.length,g=_.data.get(a.dataId).values,c=a.shape.length,{batchSize:$,inHeight:et,inWidth:tt,inChannels:nt,outHeight:rt,outWidth:ot,padInfo:st,strideHeight:it,strideWidth:at,filterHeight:lt,filterWidth:ut,dilationHeight:ct,dilationWidth:pt,outShape:ht}=computeDilation2DInfo(i.shape,a.shape,d,h,"NHWC",b),yt=sizeFromShape(ht),xt=ht.length,ft=getArrayFromDType(i.dtype,yt);for(let dt=0;dt<$;++dt)for(let mt=0;mt<rt;++mt){const bt=mt*it-st.top;for(let vt=0;vt<ot;++vt){const Tt=vt*at-st.left;for(let Et=0;Et<nt;++Et){let Ct=Number.MIN_SAFE_INTEGER;for(let Dt=0;Dt<lt;++Dt){const Rt=bt+Dt*ct;if(Rt>=0&&Rt<et)for(let Ot=0;Ot<ut;++Ot){const zt=Tt+Ot*pt;if(zt>=0&&zt<tt){const Bt=locToIndex([dt,Rt,zt,Et],_e,computeStrides(i.shape)),Gt=locToIndex([Dt,Ot,Et],c,computeStrides(a.shape)),jt=j[Bt]+g[Gt];jt>Ct&&(Ct=jt)}}}const kt=locToIndex([dt,mt,vt,Et],xt,computeStrides(ht));ft[kt]=Ct}}}return{dataId:_.write(toTypedArray(ft,i.dtype),ht,i.dtype),shape:ht,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DBackpropFilterConfig={kernelName:Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:o,backend:e,attrs:s})=>{const{x:i,filter:a,dy:d}=o,{strides:h,pad:b,dilations:_}=s,j=e,_e=toNestedArray(i.shape,j.data.get(i.dataId).values),g=toNestedArray(a.shape,j.data.get(a.dataId).values),{batchSize:c,inHeight:$,inWidth:et,inChannels:tt,outHeight:nt,outWidth:rt,padInfo:ot,strideHeight:st,strideWidth:it,filterHeight:at,filterWidth:lt,dilationHeight:ut,dilationWidth:ct,outShape:pt}=computeDilation2DInfo(i.shape,a.shape,h,b,"NHWC",_);assert$1(d.rank===pt.length,()=>`Error in ${Dilation2DBackpropFilter}, dy must have the same rank as output ${pt.length}, but got ${d.rank}`);const ht=toNestedArray(pt,j.data.get(d.dataId).values),yt=makeZerosNestedTypedArray(a.shape,a.dtype);for(let ft=0;ft<c;++ft)for(let wt=0;wt<nt;++wt){const dt=wt*st-ot.top;for(let mt=0;mt<rt;++mt){const bt=mt*it-ot.left;for(let vt=0;vt<tt;++vt){let Tt=Number.MIN_SAFE_INTEGER,Et=0,Ct=0;for(let kt=0;kt<at;++kt){const Dt=dt+kt*ut;if(Dt>=0&&Dt<$)for(let Rt=0;Rt<lt;++Rt){const Ot=bt+Rt*ct;if(Ot>=0&&Ot<et){const zt=_e[ft][Dt][Ot][vt]+g[kt][Rt][vt];zt>Tt&&(Tt=zt,Et=kt,Ct=Rt)}}}yt[Et][Ct][vt]+=ht[ft][wt][mt][vt]}}}return{dataId:j.write(toTypedArray(yt,i.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DBackpropInputConfig={kernelName:Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:o,backend:e,attrs:s})=>{const{x:i,filter:a,dy:d}=o,{strides:h,pad:b,dilations:_}=s,j=e,_e=toNestedArray(i.shape,j.data.get(i.dataId).values),g=toNestedArray(a.shape,j.data.get(a.dataId).values),{batchSize:c,inHeight:$,inWidth:et,inChannels:tt,outHeight:nt,outWidth:rt,padInfo:ot,strideHeight:st,strideWidth:it,filterHeight:at,filterWidth:lt,dilationHeight:ut,dilationWidth:ct,outShape:pt}=computeDilation2DInfo(i.shape,a.shape,h,b,"NHWC",_);assert$1(d.rank===pt.length,()=>`Error in ${Dilation2DBackpropInput}, dy must have the same rank as output ${pt.length}, but got ${d.rank}`);const ht=toNestedArray(pt,j.data.get(d.dataId).values),yt=makeZerosNestedTypedArray(i.shape,i.dtype);for(let ft=0;ft<c;++ft)for(let wt=0;wt<nt;++wt){const dt=wt*st-ot.top;for(let mt=0;mt<rt;++mt){const bt=mt*it-ot.left;for(let vt=0;vt<tt;++vt){let Tt=Number.MIN_SAFE_INTEGER,Et=dt<0?0:dt,Ct=bt<0?0:bt;for(let kt=0;kt<at;++kt){const Dt=dt+kt*ut;if(Dt>=0&&Dt<$)for(let Rt=0;Rt<lt;++Rt){const Ot=bt+Rt*ct;if(Ot>=0&&Ot<et){const zt=_e[ft][Dt][Ot][vt]+g[kt][Rt][vt];zt>Tt&&(Tt=zt,Et=Dt,Ct=Ot)}}}yt[ft][Et][Ct][vt]+=ht[ft][wt][mt][vt]}}}return{dataId:j.write(toTypedArray(yt,i.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function draw(o){const{inputs:e,backend:s,attrs:i}=o,{image:a}=e,{canvas:d,options:h}=i,{contextOptions:b,imageOptions:_}=h||{},j=(_==null?void 0:_.alpha)||1,_e=(b==null?void 0:b.contextType)||"2d";if(_e!=="2d")throw new Error(`Context type ${b.contextType} is not supported by the CPU backend.`);const g=d.getContext(_e,(b==null?void 0:b.contextAttributes)||{});if(g==null)throw new Error(`Could not get the context with ${_e} type.`);const[c,$]=a.shape.slice(0,2),et=a.shape.length===2?1:a.shape[2],tt=s.data.get(a.dataId).values,nt=a.dtype==="float32"?255:1,rt=new Uint8ClampedArray($*c*4);for(let st=0;st<c*$;++st){const it=[0,0,0,255*j];for(let lt=0;lt<et;lt++){const ut=tt[st*et+lt];if(a.dtype==="float32"){if(ut<0||ut>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${ut}.`)}else if(a.dtype==="int32"&&(ut<0||ut>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${ut}.`);et===1?(it[0]=ut*nt,it[1]=ut*nt,it[2]=ut*nt):it[lt]=ut*nt}const at=st*4;rt[at+0]=Math.round(it[0]),rt[at+1]=Math.round(it[1]),rt[at+2]=Math.round(it[2]),rt[at+3]=Math.round(it[3])}d.width=$,d.height=c;const ot=new ImageData(rt,$,c);return g.putImageData(ot,0,0),a}const drawConfig={kernelName:Draw,backendName:"cpu",kernelFunc:draw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;assertNotComplex$1(a,"sum");let b;a.dtype==="bool"?b=cast$1({inputs:{x:a},backend:s,attrs:{dtype:"int32"}}):b=identity$1({inputs:{x:a},backend:s});const _=b.shape.length,j=parseAxisParam(d,b.shape),_e=getAxesPermutation(j,_);let g=j,c=b;_e!=null&&(c=transpose$1({inputs:{x:b},backend:s,attrs:{perm:_e}}),g=getInnerMostAxes(g.length,_)),assertAxesAreInnerMostDims("sum",g,c.shape.length);const[$,et]=computeOutAndReduceShapes(c.shape,g),tt=upcastType(c.dtype,"int32");let nt=zeros(s,$,tt);const rt=sizeFromShape(et),ot=s.data.get(nt.dataId).values,st=s.data.get(c.dataId).values;for(let it=0;it<ot.length;++it){const at=it*rt;let lt=0;for(let ut=0;ut<rt;++ut)lt+=st[at+ut];ot[it]=lt}if(h){const it=expandShapeToKeepDim(nt.shape,j),at=nt;nt=reshape$1({inputs:{x:nt},backend:s,attrs:{shape:it}}),s.disposeIntermediateTensorInfo(at)}return s.disposeIntermediateTensorInfo(b),_e!=null&&s.disposeIntermediateTensorInfo(c),nt}const sumConfig$1={kernelName:Sum,backendName:"cpu",kernelFunc:sum$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum$1(o){const{inputs:e,backend:s,attrs:i}=o,{equation:a}=i,d=e,{allDims:h,summedDims:b,idDims:_}=decodeEinsumEquation(a,d.length);checkEinsumDimSizes(h.length,_,d);const{path:j,steps:_e}=getEinsumComputePath(b,_),g=_e.length;let c=null,$=h.length;const et=[];for(let tt=0;tt<g;++tt){for(const nt of _e[tt]){const{permutationIndices:rt,expandDims:ot}=getEinsumPermutation($,_[nt]);let st;isIdentityPermutation(rt)?st=d[nt]:(st=transpose$1({inputs:{x:d[nt]},backend:s,attrs:{perm:rt}}),et.push(st));const it=st.shape.slice();for(let at=0;at<ot.length;++at)it.splice(ot[at],0,1);arraysEqual(st.shape,it)||(st=reshape$1({inputs:{x:st},backend:s,attrs:{shape:it}}),et.push(st)),c===null?c=st:(c=multiply$1({inputs:{a:st,b:c},backend:s}),et.push(c))}tt<g-1&&(j[tt]>=0&&(c=sum$1({inputs:{x:c},backend:s,attrs:{axis:j[tt]-(h.length-$),keepDims:!1}}),et.push(c)),$--)}for(const tt of et)tt!==c&&s.disposeIntermediateTensorInfo(tt);return c}const einsumConfig$1={kernelName:Einsum,backendName:"cpu",kernelFunc:einsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eluGrad$1(o){const{inputs:e,backend:s}=o,{dy:i,y:a}=e;assertNotComplex$1([i,a],"eluGrad");const d=new Float32Array(sizeFromShape(a.shape)),h=s.data.get(a.dataId).values,b=s.data.get(i.dataId).values;for(let _=0;_<h.length;++_){const j=h[_];j>=0?d[_]=b[_]:d[_]=b[_]*(j+1)}return s.makeTensorInfo(a.shape,"float32",d)}const eluGradConfig$1={kernelName:EluGrad,backendName:"cpu",kernelFunc:eluGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=ERF_P,a1=ERF_A1,a2=ERF_A2,a3=ERF_A3,a4=ERF_A4,a5=ERF_A5,erf$1=unaryKernelFunc$1(Erf,o=>{const e=Math.sign(o),s=Math.abs(o),i=1/(1+p*s);return e*(1-((((a5*i+a4)*i+a3)*i+a2)*i+a1)*i*Math.exp(-s*s))}),erfConfig$1={kernelName:Erf,backendName:"cpu",kernelFunc:erf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims$1(o){const{inputs:e,backend:s,attrs:i}=o,{input:a}=e,{dim:d}=i,h=a.shape.length,b=a.shape.slice();let _=d;return d<0&&(assert$1(-(h+1)<=d,()=>`Axis must be in the interval [${-(h+1)}, ${h}]`),_=h+d+1),b.splice(_,0,1),reshape$1({inputs:{x:a},backend:s,attrs:{shape:b}})}const expandDimsConfig$1={kernelName:ExpandDims,backendName:"cpu",kernelFunc:expandDims$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const realDivImpl=createSimpleBinaryKernelImpl((o,e)=>o/e),div=binaryKernelFunc$1(RealDiv,realDivImpl),realDivConfig$1={kernelName:RealDiv,backendName:"cpu",kernelFunc:div};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftBatch(o,e,s){const i=o.shape,a=i[0],d=i[1],h=s.data.get(o.dataId),b=h.complexTensorInfos.real,_=h.complexTensorInfos.imag,j=[a,d],_e=sizeFromShape(j),g=getTypedArrayFromDType("float32",_e),c=getTypedArrayFromDType("float32",_e);for(let nt=0;nt<a;nt++){const rt=slice$1({inputs:{x:b},backend:s,attrs:{begin:[nt,0],size:[1,d]}}),ot=slice$1({inputs:{x:_},backend:s,attrs:{begin:[nt,0],size:[1,d]}}),st=complex$1({inputs:{real:rt,imag:ot},backend:s}),{real:it,imag:at}=fftImpl$1(st,e,s),lt=mergeRealAndImagArrays(it,at);for(let ut=0;ut<d;ut++){const ct=getComplexWithIndex(lt,ut);g[nt*d+ut]=ct.real,c[nt*d+ut]=ct.imag}s.disposeIntermediateTensorInfo(rt),s.disposeIntermediateTensorInfo(ot),s.disposeIntermediateTensorInfo(st)}const $=s.makeTensorInfo(j,"float32",g),et=s.makeTensorInfo(j,"float32",c),tt=complex$1({inputs:{real:$,imag:et},backend:s});return s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),tt}function fftImpl$1(o,e,s){const i=sizeFromShape(o.shape),a=s.data.get(o.dataId),d=s.data.get(a.complexTensorInfos.real.dataId).values,h=s.data.get(a.complexTensorInfos.imag.dataId).values;if(isExponentOf2(i)){const b=fftRadix2(d,h,i,e,s),_=[o.shape[0],o.shape[1]];if(e){const j=s.makeTensorInfo(_,"float32",b.real),_e=s.makeTensorInfo(_,"float32",b.imag),g=s.makeTensorInfo([],"float32",createScalarValue(i,"float32")),c=identity$1({inputs:{x:g},backend:s}),$=realDivConfig$1.kernelFunc({inputs:{a:j,b:g},backend:s}),et=realDivConfig$1.kernelFunc({inputs:{a:_e,b:c},backend:s}),tt=s.data.get($.dataId).values,nt=s.data.get(et.dataId).values;return s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(_e),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),{real:tt,imag:nt}}return b}else{const b=mergeRealAndImagArrays(d,h),_=fourierTransformByMatmul(b,i,e);return splitRealAndImagArrays(_)}}function isExponentOf2(o){return(o&o-1)===0}function fftRadix2(o,e,s,i,a){if(s===1)return{real:o,imag:e};const d=mergeRealAndImagArrays(o,e),h=s/2,b=complexWithEvenIndex(d),_=b.real,j=b.imag,_e=[_.length],g=a.makeTensorInfo(_e,"float32",_),c=a.makeTensorInfo(_e,"float32",j),$=complex$1({inputs:{real:g,imag:c},backend:a}),et=complexWithOddIndex(d),tt=et.real,nt=et.imag,rt=[tt.length],ot=a.makeTensorInfo(rt,"float32",tt),st=a.makeTensorInfo(rt,"float32",nt),it=complex$1({inputs:{real:ot,imag:st},backend:a}),at=fftRadix2(_,j,h,i,a),lt=at.real,ut=at.imag,ct=[lt.length],pt=a.makeTensorInfo(ct,"float32",lt),ht=a.makeTensorInfo(ct,"float32",ut),yt=complex$1({inputs:{real:pt,imag:ht},backend:a}),xt=fftRadix2(tt,nt,h,i,a),ft=xt.real,wt=xt.imag,dt=[ft.length],mt=a.makeTensorInfo(dt,"float32",ft),bt=a.makeTensorInfo(dt,"float32",wt),vt=complex$1({inputs:{real:mt,imag:bt},backend:a}),Tt=exponents(s,i),Et=[Tt.real.length],Ct=a.makeTensorInfo(Et,"float32",Tt.real),kt=a.makeTensorInfo(Et,"float32",Tt.imag),Dt=complex$1({inputs:{real:Ct,imag:kt},backend:a}),Rt=multiply$1({inputs:{a:Dt,b:vt},backend:a}),Ot=add({inputs:{a:yt,b:Rt},backend:a}),zt=sub$1({inputs:{a:yt,b:Rt},backend:a}),Bt=real$1({inputs:{input:Ot},backend:a}),Gt=real$1({inputs:{input:zt},backend:a}),jt=imag$1({inputs:{input:Ot},backend:a}),Kt=imag$1({inputs:{input:zt},backend:a}),Wt=concat$1({inputs:[Bt,Gt],backend:a,attrs:{axis:0}}),Jt=concat$1({inputs:[jt,Kt],backend:a,attrs:{axis:0}}),Xt=a.data.get(Wt.dataId).values,tn=a.data.get(Jt.dataId).values;return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(st),a.disposeIntermediateTensorInfo(it),a.disposeIntermediateTensorInfo(pt),a.disposeIntermediateTensorInfo(ht),a.disposeIntermediateTensorInfo(yt),a.disposeIntermediateTensorInfo(mt),a.disposeIntermediateTensorInfo(bt),a.disposeIntermediateTensorInfo(vt),a.disposeIntermediateTensorInfo(Ct),a.disposeIntermediateTensorInfo(kt),a.disposeIntermediateTensorInfo(Dt),a.disposeIntermediateTensorInfo(Rt),a.disposeIntermediateTensorInfo(Ot),a.disposeIntermediateTensorInfo(zt),a.disposeIntermediateTensorInfo(Bt),a.disposeIntermediateTensorInfo(jt),a.disposeIntermediateTensorInfo(Gt),a.disposeIntermediateTensorInfo(Kt),a.disposeIntermediateTensorInfo(Wt),a.disposeIntermediateTensorInfo(Jt),{real:Xt,imag:tn}}function fourierTransformByMatmul(o,e,s){const i=new Float32Array(e*2);for(let a=0;a<e;a++){let d=0,h=0;for(let b=0;b<e;b++){const _=exponent(a*b,e,s),j=getComplexWithIndex(o,b);d+=j.real*_.real-j.imag*_.imag,h+=j.real*_.imag+j.imag*_.real}s&&(d/=e,h/=e),assignToTypedArray(i,d,h,a)}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$1(o){const{inputs:e,backend:s}=o,{input:i}=e,a=sizeFromShape(i.shape),d=i.shape[i.shape.length-1],h=a/d,b=reshape$1({inputs:{x:i},backend:s,attrs:{shape:[h,d]}}),_=fftBatch(b,!1,s),j=reshape$1({inputs:{x:_},backend:s,attrs:{shape:i.shape}});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(_),j}const fftConfig$1={kernelName:FFT,backendName:"cpu",kernelFunc:fft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$1(o){const{backend:e,attrs:s}=o,{shape:i,value:a,dtype:d}=s,h=d||inferDtype(a),b=getArrayFromDType(h,sizeFromShape(i));return fillValues(b,a,h),e.makeTensorInfo(i,h,b)}const fillConfig$1={kernelName:Fill,backendName:"cpu",kernelFunc:fill$1};function fillValues(o,e,s){o.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig$1={kernelName:FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{image:i}=o,a=s,d=getTypedArrayFromDType(i.dtype,sizeFromShape(i.shape)),[h,b,_,j]=i.shape,_e=a.data.get(i.dataId).values;for(let c=0;c<h;c++){const $=c*_*b*j;for(let et=0;et<b;et++){const tt=et*(_*j);for(let nt=0;nt<_;nt++){const rt=nt*j;for(let ot=0;ot<j;ot++){const st=Math.round(_-nt-1),it=$+tt+rt+ot;let at=_e[it];if(st>=0&&st<_){const lt=st*j,ut=$+tt+lt+ot;at=_e[ut]}d[it]=at}}}}return{dataId:a.write(d,i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d,bias:h,preluActivationWeights:b}=e,{strides:_,pad:j,dataFormat:_e,dilations:g,dimRoundingMode:c,activation:$,leakyreluAlpha:et}=i;let tt=conv2D({inputs:{x:a,filter:d},backend:s,attrs:{strides:_,pad:j,dataFormat:_e,dilations:g,dimRoundingMode:c}});if(h){const nt=tt;if(_e==="NCHW"&&h.shape.length===1&&h.shape[0]!==1){const rt=reshape$1({inputs:{x:h},backend:s,attrs:{shape:[h.shape[0],1,1]}});tt=add({inputs:{a:tt,b:rt},backend:s}),s.disposeIntermediateTensorInfo(rt)}else tt=add({inputs:{a:tt,b:h},backend:s});s.disposeIntermediateTensorInfo(nt)}if($){const nt=tt;if(_e==="NCHW"&&$==="prelu"&&b.shape.length===1&&b.shape[0]!==1){const rt=reshape$1({inputs:{x:b},backend:s,attrs:{shape:[b.shape[0],1,1]}});tt=applyActivation(s,tt,$,rt,et),s.disposeIntermediateTensorInfo(rt)}else tt=applyActivation(s,tt,$,b,et);s.disposeIntermediateTensorInfo(nt)}return tt}const fusedConv2DConfig$1={kernelName:FusedConv2D,backendName:"cpu",kernelFunc:fusedConv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d,bias:h,preluActivationWeights:b}=e,{strides:_,pad:j,dataFormat:_e,dilations:g,dimRoundingMode:c,activation:$,leakyreluAlpha:et}=i;let tt=depthwiseConv2dNative$1({inputs:{x:a,filter:d},backend:s,attrs:{strides:_,pad:j,dataFormat:_e,dilations:g,dimRoundingMode:c}});if(h){const nt=tt;tt=add({inputs:{a:tt,b:h},backend:s}),s.disposeIntermediateTensorInfo(nt)}if($){const nt=tt;tt=applyActivation(s,tt,$,b,et),s.disposeIntermediateTensorInfo(nt)}return tt}const fusedDepthwiseConv2DConfig$1={kernelName:FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:fusedDepthwiseConv2D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd$1(o){const{inputs:e,backend:s}=o,{params:i,indices:a}=e,d=sizeFromShape(i.shape),h=a.shape,b=h[h.length-1],[_,j,_e,g]=prepareAndValidate(i,a);if(j===0)return s.makeTensorInfo(_,i.dtype,[]);const c=s.data.get(a.dataId).values,$=s.bufferSync(i),et=gatherNdImpl(c,$,i.dtype,j,b,_e,g,i.shape,d);return s.makeTensorInfo(_,i.dtype,et.values)}const gatherNdConfig$1={kernelName:GatherNd,backendName:"cpu",kernelFunc:gatherNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,indices:d}=e,{axis:h,batchDims:b}=i;assertNotComplex$1([a,d],"gatherV2");const _=parseAxisParam(h,a.shape)[0],j=s.data.get(d.dataId).values,_e=a.shape[_];for(let it=0;it<j.length;++it){const at=j[it];assert$1(at<=_e-1&&at>=0,()=>`GatherV2: the index value ${at} is not in [0, ${_e-1}]`)}let g=b;b==null&&(g=0);const c=sizeFromShape(d.shape),$=collectGatherOpShapeInfo(a,d,_,g),et=reshape$1({inputs:{x:a},backend:s,attrs:{shape:[$.batchSize,$.outerSize,$.dimSize,$.sliceSize]}}),tt=reshape$1({inputs:{x:d},backend:s,attrs:{shape:[$.batchSize,c/$.batchSize]}}),nt=[$.batchSize,$.outerSize,c/$.batchSize,$.sliceSize],rt=s.bufferSync(tt),ot=s.bufferSync(et),st=gatherV2Impl(ot,rt,nt);return s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(tt),s.makeTensorInfo($.outputShape,st.dtype,st.values)}const gatherV2Config$1={kernelName:GatherV2,backendName:"cpu",kernelFunc:gatherV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft$1(o){const{inputs:e,backend:s}=o,{input:i}=e,a=sizeFromShape(i.shape),d=i.shape[i.shape.length-1],h=a/d,b=reshape$1({inputs:{x:i},backend:s,attrs:{shape:[h,d]}}),_=fftBatch(b,!0,s),j=reshape$1({inputs:{x:_},backend:s,attrs:{shape:i.shape}});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(_),j}const ifftConfig$1={kernelName:IFFT,backendName:"cpu",kernelFunc:ifft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFinite$2=unaryKernelFunc$1(IsFinite,o=>Number.isFinite(o)?1:0,"bool"),isFiniteConfig$1={kernelName:IsFinite,backendName:"cpu",kernelFunc:isFinite$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInf$1=unaryKernelFunc$1(IsInf,o=>Math.abs(o)===1/0?1:0,"bool"),isInfConfig$1={kernelName:IsInf,backendName:"cpu",kernelFunc:isInf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNaN$2=unaryKernelFunc$1(IsNan,o=>Number.isNaN(o)?1:0,"bool"),isNaNConfig$1={kernelName:IsNan,backendName:"cpu",kernelFunc:isNaN$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace$1(o){const{backend:e,attrs:s}=o,{start:i,stop:a,num:d}=s,h=linSpaceImpl(i,a,d);return e.makeTensorInfo([h.length],"float32",h)}const linSpaceConfig$1={kernelName:LinSpace,backendName:"cpu",kernelFunc:linSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1p$1=unaryKernelFunc$1(Log1p,o=>Math.log1p(o)),log1pConfig$1={kernelName:Log1p,backendName:"cpu",kernelFunc:log1p$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalAndImpl=createSimpleBinaryKernelImpl((o,e)=>o&&e),logicalAnd$1=binaryKernelFunc$1(LogicalAnd,logicalAndImpl,null,"bool"),logicalAndConfig$1={kernelName:LogicalAnd,backendName:"cpu",kernelFunc:logicalAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalNot$1=unaryKernelFunc$1(LogicalNot,o=>o?0:1,"bool"),logicalNotConfig$1={kernelName:LogicalNot,backendName:"cpu",kernelFunc:logicalNot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalOrImpl=createSimpleBinaryKernelImpl((o,e)=>o||e),logicalOr$1=binaryKernelFunc$1(LogicalOr,logicalOrImpl,null,"bool"),logicalOrConfig$1={kernelName:LogicalOr,backendName:"cpu",kernelFunc:logicalOr$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRN(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{depthRadius:d,bias:h,alpha:b,beta:_}=i;assertNotComplex$1(a,"LRN");const j=a.shape[3],_e=j-1,g=s.data.get(a.dataId).values,c=sizeFromShape(a.shape),$=new Float32Array(c);function et(tt){const nt=tt%j;let rt=tt-nt+Math.max(0,nt-d);const ot=tt-nt+Math.min(nt+d,_e);let st=0;for(;rt<=ot;rt++){const it=g[rt];st+=it*it}return st}for(let tt=0;tt<c;tt++){const nt=et(tt),rt=g[tt]*Math.pow(h+b*nt,-_);$[tt]=rt}return s.makeTensorInfo(a.shape,a.dtype,$)}const LRNConfig$1={kernelName:LRN,backendName:"cpu",kernelFunc:lRN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRNGrad(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,y:d,dy:h}=e,{depthRadius:b,bias:_,alpha:j,beta:_e}=i;assertNotComplex$1(h,"LRNGrad");const g=sizeFromShape(h.shape),c=h.shape[3],$=s.data.get(h.dataId).values,et=s.data.get(a.dataId).values,tt=s.data.get(d.dataId).values,nt=new Float32Array(g),rt=g;for(let ot=0;ot<rt;ot++){const st=ot%c,it=ot-st+Math.max(0,st-b),at=ot-st+Math.min(c,st+b+1);let lt=0;for(let ut=it;ut<at;ut++)lt+=Math.pow(et[ut],2);lt=j*lt+_;for(let ut=it;ut<at;ut++){let ct=-2*j*_e*et[ut]*tt[ot]/lt;ot===ut&&(ct+=Math.pow(lt,-_e)),ct*=$[ot],nt[ut]+=ct}}return s.makeTensorInfo(h.shape,a.dtype,nt)}const LRNGradConfig$1={kernelName:LRNGrad,backendName:"cpu",kernelFunc:lRNGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{reductionIndices:d,keepDims:h}=i,b=s;let _=a.shape;const j=_.length,_e=parseAxisParam(d,_);let g=_e;const c=getAxesPermutation(g,j);let $=b.data.get(a.dataId).values;if(c!=null){const it=new Array(j);for(let at=0;at<it.length;at++)it[at]=_[c[at]];$=transposeImpl$1($,_,a.dtype,c,it),g=getInnerMostAxes(g.length,j),_=it}assertNotComplex$1(a,"max"),assertAxesAreInnerMostDims("max",g,j);const[et,tt]=computeOutAndReduceShapes(_,g),nt=sizeFromShape(tt),rt=maxImpl$1($,nt,et,a.dtype),ot=b.write(rt,et,a.dtype);let st=et;return h&&(st=expandShapeToKeepDim(et,_e)),{dataId:ot,shape:st,dtype:a.dtype}}const maxConfig$1={kernelName:Max,backendName:"cpu",kernelFunc:max$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e;assertNotComplex$1(a,"maxPool");const{filterSize:d,strides:h,pad:b,dimRoundingMode:_}=i,j=1;assert$1(eitherStridesOrDilationsAreOne(h,j),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${j}'`);const _e=computePool2DInfo(a.shape,d,h,j,b,_);let g;if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))g=identity$1({inputs:{x:a},backend:s});else{const c=s.data.get(a.dataId).values,$=computeStrides(a.shape),et=pool(c,a.shape,a.dtype,$,_e,"max");g=s.makeTensorInfo(_e.outShape,a.dtype,et.values)}return g}const maxPoolConfig$1={kernelName:MaxPool,backendName:"cpu",kernelFunc:maxPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{filterSize:d,strides:h,pad:b,dimRoundingMode:_,dataFormat:j}=i;assertNotComplex$1(a,"maxPool3d");const _e=computePool3DInfo(a.shape,d,h,1,b,_,j),g=s.data.get(a.dataId).values,c=pool3d(g,a.shape,a.dtype,computeStrides(a.shape),_e,"max");return s.makeTensorInfo(c.shape,"float32",c.values)}const maxPool3DConfig$1={kernelName:MaxPool3D,backendName:"cpu",kernelFunc:maxPool3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,{filterSize:h,strides:b,pad:_,dimRoundingMode:j}=i;assertNotComplex$1([a,d],"maxPool3DGrad");const _e=computePool3DInfo(d.shape,h,b,1,_,j),g=s.bufferSync(d),c=maxPool3dPositions(g,_e),$=_e.strideDepth,et=_e.strideHeight,tt=_e.strideWidth,nt=_e.dilationDepth,rt=_e.dilationHeight,ot=_e.dilationWidth,st=_e.effectiveFilterDepth,it=_e.effectiveFilterHeight,at=_e.effectiveFilterWidth,lt=st-1-_e.padInfo.front,ut=at-1-_e.padInfo.left,ct=it-1-_e.padInfo.top,pt=buffer(d.shape,"float32"),ht=s.bufferSync(a);for(let yt=0;yt<_e.batchSize;++yt)for(let xt=0;xt<_e.inChannels;++xt)for(let ft=0;ft<_e.inDepth;++ft)for(let wt=0;wt<_e.inHeight;++wt)for(let dt=0;dt<_e.inWidth;++dt){const mt=ft-lt,bt=wt-ct,vt=dt-ut;let Tt=0;for(let Et=0;Et<st;Et+=nt){const Ct=(mt+Et)/$;if(!(Ct<0||Ct>=_e.outDepth||Math.floor(Ct)!==Ct))for(let kt=0;kt<it;kt+=rt){const Dt=(bt+kt)/et;if(!(Dt<0||Dt>=_e.outHeight||Math.floor(Dt)!==Dt))for(let Rt=0;Rt<at;Rt+=ot){const Ot=(vt+Rt)/tt;if(Ot<0||Ot>=_e.outWidth||Math.floor(Ot)!==Ot)continue;const zt=st*it*at-1-c.get(yt,Ct,Dt,Ot,xt),Bt=Et*it*at+kt*at+Rt,Gt=zt===Bt?1:0;if(Gt===0)continue;const jt=ht.get(yt,Ct,Dt,Ot,xt);Tt+=jt*Gt}}}pt.set(Tt,yt,ft,wt,dt,xt)}return s.makeTensorInfo(pt.shape,pt.dtype,pt.values)}const maxPool3DGradConfig$1={kernelName:MaxPool3DGrad,backendName:"cpu",kernelFunc:maxPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d,output:h}=e,b=d;assertNotComplex$1([d,h],"maxPoolGrad");const{filterSize:_,strides:j,pad:_e,dimRoundingMode:g}=i,c=computePool2DInfo(b.shape,_,j,1,_e,g),$=s.data.get(b.dataId).values,et=buffer(c.outShape,b.dtype,maxPoolPositions($,b.shape,b.dtype,c).values),tt=c.strideHeight,nt=c.strideWidth,rt=c.dilationHeight,ot=c.dilationWidth,st=c.effectiveFilterHeight,it=c.effectiveFilterWidth,at=it-1-c.padInfo.left,lt=st-1-c.padInfo.top,ut=buffer(b.shape,"float32"),ct=s.data.get(a.dataId).values,pt=buffer(a.shape,"float32",ct);for(let ht=0;ht<c.batchSize;++ht)for(let yt=0;yt<c.inChannels;++yt)for(let xt=0;xt<c.inHeight;++xt)for(let ft=0;ft<c.inWidth;++ft){const wt=xt-lt,dt=ft-at;let mt=0;for(let bt=0;bt<st;bt+=rt){const vt=(wt+bt)/tt;if(!(vt<0||vt>=c.outHeight||Math.floor(vt)!==vt))for(let Tt=0;Tt<it;Tt+=ot){const Et=(dt+Tt)/nt;if(Et<0||Et>=c.outWidth||Math.floor(Et)!==Et)continue;const Ct=st*it-1-et.get(ht,vt,Et,yt),kt=bt*it+Tt,Dt=Ct===kt?1:0;if(Dt===0)continue;const Rt=pt.get(ht,vt,Et,yt);mt+=Rt*Dt}}ut.set(mt,ht,xt,ft,yt)}return s.makeTensorInfo(ut.shape,ut.dtype,ut.values)}const maxPoolGradConfig$1={kernelName:MaxPoolGrad,backendName:"cpu",kernelFunc:maxPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl$1(o,e,s,i,a){const d=computeStrides(e),h=pool(o,e,s,d,a,"max"),b=maxPoolPositions(o,e,s,a,!0,i);return[h.values,b.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig$1={kernelName:MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{x:i}=o,{filterSize:a,strides:d,pad:h,includeBatchInIndex:b}=e,_=s;assertNotComplex$1(i,"MaxPoolWithArgmax");const j=_.data.get(i.dataId).values,_e=computePool2DInfo(i.shape,a,d,[1,1],h),[g,c]=maxPoolWithArgmaxImpl$1(j,i.shape,i.dtype,b,_e),$=_.write(g,_e.outShape,i.dtype),et=_.write(c,_e.outShape,i.dtype);return[{dataId:$,shape:_e.outShape,dtype:i.dtype},{dataId:et,shape:_e.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i,b=parseAxisParam(d,a.shape),j=computeOutAndReduceShapes(a.shape,b)[1],_e=sizeFromShape(j),g=[],c=s.makeTensorInfo([],"float32",new Float32Array([_e]));g.push(c);const $=cast$1({inputs:{x:a},backend:s,attrs:{dtype:"float32"}});g.push($);const et=div({inputs:{a:$,b:c},backend:s});g.push(et);const tt=sum$1({inputs:{x:et},backend:s,attrs:{axis:d,keepDims:h}});return g.forEach(nt=>s.disposeIntermediateTensorInfo(nt)),tt}const meanConfig$1={kernelName:Mean,backendName:"cpu",kernelFunc:mean};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;assertNotComplex$1(a,"min");const b=parseAxisParam(d,a.shape);let _=b;const j=getAxesPermutation(_,a.shape.length);let _e=a;j!=null&&(_e=transpose$1({inputs:{x:a},backend:s,attrs:{perm:j}}),_=getInnerMostAxes(_.length,a.shape.length)),assertAxesAreInnerMostDims("min",_,_e.shape.length);const[g,c]=computeOutAndReduceShapes(_e.shape,_),$=sizeFromShape(c),et=makeZerosTypedArray(sizeFromShape(g),_e.dtype),tt=s.data.get(_e.dataId).values;for(let rt=0;rt<et.length;++rt){const ot=rt*$;let st=tt[ot];for(let it=0;it<$;++it){const at=tt[ot+it];(Number.isNaN(at)||at<st)&&(st=at)}et[rt]=st}j!=null&&s.disposeIntermediateTensorInfo(_e);const nt=s.makeTensorInfo(g,_e.dtype,et);if(h){const rt=expandShapeToKeepDim(g,b),ot=reshape$1({inputs:{x:nt},backend:s,attrs:{shape:rt}});return s.disposeIntermediateTensorInfo(nt),ot}return nt}const minConfig$1={kernelName:Min,backendName:"cpu",kernelFunc:min$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{paddings:d,mode:h}=i;assertNotComplex$1(a,"mirrorPad");const b=d.map((st,it)=>st[0]+a.shape[it]+st[1]),_=d.map(st=>st[0]),j=d.map((st,it)=>st[0]+a.shape[it]),_e=h==="reflect"?0:1,g=s.data.get(a.dataId).values,c=a.shape.length,$=computeStrides(a.shape),et=sizeFromShape(b),tt=b.length,nt=computeStrides(b),rt=getTypedArrayFromDType(a.dtype,et);for(let st=0;st<et;st++){let it=indexToLoc(st,tt,nt);for(let lt=0;lt<tt;lt++)it[lt]<_[lt]?it[lt]=_[lt]*2-it[lt]-_e:it[lt]>=j[lt]&&(it[lt]=(j[lt]-1)*2-it[lt]+_e);it=it.map((lt,ut)=>lt-_[ut]);const at=locToIndex(it,c,$);rt[st]=g[at]}return{dataId:s.write(rt,b,a.dtype),shape:b,dtype:a.dtype}}const mirrorPadConfig$1={kernelName:MirrorPad,backendName:"cpu",kernelFunc:mirrorPad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modImpl=createSimpleBinaryKernelImpl((o,e)=>{const s=o%e;return o<0&&e<0||o>=0&&e>=0?s:(s+e)%e}),mod$1=binaryKernelFunc$1(Mod,modImpl),modConfig$1={kernelName:Mod,backendName:"cpu",kernelFunc:mod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax$1(o){const{inputs:e,backend:s,attrs:i}=o,{logits:a}=e,{dim:d}=i,h=a.shape.length;let b=d;if(b===-1&&(b=h-1),b!==h-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${h} and dim was ${b}`);const _=parseAxisParam([b],a.shape),j=max$1({inputs:{x:a},backend:s,attrs:{reductionIndices:_,keepDims:!1}}),_e=expandShapeToKeepDim(j.shape,_),g=reshape$1({inputs:{x:j},backend:s,attrs:{shape:_e}}),c=sub$1({inputs:{a,b:g},backend:s}),$=exp$1({inputs:{x:c},backend:s}),et=sum$1({inputs:{x:$},backend:s,attrs:{axis:_,keepDims:!1}}),tt=reshape$1({inputs:{x:et},backend:s,attrs:{shape:_e}}),nt=div({inputs:{a:$,b:tt},backend:s});return s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(tt),nt}const softmaxConfig$1={kernelName:Softmax$2,backendName:"cpu",kernelFunc:softmax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial$1(o){const{inputs:e,backend:s,attrs:i}=o,{logits:a}=e,{numSamples:d,seed:h,normalized:b}=i;assertNotComplex$1(a,"multinomial");const _=b?a:softmax$1({inputs:{logits:a},backend:s,attrs:{dim:-1}}),j=_.shape[0],_e=_.shape[1],g=s.data.get(_.dataId).values,c=[j,d],$=makeZerosTypedArray(sizeFromShape(c),"int32");for(let et=0;et<j;++et){const tt=et*_e,nt=new Float32Array(_e-1);nt[0]=g[tt];for(let st=1;st<nt.length;++st)nt[st]=nt[st-1]+g[tt+st];const rt=seedrandom.alea(h.toString()),ot=et*d;for(let st=0;st<d;++st){const it=rt();$[ot+st]=nt.length;for(let at=0;at<nt.length;at++)if(it<nt[at]){$[ot+st]=at;break}}}return b||s.disposeIntermediateTensorInfo(_),s.makeTensorInfo(c,"int32",$)}const multinomialConfig$1={kernelName:Multinomial,backendName:"cpu",kernelFunc:multinomial$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl$1=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3$1(o){const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_}=i;assertNotComplex$1(a,"NonMaxSuppression");const j=s.data.get(a.dataId).values,_e=s.data.get(d.dataId).values,{selectedIndices:g}=nonMaxSuppressionV3Impl$1(j,_e,h,b,_);return s.makeTensorInfo([g.length],"int32",new Int32Array(g))}const nonMaxSuppressionV3Config$1={kernelName:NonMaxSuppressionV3,backendName:"cpu",kernelFunc:nonMaxSuppressionV3$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl$1=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4$1(o){const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_,padToMaxOutputSize:j}=i;assertNotComplex$1(a,"NonMaxSuppressionPadded");const _e=s.data.get(a.dataId).values,g=s.data.get(d.dataId).values,{selectedIndices:c,validOutputs:$}=nonMaxSuppressionV4Impl$1(_e,g,h,b,_,j);return[s.makeTensorInfo([c.length],"int32",new Int32Array(c)),s.makeTensorInfo([],"int32",new Int32Array([$]))]}const nonMaxSuppressionV4Config$1={kernelName:NonMaxSuppressionV4,backendName:"cpu",kernelFunc:nonMaxSuppressionV4$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl$1=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5$1(o){const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_,softNmsSigma:j}=i;assertNotComplex$1(a,"NonMaxSuppressionWithScore");const _e=s.data.get(a.dataId).values,g=s.data.get(d.dataId).values,c=h,$=b,et=_,tt=j,{selectedIndices:nt,selectedScores:rt}=nonMaxSuppressionV5Impl$1(_e,g,c,$,et,tt);return[s.makeTensorInfo([nt.length],"int32",new Int32Array(nt)),s.makeTensorInfo([rt.length],"float32",new Float32Array(rt))]}const nonMaxSuppressionV5Config$1={kernelName:NonMaxSuppressionV5,backendName:"cpu",kernelFunc:nonMaxSuppressionV5$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot$1(o){const{inputs:e,backend:s,attrs:i}=o,{indices:a}=e,{dtype:d,depth:h,onValue:b,offValue:_}=i;assertNotComplex$1(a,"oneHot");const j=sizeFromShape(a.shape),_e=new Float32Array(j*h);_e.fill(_);const g=s.data.get(a.dataId).values;for(let c=0;c<j;++c)g[c]>=0&&g[c]<h&&(_e[c*h+g[c]]=b);return s.makeTensorInfo([...a.shape,h],d,_e)}const oneHotConfig$1={kernelName:OneHot,backendName:"cpu",kernelFunc:oneHot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike$1(o){const{inputs:e,backend:s}=o,{x:i}=e;if(i.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(i.dtype==="complex64"){const a=real$1({inputs:{input:i},backend:s}),d=zerosLike$1({inputs:{x:a},backend:s}),h=imag$1({inputs:{input:i},backend:s}),b=zerosLike$1({inputs:{x:h},backend:s}),_=complex$1({inputs:{real:d,imag:b},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),_}else return fill$1({backend:s,attrs:{shape:i.shape,value:0,dtype:i.dtype}})}const zerosLikeConfig$1={kernelName:ZerosLike,backendName:"cpu",kernelFunc:zerosLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike$1(o){const{inputs:e,backend:s}=o,{x:i}=e;if(i.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(i.dtype==="complex64"){const a=real$1({inputs:{input:i},backend:s}),d=onesLike$1({inputs:{x:a},backend:s}),h=imag$1({inputs:{input:i},backend:s}),b=zerosLike$1({inputs:{x:h},backend:s}),_=complex$1({inputs:{real:d,imag:b},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),_}else return fill$1({backend:s,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}const onesLikeConfig$1={kernelName:OnesLike,backendName:"cpu",kernelFunc:onesLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack$1(o){const{inputs:e,backend:s,attrs:i}=o,{axis:a}=i;if(e.length===1)return expandDims$1({inputs:{input:e[0]},backend:s,attrs:{dim:a}});const d=e[0].shape,h=e[0].dtype;e.forEach(_e=>{assertShapesMatch(d,_e.shape,"All tensors passed to stack must have matching shapes"),assert$1(h===_e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const b=[],_=e.map(_e=>{const g=expandDims$1({inputs:{input:_e},backend:s,attrs:{dim:a}});return b.push(g),g}),j=concat$1({inputs:_,backend:s,attrs:{axis:a}});return b.forEach(_e=>s.disposeIntermediateTensorInfo(_e)),j}const packConfig$1={kernelName:Pack,backendName:"cpu",kernelFunc:pack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function padV2$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{paddings:d,constantValue:h}=i;assertNotComplex$1(a,"pad");const b=d.map((ot,st)=>ot[0]+a.shape[st]+ot[1]),_=d.map(ot=>ot[0]),j=s.data.get(a.dataId).values,_e=sizeFromShape(a.shape),g=a.shape.length,c=computeStrides(a.shape),$=sizeFromShape(b),et=b.length,tt=computeStrides(b),nt=getTypedArrayFromDType(a.dtype,$);h!==0&&nt.fill(h);for(let ot=0;ot<_e;ot++){const it=indexToLoc(ot,g,c).map((lt,ut)=>lt+_[ut]),at=locToIndex(it,et,tt);nt[at]=j[ot]}return{dataId:s.write(nt,b,a.dtype),shape:b,dtype:a.dtype}}const padV2Config$1={kernelName:PadV2,backendName:"cpu",kernelFunc:padV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powImpl=createSimpleBinaryKernelImpl((o,e)=>Math.pow(o,e)),pow$1=binaryKernelFunc$1(Pow,powImpl),powConfig$1={kernelName:Pow,backendName:"cpu",kernelFunc:pow$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedGather$1(o){const{inputs:e,backend:s,attrs:i}=o,{paramsNestedSplits:a,paramsDenseValues:d,indices:h}=e,b=a.map(nt=>s.data.get(nt.dataId).values),_=a.map(nt=>nt.shape),j=s.data.get(d.dataId).values,_e=s.data.get(h.dataId).values,[g,c,$]=raggedGatherImpl(b,_,j,d.shape,d.dtype,_e,h.shape),et=g.map(nt=>s.makeTensorInfo([nt.length],"int32",nt)),tt=s.makeTensorInfo($,d.dtype,c);return et.concat([tt])}const raggedGatherConfig$1={kernelName:RaggedGather,backendName:"cpu",kernelFunc:raggedGather$1};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedRange$1(o){const{inputs:e,backend:s}=o,{starts:i,limits:a,deltas:d}=e,h=s.data.get(i.dataId).values,b=s.data.get(a.dataId).values,_=s.data.get(d.dataId).values,[j,_e]=raggedRangeImpl(h,i.shape,i.dtype,b,a.shape,_,d.shape),g=s.makeTensorInfo([j.length],"int32",j),c=s.makeTensorInfo([_e.length],i.dtype,_e);return[g,c]}const raggedRangeConfig$1={kernelName:RaggedRange,backendName:"cpu",kernelFunc:raggedRange$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedTensorToTensor$1(o){const{inputs:e,backend:s,attrs:i}=o,{shape:a,values:d,defaultValue:h,rowPartitionTensors:b}=e,{rowPartitionTypes:_}=i,j=s.data.get(a.dataId).values,_e=s.data.get(d.dataId).values,g=s.data.get(h.dataId).values,c=b.map(nt=>s.data.get(nt.dataId).values),$=b.map(nt=>nt.shape),[et,tt]=raggedTensorToTensorImpl(j,a.shape,_e,d.shape,d.dtype,g,h.shape,c,$,_);return s.makeTensorInfo(et,d.dtype,tt)}const raggedTensorToTensorConfig$1={kernelName:RaggedTensorToTensor,backendName:"cpu",kernelFunc:raggedTensorToTensor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$1(o){const{backend:e,attrs:s}=o,{start:i,stop:a,dtype:d,step:h}=s,b=rangeImpl(i,a,h,d);return e.makeTensorInfo([b.length],d,b)}const rangeConfig$1={kernelName:Range,backendName:"cpu",kernelFunc:range$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocal$1=unaryKernelFunc$1(Reciprocal,o=>1/o),reciprocalConfig$1={kernelName:Reciprocal,backendName:"cpu",kernelFunc:reciprocal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear$1(o){const{inputs:e,backend:s,attrs:i}=o,{images:a}=e,{alignCorners:d,halfPixelCenters:h,size:b}=i;assertNotComplex$1(a,"resizeBilinear");const _=computeStrides(a.shape),[j,_e]=b,[g,c,$,et]=a.shape,tt=s.data.get(a.dataId).values,nt=new Float32Array(sizeFromShape([g,j,_e,et])),rt=[d&&j>1?c-1:c,d&&_e>1?$-1:$],ot=[d&&j>1?j-1:j,d&&_e>1?_e-1:_e];let st=0;const it=rt[0]/ot[0],at=rt[1]/ot[1];for(let lt=0;lt<g;lt++)for(let ut=0;ut<j;ut++){let ct;h?ct=it*(ut+.5)-.5:ct=it*ut;const pt=Math.max(0,Math.floor(ct)),ht=ct-pt,yt=Math.min(c-1,Math.ceil(ct)),xt=lt*_[0]+pt*_[1],ft=lt*_[0]+yt*_[1];for(let wt=0;wt<_e;wt++){let dt;h?dt=at*(wt+.5)-.5:dt=at*wt;const mt=Math.max(0,Math.floor(dt)),bt=dt-mt,vt=Math.min($-1,Math.ceil(dt)),Tt=xt+mt*_[2],Et=ft+mt*_[2],Ct=xt+vt*_[2],kt=ft+vt*_[2];for(let Dt=0;Dt<et;Dt++){const Rt=tt[Tt+Dt],Ot=tt[Et+Dt],zt=tt[Ct+Dt],Bt=tt[kt+Dt],Gt=Rt+(zt-Rt)*bt,jt=Ot+(Bt-Ot)*bt,Kt=Gt+(jt-Gt)*ht;nt[st++]=Kt}}}return s.makeTensorInfo([g,j,_e,et],"float32",nt)}const resizeBilinearConfig$1={kernelName:ResizeBilinear,backendName:"cpu",kernelFunc:resizeBilinear$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{images:a,dy:d}=e,{alignCorners:h}=i;assertNotComplex$1([d,a],"resizeBilinearGrad");const b=computeStrides(a.shape),[_,j,_e,g]=a.shape,[,c,$]=d.shape,et=new Float32Array(_*j*_e*g),tt=[h&&c>1?j-1:j,h&&$>1?_e-1:_e],nt=[h&&c>1?c-1:c,h&&$>1?$-1:$],rt=tt[0]/nt[0],ot=tt[1]/nt[1],st=s.data.get(d.dataId).values;let it=0;for(let at=0;at<_;at++){const lt=at*b[0];for(let ut=0;ut<c;ut++){const ct=ut*rt,pt=Math.floor(ct),ht=Math.min(Math.ceil(ct),j-1),yt=lt+pt*b[1],xt=lt+ht*b[1],ft=ct-pt,wt=1-ft;for(let dt=0;dt<$;dt++){const mt=dt*ot,bt=Math.floor(mt),vt=Math.min(Math.ceil(mt),_e-1),Tt=mt-bt,Et=1-Tt,Ct=yt+bt*b[2],kt=yt+vt*b[2],Dt=xt+bt*b[2],Rt=xt+vt*b[2],Ot=wt*Et,zt=wt*Tt,Bt=ft*Et,Gt=ft*Tt;for(let jt=0;jt<g;jt++){const Kt=st[it++];et[Ct+jt]+=Kt*Ot,et[kt+jt]+=Kt*zt,et[Dt+jt]+=Kt*Bt,et[Rt+jt]+=Kt*Gt}}}}return s.makeTensorInfo([_,_e,j,g],"float32",et)}const resizeBilinearGradConfig$1={kernelName:ResizeBilinearGrad,backendName:"cpu",kernelFunc:resizeBilinearGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor$1(o){const{inputs:e,backend:s,attrs:i}=o,{images:a}=e,{alignCorners:d,halfPixelCenters:h,size:b}=i;assertNotComplex$1(a,"resizeNearestNeighbor");const _=computeStrides(a.shape),[j,_e]=b,[g,c,$,et]=a.shape,tt=s.data.get(a.dataId).values,nt=new Float32Array(g*j*_e*et),rt=[d&&j>1?c-1:c,d&&_e>1?$-1:$],ot=[d&&j>1?j-1:j,d&&_e>1?_e-1:_e],st=rt[0]/ot[0],it=rt[1]/ot[1];let at=0;for(let lt=0;lt<g;lt++){const ut=lt*_[0];for(let ct=0;ct<j;ct++){const pt=h?st*(ct+.5):st*ct;let ht=Math.min(c-1,d?Math.round(pt):Math.floor(pt));h&&(ht=Math.max(0,ht));const yt=ut+ht*_[1];for(let xt=0;xt<_e;xt++){const ft=h?it*(xt+.5):it*xt;let wt=Math.min($-1,d?Math.round(ft):Math.floor(ft));h&&(wt=Math.max(0,wt));const dt=yt+wt*_[2];for(let mt=0;mt<et;mt++){const bt=tt[dt+mt];nt[at++]=bt}}}}return s.makeTensorInfo([g,j,_e,et],a.dtype,nt)}const resizeNearestNeighborConfig$1={kernelName:ResizeNearestNeighbor,backendName:"cpu",kernelFunc:resizeNearestNeighbor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad$1(o){const{inputs:e,backend:s,attrs:i}=o,{images:a,dy:d}=e,{alignCorners:h}=i;assertNotComplex$1([d,a],"resizeNearestNeighborGrad");const b=computeStrides(a.shape),_=computeStrides(d.shape),[j,_e,g,c]=a.shape,[,$,et]=d.shape,tt=new Float32Array(j*_e*g*c),nt=s.data.get(d.dataId).values,rt=[h&&$>1?_e-1:_e,h&&et>1?g-1:g],ot=[h&&$>1?$-1:$,h&&et>1?et-1:et],st=rt[0]/ot[0],it=rt[1]/ot[1],at=1/st,lt=1/it,ut=Math.ceil(at)*2+2,ct=Math.ceil(lt)*2+2;for(let pt=0;pt<j;pt++){const ht=pt*b[0];for(let yt=0;yt<_e;yt++){const xt=ht+yt*b[1],ft=Math.floor(yt*at),wt=Math.floor(ft-ut/2);for(let dt=0;dt<g;dt++){const mt=xt+dt*b[2],bt=Math.floor(dt*lt),vt=Math.floor(bt-ct/2);for(let Tt=0;Tt<c;Tt++){let Et=0;for(let Ct=0;Ct<ut;Ct++){const kt=Ct+wt;if(kt<0||kt>=$)continue;const Dt=ht+kt*_[1],Rt=kt*st,Ot=Math.min(_e-1,h?Math.round(Rt):Math.floor(Rt));if(yt===Ot)for(let zt=0;zt<ct;zt++){const Bt=zt+vt;if(Bt<0||Bt>=et)continue;const Gt=Dt+Bt*_[2],jt=Bt*it,Kt=Math.min(g-1,h?Math.round(jt):Math.floor(jt));dt===Kt&&(Et+=nt[Gt+Tt])}}tt[mt+Tt]=Et}}}}return s.makeTensorInfo(a.shape,a.dtype,tt)}const resizeNearestNeighborGradConfig$1={kernelName:ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:resizeNearestNeighborGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{dims:d}=i;assertNotComplex$1(a,"reverse");const h=a.shape.length,b=parseAxisParam(d,a.shape);if(h===0)return identity$1({inputs:{x:a},backend:s});const _=new TensorBuffer(a.shape,a.dtype),j=s.bufferSync(a);for(let _e=0;_e<_.size;_e++){const g=_.indexToLoc(_e),c=g.slice();b.forEach($=>c[$]=a.shape[$]-1-c[$]),_.set(j.get(...c),...g)}return s.makeTensorInfo(_.shape,_.dtype,_.values)}const reverseConfig$1={kernelName:Reverse,backendName:"cpu",kernelFunc:reverse$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig$1={kernelName:RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{image:i}=o,{radians:a,fillValue:d,center:h}=e,b=s,_=getTypedArrayFromDType(i.dtype,sizeFromShape(i.shape)),[j,_e,g,c]=i.shape,[$,et]=getImageCenter(h,_e,g),tt=255,nt=Math.sin(a),rt=Math.cos(a),ot=b.data.get(i.dataId).values;for(let it=0;it<j;it++){const at=it*g*_e*c;for(let lt=0;lt<_e;lt++){const ut=lt*(g*c);for(let ct=0;ct<g;ct++){const pt=ct*c;for(let ht=0;ht<c;ht++){const yt=[j,lt,ct,ht],xt=yt[2],ft=yt[1];let wt=(xt-$)*rt-(ft-et)*nt,dt=(xt-$)*nt+(ft-et)*rt;wt=Math.round(wt+$),dt=Math.round(dt+et);let mt=d;if(typeof d!="number"&&(ht===3?mt=tt:mt=d[ht]),wt>=0&&wt<g&&dt>=0&&dt<_e){const vt=dt*(g*c),Tt=wt*c,Et=at+vt+Tt+ht;mt=ot[Et]}const bt=at+ut+pt+ht;_[bt]=mt}}}}return{dataId:b.write(_,i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const round$1=unaryKernelFunc$1(Round,o=>{const e=Math.floor(o);return o-e<.5?Math.floor(o):o-e>.5?Math.ceil(o):e%2===0?e:e+1}),roundConfig$1={kernelName:Round,backendName:"cpu",kernelFunc:round$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd$1(o){const{inputs:e,backend:s,attrs:i}=o,{indices:a,updates:d}=e,{shape:h}=i,{sliceRank:b,numUpdates:_,sliceSize:j,strides:_e,outputSize:g}=calculateShapes(d,a,h),c=!0,$=s.bufferSync(a),et=s.bufferSync(d),tt=scatterImpl($,et,h,g,j,_,b,_e,0,c);return s.makeTensorInfo(h,tt.dtype,tt.values)}const scatterNdConfig$1={kernelName:ScatterNd,backendName:"cpu",kernelFunc:scatterNd$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lowerBound(o,e){let s=0,i=o.length,a=0;for(;s<i;)a=Math.floor((s+i)/2),o[a]<e?s=a+1:i=a;return i}function upperBound(o,e){let s=0,i=o.length,a=0;for(;s<i;)a=Math.floor((s+i)/2),o[a]<=e?s=a+1:i=a;return i}function searchSortedImpl(o,e,s,i,a,d){const h=getArrayFromDType("int32",s*a);for(let b=0;b<s;++b){const _=o.slice(b*i,(b+1)*i),j=b*a;for(let _e=0;_e<a;++_e)h[j+_e]=d==="left"?lowerBound(_,e[_e+j]):upperBound(_,e[_e+j])}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function searchSorted$1(o){const{inputs:e,backend:s,attrs:i}=o,{sortedSequence:a,values:d}=e,{side:h}=i,b=s.data.get(a.dataId).values,_=s.data.get(d.dataId).values,j=searchSortedImpl(b,_,a.shape[0],a.shape[1],d.shape[1],h);return s.makeTensorInfo(d.shape,"int32",j)}const searchSortedConfig$1={kernelName:SearchSorted,backendName:"cpu",kernelFunc:searchSorted$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select$1(o){const{inputs:e,backend:s}=o,{condition:i,t:a,e:d}=e;assertNotComplex$1([i,a,d],"select");const h=i.shape.length,b=s.data.get(i.dataId).values,_=s.data.get(a.dataId).values,j=s.data.get(d.dataId).values,_e=upcastType(a.dtype,d.dtype),g=makeZerosTypedArray(sizeFromShape(a.shape),_e);let c=0;const $=h===0||h>1||a.shape.length===1?1:sizeFromShape(a.shape.slice(1));for(let et=0;et<b.length;et++)for(let tt=0;tt<$;tt++)b[et]===1?g[c++]=_[et]:g[c++]=j[et];return s.makeTensorInfo(a.shape,_e,g)}const selectConfig$1={kernelName:Select,backendName:"cpu",kernelFunc:select$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const scaleAlpha=SELU_SCALEALPHA,scale=SELU_SCALE,selu$1=unaryKernelFunc$1(Selu$1,o=>o>=0?scale*o:scaleAlpha*(Math.exp(o)-1)),seluConfig$1={kernelName:Selu$1,backendName:"cpu",kernelFunc:selu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sign$1=unaryKernelFunc$1(Sign,o=>o<0?-1:o>0?1:0),signConfig$1={kernelName:Sign,backendName:"cpu",kernelFunc:sign$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sin$1=unaryKernelFunc$1(Sin,o=>Math.sin(o)),sinConfig$1={kernelName:Sin,backendName:"cpu",kernelFunc:sin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinh$1=unaryKernelFunc$1(Sinh,o=>Math.sinh(o)),sinhConfig$1={kernelName:Sinh,backendName:"cpu",kernelFunc:sinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epsilon=11920928955078125e-23,threshold=Math.log(epsilon)+2,softplus$1=unaryKernelFunc$1(Softplus$1,o=>{const e=o>-threshold,s=o<threshold,i=Math.exp(o);let a;return s?a=i:e?a=o:a=Math.log(1+i),a}),softplusConfig$1={kernelName:Softplus$1,backendName:"cpu",kernelFunc:softplus$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockShape:d,paddings:h}=i;assertNotComplex$1([a],"spaceToBatchND");const b=sizeFromShape(d),_=[[0,0]];_.push(...h);for(let lt=1+d.length;lt<a.shape.length;++lt)_.push([0,0]);const j=padV2Config$1.kernelFunc({inputs:{x:a},backend:s,attrs:{paddings:_,constantValue:0}}),_e=getReshaped(j.shape,d,b,!1),g=getPermuted(_e.length,d.length,!1),c=getReshapedPermuted(j.shape,d,b,!1),tt=reshape$1({inputs:{x:j},backend:s,attrs:{shape:_e}}),ot=transpose$1({inputs:{x:tt},backend:s,attrs:{perm:g}}),at=reshape$1({inputs:{x:ot},backend:s,attrs:{shape:c}});return s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(ot),at}const spaceToBatchNDConfig$1={kernelName:SpaceToBatchND,backendName:"cpu",kernelFunc:spaceToBatchND$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRows$1(o){const{inputs:e,backend:s}=o,{indices:i,values:a,denseShape:d,defaultValue:h}=e;if(d.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${d.shape}`);if(i.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${i.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(h.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${h.shape}`);const b=s.data.get(i.dataId).values,_=s.data.get(a.dataId).values,j=s.data.get(d.dataId).values,_e=s.data.get(h.dataId).values[0],[g,c,$,et,tt]=sparseFillEmptyRowsImpl(b,i.shape,i.dtype,_,a.dtype,j,_e);return[s.makeTensorInfo(c,i.dtype,g),s.makeTensorInfo([c[0]],a.dtype,$),s.makeTensorInfo([et.length],"bool",new Uint8Array(et.map(nt=>Number(nt)))),s.makeTensorInfo([tt.length],i.dtype,new Int32Array(tt))]}const sparseFillEmptyRowsConfig$1={kernelName:SparseFillEmptyRows,backendName:"cpu",kernelFunc:sparseFillEmptyRows$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshape$1(o){const{inputs:e,backend:s}=o,{inputIndices:i,inputShape:a,newShape:d}=e;if(i.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${i.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(d.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${d.shape}`);const h=Array.from(s.data.get(a.dataId).values),b=s.data.get(i.dataId).values,_=Array.from(s.data.get(d.dataId).values),[j,_e,g]=sparseReshapeImpl(b,i.shape,i.dtype,h,_);return[s.makeTensorInfo(_e,i.dtype,j),s.makeTensorInfo([g.length],d.dtype,new Int32Array(g))]}const sparseReshapeConfig$1={kernelName:SparseReshape,backendName:"cpu",kernelFunc:sparseReshape$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentMean$1(o){const{inputs:e,backend:s}=o,{data:i,indices:a,segmentIds:d}=e;if(i.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${d.shape}`);if(a.shape[0]!==d.shape[0])throw new Error("segmentIds and indices should have same size.");const h=s.data.get(i.dataId).values,b=s.data.get(a.dataId).values,_=s.data.get(d.dataId).values,[j,_e]=sparseSegmentReductionImpl(h,i.shape,i.dtype,b,_,!0);return s.makeTensorInfo(_e,i.dtype,j)}const sparseSegmentMeanConfig$1={kernelName:SparseSegmentMean,backendName:"cpu",kernelFunc:sparseSegmentMean$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentSum$1(o){const{inputs:e,backend:s}=o,{data:i,indices:a,segmentIds:d}=e;if(i.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${d.shape}`);if(a.shape[0]!==d.shape[0])throw new Error("segmentIds and indices should have same size.");const h=s.data.get(i.dataId).values,b=s.data.get(a.dataId).values,_=s.data.get(d.dataId).values,[j,_e]=sparseSegmentReductionImpl(h,i.shape,i.dtype,b,_);return s.makeTensorInfo(_e,i.dtype,j)}const sparseSegmentSumConfig$1={kernelName:SparseSegmentSum,backendName:"cpu",kernelFunc:sparseSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense$1(o){const{inputs:e,backend:s,attrs:i}=o,{sparseIndices:a,sparseValues:d,defaultValue:h}=e,{outputShape:b}=i,{sliceRank:_,numUpdates:j,sliceSize:_e,strides:g,outputSize:c}=calculateShapes(d,a,b),$=!1,et=s.bufferSync(a);let tt;switch(d.dtype){case"bool":{const nt=s.bufferSync(d),rt=!!s.data.get(h.dataId).values[0];tt=scatterImpl(et,nt,b,c,_e,j,_,g,rt,$);break}case"float32":{const nt=s.bufferSync(d),rt=s.data.get(h.dataId).values[0];tt=scatterImpl(et,nt,b,c,_e,j,_,g,rt,$);break}case"int32":{const nt=s.bufferSync(d),rt=s.data.get(h.dataId).values[0];tt=scatterImpl(et,nt,b,c,_e,j,_,g,rt,$);break}case"string":{const nt=s.bufferSync(d),rt=decodeString(s.data.get(h.dataId).values[0]);tt=scatterImpl(et,nt,b,c,_e,j,_,g,rt,$);break}default:throw new Error(`Unsupported type ${d.dtype}`)}return s.makeTensorInfo(b,tt.dtype,tt.values)}const sparseToDenseConfig$1={kernelName:SparseToDense,backendName:"cpu",kernelFunc:sparseToDense$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{numOrSizeSplits:d,axis:h}=i,b=parseAxisParam(h,a.shape)[0],_=prepareSplitSize(a,d,b),j=new Array(a.shape.length).fill(0),_e=a.shape.slice();return _.map(g=>{const c=[..._e];c[b]=g;const $=slice$1({inputs:{x:a},backend:s,attrs:{begin:j,size:c}});return j[b]+=g,$})}const splitVConfig$1={kernelName:SplitV,backendName:"cpu",kernelFunc:splitV$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareConfig$1={kernelName:Square,backendName:"cpu",kernelFunc:({inputs:o,backend:e})=>{const{x:s}=o,i=e;assertNotComplex$1(s,"square");const a=i.data.get(s.dataId).values,d=new Float32Array(a.length);for(let b=0;b<a.length;++b){const _=a[b];d[b]=_*_}return{dataId:i.write(d,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const step$1=unaryKernelFunc$1(Step,(o,e)=>{const s=e;return isNaN(o)?NaN:o>0?1:s.alpha}),stepConfig$1={kernelName:Step,backendName:"cpu",kernelFunc:step$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{begin:d,end:h,strides:b,beginMask:_,endMask:j,ellipsisMask:_e,newAxisMask:g,shrinkAxisMask:c}=i;assertNotComplex$1(a,"stridedSlice");const{finalShapeSparse:$,finalShape:et,isIdentity:tt,sliceDim0:nt,isSimpleSlice:rt,begin:ot,end:st,strides:it}=sliceInfo(a.shape,d,h,b,_,j,_e,g,c);let at;if(tt)at=reshape$1({inputs:{x:a},backend:s,attrs:{shape:et}});else if(nt||rt){assert$1(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const lt=computeOutShape$2(ot,st,it),ut=slice$1({inputs:{x:a},backend:s,attrs:{begin:ot,size:lt}});at=reshape$1({inputs:{x:ut},backend:s,attrs:{shape:et}}),s.disposeIntermediateTensorInfo(ut)}else{const lt=s.bufferSync(a),ut=stridedSliceImpl($,lt,it,ot);at=s.makeTensorInfo(et,ut.dtype,ut.values)}return at}const stridedSliceConfig$1={kernelName:StridedSlice,backendName:"cpu",kernelFunc:stridedSlice$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringNGrams$1(o){const{inputs:e,backend:s,attrs:i}=o,{separator:a,nGramWidths:d,leftPad:h,rightPad:b,padWidth:_,preserveShortSequences:j}=i,{data:_e,dataSplits:g}=e,c=s.data.get(_e.dataId).values,$=s.data.get(g.dataId).values,[et,tt]=stringNGramsImpl(c,$,a,d,h,b,_,j);return[s.makeTensorInfo([et.length],"string",et),s.makeTensorInfo(g.shape,"int32",tt)]}const stringNGramsConfig$1={kernelName:StringNGrams,backendName:"cpu",kernelFunc:stringNGrams$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringSplit$1(o){const{inputs:e,backend:s,attrs:i}=o,{skipEmpty:a}=i,{input:d,delimiter:h}=e;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(d.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${d.shape}`);if(h.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${h.shape}`);const b=s.data.get(d.dataId).values,_=s.data.get(h.dataId).values[0],[j,_e,g]=stringSplitImpl(b,_,a),c=_e.length;return[s.makeTensorInfo([c,2],"int32",j),s.makeTensorInfo([c],"string",_e),s.makeTensorInfo([2],"int32",new Int32Array(g))]}const stringSplitConfig$1={kernelName:StringSplit,backendName:"cpu",kernelFunc:stringSplit$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFast$1(o){const{inputs:e,backend:s,attrs:i}=o,{numBuckets:a}=i,{input:d}=e;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const h=s.data.get(d.dataId).values,b=stringToHashBucketFastImpl(h,a);return s.makeTensorInfo(d.shape,"int32",b)}const stringToHashBucketFastConfig$1={kernelName:StringToHashBucketFast,backendName:"cpu",kernelFunc:stringToHashBucketFast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tan$1=unaryKernelFunc$1(Tan,o=>Math.tan(o)),tanConfig$1={kernelName:Tan,backendName:"cpu",kernelFunc:tan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanh$1=unaryKernelFunc$1(Tanh$1,o=>Math.tanh(o)),tanhConfig$1={kernelName:Tanh$1,backendName:"cpu",kernelFunc:tanh$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensorScatterUpdate$1(o){const{inputs:e,backend:s}=o,{tensor:i,indices:a,updates:d}=e,{sliceRank:h,numUpdates:b,sliceSize:_,strides:j,outputSize:_e}=calculateShapes(d,a,i.shape),g=!1,c=s.bufferSync(a),$=s.bufferSync(d),et=s.bufferSync(i),tt=scatterImpl(c,$,i.shape,_e,_,b,h,j,et,g);return s.makeTensorInfo(i.shape,tt.dtype,tt.values)}const tensorScatterUpdateConfig$1={kernelName:TensorScatterUpdate,backendName:"cpu",kernelFunc:tensorScatterUpdate$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{reps:d}=i;assertNotComplex$1(a,"tile");const h=tileImpl(s.bufferSync(a),d);return s.makeTensorInfo(h.shape,h.dtype,h.values)}const tileConfig$1={kernelName:Tile,backendName:"cpu",kernelFunc:tile$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{k:d,sorted:h}=i;assertNotComplex$1(a,"topk");const b=s.data.get(a.dataId).values,[_,j]=topKImpl(b,a.shape,a.dtype,d,h);return[s.makeTensorInfo(_.shape,_.dtype,_.values),s.makeTensorInfo(j.shape,j.dtype,j.values)]}const topKConfig$1={kernelName:TopK,backendName:"cpu",kernelFunc:topK$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform$1(o){const{inputs:e,attrs:s,backend:i}=o,{image:a,transforms:d}=e,{interpolation:h,fillMode:b,fillValue:_,outputShape:j}=s,[_e,g,c,$]=a.shape,[et,tt]=j??[g,c],nt=[_e,et,tt,$],rt=computeStrides(a.shape),ot=rt[0],st=rt[1],it=rt[2],at=computeStrides(nt),lt=at[0],ut=at[1],ct=at[2],pt=getTypedArrayFromDType(a.dtype,sizeFromShape(nt));pt.fill(_);const ht=i.data.get(a.dataId).values,yt=i.data.get(d.dataId).values;for(let ft=0;ft<_e;++ft){const wt=d.shape[0]===1?yt:yt.subarray(ft*8,ft*8+8);for(let dt=0;dt<et;++dt)for(let mt=0;mt<tt;++mt)for(let bt=0;bt<$;++bt){let vt;const Tt=wt[6]*mt+wt[7]*dt+1;if(Tt===0)continue;const Et=(wt[0]*mt+wt[1]*dt+wt[2])/Tt,Ct=(wt[3]*mt+wt[4]*dt+wt[5])/Tt,kt=mapCoord(Et,c,b),Dt=mapCoord(Ct,g,b);switch(h){case"nearest":vt=nearestInterpolation(ht,g,c,ot,st,it,ft,Dt,kt,bt,_);break;case"bilinear":vt=bilinearInterpolation(ht,g,c,ot,st,it,ft,Dt,kt,bt,_);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${h}`)}const Rt=ft*lt+dt*ut+mt*ct+bt;pt[Rt]=vt}return i.makeTensorInfo(nt,a.dtype,pt)}return{dataId:i.write(pt,nt,a.dtype),shape:a.shape,dtype:a.dtype}}const transformConfig$1={kernelName:Transform,backendName:"cpu",kernelFunc:transform$1};function mapCoord(o,e,s){switch(s){case"reflect":return mapCoordReflect(o,e);case"wrap":return mapCoordWrap(o,e);case"nearest":return mapCoordNearest(o,e);case"constant":default:return mapCoordConstant(o)}}function mapCoordReflect(o,e){let s=o;if(s<0)if(e<=1)s=0;else{const i=2*e;s<i&&(s=i*Math.trunc(-s/i)+s),s=s<-e?s+i:-s-1}else if(s>e-1)if(e<=1)s=0;else{const i=2*e;s-=i*Math.trunc(s/i),s>=e&&(s=i-s-1)}return clamp(0,s,e-1)}function mapCoordWrap(o,e){let s=o;if(s<0)if(e<=1)s=0;else{const i=e-1;s+=e*(Math.trunc(-s/i)+1)}else if(s>e-1)if(e<=1)s=0;else{const i=e-1;s-=e*Math.trunc(s/i)}return clamp(0,s,e-1)}function mapCoordConstant(o,e){return o}function mapCoordNearest(o,e){return clamp(0,o,e-1)}function readWithFillValue(o,e,s,i,a,d,h,b,_,j,_e){const g=h*i+b*a+_*d+j;return 0<=b&&b<e&&0<=_&&_<s?o[g]:_e}function nearestInterpolation(o,e,s,i,a,d,h,b,_,j,_e){const g=Math.round(b),c=Math.round(_);return readWithFillValue(o,e,s,i,a,d,h,g,c,j,_e)}function bilinearInterpolation(o,e,s,i,a,d,h,b,_,j,_e){const g=Math.floor(b),c=Math.floor(_),$=g+1,et=c+1,tt=(et-_)*readWithFillValue(o,e,s,i,a,d,h,g,c,j,_e)+(_-c)*readWithFillValue(o,e,s,i,a,d,h,g,et,j,_e),nt=(et-_)*readWithFillValue(o,e,s,i,a,d,h,$,c,j,_e)+(_-c)*readWithFillValue(o,e,s,i,a,d,h,$,et,j,_e);return($-b)*tt+(b-g)*nt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$1(o){const{inputs:e,attrs:s,backend:i}=o,{axis:a}=s,{x:d}=e;assertNotComplex$1(d,"unique");const h=i.data.get(d.dataId).values,{outputValues:b,outputShape:_,indices:j}=uniqueImpl(h,a,d.shape,d.dtype);return[i.makeTensorInfo(_,d.dtype,b),i.makeTensorInfo([j.length],"int32",j)]}const uniqueConfig$1={kernelName:Unique,backendName:"cpu",kernelFunc:unique$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack$1(o){const{inputs:e,backend:s,attrs:i}=o,{value:a}=e;let{axis:d}=i;d<0&&(d+=a.shape.length);const h=a.shape.length,b=a.shape[d],_=new Array(h-1);let j=0;for(let $=0;$<h;$++)$!==d&&(_[j++]=a.shape[$]);const _e=new Array(h).fill(0),g=a.shape.slice();g[d]=1;const c=new Array(b);for(let $=0;$<c.length;$++){_e[d]=$;const et=slice$1({inputs:{x:a},backend:s,attrs:{begin:_e,size:g}});c[$]=reshape$1({inputs:{x:et},backend:s,attrs:{shape:_}}),s.disposeIntermediateTensorInfo(et)}return c}const unpackConfig$1={kernelName:Unpack,backendName:"cpu",kernelFunc:unpack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum$1(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,segmentIds:d}=e,{numSegments:h}=i;assertNotComplex$1(a,"unsortedSegmentSum");const b=a.shape.length,_=d.shape.length,j=[],_e=[],g=b-_;let c=d;for(let et=0;et<g;++et){const tt=expandDims$1({inputs:{input:c},backend:s,attrs:{dim:et+1}});c=tt,_e.push(tt)}for(let et=0;et<h;++et){const tt=createScalarValue(et,"int32"),nt=s.makeTensorInfo([],"int32",tt),rt=equal$1({inputs:{a:nt,b:c},backend:s}),ot=cast$1({inputs:{x:rt},backend:s,attrs:{dtype:"float32"}}),st=multiply$1({inputs:{a:ot,b:a},backend:s}),it=sum$1({inputs:{x:st},backend:s,attrs:{axis:0,keepDims:!1}});j.push(it),_e.push(nt),_e.push(rt),_e.push(ot),_e.push(st),_e.push(it)}const $=pack$1({inputs:j,backend:s,attrs:{axis:0}});return _e.forEach(et=>s.disposeIntermediateTensorInfo(et)),$}const unsortedSegmentSumConfig$1={kernelName:UnsortedSegmentSum,backendName:"cpu",kernelFunc:unsortedSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs$1=[_fusedMatMulConfig$1,absConfig$1,acosConfig$1,acoshConfig$1,addConfig$1,addNConfig$1,allConfig$1,anyConfig$1,argMaxConfig$1,argMinConfig$1,asinConfig$1,asinhConfig$1,atanConfig$1,atan2Config$1,atanhConfig$1,avgPoolConfig$1,avgPool3DConfig$1,avgPool3DGradConfig$1,avgPoolGradConfig$1,batchMatMulConfig$1,batchNormConfig$1,batchToSpaceNDConfig$1,bincountConfig$1,bitwiseAndConfig$1,broadcastArgsConfig$1,castConfig$1,ceilConfig$1,clipByValueConfig$1,complexConfig$1,complexAbsConfig$1,concatConfig$1,conv2DConfig$1,conv2DBackpropFilterConfig$1,conv2DBackpropInputConfig$1,conv3DConfig$1,conv3DBackpropFilterV2Config$1,conv3DBackpropInputV2Config,cosConfig$1,coshConfig$1,cropAndResizeConfig$1,cumprodConfig$1,cumsumConfig$1,denseBincountConfig$1,depthToSpaceConfig$1,depthwiseConv2dNativeConfig$1,depthwiseConv2dNativeBackpropFilterConfig$1,depthwiseConv2dNativeBackpropInputConfig$1,diagConfig$1,dilation2DConfig$1,dilation2DBackpropFilterConfig,dilation2DBackpropInputConfig,drawConfig,einsumConfig$1,eluConfig$1,eluGradConfig$1,equalConfig$1,erfConfig$1,expConfig$1,expandDimsConfig$1,expm1Config$1,fftConfig$1,fillConfig$1,flipLeftRightConfig$1,floorConfig$1,floorDivConfig$1,fusedConv2DConfig$1,fusedDepthwiseConv2DConfig$1,gatherNdConfig$1,gatherV2Config$1,greaterConfig$1,greaterEqualConfig$1,identityConfig$1,ifftConfig$1,imagConfig$1,isFiniteConfig$1,isInfConfig$1,isNaNConfig$1,leakyReluConfig$1,lessConfig$1,lessEqualConfig$1,linSpaceConfig$1,logConfig$1,log1pConfig$1,logicalAndConfig$1,logicalNotConfig$1,logicalOrConfig$1,LRNConfig$1,LRNGradConfig$1,maxConfig$1,maximumConfig$1,maxPoolConfig$1,maxPool3DConfig$1,maxPool3DGradConfig$1,maxPoolGradConfig$1,maxPoolWithArgmaxConfig$1,meanConfig$1,minConfig$1,minimumConfig$1,mirrorPadConfig$1,modConfig$1,multinomialConfig$1,multiplyConfig$1,negConfig$1,nonMaxSuppressionV3Config$1,nonMaxSuppressionV4Config$1,nonMaxSuppressionV5Config$1,notEqualConfig$1,oneHotConfig$1,onesLikeConfig$1,packConfig$1,padV2Config$1,powConfig$1,preluConfig$1,prodConfig$1,raggedGatherConfig$1,raggedRangeConfig$1,raggedTensorToTensorConfig$1,rangeConfig$1,realConfig$1,realDivConfig$1,reciprocalConfig$1,reluConfig$1,relu6Config$1,reshapeConfig$1,resizeBilinearConfig$1,resizeBilinearGradConfig$1,resizeNearestNeighborConfig$1,resizeNearestNeighborGradConfig$1,reverseConfig$1,rotateWithOffsetConfig$1,roundConfig$1,rsqrtConfig$1,scatterNdConfig$1,searchSortedConfig$1,selectConfig$1,seluConfig$1,sigmoidConfig$1,signConfig$1,sinConfig$1,sinhConfig$1,sliceConfig$1,softmaxConfig$1,softplusConfig$1,spaceToBatchNDConfig$1,sparseFillEmptyRowsConfig$1,sparseReshapeConfig$1,sparseSegmentMeanConfig$1,sparseSegmentSumConfig$1,sparseToDenseConfig$1,splitVConfig$1,sqrtConfig$1,squareConfig$1,squaredDifferenceConfig$1,staticRegexReplaceConfig$1,stepConfig$1,stridedSliceConfig$1,stringNGramsConfig$1,stringSplitConfig$1,stringToHashBucketFastConfig$1,subConfig$1,sumConfig$1,tanConfig$1,tanhConfig$1,tensorScatterUpdateConfig$1,tileConfig$1,topKConfig$1,transformConfig$1,transposeConfig$1,uniqueConfig$1,unpackConfig$1,unsortedSegmentSumConfig$1,zerosLikeConfig$1];for(const o of kernelConfigs$1)registerKernel(o);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(o,e){contexts[o]=e}function getWebGLContext(o,e){if(!(o in contexts)||e!=null){const i=getWebGLRenderingContext(o,e);if(i!==null)contexts[o]=i;else return console.log("Could not get context for WebGL version",o),null}const s=contexts[o];return s==null||s.isContextLost()?(delete contexts[o],getWebGLContext(o)):(s.disable(s.DEPTH_TEST),s.disable(s.STENCIL_TEST),s.disable(s.BLEND),s.disable(s.DITHER),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SAMPLE_COVERAGE),s.enable(s.SCISSOR_TEST),s.enable(s.CULL_FACE),s.cullFace(s.BACK),contexts[o])}function createCanvas(o){if(!env().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&o===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function getWebGLRenderingContext(o,e){if(o!==1&&o!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const s=e??createCanvas(o);return s.addEventListener("webglcontextlost",i=>{i.preventDefault(),delete contexts[o]},!1),env().getBool("SOFTWARE_WEBGL_ENABLED")&&(WEBGL_ATTRIBUTES.failIfMajorPerformanceCaveat=!1),o===1?s.getContext("webgl",WEBGL_ATTRIBUTES)||s.getContext("experimental-webgl",WEBGL_ATTRIBUTES):s.getContext("webgl2",WEBGL_ATTRIBUTES)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var PackingScheme;(function(o){o[o.DENSE=0]="DENSE",o[o.SHARED_BATCH=1]="SHARED_BATCH"})(PackingScheme||(PackingScheme={}));var TextureUsage;(function(o){o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD"})(TextureUsage||(TextureUsage={}));var PhysicalTextureType;(function(o){o[o.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",o[o.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",o[o.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",o[o.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",o[o.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(PhysicalTextureType||(PhysicalTextureType={}));function getUnpackedMatrixTextureShapeWidthHeight(o,e){return[e,o]}function getUnpackedArraySizeFromMatrixSize(o,e){return o*e}function getDenseTexShape(o){const e=sizeFromShape(o),s=Math.ceil(e/4);return sizeToSquarishShape(s)}function getPackedMatrixTextureShapeWidthHeight(o,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(o/2))]}function getPackedRGBAArraySizeFromMatrixShape(o,e){const[s,i]=getPackedMatrixTextureShapeWidthHeight(o,e);return s*i*4}function getTextureConfig(o,e){const s=o;let i,a,d,h,b,_,j,_e,g,c;return env().getNumber("WEBGL_VERSION")===2?(i=s.R32F,a=s.R16F,d=s.RGBA16F,h=s.RGBA32F,b=s.RED,j=4,_e=1,g=s.HALF_FLOAT,c=s.FLOAT,_=s.RGBA8):(i=o.RGBA,a=o.RGBA,d=o.RGBA,h=s.RGBA,b=o.RGBA,j=4,_e=4,g=e!=null?e.HALF_FLOAT_OES:null,c=o.FLOAT,_=o.RGBA),{internalFormatFloat:i,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:d,internalFormatPackedFloat:h,textureFormatFloat:b,downloadTextureFormat:_,downloadUnpackNumChannels:j,defaultNumChannels:_e,textureTypeHalfFloat:g,textureTypeFloat:c}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function callAndCheck(o,e){const s=e();return env().getBool("DEBUG")&&checkWebGLError(o),s}function checkWebGLError(o){const e=o.getError();if(e!==o.NO_ERROR)throw new Error("WebGL Error: "+getWebGLErrorMessage(o,e))}const MIN_FLOAT16=596e-10,MAX_FLOAT16=65504;function canBeRepresented(o){return!!(env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||o===0||MIN_FLOAT16<Math.abs(o)&&Math.abs(o)<MAX_FLOAT16)}function getWebGLErrorMessage(o,e){switch(e){case o.NO_ERROR:return"NO_ERROR";case o.INVALID_ENUM:return"INVALID_ENUM";case o.INVALID_VALUE:return"INVALID_VALUE";case o.INVALID_OPERATION:return"INVALID_OPERATION";case o.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case o.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case o.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function getExtensionOrThrow(o,e){return throwIfNull(o,()=>o.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function createVertexShader$1(o,e){const s=throwIfNull(o,()=>o.createShader(o.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(callAndCheck(o,()=>o.shaderSource(s,e)),callAndCheck(o,()=>o.compileShader(s)),o.getShaderParameter(s,o.COMPILE_STATUS)===!1)throw console.log(o.getShaderInfoLog(s)),new Error("Failed to compile vertex shader.");return s}function createFragmentShader(o,e){const s=throwIfNull(o,()=>o.createShader(o.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(callAndCheck(o,()=>o.shaderSource(s,e)),callAndCheck(o,()=>o.compileShader(s)),env().get("ENGINE_COMPILE_ONLY"))return s;if(o.getShaderParameter(s,o.COMPILE_STATUS)===!1)throw logShaderSourceAndInfoLog(e,o.getShaderInfoLog(s)),new Error("Failed to compile fragment shader.");return s}const lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(o,e){const s=lineNumberRegex.exec(e);if(s==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(o);return}const i=+s[1],a=o.split(`
`),d=a.length.toString().length+2,h=a.map((g,c)=>rightPad((c+1).toString(),d)+g);let b=0;for(let g=0;g<h.length;g++)b=Math.max(h[g].length,b);const _=h.slice(0,i-1),j=h.slice(i-1,i),_e=h.slice(i);console.log(_.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${rightPad(j[0],b)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(_e.join(`
`))}function createProgram(o){return throwIfNull(o,()=>o.createProgram(),"Unable to create WebGLProgram.")}function linkProgram(o,e){if(callAndCheck(o,()=>o.linkProgram(e)),!env().get("ENGINE_COMPILE_ONLY")&&o.getProgramParameter(e,o.LINK_STATUS)===!1)throw console.log(o.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function validateProgram(o,e){if(callAndCheck(o,()=>o.validateProgram(e)),o.getProgramParameter(e,o.VALIDATE_STATUS)===!1)throw console.log(o.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function createStaticVertexBuffer(o,e){const s=throwIfNull(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(o,()=>o.bindBuffer(o.ARRAY_BUFFER,s)),callAndCheck(o,()=>o.bufferData(o.ARRAY_BUFFER,e,o.STATIC_DRAW)),s}function createStaticIndexBuffer(o,e){const s=throwIfNull(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(o,()=>o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,s)),callAndCheck(o,()=>o.bufferData(o.ELEMENT_ARRAY_BUFFER,e,o.STATIC_DRAW)),s}function createTexture(o){return throwIfNull(o,()=>o.createTexture(),"Unable to create WebGLTexture.")}function validateTextureSize(o,e){const s=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(o<=0||e<=0){const i=`[${o}x${e}]`;throw new Error("Requested texture size "+i+" is invalid.")}if(o>s||e>s){const i=`[${o}x${e}]`,a=`[${s}x${s}]`;throw new Error("Requested texture size "+i+" greater than WebGL maximum on this browser / GPU "+a+".")}}function createFramebuffer(o){return throwIfNull(o,()=>o.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bindVertexBufferToProgramAttribute(o,e,s,i,a,d,h){const b=o.getAttribLocation(e,s);return b===-1?!1:(callAndCheck(o,()=>o.bindBuffer(o.ARRAY_BUFFER,i)),callAndCheck(o,()=>o.vertexAttribPointer(b,a,o.FLOAT,!1,d,h)),callAndCheck(o,()=>o.enableVertexAttribArray(b)),!0)}function bindTextureUnit(o,e,s){validateTextureUnit(o,s),callAndCheck(o,()=>o.activeTexture(o.TEXTURE0+s)),callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,e))}function getProgramUniformLocationOrThrow(o,e,s){return throwIfNull(o,()=>o.getUniformLocation(e,s),'uniform "'+s+'" not present in program.')}function getProgramUniformLocation(o,e,s){return o.getUniformLocation(e,s)}function bindTextureToProgramUniformSampler(o,e,s,i){callAndCheck(o,()=>bindTextureUnit(o,e,i)),callAndCheck(o,()=>o.uniform1i(s,i))}function bindColorTextureToFramebuffer(o,e,s){callAndCheck(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,s)),callAndCheck(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0))}function unbindColorTextureFromFramebuffer(o,e){callAndCheck(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,e)),callAndCheck(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,null,0))}function validateFramebuffer(o){const e=o.checkFramebufferStatus(o.FRAMEBUFFER);if(e!==o.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+getFramebufferErrorMessage(o,e))}function getFramebufferErrorMessage(o,e){switch(e){case o.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case o.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function throwIfNull(o,e,s){const i=callAndCheck(o,()=>e());if(i==null)throw new Error(s);return i}function validateTextureUnit(o,e){const s=o.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,i=e+o.TEXTURE0;if(i<o.TEXTURE0||i>s){const a=`[gl.TEXTURE0, gl.TEXTURE${s}]`;throw new Error(`textureUnit must be in ${a}.`)}}function getBatchDim(o,e=2){return sizeFromShape(o.slice(0,o.length-e))}function getRowsCols(o){if(o.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[o.length>1?o[o.length-2]:1,o[o.length-1]]}function getShapeAs3D(o){let e=[1,1,1];return o.length===0||o.length===1&&o[0]===1||(e=[getBatchDim(o),...getRowsCols(o)]),e}function getTextureShapeFromLogicalShape(o,e=!1){let s=env().getNumber("WEBGL_MAX_TEXTURE_SIZE"),i=env().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");i===1/0&&env().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(i=s/2),e&&(s=s*2,i=i*2,o=o.map((b,_)=>_>=o.length-2?nearestLargerEven(o[_]):o[_]),o.length===1&&(o=[2,o[0]])),o.length!==2&&(o=squeezeShape(o).newShape);let a=sizeFromShape(o),d=null;o.length<=1&&a<=s?d=[1,a]:o.length===2&&o[0]<=s&&o[1]<=s?d=o:o.length===3&&o[0]*o[1]<=s&&o[2]<=s?d=[o[0]*o[1],o[2]]:o.length===3&&o[0]<=s&&o[1]*o[2]<=s?d=[o[0],o[1]*o[2]]:o.length===4&&o[0]*o[1]*o[2]<=s&&o[3]<=s?d=[o[0]*o[1]*o[2],o[3]]:o.length===4&&o[0]<=s&&o[1]*o[2]*o[3]<=s&&(d=[o[0],o[1]*o[2]*o[3]]);const h=d!=null&&Math.max(...d)>i&&Math.min(...d)<=(e?2:1)&&Math.min(...d)>0;if(d==null||h)if(e){const b=getBatchDim(o);let _=2,j=2;o.length&&([_,j]=getRowsCols(o)),a=b*(_/2)*(j/2),d=sizeToSquarishShape(a).map(_e=>_e*2)}else d=sizeToSquarishShape(a);return d}function isEven(o){return o%2===0}function isReshapeFree(o,e){if(o=o.slice(-2),e=e.slice(-2),arraysEqual(o,e)||!o.length||!e.length||o[0]===0||o[1]===0||e[0]===0||e[1]===0)return!0;if(o.length!==e.length){const s=o[o.length-1],i=e[e.length-1];if(s===i||isEven(s)&&isEven(i)&&(o[0]===1||e[0]===1))return!0}return o[1]===e[1]&&isEven(o[0])&&isEven(e[0])}let MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER;function getWebGLMaxTextureSize(o){if(MAX_TEXTURE_SIZE==null){const e=getWebGLContext(o);MAX_TEXTURE_SIZE=e.getParameter(e.MAX_TEXTURE_SIZE)}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(o){if(MAX_TEXTURES_IN_SHADER==null){const e=getWebGLContext(o);MAX_TEXTURES_IN_SHADER=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(o){if(o===0)return 0;let e;const s=getWebGLContext(o);return hasExtension(s,"EXT_disjoint_timer_query_webgl2")&&o===2?e=2:hasExtension(s,"EXT_disjoint_timer_query")?e=1:e=0,e}function hasExtension(o,e){return o.getExtension(e)!=null}function isWebGLVersionEnabled(o){try{if(getWebGLContext(o)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function isCapableOfRenderingToFloatTexture(o){if(o===0)return!1;const e=getWebGLContext(o);if(o===1){if(!hasExtension(e,"OES_texture_float"))return!1}else if(!hasExtension(e,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(e)}function isDownloadFloatTextureEnabled(o){if(o===0)return!1;const e=getWebGLContext(o);if(o===1){if(!hasExtension(e,"OES_texture_float")||!hasExtension(e,"WEBGL_color_buffer_float"))return!1}else{if(hasExtension(e,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(e);const i="EXT_color_buffer_half_float";if(hasExtension(e,i)){const a=e.getExtension(i);return createHalfFloatTextureAndBindToFramebuffer(e,a)}return!1}return createFloatTextureAndBindToFramebuffer(e)}function createFloatTextureAndBindToFramebuffer(o){const e=getTextureConfig(o),s=o.createTexture();o.bindTexture(o.TEXTURE_2D,s),o.texImage2D(o.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const d=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,d),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,s,0);const h=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(s),o.deleteFramebuffer(d),h}function createHalfFloatTextureAndBindToFramebuffer(o,e){const s=getTextureConfig(o,e),i=o.createTexture();o.bindTexture(o.TEXTURE_2D,i),o.texImage2D(o.TEXTURE_2D,0,s.internalFormatHalfFloat,1,1,0,s.textureFormatFloat,s.textureTypeHalfFloat,null);const h=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,h),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,i,0);const b=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(i),o.deleteFramebuffer(h),b}function isWebGLFenceEnabled(o){return o!==2?!1:getWebGLContext(o).fenceSync!=null}function assertNotComplex(o,e){Array.isArray(o)||(o=[o]),o.forEach(s=>{s!=null&&assert$1(s.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV=env();ENV.registerFlag("HAS_WEBGL",()=>ENV.getNumber("WEBGL_VERSION")>0);ENV.registerFlag("WEBGL_VERSION",()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0);ENV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ENV.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ENV.get("WEBGL_VERSION")===2);ENV.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ENV.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ENV.registerFlag("WEBGL_PACK",()=>ENV.getBool("HAS_WEBGL"));ENV.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CLIP",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_REDUCE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_LAZILY_UNPACK",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_CONV_IM2COL",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>getWebGLMaxTextureSize(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>getMaxTexturesInShader(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const o=ENV.getNumber("WEBGL_VERSION");return o===0?0:getWebGLDisjointQueryTimerVersion(o)});ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ENV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!isMobile());ENV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>isCapableOfRenderingToFloatTexture(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ENV.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ENV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ENV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>isDownloadFloatTextureEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_FENCE_API_ENABLED",()=>isWebGLFenceEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ENV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ENV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,o=>{if(typeof o!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${o}.`);if(o<0&&o!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${o}.`)});ENV.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>isMobile()?1:-1,o=>{if(typeof o!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${o}.`);if(o<0&&o!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${o}.`)});ENV.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ENV.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ENV.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ENV.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ENV.registerFlag("WEBGL_EXP_CONV",()=>!1);ENV.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ENV.getBool("IS_TEST"));ENV.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ENV.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ENV.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ENV.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getGlslDifferences(){let o,e,s,i,a,d,h,b,_,j;return env().getNumber("WEBGL_VERSION")===2?(o="#version 300 es",e="in",s="out",i="in",a="texture",d="outputColor",h="out vec4 outputColor;",b=env().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",_="",j=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(o="",e="attribute",s="varying",i="varying",a="texture2D",d="gl_FragColor",h="",b=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,_=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,j=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:o,attribute:e,varyingVs:s,varyingFs:i,texture2D:a,output:d,defineOutput:h,defineSpecialNaN:b,defineSpecialInf:_,defineRound:j}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getLogicalCoordinatesFromFlatIndex(o,e,s="index"){const i=computeStrides(e);return i.map((a,d)=>{const h=`int ${o[d]} = ${s} / ${a}`,b=d===i.length-1?`int ${o[d+1]} = ${s} - ${o[d]} * ${a}`:`index -= ${o[d]} * ${a}`;return`${h}; ${b};`}).join("")}function getOutputLogicalCoordinatesFromFlatIndexByUniform(o,e,s="index"){const i=computeStrides(e);return i.map((a,d)=>{const h=`int ${o[d]} = ${s} / outShapeStrides[${d}]`,b=d===i.length-1?`int ${o[d+1]} = ${s} - ${o[d]} * outShapeStrides[${d}]`:`index -= ${o[d]} * outShapeStrides[${d}]`;return`${h}; ${b};`}).join("")}function symbolicallyComputeStrides(o,e){const s=o.length,i=o.map(d=>`${e}[${d}]`),a=new Array(s-1);a[s-2]=i[s-1];for(let d=s-3;d>=0;--d)a[d]=`(${a[d+1]} * ${i[d+1]})`;return a}function getLogicalCoordinatesFromFlatIndexByUniform(o,e,s="index"){const i=o.map((d,h)=>h),a=symbolicallyComputeStrides(i,e);return a.map((d,h)=>{const b=`int ${o[h]} = ${s} / ${a[h]}`,_=h===a.length-1?`int ${o[h+1]} = ${s} - ${o[h]} * ${a[h]}`:`index -= ${o[h]} * ${a[h]}`;return`${b}; ${_};`}).join("")}function getFlatIndexFrom3D(o){const e=computeStrides(o).map(s=>s.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function getFlatIndexFrom3DOutput(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const ENCODE_FLOAT_SNIPPET=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims}=backend_util;function makeShader(o,e,s){const i=[];if(o.forEach($=>{const et=sizeFromShape($.shapeInfo.logicalShape);if($.shapeInfo.isUniform?i.push(`uniform float ${$.name}${et>1?`[${et}]`:""};`):(i.push(`uniform sampler2D ${$.name};`),i.push(`uniform int offset${$.name};`)),s.enableShapeUniforms){const{uniformShape:tt}=getUniformInfoFromShape(s.packedInputs,$.shapeInfo.logicalShape,$.shapeInfo.texShape);switch(tt.length){case 1:i.push(`uniform int ${$.name}Shape;`);break;case 2:i.push(`uniform ivec2 ${$.name}Shape;`);break;case 3:i.push(`uniform ivec3 ${$.name}Shape;`);break;case 4:i.push(`uniform ivec4 ${$.name}Shape;`);break}i.push(`uniform ivec2 ${$.name}TexShape;`)}}),s.enableShapeUniforms){switch(e.logicalShape.length){case 1:i.push("uniform int outShape;");break;case 2:i.push("uniform ivec2 outShape;"),i.push("uniform int outShapeStrides;");break;case 3:i.push("uniform ivec3 outShape;"),i.push("uniform ivec2 outShapeStrides;");break;case 4:i.push("uniform ivec4 outShape;"),i.push("uniform ivec3 outShapeStrides;");break}i.push("uniform ivec2 outTexShape;")}s.customUniforms&&s.customUniforms.forEach($=>{i.push(`uniform ${$.type} ${$.name}${$.arrayIndex?`[${$.arrayIndex}]`:""};`)});const a=i.join(`
`),d=o.map($=>getInputSamplingSnippet($,e,s.packedInputs,s.enableShapeUniforms)).join(`
`),h=e.texShape,b=getGlslDifferences(),_=getFloatTextureSampleSnippet(b);let j,_e,g=getShaderPrefix(b);return e.isPacked?(j=getPackedOutputSamplingSnippet(e.logicalShape,h,s.enableShapeUniforms),_e=getFloatTextureSetRGBASnippet(b)):(j=getOutputSamplingSnippet(e.logicalShape,h,s.enableShapeUniforms),_e=getFloatTextureSetRSnippet(b)),s.packedInputs&&(g+=SHADER_PACKED_PREFIX),[g,_,_e,a,j,d,s.userCode].join(`
`)}function getSamplerFromInInfo(o,e=!1){const s=o.shapeInfo.logicalShape;switch(s.length){case 0:return getSamplerScalar(o,e);case 1:return getSampler1D(o,e);case 2:return getSampler2D(o,e);case 3:return getSampler3D(o,e);case 4:return getSampler4D(o,e);case 5:return getSampler5D(o);case 6:return getSampler6D(o);default:throw new Error(`${s.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(o,e){switch(o.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(o);case 1:return getPackedSampler1D(o,e);case 2:return getPackedSampler2D(o,e);case 3:return getPackedSampler3D(o,e);default:return getPackedSamplerND(o,e)}}function getInputSamplingSnippet(o,e,s=!1,i){let a="";s?a+=getPackedSamplerFromInInfo(o,i):a+=getSamplerFromInInfo(o,i);const d=o.shapeInfo.logicalShape,h=e.logicalShape;return d.length<=h.length&&(s?a+=getPackedSamplerAtOutputCoords(o,e):a+=getSamplerAtOutputCoords(o,e)),a}function getPackedOutputSamplingSnippet(o,e,s){switch(o.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(o,e,s);case 2:return getOutputPacked2DCoords(o,e,s);case 3:return getOutputPacked3DCoords(o,e,s);default:return getOutputPackedNDCoords(o,e,s)}}function getOutputSamplingSnippet(o,e,s){switch(o.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(o,e,s);case 2:return getOutput2DCoords(o,e,s);case 3:return getOutput3DCoords(o,e,s);case 4:return getOutput4DCoords(o,e,s);case 5:return getOutput5DCoords(o,e);case 6:return getOutput6DCoords(o,e);default:throw new Error(`${o.length}-D output sampling is not yet supported`)}}function getFloatTextureSampleSnippet(o){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${o.texture2D}(textureSampler, uv).r;
    }
  `}function getFloatTextureSetRSnippet(o){return`
    void setOutput(float val) {
      ${o.output} = vec4(val, 0, 0, 0);
    }
  `}function getFloatTextureSetRGBASnippet(o){return`
    void setOutput(vec4 val) {
      ${o.output} = val;
    }
  `}function getShaderPrefix(o){return`${o.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${o.varyingFs} vec2 resultUV;
    ${o.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${o.defineSpecialNaN}
    ${o.defineSpecialInf}
    ${o.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SAMPLE_1D_SNIPPET}
    ${SAMPLE_2D_SNIPPET}
    ${SAMPLE_3D_SNIPPET}
  `}const SAMPLE_1D_SNIPPET=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_2D_SNIPPET=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_3D_SNIPPET=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SHADER_PACKED_PREFIX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function getOutputScalarCoords(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function getOutputPacked1DCoords(o,e,s){const i=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return i[0]===1?s?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${i[1]}.0);
      }
    `:i[1]===1?s?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${i[0]}.0);
      }
    `:s?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));
      return 2 * (resTexRC.x * ${i[1]} + resTexRC.y);
    }
  `}function getOutput1DCoords(o,e,s){return e[0]===1?s?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?s?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:s?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function getOutputPacked3DCoords(o,e,s){if(s)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const i=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(o[2]/2),d=a*Math.ceil(o[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));
      int index = resTexRC.x * ${i[1]} + resTexRC.y;

      int b = index / ${d};
      index -= b * ${d};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function getOutput3DCoords(o,e,s){if(s)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],o)}
    return ivec3(r, c, d);
  }
`;const i=getLogicalCoordinatesFromFlatIndex(["r","c","d"],o);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${i}
      return ivec3(r, c, d);
    }
  `}function getOutputPackedNDCoords(o,e,s){if(s)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const i=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(o[o.length-1]/2),d=a*Math.ceil(o[o.length-2]/2);let h=d,b="",_="b, r, c";for(let j=2;j<o.length-1;j++)h*=o[o.length-j-1],b=`
      int b${j} = index / ${h};
      index -= b${j} * ${h};
    `+b,_=`b${j}, `+_;return`
    ivec${o.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));
      int index = resTexRC.x * ${i[1]} + resTexRC.y;

      ${b}

      int b = index / ${d};
      index -= b * ${d};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${o.length}(${_});
    }
  `}function getOutput4DCoords(o,e,s){if(s)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d","d2"],o)}
      return ivec4(r, c, d, d2);
    }
  `;const i=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],o);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${i}
      return ivec4(r, c, d, d2);
    }
  `}function getOutput5DCoords(o,e){const s=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],o);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${s}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function getOutput6DCoords(o,e){const s=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],o);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${s}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function getOutputPacked2DCoords(o,e,s){const i=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(arraysEqual(o,e))return s?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${i[0]}, ${i[1]}));
      }
    `;const a=Math.ceil(o[1]/2);return s?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));

      int index = resTexRC.x * ${i[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function getOutput2DCoords(o,e,s){return arraysEqual(o,e)?s?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:o[1]===1?s?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:o[0]===1?s?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:s?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${o[1]};
      int c = index - r * ${o[1]};
      return ivec2(r, c);
    }
  `}function getFlatOffsetUniformName(o){return`offset${o}`}function getPackedSamplerScalar(o){const e=o.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),i=getGlslDifferences();return`
    vec4 ${s}() {
      return ${i.texture2D}(${e}, halfCR);
    }
  `}function getSamplerScalar(o,e){const s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1);if(o.shapeInfo.isUniform)return`float ${i}() {return ${s};}`;const[a,d]=o.shapeInfo.texShape;if(a===1&&d===1)return`
      float ${i}() {
        return sampleTexture(${s}, halfCR);
      }
    `;const h=getFlatOffsetUniformName(s);if(e)return`
    float ${i}() {
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], ${h});
      return sampleTexture(${s}, uv);
    }
  `;const[b,_]=o.shapeInfo.texShape;return`
    float ${i}() {
      vec2 uv = uvFromFlat(${b}, ${_}, ${h});
      return sampleTexture(${s}, uv);
    }
  `}function getPackedSampler1D(o,e){const s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=o.shapeInfo.texShape,d=getGlslDifferences();if(e)return`
    vec4 ${i}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${d.texture2D}(${s}, uv);
    }
  `;const h=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${i}(int index) {
      vec2 uv = packedUVfrom1D(
        ${h[0]}, ${h[1]}, index);
      return ${d.texture2D}(${s}, uv);
    }
  `}function getSampler1D(o,e){const s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1);if(o.shapeInfo.isUniform)return`
      float ${i}(int index) {
        ${getUniformSampler(o)}
      }
    `;const a=o.shapeInfo.texShape,d=a[0],h=a[1];if(h===1&&d===1)return`
      float ${i}(int index) {
        return sampleTexture(${s}, halfCR);
      }
    `;const b=getFlatOffsetUniformName(s);return h===1?e?`
      float ${i}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${b}) + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${b}) + 0.5) / ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `:d===1?e?`
      float ${i}(int index) {
        vec2 uv = vec2((float(index + ${b}) + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${i}(int index) {
        vec2 uv = vec2((float(index + ${b}) + 0.5) / ${h}.0, 0.5);
        return sampleTexture(${s}, uv);
      }
    `:e?`
    float ${i}(int index) {
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${i}(int index) {
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function getPackedSampler2D(o,e){const s=o.shapeInfo.logicalShape,i=o.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),d=o.shapeInfo.texShape,h=d[0],b=d[1],_=getGlslDifferences();if(d!=null&&arraysEqual(s,d))return e?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);

        return ${_.texture2D}(${i}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${b}.0, ${h}.0);

        return ${_.texture2D}(${i}, uv);
      }
    `;if(e)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${i}TexShape[0]) / 2.0), ceil(float(${i}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${i}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${_.texture2D}(${i}, uv);
    }
  `;const j=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],_e=Math.ceil(s[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${_e}, ${j[0]}, ${j[1]}, row, col);
      return ${_.texture2D}(${i}, uv);
    }
  `}function getSampler2D(o,e){const s=o.shapeInfo.logicalShape,i=o.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),d=o.shapeInfo.texShape;if(d!=null&&arraysEqual(s,d)){if(e)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `;const c=d[0],$=d[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${$}.0, ${c}.0);
      return sampleTexture(${i}, uv);
    }
  `}const{newShape:h,keptDims:b}=squeezeShape(s),_=h;if(_.length<s.length){const c=squeezeInputInfo(o,_),$=["row","col"];return`
      ${getSamplerFromInInfo(c,e)}
      float ${a}(int row, int col) {
        return ${a}(${getSqueezedParams($,b)});
      }
    `}if(o.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${s[1]}, 1)));
        ${getUniformSampler(o)}
      }
    `;const j=d[0],_e=d[1],g=getFlatOffsetUniformName(i);return _e===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${g}), vec3(${i}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${i}TexShape[0]));
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${g}), vec3(${s[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${j}.0);
      return sampleTexture(${i}, uv);
    }
  `:j===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${g}), vec3(${i}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${i}TexShape[1]), 0.5);
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${g}), vec3(${s[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${_e}.0, 0.5);
      return sampleTexture(${i}, uv);
    }
  `:e?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i}Shape[1] + col + ${g};
        vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);
        return sampleTexture(${i}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${s[1]} + col + ${g};
    vec2 uv = uvFromFlat(${j}, ${_e}, index);
    return sampleTexture(${i}, uv);
  }
`}function getPackedSampler3D(o,e){const s=o.shapeInfo.logicalShape,i=o.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),d=o.shapeInfo.texShape,h=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)];if(s[0]===1){const c=s.slice(1),$=[1,2],et=squeezeInputInfo(o,c),tt=["b","row","col"];return`
        ${getPackedSamplerFromInInfo(et,e)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${getSqueezedParams(tt,$)});
        }
      `}const b=getGlslDifferences();if(e)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${i}TexShape[0]) / 2.0), ceil(float(${i}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${i}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${i}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${b.texture2D}(${i}, uv);
    }
  `;const _=h[0],j=h[1],_e=Math.ceil(s[2]/2),g=_e*Math.ceil(s[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${_}, ${j}, ${g}, ${_e}, b, row, col);
      return ${b.texture2D}(${i}, uv);
    }
  `}function getSampler3D(o,e){const s=o.shapeInfo.logicalShape,i=o.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),d=s[1]*s[2],h=s[2],{newShape:b,keptDims:_}=squeezeShape(s),j=b;if(j.length<s.length){const tt=squeezeInputInfo(o,j),nt=["row","col","depth"];return`
        ${getSamplerFromInInfo(tt,e)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${getSqueezedParams(nt,_)});
        }
      `}if(o.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${d}, ${h}, 1)));
        ${getUniformSampler(o)}
      }
    `;const _e=o.shapeInfo.texShape,g=_e[0],c=_e[1],$=o.shapeInfo.flatOffset;if(c===d&&$==null)return e?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${i}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${h}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${g}.0);
          return sampleTexture(${i}, uv);
        }
      `;if(c===h&&$==null)return e?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${i}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${s[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${g}.0);
      return sampleTexture(${i}, uv);
    }
  `;const et=getFlatOffsetUniformName(i);return e?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${i}Shape[1] * ${i}Shape[2];
      int stride1 = ${i}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${et};
      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);
      return sampleTexture(${i}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${d} + col * ${h} + depth + ${et};
        vec2 uv = uvFromFlat(${g}, ${c}, index);
        return sampleTexture(${i}, uv);
      }
  `}function getPackedSamplerND(o,e){const s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=getGlslDifferences();if(e)return`
    vec4 ${i}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${s}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${s}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${s}, uv);
    }
  `;const d=o.shapeInfo.logicalShape,h=d.length,b=o.shapeInfo.texShape,_=[Math.ceil(b[0]/2),Math.ceil(b[1]/2)],j=_[0],_e=_[1],g=Math.ceil(d[h-1]/2);let c=g*Math.ceil(d[h-2]/2),$="int b, int row, int col",et=`b * ${c} + (row / 2) * ${g} + (col / 2)`;for(let tt=2;tt<h-1;tt++)$=`int b${tt}, `+$,c*=d[h-tt-1],et=`b${tt} * ${c} + `+et;return`
    vec4 ${i}(${$}) {
      int index = ${et};
      int texR = index / ${_e};
      int texC = index - texR * ${_e};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${_e}, ${j});
      return ${a.texture2D}(${s}, uv);
    }
  `}function getSampler4D(o,e){const s=o.shapeInfo.logicalShape,i=o.name,a="get"+i.charAt(0).toUpperCase()+i.slice(1),d=s[3],h=s[2]*d,b=s[1]*h,{newShape:_,keptDims:j}=squeezeShape(s);if(_.length<s.length){const ot=squeezeInputInfo(o,_),st=["row","col","depth","depth2"];return`
      ${getSamplerFromInInfo(ot,e)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${getSqueezedParams(st,j)});
      }
    `}if(o.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${b}, ${h}, ${d}, 1)));
        ${getUniformSampler(o)}
      }
    `;const _e=o.shapeInfo.flatOffset,g=o.shapeInfo.texShape,c=g[0],$=g[1],et=`int stride2 = ${i}Shape[3];`,tt=`int stride1 = ${i}Shape[2] * stride2;`,nt=`int stride0 = ${i}Shape[1] * stride1;`;if($===b&&_e==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${et}
        ${tt}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${h}, ${d}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${$}.0, ${c}.0);
        return sampleTexture(${i}, uv);
      }
    `;if($===d&&_e==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${i}Shape[1] * ${i}Shape[2], ${i}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s[1]*s[2]}, ${s[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${$}.0, ${c}.0);
        return sampleTexture(${i}, uv);
      }
    `;const rt=getFlatOffsetUniformName(i);return e?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${et}
      ${tt}
      ${nt}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index + ${rt});
      return sampleTexture(${i}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${b} + col * ${h} +
          depth * ${d} + depth2;
      vec2 uv = uvFromFlat(${c}, ${$}, index + ${rt});
      return sampleTexture(${i}, uv);
    }
  `}function getSampler5D(o){const e=o.shapeInfo.logicalShape,s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e[4],d=e[3]*a,h=e[2]*d,b=e[1]*h,{newShape:_,keptDims:j}=squeezeShape(e);if(_.length<e.length){const tt=squeezeInputInfo(o,_),nt=["row","col","depth","depth2","depth3"];return`
      ${getSamplerFromInInfo(tt)}
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        return ${i}(${getSqueezedParams(nt,j)});
      }
    `}if(o.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${b}, ${h}, ${d}, ${a})) +
          depth3;
        ${getUniformSampler(o)}
      }
    `;const _e=o.shapeInfo.flatOffset,g=o.shapeInfo.texShape,c=g[0],$=g[1];if($===b&&_e==null)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${h}, ${d}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${$}.0, ${c}.0);
        return sampleTexture(${s}, uv);
      }
    `;if($===a&&_e==null)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${$}.0, ${c}.0);
        return sampleTexture(${s}, uv);
      }
    `;const et=getFlatOffsetUniformName(s);return`
    float ${i}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${b} + col * ${h} + depth * ${d} +
          depth2 * ${a} + depth3 + ${et};
      vec2 uv = uvFromFlat(${c}, ${$}, index);
      return sampleTexture(${s}, uv);
    }
  `}function getSampler6D(o){const e=o.shapeInfo.logicalShape,s=o.name,i="get"+s.charAt(0).toUpperCase()+s.slice(1),{newShape:a,keptDims:d}=squeezeShape(e);if(a.length<e.length){const nt=squeezeInputInfo(o,a),rt=["row","col","depth","depth2","depth3","depth4"];return`
      ${getSamplerFromInInfo(nt)}
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${i}(${getSqueezedParams(rt,d)});
      }
    `}const h=e[5],b=e[4]*h,_=e[3]*b,j=e[2]*_,_e=e[1]*j;if(o.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${_e}, ${j}, ${_}, ${b})) +
          dot(
            vec2(depth3, depth4),
            vec2(${h}, 1)));
        ${getUniformSampler(o)}
      }
    `;const g=o.shapeInfo.flatOffset,c=o.shapeInfo.texShape,$=c[0],et=c[1];if(et===_e&&g==null)return`
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${j}, ${_}, ${b}, ${h})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${et}.0, ${$}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(et===h&&g==null)return`
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${et}.0, ${$}.0);
        return sampleTexture(${s}, uv);
      }
    `;const tt=getFlatOffsetUniformName(s);return`
    float ${i}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${_e} + col * ${j} + depth * ${_} +
          depth2 * ${b} + depth3 * ${h} + depth4 + ${tt};
      vec2 uv = uvFromFlat(${$}, ${et}, index);
      return sampleTexture(${s}, uv);
    }
  `}function getUniformSampler(o){const e=o.name,s=sizeFromShape(o.shapeInfo.logicalShape);return s<2?`return ${e};`:`
    for (int i = 0; i < ${s}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function getPackedSamplerAtOutputCoords(o,e){const s=o.name,i=s.charAt(0).toUpperCase()+s.slice(1),a="get"+i+"AtOutCoords",d=o.shapeInfo.logicalShape.length,h=e.logicalShape.length,b=getBroadcastDims(o.shapeInfo.logicalShape,e.logicalShape),_=getCoordsDataType(h),j=h-d;let _e;const g=["x","y","z","w","u","v"];d===0?_e="":h<2&&b.length>=1?_e="coords = 0;":_e=b.map(ot=>`coords.${g[ot+j]} = 0;`).join(`
`);let c="";h<2&&d>0?c="coords":c=o.shapeInfo.logicalShape.map((ot,st)=>`coords.${g[st+j]}`).join(", ");let $="return outputValue;";const tt=sizeFromShape(o.shapeInfo.logicalShape)===1,rt=sizeFromShape(e.logicalShape)===1;if(d===1&&!tt&&!rt)$=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(tt&&!rt)h===1?$=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:$=`
        return vec4(outputValue.x);
      `;else if(b.length){const ot=d-2,st=d-1;b.indexOf(ot)>-1&&b.indexOf(st)>-1?$="return vec4(outputValue.x);":b.indexOf(ot)>-1?$="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":b.indexOf(st)>-1&&($="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${_} coords = getOutputCoords();
      ${_e}
      vec4 outputValue = get${i}(${c});
      ${$}
    }
  `}function getSamplerAtOutputCoords(o,e){const s=o.name,i=s.charAt(0).toUpperCase()+s.slice(1),a="get"+i+"AtOutCoords",d=e.texShape,h=o.shapeInfo.texShape,b=o.shapeInfo.logicalShape.length,_=e.logicalShape.length;if(!o.shapeInfo.isUniform&&b===_&&o.shapeInfo.flatOffset==null&&arraysEqual(h,d))return`
      float ${a}() {
        return sampleTexture(${s}, resultUV);
      }
    `;const j=getCoordsDataType(_),_e=getBroadcastDims(o.shapeInfo.logicalShape,e.logicalShape),g=_-b;let c;const $=["x","y","z","w","u","v"];b===0?c="":_<2&&_e.length>=1?c="coords = 0;":c=_e.map(tt=>`coords.${$[tt+g]} = 0;`).join(`
`);let et="";return _<2&&b>0?et="coords":et=o.shapeInfo.logicalShape.map((tt,nt)=>`coords.${$[nt+g]}`).join(", "),`
    float ${a}() {
      ${j} coords = getOutputCoords();
      ${c}
      return get${i}(${et});
    }
  `}function getCoordsDataType(o){if(o<=1)return"int";if(o===2)return"ivec2";if(o===3)return"ivec3";if(o===4)return"ivec4";if(o===5)return"ivec5";if(o===6)return"ivec6";throw Error(`GPU for rank ${o} is not yet supported`)}function getUniformInfoFromShape(o,e,s){const{newShape:i,keptDims:a}=squeezeShape(e),d=e.length,h=o&&d===3&&e[0]===1,b=h?e.slice(1):i,_=!o&&d>1&&!arraysEqual(e,s)&&i.length<d||h;return{useSqueezeShape:_,uniformShape:_?b:e,keptDims:a}}function squeezeInputInfo(o,e){const s=JSON.parse(JSON.stringify(o));return s.shapeInfo.logicalShape=e,s}function getSqueezedParams(o,e){return e.map(s=>o[s]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function compileProgram(o,e,s,i){const a=s.map((_e,g)=>{const c={logicalShape:_e.shape,texShape:_e.isUniform?null:_e.texData.texShape,isUniform:_e.isUniform,isPacked:_e.isUniform?!1:_e.texData.isPacked,flatOffset:null};return _e.texData!=null&&_e.texData.slice!=null&&_e.texData.slice.flatOffset>0&&(c.flatOffset=_e.texData.slice.flatOffset),{name:e.variableNames[g],shapeInfo:c}}),d=a.map(_e=>_e.shapeInfo),h={logicalShape:i.shape,texShape:i.texData.texShape,isUniform:!1,isPacked:i.texData.isPacked,flatOffset:null},b=makeShader(a,h,e),_=createFragmentShader(o.gl,b),j=o.createProgram(_);return env().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:_,source:b,webGLProgram:j,inShapeInfos:d,outShapeInfo:h,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(o.buildVao(j),Object.assign({program:e,fragmentShader:_,source:b,webGLProgram:j,inShapeInfos:d,outShapeInfo:h},getUniformLocations(o,e,j)))}function getUniformLocations(o,e,s){const i=[],a=[];let d,h,b,_=null,j=null;j=o.getUniformLocation(s,"NAN",!1),env().getNumber("WEBGL_VERSION")===1&&(_=o.getUniformLocation(s,"INFINITY",!1));const _e=!1;for(const g of e.variableNames){const c={name:g,uniform:o.getUniformLocation(s,g,_e),offset:o.getUniformLocation(s,`offset${g}`,_e)};e.enableShapeUniforms&&(c.shape=o.getUniformLocation(s,`${g}Shape`,_e),c.texShape=o.getUniformLocation(s,`${g}TexShape`,_e)),i.push(c)}if(e.enableShapeUniforms&&(d=o.getUniformLocation(s,"outShape",_e),b=o.getUniformLocation(s,"outShapeStrides",_e),h=o.getUniformLocation(s,"outTexShape",_e)),e.customUniforms)for(const g of e.customUniforms)a.push(o.getUniformLocation(s,g.name,_e));return{variablesLocations:i,customUniformLocations:a,infLoc:_,nanLoc:j,outShapeLocation:d,outShapeStridesLocation:b,outTexShapeLocation:h}}function validateBinaryAndProgram(o,e){if(o.length!==e.length)throw Error(`Binary was compiled with ${o.length} inputs, but was executed with ${e.length} inputs`);o.forEach((s,i)=>{const a=s.logicalShape,d=e[i],h=d.shape;if(!arraysEqual(a,h))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${h} must match`);if(s.isUniform&&d.isUniform)return;const b=s.texShape,_=d.isUniform?null:d.texData.texShape;if(!arraysEqual(b,_))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${b} and ${_} must match`)})}function runProgram(o,e,s,i,a){e.program.enableShapeUniforms||(validateBinaryAndProgram(e.inShapeInfos,s),validateBinaryAndProgram([e.outShapeInfo],[i]));const d=i.texData.texture,h=i.texData.texShape;i.texData.isPacked?o.setOutputPackedMatrixTexture(d.texture,h[0],h[1]):o.setOutputMatrixTexture(d.texture,h[0],h[1]),o.setProgram(e.webGLProgram),o.bindVertexArray(e.webGLProgram.vao),env().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&o.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&o.gl.uniform1f(e.nanLoc,NaN);for(let _=0;_<s.length;++_){const j=s[_],{uniform:_e,offset:g,shape:c,texShape:$}=e.variablesLocations[_];if(c){const{uniformShape:et}=getUniformInfoFromShape(e.program.packedInputs,j.shape,j.texData.texShape);switch(et.length){case 1:o.gl.uniform1iv(c,new Int32Array(et));break;case 2:o.gl.uniform2iv(c,new Int32Array(et));break;case 3:o.gl.uniform3iv(c,new Int32Array(et));break;case 4:o.gl.uniform4iv(c,new Int32Array(et));break}}if($&&o.gl.uniform2i($,j.texData.texShape[0],j.texData.texShape[1]),_e!=null){if(j.isUniform){if(sizeFromShape(j.shape)<2)o.gl.uniform1f(_e,j.uniformValues[0]);else{let et=j.uniformValues;et instanceof Float32Array||(et=new Float32Array(et)),o.gl.uniform1fv(_e,et)}continue}j.texData.slice!=null&&g!=null&&o.gl.uniform1i(g,j.texData.slice.flatOffset),o.setInputMatrixTexture(j.texData.texture.texture,_e,_)}}const b=e.outShapeLocation;if(b)switch(i.shape.length){case 1:o.gl.uniform1iv(b,new Int32Array(i.shape));break;case 2:o.gl.uniform2iv(b,new Int32Array(i.shape));break;case 3:o.gl.uniform3iv(b,new Int32Array(i.shape));break;case 4:o.gl.uniform4iv(b,new Int32Array(i.shape));break}if(e.outShapeStridesLocation){const _=computeStrides(i.shape);switch(i.shape.length){case 2:o.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(_));break;case 3:o.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(_));break;case 4:o.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(_));break}}if(e.outTexShapeLocation&&o.gl.uniform2i(e.outTexShapeLocation,i.texData.texShape[0],i.texData.texShape[1]),e.program.customUniforms&&a)for(let _=0;_<e.program.customUniforms.length;++_){const j=e.program.customUniforms[_],_e=e.customUniformLocations[_],g=a[_];if(j.type==="float")o.gl.uniform1fv(_e,g);else if(j.type==="vec2")o.gl.uniform2fv(_e,g);else if(j.type==="vec3")o.gl.uniform3fv(_e,g);else if(j.type==="vec4")o.gl.uniform4fv(_e,g);else if(j.type==="int")o.gl.uniform1iv(_e,g);else if(j.type==="ivec2")o.gl.uniform2iv(_e,g);else if(j.type==="ivec3")o.gl.uniform3iv(_e,g);else if(j.type==="ivec4")o.gl.uniform4iv(_e,g);else throw Error(`uniform type ${j.type} is not supported yet.`)}o.executeProgram()}function makeShaderKey(o,e,s){let i="";e.concat(s).forEach(h=>{const b=h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0;if(o.enableShapeUniforms&&!h.isUniform){const _=h.texData.texShape,{useSqueezeShape:j,uniformShape:_e,keptDims:g}=getUniformInfoFromShape(o.packedInputs,h.shape,_);let c="",$="",et="";if(_e.length===1&&o.packedInputs){const at=[Math.ceil(_[0]/2),Math.ceil(_[1]/2)];c=`${at[0]>1}_${at[1]>1}`}else if(_e.length===2&&!o.packedInputs)$=`${_e[0]>1}_${_e[1]>1}`;else if(_e.length>2&&!o.packedInputs){const at=computeStrides(_e);et=`${at[0]===_[1]}_${at[at.length-1]===_[1]}`}const tt=h.shape.length,nt=_e.length===2&&arraysEqual(h.shape,_),rt=sizeFromShape(h.shape)===1,ot=getBroadcastDims$1(h.shape,s.shape),st=!o.packedInputs&&tt===s.shape.length&&arraysEqual(_,s.texData.texShape),it=o.packedInputs||_e.length>2?"":`${_[0]>1}_${_[1]>1}`;i+=`${tt}_${st}_${j?g:""}_${_e.length}_${rt}_${ot}_${nt}_${c}_${$}_${et}_${it}_${b}`}else{const _=h.isUniform?"uniform":h.texData.texShape;i+=`${h.shape}_${_}_${b}`}});const a=o.userCode;let d=o.constructor.name;return d+="_"+i+"_"+a+`${env().getNumber("WEBGL_VERSION")}`,d}function useShapeUniforms(o){return env().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&o<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=getGlslDifferences();this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],e):getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=getGlslDifferences();this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],e):getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatProgram{constructor(e){this.variableNames=["A"],this.outTexUsage=TextureUsage.DOWNLOAD;const s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${s.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TextureUsage.DOWNLOAD;const s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${s.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHANNEL_CHAR_TO_INDEX_MAP={R:0,G:1,B:2,A:3};class EncodeMatrixProgram{constructor(e,s=!1,i="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=getGlslDifferences();this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let d="result";s&&(d="floor(result * 255. + 0.5)");let h="";for(let b=0;b<i.length;b++){const _=i[b];h+=`
          if(offset == ${b}) {
            result = values[${CHANNEL_CHAR_TO_INDEX_MAP[_]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${i.length});

        flatIndex = idiv(flatIndex, ${i.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${h}
        }
        ${a.output} = vec4(${d}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixPackedProgram{constructor(e,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=getGlslDifferences();this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let a="",d="result";s&&(d="floor(result * 255. + 0.5)");for(let h=0;h<=1;h++)for(let b=0;b<=1;b++){const _=h*2+b;a+=`
          localCoords = coords;
          if(localCoords[2] + ${b} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${b};
          if (localCoords[1] + ${h} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${h};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${i.texture2D}(A, uv);

            if (offset == 0) {
              result[${_}] = values[0];
            } else if (offset == 1) {
              result[${_}] = values[1];
            } else if (offset == 2) {
              result[${_}] = values[2];
            } else {
              result[${_}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${i.output} = ${d};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createVertexShader(o){const e=getGlslDifferences(),s=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return createVertexShader$1(o,s)}function createVertexBuffer(o){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return createStaticVertexBuffer(o,e)}function createIndexBuffer(o){const e=new Uint16Array([0,1,2,2,1,3]);return createStaticIndexBuffer(o,e)}function createAndConfigureTexture(o,e,s,i,a,d){validateTextureSize(e,s);const h=createTexture(o),b=o.TEXTURE_2D;return callAndCheck(o,()=>o.bindTexture(b,h)),callAndCheck(o,()=>o.texParameteri(b,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE)),callAndCheck(o,()=>o.texParameteri(b,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)),callAndCheck(o,()=>o.texParameteri(b,o.TEXTURE_MIN_FILTER,o.NEAREST)),callAndCheck(o,()=>o.texParameteri(b,o.TEXTURE_MAG_FILTER,o.NEAREST)),env().getNumber("WEBGL_VERSION")===1?callAndCheck(o,()=>o.texImage2D(b,0,i,e,s,0,a,d,null)):callAndCheck(o,()=>o.texStorage2D(b,1,i,e,s)),callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,null)),{texture:h,texShape:[s,e]}}function getInternalFormatForFloat32MatrixTexture(o){return o.internalFormatFloat}function createFloat32MatrixTexture(o,e,s,i){const[a,d]=getUnpackedMatrixTextureShapeWidthHeight(e,s);return createAndConfigureTexture(o,a,d,getInternalFormatForFloat32MatrixTexture(i),i.textureFormatFloat,o.FLOAT)}function getInternalFormatForFloat16MatrixTexture(o){return o.internalFormatHalfFloat}function createFloat16MatrixTexture(o,e,s,i){const[a,d]=getUnpackedMatrixTextureShapeWidthHeight(e,s);return createAndConfigureTexture(o,a,d,getInternalFormatForFloat16MatrixTexture(i),i.textureFormatFloat,i.textureTypeHalfFloat)}function getInternalFormatForUnsignedBytesMatrixTexture(o){return o.downloadTextureFormat}function createUnsignedBytesMatrixTexture(o,e,s,i){const[a,d]=getUnpackedMatrixTextureShapeWidthHeight(e,s);return createAndConfigureTexture(o,a,d,getInternalFormatForUnsignedBytesMatrixTexture(i),o.RGBA,o.UNSIGNED_BYTE)}function getInternalFormatForPackedMatrixTexture(o){return o.internalFormatPackedFloat}function createPackedMatrixTexture(o,e,s,i){const[a,d]=getPackedMatrixTextureShapeWidthHeight(e,s);return createAndConfigureTexture(o,a,d,getInternalFormatForPackedMatrixTexture(i),o.RGBA,o.FLOAT)}function getInternalFormatForFloat16PackedMatrixTexture(o){return o.internalFormatPackedHalfFloat}function createFloat16PackedMatrixTexture(o,e,s,i){const[a,d]=getPackedMatrixTextureShapeWidthHeight(e,s);return createAndConfigureTexture(o,a,d,getInternalFormatForFloat16PackedMatrixTexture(i),o.RGBA,i.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(o,e,s){return callAndCheck(o,()=>o.bindBuffer(o.ARRAY_BUFFER,s)),bindVertexBufferToProgramAttribute(o,e,"clipSpacePos",s,3,20,0)&&bindVertexBufferToProgramAttribute(o,e,"uv",s,2,20,12)}function uploadDenseMatrixToTexture(o,e,s,i,a,d){callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,e));let h,b,_;a instanceof Uint8Array?(h=new Uint8Array(s*i*4),b=o.UNSIGNED_BYTE,_=o.RGBA):(h=new Float32Array(s*i*4),b=o.FLOAT,_=d.internalFormatPackedFloat),h.set(a),env().getNumber("WEBGL_VERSION")===2?callAndCheck(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,s,i,o.RGBA,b,h)):callAndCheck(o,()=>o.texImage2D(o.TEXTURE_2D,0,_,s,i,0,o.RGBA,b,h)),callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,null))}function uploadPixelDataToTexture(o,e,s){callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,e)),s.data instanceof Uint8Array?env().getNumber("WEBGL_VERSION")===2?callAndCheck(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,s.width,s.height,o.RGBA,o.UNSIGNED_BYTE,s.data)):callAndCheck(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,s.width,s.height,0,o.RGBA,o.UNSIGNED_BYTE,s.data)):env().getNumber("WEBGL_VERSION")===2?callAndCheck(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,o.RGBA,o.UNSIGNED_BYTE,s)):callAndCheck(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,o.RGBA,o.UNSIGNED_BYTE,s)),callAndCheck(o,()=>o.bindTexture(o.TEXTURE_2D,null))}function createBufferFromOutputTexture(o,e,s,i){const a=o.createBuffer();callAndCheck(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,a));const b=4*4*e*s;return callAndCheck(o,()=>o.bufferData(o.PIXEL_PACK_BUFFER,b,o.STREAM_READ)),callAndCheck(o,()=>o.readPixels(0,0,s,e,o.RGBA,o.FLOAT,0)),callAndCheck(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,null)),a}function downloadFloat32MatrixFromBuffer(o,e,s){const i=o,a=new Float32Array(s);return i.bindBuffer(i.PIXEL_PACK_BUFFER,e),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,a),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),a}function downloadByteEncodedFloatMatrixFromOutputTexture(o,e,s,i){const[a,d]=getUnpackedMatrixTextureShapeWidthHeight(e,s),h=4,b=new Uint8Array(getUnpackedArraySizeFromMatrixSize(e*s,h));return callAndCheck(o,()=>o.readPixels(0,0,a,d,i.downloadTextureFormat,o.UNSIGNED_BYTE,b)),new Float32Array(b.buffer)}function downloadPackedMatrixFromBuffer(o,e,s,i,a,d,h,b){const _=o,j=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(d,h));return _.bindBuffer(_.PIXEL_PACK_BUFFER,e),_.getBufferSubData(_.PIXEL_PACK_BUFFER,0,j),_.bindBuffer(_.PIXEL_PACK_BUFFER,null),j}function downloadMatrixFromPackedOutputTexture(o,e,s){const i=new Float32Array(e*s*4);return callAndCheck(o,()=>o.readPixels(0,0,s,e,o.RGBA,o.FLOAT,i)),i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GPGPUContext{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const s=env().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,setWebGLContext(s,e)):this.gl=getWebGLContext(s),e=this.gl,env().getNumber("WEBGL_VERSION")===2){const d=e;this.createVertexArray=()=>callAndCheck(d,()=>d.createVertexArray()),this.bindVertexArray=h=>callAndCheck(d,()=>d.bindVertexArray(h)),this.deleteVertexArray=h=>callAndCheck(d,()=>d.deleteVertexArray(h)),this.getVertexArray=()=>callAndCheck(d,()=>d.getParameter(d.VERTEX_ARRAY_BINDING))}else if(e!=null){const d=e.getExtension("OES_vertex_array_object");if(d==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>callAndCheck(e,()=>d.createVertexArrayOES()),this.bindVertexArray=h=>callAndCheck(e,()=>d.bindVertexArrayOES(h)),this.deleteVertexArray=h=>callAndCheck(e,()=>d.deleteVertexArrayOES(h)),this.getVertexArray=()=>callAndCheck(e,()=>e.getParameter(d.VERTEX_ARRAY_BINDING_OES))}let i="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),env().getNumber("WEBGL_VERSION")===1){const d="OES_texture_float",h="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,d),hasExtension(this.gl,h))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,h);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(i),hasExtension(this.gl,a))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,a);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(i="EXT_color_buffer_float",hasExtension(this.gl,i))this.colorBufferFloatExtension=this.gl.getExtension(i);else if(hasExtension(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=createFramebuffer(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return env().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;callAndCheck(e,()=>e.finish()),callAndCheck(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),callAndCheck(e,()=>e.deleteFramebuffer(this.framebuffer)),callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),callAndCheck(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),callAndCheck(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,s){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,e,s,this.textureConfig)}createFloat16MatrixTexture(e,s){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,e,s,this.textureConfig)}createUnsignedBytesMatrixTexture(e,s){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,e,s,this.textureConfig)}uploadPixelDataToTexture(e,s){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,e,s)}uploadDenseMatrixToTexture(e,s,i,a){this.throwIfDisposed(),uploadDenseMatrixToTexture(this.gl,e,s,i,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,s){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,e,s,this.textureConfig)}createPackedMatrixTexture(e,s){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,e,s,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,s,i){return this.downloadMatrixDriver(e,()=>downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,s,i,this.textureConfig))}downloadPackedMatrixFromBuffer(e,s,i,a,d,h){return downloadPackedMatrixFromBuffer(this.gl,e,s,i,a,d,h,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,s){return downloadFloat32MatrixFromBuffer(this.gl,e,s)}createBufferFromTexture(e,s,i){this.bindTextureToFrameBuffer(e);const a=createBufferFromOutputTexture(this.gl,s,i,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let s,i;if(env().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,d=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),i=()=>{const h=a.clientWaitSync(d,0,0);return h===a.ALREADY_SIGNALED||h===a.CONDITION_SATISFIED},s=d}else env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(s=this.beginQuery(),this.endQuery(),i=()=>this.isQueryAvailable(s,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):i=()=>!0;return{query:s,isFencePassed:i}}downloadMatrixFromPackedTexture(e,s,i){return this.downloadMatrixDriver(e,()=>downloadMatrixFromPackedOutputTexture(this.gl,s,i))}createProgram(e){this.throwIfDisposed();const s=this.gl;this.vertexShader==null&&(this.vertexShader=createVertexShader(s));const i=createProgram(s);callAndCheck(s,()=>s.attachShader(i,this.vertexShader)),callAndCheck(s,()=>s.attachShader(i,e)),linkProgram(s,i);const a=Object.assign(i,{vao:this.createVertexArray()});return this.debug&&validateProgram(s,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const s=this.gl;callAndCheck(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bindVertexProgramAttributeStreams(s,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(callAndCheck(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,s,i=!0){return this.throwIfDisposed(),i?getProgramUniformLocationOrThrow(this.gl,e,s):getProgramUniformLocation(this.gl,e,s)}getAttributeLocation(e,s){return this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.getAttribLocation(e,s))}getUniformLocationNoThrow(e,s){return this.throwIfDisposed(),this.gl.getUniformLocation(e,s)}setInputMatrixTexture(e,s,i){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,e,s,i)}setOutputMatrixTexture(e,s,i){this.setOutputMatrixTextureDriver(e,i,s)}setOutputPackedMatrixTexture(e,s,i){this.throwIfDisposed();const[a,d]=getPackedMatrixTextureShapeWidthHeight(s,i);this.setOutputMatrixTextureDriver(e,a,d)}setOutputMatrixWriteRegion(e,s,i,a){this.setOutputMatrixWriteRegionDriver(i,e,a,s)}setOutputPackedMatrixWriteRegion(e,s,i,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const s=this.getVertexArray();console.assert(s===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}callAndCheck(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const i=this.gl,a=this.getQueryTimerExtensionWebGL2(),d=i.createQuery();return i.beginQuery(a.TIME_ELAPSED_EXT,d),d}const e=this.getQueryTimerExtensionWebGL1(),s=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,s),s}endQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,i=this.getQueryTimerExtensionWebGL2();s.endQuery(i.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await repeatedTry(()=>this.disposed||this.isQueryAvailable(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,s){if(s===0)return null;if(s===2){const i=this.gl;return i.getQueryParameter(e,i.QUERY_RESULT)/1e6}else{const i=this.getQueryTimerExtensionWebGL1();return i.getQueryObjectEXT(e,i.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,s){if(s===0)return!0;if(s===2){const i=this.gl,a=this.getQueryTimerExtensionWebGL2(),d=i.getQueryParameter(e,i.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),d&&!this.disjoint}else{const i=this.getQueryTimerExtensionWebGL1(),a=i.getQueryObjectEXT(e,i.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(s=>{this.addItemToPoll(()=>e.isFencePassed(),()=>s())})}pollItems(){const e=linearSearchLastTrue(this.itemsToPoll.map(s=>s.isDoneFn));for(let s=0;s<=e;++s){const{resolveFn:i}=this.itemsToPoll[s];i()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,s){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:s}),this.itemsToPoll.length>1)return;let i;"setTimeoutCustom"in env().platform&&(i=env().platform.setTimeoutCustom.bind(env().platform)),repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,i)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,s){this.bindTextureToFrameBuffer(e);const i=s();return this.unbindTextureToFrameBuffer(),i}setOutputMatrixTextureDriver(e,s,i){this.throwIfDisposed();const a=this.gl;bindColorTextureToFramebuffer(a,e,this.framebuffer),this.debug&&validateFramebuffer(a),this.outputTexture=e,callAndCheck(a,()=>a.viewport(0,0,s,i)),callAndCheck(a,()=>a.scissor(0,0,s,i))}setOutputMatrixWriteRegionDriver(e,s,i,a){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.scissor(e,s,i,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function linearSearchLastTrue(o){let e=0;for(;e<o.length&&o[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:addImplCPU,bincountImpl:bincountImplCPU,bincountReduceImpl:bincountReduceImplCPU,bitwiseAndImpl:bitwiseAndImplCPU,castImpl:castImplCPU,ceilImpl:ceilImplCPU,concatImpl:concatImplCPU,equalImpl:equalImplCPU,expImpl:expImplCPU,expm1Impl:expm1ImplCPU,floorImpl:floorImplCPU,gatherNdImpl:gatherNdImplCPU,gatherV2Impl:gatherV2ImplCPU,greaterImpl:greaterImplCPU,greaterEqualImpl:greaterEqualImplCPU,lessImpl:lessImplCPU,lessEqualImpl:lessEqualImplCPU,linSpaceImpl:linSpaceImplCPU,logImpl:logImplCPU,maxImpl:maxImplCPU,maximumImpl:maximumImplCPU,minimumImpl:minimumImplCPU,multiplyImpl:multiplyImplCPU,negImpl:negImplCPU,notEqualImpl:notEqualImplCPU,prodImpl:prodImplCPU,raggedGatherImpl:raggedGatherImplCPU,raggedRangeImpl:raggedRangeImplCPU,raggedTensorToTensorImpl:raggedTensorToTensorImplCPU,rangeImpl:rangeImplCPU,rsqrtImpl:rsqrtImplCPU,scatterImpl:scatterImplCPU,sigmoidImpl:sigmoidImplCPU,simpleAbsImpl:simpleAbsImplCPU,sliceImpl:sliceImplCPU,sparseFillEmptyRowsImpl:sparseFillEmptyRowsImplCPU,sparseReshapeImpl:sparseReshapeImplCPU,sparseSegmentReductionImpl:sparseSegmentReductionImplCPU,sqrtImpl:sqrtImplCPU,staticRegexReplaceImpl:staticRegexReplaceImplCPU,stridedSliceImpl:stridedSliceImplCPU,stringNGramsImpl:stringNGramsImplCPU,stringSplitImpl:stringSplitImplCPU,stringToHashBucketFastImpl:stringToHashBucketFastImplCPU,subImpl:subImplCPU,tileImpl:tileImplCPU,topKImpl:topKImplCPU,transposeImpl:transposeImplCPU,uniqueImpl:uniqueImplCPU}=shared;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getVecChannels(o,e){return["x","y","z","w","u","v"].slice(0,e).map(s=>`${o}.${s}`)}function getChannels(o,e){return e===1?[o]:getVecChannels(o,e)}function getSourceCoords$2(o,e){if(o===1)return"rc";let s="";for(let i=0;i<o;i++)s+=e[i],i<o-1&&(s+=",");return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PackProgram{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const s=getChannels("rc",this.rank),i=getCoordsDataType(this.rank),a=this.getOutOfBoundsCondition(s),d=this.getSetup(s),h=this.getOutput(s);this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${d}

            setOutput(vec4(${h}));
          }
        }
      `}}getSourceCoordsArr(e){const s=[];for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let d=`${i===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let h=2;h<this.rank;h++)d=`${e[e.length-1-h]},`+d;s.push(d)}return s}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let s="";for(let i=this.rank-2;i<this.rank;i++)s+=`${e[i]} >= ${this.enableShapeUniforms?`outShape[${i}]`:this.outputShape[i]}`,i<this.rank-1&&(s+="||");return s}getSetup(e){if(this.rank===1)return"";const s=e.slice(-2),i=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${s[0]};
      int c = ${s[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${i};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){const s=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${s[0]}),
            cEdge ? 0. : getA(${s[1]}),
            rEdge ? 0. : getA(${s[2]}),
            rEdge || cEdge ? 0. : getA(${s[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReshapePackedProgram{constructor(e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let i="";for(let a=0;a<4;a++){let d="thisRC = rc;";a%2===1&&(d+="thisRC.z += 1;"),a>1&&(d+="thisRC.y += 1;"),i+=`
        ${d}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${getReshapedInputCoords(s,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${i}

        setOutput(result);
      }
    `}}function getReshapedInputCoords(o,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?getLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],"inputShape"):getLogicalCoordinatesFromFlatIndex(["r","c","d"],o)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TextureManager{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,s,i){const a=getPhysicalFromLogicalTextureType(s,i),d=getKeyFromTextureShape(e,a,i);d in this.freeTextures||(this.freeTextures[d]=[]),d in this.usedTextures||(this.usedTextures[d]=[]);const h=computeBytes(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,i);if(this.freeTextures[d].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=h,this.log();const _=this.freeTextures[d].pop();return this.usedTextures[d].push(_),_}let b;return a===PhysicalTextureType.PACKED_2X2_FLOAT32?b=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===PhysicalTextureType.PACKED_2X2_FLOAT16?b=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===PhysicalTextureType.UNPACKED_FLOAT32?b=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===PhysicalTextureType.UNPACKED_FLOAT16?b=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(b=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[d].push(b),this.numUsedTextures++,this._numBytesAllocated+=h,this.log(),b}releaseTexture(e,s,i,a){if(this.freeTextures==null)return;const d=getPhysicalFromLogicalTextureType(i,a),h=getKeyFromTextureShape(s,d,a);h in this.freeTextures||(this.freeTextures[h]=[]);const b=computeBytes(s,d,this.gpgpu.gl,this.gpgpu.textureConfig,a),_=env().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");_!==-1&&this._numBytesAllocated>_?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=b):(this.freeTextures[h].push(e),this.numFreeTextures++,this._numBytesFree+=b),this.numUsedTextures--;const j=this.usedTextures[h],_e=j&&j.indexOf(e);if(_e==null||_e<0)throw new Error("Cannot release a texture that was never provided by this texture manager");j[_e]=j[j.length-1],j.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const s=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*s)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(s=>{this.gpgpu.deleteMatrixTexture(s.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(s=>{this.gpgpu.deleteMatrixTexture(s.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function numBytesForInternalFormat(o,e){const s=o;if(e===s.R32F)return 4;if(e===s.R16F)return 2;if(e===s.RGBA32F)return 16;if(e===o.RGBA)return 16;if(e===s.RGBA16F)return 8;if(e===s.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function computeBytes(o,e,s,i,a){const d=internalFormatForPhysicalTexType(e,i);let h;if(a){const[_,j]=getPackedMatrixTextureShapeWidthHeight(o[0],o[1]);h=_*j}else{const[_,j]=getUnpackedMatrixTextureShapeWidthHeight(o[0],o[1]);h=_*j}const b=numBytesForInternalFormat(s,d);return h*b}function internalFormatForPhysicalTexType(o,e){switch(o){case PhysicalTextureType.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(e);case PhysicalTextureType.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(e);case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(e);default:throw new Error(`Unknown physical texture type ${o}`)}}function getPhysicalTextureForRendering(o){return env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?o?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32:o?PhysicalTextureType.PACKED_2X2_FLOAT16:PhysicalTextureType.UNPACKED_FLOAT16}function getPhysicalFromLogicalTextureType(o,e){if(o===TextureUsage.UPLOAD)return PhysicalTextureType.PACKED_2X2_FLOAT32;if(o===TextureUsage.RENDER||o==null)return getPhysicalTextureForRendering(e);if(o===TextureUsage.DOWNLOAD||o===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${o}`)}function getKeyFromTextureShape(o,e,s){return`${o[0]}_${o[1]}_${e}_${s}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnaryOpProgram{constructor(e,s){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${s}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const CHECK_NAN_SNIPPET$1="if (isnan(x)) return x;",LINEAR$1="return x;",ABS$1="return abs(x);",ELU$2="return (x >= 0.0) ? x : (exp(x) - 1.0);",RELU$2=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : x;
`,RELU6$2=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CLONE="return x;",SIGMOID$2="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LINEAR="return x;",ELU$1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RELU$1=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RELU6$1=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SIGMOID$1="return 1.0 / (1.0 + exp(-1.0 * x));";class UnaryOpPackedProgram{constructor(e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${s}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnpackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const s=e.length,i=getChannels("rc",s),a=getCoordsDataType(s),d=getSourceCoords$2(s,i),h=i.slice(-2),b=s<=1?"rc":`vec2(${h.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${d});

        setOutput(getChannel(packedInput, ${b}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl=whereImpl$2,EPSILON_FLOAT32=1e-7,EPSILON_FLOAT16=1e-4,binaryCaches={};function getBinaryCache(o){return o in binaryCaches||(binaryCaches[o]={}),binaryCaches[o]}const CPU_HANDOFF_SIZE_THRESHOLD=env().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),BEFORE_PAGING_CONSTANT=600;function numMBBeforeWarning(){return env().global.screen==null?1024:env().global.screen.height*env().global.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024/1024}class MathBackendWebGL extends KernelBackend{nextDataId(){return MathBackendWebGL.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let s;if(e!=null){if(e instanceof GPGPUContext)s=e;else{const i=getWebGLContext(env().getNumber("WEBGL_VERSION"),e);s=new GPGPUContext(i)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const i=getWebGLContext(env().getNumber("WEBGL_VERSION"));s=new GPGPUContext(i),this.binaryCache=getBinaryCache(env().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=s,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TextureManager(this.gpgpu),this.numMBBeforeWarning=numMBBeforeWarning(),this.texData=new DataStorage(this,engine())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,s,i,a,d,h){const b=this.makeTensorInfo(s,i),_=this.texData.get(b.dataId);_.isPacked=!1,_.texture={texture:e,texShape:[a,d]},_.texShape=[a,d];const j=getShapeAs3D(s),_e=new EncodeMatrixProgram(j,!1,h),g=this.runWebGLProgram(_e,[b],i,[[a,d]]);return g.shape=s,_.texture=null,this.disposeIntermediateTensorInfo(b),g.dataId}write(e,s,i){if((env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||env().getBool("DEBUG"))&&this.checkNumericalProblems(e),i==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:s,dtype:i,values:e,usage:TextureUsage.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const s=this.texData.get(e);s.refCount++}decRef(e){if(this.texData.has(e)){const s=this.texData.get(e);s.refCount--}}move(e,s,i,a,d){if(env().getBool("DEBUG")&&this.checkNumericalProblems(s),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:i,dtype:a,values:s,usage:TextureUsage.UPLOAD,refCount:d})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const s=this.texData.get(e),{values:i,dtype:a,complexTensorInfos:d,slice:h,shape:b,isPacked:_}=s;if(h!=null){let c;_?c=new UnaryOpPackedProgram(b,CLONE):c=new UnaryOpProgram(b,CLONE);const $=this.runWebGLProgram(c,[{dataId:e,shape:b,dtype:a}],a),et=this.readSync($.dataId);return this.disposeIntermediateTensorInfo($),et}if(i!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return i;const j=this.activeTimers!=null;let _e;j&&(_e=now());let g;if(a==="complex64"){const c=this.readSync(d.real.dataId),$=this.readSync(d.imag.dataId);g=mergeRealAndImagArrays(c,$)}else g=this.getValuesFromTexture(e);return j&&(this.downloadWaitMs+=now()-_e),this.convertAndCacheOnCPU(e,g)}async read(e){if(this.pendingRead.has(e)){const et=this.pendingRead.get(e);return new Promise(tt=>et.push(tt))}const s=this.texData.get(e),{values:i,shape:a,slice:d,dtype:h,complexTensorInfos:b,isPacked:_}=s;if(d!=null){let et;_?et=new UnaryOpPackedProgram(a,CLONE):et=new UnaryOpProgram(a,CLONE);const tt=this.runWebGLProgram(et,[{dataId:e,shape:a,dtype:h}],h),nt=this.read(tt.dataId);return this.disposeIntermediateTensorInfo(tt),nt}if(i!=null)return this.convertAndCacheOnCPU(e);if(env().getBool("DEBUG")&&!env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&env().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let j=null,_e;if(h!=="complex64"&&env().get("WEBGL_BUFFER_SUPPORTED")){_e=this.decode(e);const et=this.texData.get(_e.dataId);j=this.gpgpu.createBufferFromTexture(et.texture.texture,...getDenseTexShape(a))}this.pendingRead.set(e,[]),h!=="complex64"&&await this.gpgpu.createAndWaitForFence();let g;if(h==="complex64"){const et=await Promise.all([this.read(b.real.dataId),this.read(b.imag.dataId)]),tt=et[0],nt=et[1];g=mergeRealAndImagArrays(tt,nt)}else if(j==null)g=this.getValuesFromTexture(e);else{const et=sizeFromShape(a);g=this.gpgpu.downloadFloat32MatrixFromBuffer(j,et)}if(_e!=null&&this.disposeIntermediateTensorInfo(_e),j!=null){const et=this.gpgpu.gl;callAndCheck(et,()=>et.deleteBuffer(j))}const c=this.convertAndCacheOnCPU(e,g),$=this.pendingRead.get(e);return this.pendingRead.delete(e),$.forEach(et=>et(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&engine().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,s={}){const i=this.texData.get(e),{values:a,shape:d,slice:h,dtype:b,isPacked:_,texture:j}=i;if(b==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(h!=null){let $;_?$=new UnaryOpPackedProgram(d,CLONE):$=new UnaryOpProgram(d,CLONE);const et=this.runWebGLProgram($,[{dataId:e,shape:d,dtype:b}],b),tt=this.readToGPU(et,s);return this.disposeIntermediateTensorInfo(et),tt}if(j==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const _e=this.decode(e,s.customTexShape),g=engine().makeTensorFromTensorInfo(_e),c=this.texData.get(_e.dataId);return Object.assign({tensorRef:g},c.texture)}bufferSync(e){const s=this.readSync(e.dataId);if(e.dtype==="string")try{const i=s.map(a=>decodeString(a));return buffer(e.shape,e.dtype,i)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}checkNumericalProblems(e){if(e!=null)for(let s=0;s<e.length;s++){const i=e[s];if(!canBeRepresented(i))throw env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${i} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${i} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:s,dtype:i,isPacked:a}=this.texData.get(e),d=sizeFromShape(s);if(env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const c=this.decode(e),$=this.texData.get(c.dataId),et=this.gpgpu.downloadMatrixFromPackedTexture($.texture.texture,...getDenseTexShape(s)).subarray(0,d);return this.disposeIntermediateTensorInfo(c),et}const h=env().getBool("WEBGL_PACK")&&a===!0,b=h?getShapeAs3D(s):s,_=h?new EncodeFloatPackedProgram(b):new EncodeFloatProgram(b),j=this.runWebGLProgram(_,[{shape:b,dtype:i,dataId:e}],"float32"),_e=this.texData.get(j.dataId),g=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(_e.texture.texture,_e.texShape[0],_e.texShape[1]).subarray(0,d);return this.disposeIntermediateTensorInfo(j),g}timerAvailable(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const s=this.activeTimers,i=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=i,a=!0):this.activeTimers.push(i),this.activeTimers=i,e();const d=flatten$1(this.activeTimers.map(_=>_.query)).filter(_=>_!=null),h=flatten$1(this.activeTimers.map(_=>_.name)).filter(_=>_!=null);this.activeTimers=s,a&&(this.programTimersStack=null);const b={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const _=await Promise.all(d);b.kernelMs=sum$3(_),b.getExtraProfileInfo=()=>_.map((j,_e)=>({name:h[_e],ms:j})).map(j=>`${j.name}: ${j.ms}`).join(", ")}else b.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,b})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:now(),endMs:null}}endTimer(e){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=now(),e)}async getQueryTime(e){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const s=e;return s.endMs-s.startMs}disposeData(e,s=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(s?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!s&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:i}=this.texData.get(e);return i!=null&&(this.disposeData(i.real.dataId,s),this.disposeData(i.imag.dataId,s)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:s,dtype:i,texShape:a,usage:d,isPacked:h,slice:b}=this.texData.get(e),_=b&&b.origDataId||e,j=this.dataRefCount.get(_);j>1?this.dataRefCount.set(_,j-1):(this.dataRefCount.delete(_),s!=null&&(this.numBytesInGPU-=this.computeBytes(a,i),this.textureManager.releaseTexture(s,a,d,h)));const _e=this.texData.get(e);_e.texture=null,_e.texShape=null,_e.isPacked=!1,_e.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,s=CPU_HANDOFF_SIZE_THRESHOLD){return env().getBool("WEBGL_CPU_FORWARD")&&e.every(i=>this.texData.get(i.dataId).texture==null&&sizeFromShape(i.shape)<s)}getGPGPUContext(){return this.gpgpu}where(e){warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const s=e.dataSync();return whereImpl(e.shape,s)}packedUnaryOp(e,s,i){const a=new UnaryOpPackedProgram(e.shape,s),d=this.compileAndRun(a,[e],i);return engine().makeTensorFromTensorInfo(d)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const a=simpleAbsImplCPU(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ABS$1,e.dtype);const s=new UnaryOpProgram(e.shape,ABS$1),i=this.compileAndRun(s,[e]);return engine().makeTensorFromTensorInfo(i)}makeTensorInfo(e,s,i){let a;if(s==="string"&&i!=null&&i.length>0&&isString(i[0])){const d=i.map(h=>encodeString(h));a=this.write(d,e,s)}else a=this.write(i,e,s);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:s}}makeOutput(e,s,i){return engine().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,i),this)}unpackTensor(e){const s=new UnpackProgram(e.shape);return this.runWebGLProgram(s,[e],e.dtype)}packTensor(e){const s=new PackProgram(e.shape);return this.runWebGLProgram(s,[e],e.dtype,null,!0)}packedReshape(e,s){const i=[getBatchDim(e.shape),...getRowsCols(e.shape)],a={dtype:e.dtype,shape:i,dataId:e.dataId},d=[getBatchDim(s),...getRowsCols(s)],h=new ReshapePackedProgram(d,i),b=!0,_=[i],j=this.runWebGLProgram(h,[a],e.dtype,_,b);return{dataId:j.dataId,shape:s,dtype:j.dtype}}decode(e,s){const i=this.texData.get(e),{isPacked:a,shape:d,dtype:h}=i;if(s!=null){const c=sizeFromShape(d),$=s[0]*s[1]*4;assert$1(c<=$,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const b=getShapeAs3D(d);let _;a?_=new DecodeMatrixPackedProgram(b):_=new DecodeMatrixProgram(b);const j=!0,_e=[s??getDenseTexShape(b)],g=this.runWebGLProgram(_,[{shape:b,dtype:h,dataId:e}],h,_e,j,s);return{dtype:h,shape:d,dataId:g.dataId}}runWebGLProgram(e,s,i,a,d=!1,h){const b=this.makeTensorInfo(e.outputShape,i),_=this.texData.get(b.dataId);if(e.packedOutput&&(_.isPacked=!0),e.outPackingScheme===PackingScheme.DENSE){const rt=h??getDenseTexShape(e.outputShape);_.texShape=rt.map(ot=>ot*2)}if(e.outTexUsage!=null&&(_.usage=e.outTexUsage),sizeFromShape(b.shape)===0)return _.values=getTypedArrayFromDType(b.dtype,0),b;const j=[],_e=s.map(rt=>{if(rt.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let ot=this.texData.get(rt.dataId);if(ot.texture==null){if(!e.packedInputs&&sizeFromShape(rt.shape)<=env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:rt.shape,texData:null,isUniform:!0,uniformValues:ot.values};e.packedInputs&&(ot.isPacked=!0,ot.shape=rt.shape)}if(this.uploadToGPU(rt.dataId),!!ot.isPacked!=!!e.packedInputs)rt=ot.isPacked?this.unpackTensor(rt):this.packTensor(rt),j.push(rt),ot=this.texData.get(rt.dataId);else if(ot.isPacked&&!isReshapeFree(ot.shape,rt.shape)){const st=rt,it=rt.shape;rt.shape=ot.shape,rt=this.packedReshape(rt,it),j.push(rt),ot=this.texData.get(rt.dataId),st.shape=it}return{shape:rt.shape,texData:ot,isUniform:!1}});this.uploadToGPU(b.dataId);const g={shape:b.shape,texData:_,isUniform:!1},c=makeShaderKey(e,_e,g),$=this.getAndSaveBinary(c,()=>compileProgram(this.gpgpu,e,_e,g)),et=this.activeTimers!=null;let tt;et&&(tt=this.startTimer()),env().get("ENGINE_COMPILE_ONLY")||runProgram(this.gpgpu,$,_e,g,a),j.forEach(rt=>this.disposeIntermediateTensorInfo(rt)),et&&(tt=this.endTimer(tt),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(tt)}));const nt=env().getNumber("WEBGL_FLUSH_THRESHOLD");if(nt>0){const rt=now();rt-this.lastGlFlushTime>nt&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=rt)}if(!env().getBool("WEBGL_LAZILY_UNPACK")&&_.isPacked&&d===!1){const rt=this.unpackTensor(b);return this.disposeIntermediateTensorInfo(b),rt}return b}compileAndRun(e,s,i,a,d=!1){return i=i||s[0].dtype,this.runWebGLProgram(e,s,i,a,d)}getAndSaveBinary(e,s){return e in this.binaryCache||(this.binaryCache[e]=s()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(env().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(s=>{this.gpgpu.deleteProgram(this.binaryCache[s].webGLProgram),delete this.binaryCache[s]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tidy(()=>{if(!env().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=env().getBool("DEBUG");env().set("DEBUG",!1);const s=this.abs(scalar(1e-8)).dataSync()[0];if(env().set("DEBUG",e),s>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32:EPSILON_FLOAT16}uploadToGPU(e){const s=this.texData.get(e),{shape:i,dtype:a,values:d,texture:h,usage:b,isPacked:_}=s;if(h!=null)return;const j=this.activeTimers!=null;let _e;j&&(_e=now());let g=s.texShape;if(g==null&&(g=getTextureShapeFromLogicalShape(i,_),s.texShape=g),d!=null){const c=getShapeAs3D(i);let $,et=g[1],tt=g[0];const nt=d instanceof Uint8Array||d instanceof Uint8ClampedArray;(_||!nt)&&([et,tt]=getPackedMatrixTextureShapeWidthHeight(g[0],g[1])),_?$=new EncodeMatrixPackedProgram(c,nt):$=new EncodeMatrixProgram(c,nt);const rt=nt?[tt,et]:g,ot=this.makeTensorInfo(rt,a),st=this.texData.get(ot.dataId);nt?st.usage=TextureUsage.PIXELS:st.usage=TextureUsage.UPLOAD,st.texShape=rt,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(ot.dataId),et,tt,d);const it=[[tt,et]],lt=this.runWebGLProgram($,[ot],a,it,!0),ut=this.texData.get(lt.dataId);s.texShape=ut.texShape,s.isPacked=ut.isPacked,s.usage=ut.usage,env().get("ENGINE_COMPILE_ONLY")?this.disposeData(lt.dataId):(s.texture=ut.texture,s.values=null,this.texData.delete(lt.dataId)),this.disposeIntermediateTensorInfo(ot),j&&(this.uploadWaitMs+=now()-_e)}else{const c=this.acquireTexture(g,b,a,_);s.texture=c}}convertAndCacheOnCPU(e,s){const i=this.texData.get(e),{dtype:a}=i;return s!=null&&(i.values=float32ToTypedArray(s,a)),i.values}acquireTexture(e,s,i,a){if(this.numBytesInGPU+=this.computeBytes(e,i),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const d=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${d} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,s,a)}computeBytes(e,s){return e[0]*e[1]*bytesPerElement(s)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,s]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(s));return Promise.all(e)}else{for(const[,s]of Object.entries(this.binaryCache)){const i=new Promise(a=>{try{this.checkCompletion_(s),a(!0)}catch(d){throw d}});e.push(i)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await nextFrame(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(logShaderSourceAndInfoLog(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:s,customUniformLocations:i,infLoc:a,nanLoc:d,outShapeLocation:h,outShapeStridesLocation:b,outTexShapeLocation:_}=getUniformLocations(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=s,e.customUniformLocations=i,e.infLoc=a,e.nanLoc=d,e.outShapeLocation=h,e.outShapeStridesLocation=b,e.outTexShapeLocation=_}}createTensorFromGPUData(e,s,i){e.channels=e.channels||"RGBA";const{texture:a,height:d,width:h,channels:b}=e,_=engine().backend;if(!_.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const j=_.writeTexture(a,s,i,d,h,b);return engine().makeTensorFromDataId(j,s,i,_)}}MathBackendWebGL.nextDataId=0;function float32ToTypedArray(o,e){if(e==="float32"||e==="complex64")return o;if(e==="int32"||e==="bool"){const s=e==="int32"?new Int32Array(o.length):new Uint8Array(o.length);for(let i=0;i<s.length;++i)s[i]=Math.round(o[i]);return s}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */isBrowser()&&registerBackend("webgl",()=>new MathBackendWebGL,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class BinaryOpProgram{constructor(e,s,i){this.variableNames=["A","B"],this.outputShape=assertAndGetBroadcastShape(s,i),this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_PACKED=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class BinaryOpPackedProgram{constructor(e,s,i,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=assertAndGetBroadcastShape(s,i);const d=this.outputShape.length;this.enableShapeUniforms=useShapeUniforms(d);let h="";if(a)if(d===0||sizeFromShape(this.outputShape)===1)h=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(h=`
          ${getCoordsDataType(d)} coords = getOutputCoords();
        `,d===1)this.enableShapeUniforms?h+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:h+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const _=getChannels("coords",d);this.enableShapeUniforms?h+=`
            bool nextRowOutOfBounds =
              (${_[d-2]} + 1) >= outShape[${d} - 2];
            bool nextColOutOfBounds =
              (${_[d-1]} + 1) >= outShape[${d} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:h+=`
            bool nextRowOutOfBounds =
              (${_[d-2]} + 1) >= ${this.outputShape[d-2]};
            bool nextColOutOfBounds =
              (${_[d-1]} + 1) >= ${this.outputShape[d-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${h}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity(o){const{inputs:e,backend:s}=o,{x:i}=e;return s.incRef(i.dataId),{dataId:i.dataId,shape:i.shape,dtype:i.dtype}}const identityConfig={kernelName:Identity$1,backendName:"webgl",kernelFunc:identity};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex(o){const{inputs:e,backend:s}=o,{real:i,imag:a}=e,d=s.makeTensorInfo(i.shape,"complex64"),h=s.texData.get(d.dataId),b=identity({inputs:{x:i},backend:s}),_=identity({inputs:{x:a},backend:s});return h.complexTensorInfos={real:b,imag:_},d}const complexConfig={kernelName:Complex,backendName:"webgl",kernelFunc:complex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEAKYRELU="return (a < 0.) ? b * a : a;",LEAKYRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function leakyRelu(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{alpha:d}=i,h=s.makeTensorInfo([],"float32",createScalarValue(d,"float32")),b=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(LEAKYRELU_PACKED,a.shape,h.shape):new BinaryOpProgram(LEAKYRELU,a.shape,h.shape),_=s.runWebGLProgram(b,[a,h],"float32");return s.disposeIntermediateTensorInfo(h),_}const leakyReluConfig={kernelName:LeakyRelu,backendName:"webgl",kernelFunc:leakyRelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PRELU="return (a < 0.) ? b * a : a;",PRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function prelu(o){const{inputs:e,backend:s}=o,{x:i,alpha:a}=e,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(PRELU_PACKED,i.shape,a.shape):new BinaryOpProgram(PRELU,i.shape,a.shape);return s.runWebGLProgram(d,[i,a],"float32")}const preluConfig={kernelName:Prelu,backendName:"webgl",kernelFunc:prelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_UNARY="if (isnan(x)) return x;";function unaryKernelFunc({opSnippet:o,packedOpSnippet:e,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:d})=>{const{x:h}=a,b=d,_=i||h.dtype;if(b.shouldExecuteOnCPU([h])&&s!=null){const g=b.texData.get(h.dataId),c=s(g.values,_);return b.makeTensorInfo(h.shape,_,c)}const j=env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let _e;return j?_e=new UnaryOpPackedProgram(h.shape,e):_e=new UnaryOpProgram(h.shape,o),b.runWebGLProgram(_e,[h],_)}}function binaryKernelFunc({opSnippet:o,packedOpSnippet:e,checkOutOfBounds:s=!1,supportsComplex:i=!1,cpuKernelImpl:a,dtype:d}){return({inputs:h,backend:b})=>{const{a:_,b:j}=h,_e=b;if(i&&_.dtype==="complex64"){const et=_e.texData.get(_.dataId),tt=_e.texData.get(j.dataId),[nt,rt]=[[et.complexTensorInfos.real,tt.complexTensorInfos.real],[et.complexTensorInfos.imag,tt.complexTensorInfos.imag]].map(st=>{const[it,at]=st,lt={dataId:it.dataId,dtype:it.dtype,shape:_.shape},ut={dataId:at.dataId,dtype:at.dtype,shape:j.shape},ct=new BinaryOpProgram(o,_.shape,j.shape);return _e.runWebGLProgram(ct,[lt,ut],upcastType(it.dtype,at.dtype))}),ot=complex({inputs:{real:nt,imag:rt},backend:_e});return _e.disposeIntermediateTensorInfo(nt),_e.disposeIntermediateTensorInfo(rt),ot}const g=d||upcastType(_.dtype,j.dtype);if((_.dtype==="string"||j.dtype==="string"||_e.shouldExecuteOnCPU([_,j]))&&a!=null){const et=_e.texData.get(_.dataId).values,tt=_e.texData.get(j.dataId).values,nt=_.dtype==="string"?fromUint8ToStringArray(et):et,rt=_.dtype==="string"?fromUint8ToStringArray(tt):tt,[ot,st]=a(_.shape,j.shape,nt,rt,g),it=_e.makeTensorInfo(st,g),at=_e.texData.get(it.dataId);return at.values=ot,it}const c=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let $;return c?$=new BinaryOpPackedProgram(e,_.shape,j.shape,s):$=new BinaryOpProgram(o,_.shape,j.shape),_e.runWebGLProgram($,[_,j],g)}}function mapActivationToShaderProgram(o,e=!1){if(o==="linear")return e?LINEAR:LINEAR$1;if(o==="relu")return e?RELU$1:RELU$2;if(o==="elu")return e?ELU$1:ELU$2;if(o==="relu6")return e?RELU6$1:RELU6$2;if(o==="prelu")return e?PRELU_PACKED:PRELU;if(o==="leakyrelu")return e?LEAKYRELU_PACKED:LEAKYRELU;if(o==="sigmoid")return e?SIGMOID$1:SIGMOID$2;throw new Error(`Activation ${o} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MatMulPackedProgram{constructor(e,s,i,a=!1,d=!1,h=!1,b=null,_=!1,j=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const _e=a?e[1]:e[2],g=Math.ceil(_e/2),c=a?"i * 2, rc.y":"rc.y, i * 2",$=d?"rc.z, i * 2":"i * 2, rc.z",et=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],tt=d?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let nt="",rt="";b&&(_?nt=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${b}
        }`:j?nt=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${b}
        }`:nt=`vec4 activation(vec4 x) {
          ${b}
        }`,rt="result = activation(result);");const ot=h?"result += getBiasAtOutCoords();":"";h&&this.variableNames.push("bias"),_&&this.variableNames.push("preluActivationWeights"),j&&this.variableNames.push("leakyreluAlpha");let st="rc.x",it="rc.x";e[0]<s[0]?st=`imod(rc.x, ${e[0]})`:s[0]<e[0]&&(it=`imod(rc.x, ${s[0]})`),this.userCode=`
      ${nt}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${g}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${st};
        int batchB = ${it};
        for (int i = 0; i < ${g}; i++) {
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${$});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${et[0]} * ${tt[0]});
          result += (${et[1]} * ${tt[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${ot}

        ${rt}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COMPLEX_MULTIPLY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class BinaryOpComplexProgram{constructor(e,s,i){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=assertAndGetBroadcastShape(s,i),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUL="return a * b;";function multiply(o){const{inputs:e,backend:s}=o,{a:i,b:a}=e,d=upcastType(i.dtype,a.dtype);if(i.dtype==="complex64"){const b=s.texData.get(i.dataId),_=s.texData.get(a.dataId),j=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,i.shape,a.shape),_e=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,i.shape,a.shape),g=[{dataId:b.complexTensorInfos.real.dataId,dtype:b.complexTensorInfos.real.dtype,shape:i.shape},{dataId:b.complexTensorInfos.imag.dataId,dtype:b.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:_.complexTensorInfos.real.dataId,dtype:_.complexTensorInfos.real.dtype,shape:a.shape},{dataId:_.complexTensorInfos.imag.dataId,dtype:_.complexTensorInfos.imag.dtype,shape:a.shape}],c=s.runWebGLProgram(j,g,"float32"),$=s.runWebGLProgram(_e,g,"float32"),et=complex({inputs:{real:c,imag:$},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($),et}if(s.shouldExecuteOnCPU([i,a])){const b=s.texData.get(i.dataId),_=s.texData.get(a.dataId),[j,_e]=multiplyImplCPU(i.shape,a.shape,b.values,_.values,d),g=s.makeTensorInfo(_e,d),c=s.texData.get(g.dataId);return c.values=j,g}let h;return env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?h=new BinaryOpPackedProgram(MUL,i.shape,a.shape):h=new BinaryOpProgram(MUL,i.shape,a.shape),s.runWebGLProgram(h,[i,a],d)}const multiplyConfig={kernelName:Multiply$1,backendName:"webgl",kernelFunc:multiply};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function packedReshape(o,e,s){const i=[getBatchDim(o.shape),...getRowsCols(o.shape)],a={dtype:o.dtype,shape:i,dataId:o.dataId},d=[getBatchDim(e),...getRowsCols(e)],h=new ReshapePackedProgram(d,i),b=!0,_=[i],j=s.runWebGLProgram(h,[a],o.dtype,_,b);return{dataId:j.dataId,shape:e,dtype:j.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{shape:d}=i,h=s,b=sizeFromShape(a.shape),_=inferFromImplicitShape(d,b),j=sizeFromShape(_);assert$1(b===j,()=>`The new shape (${_}) has ${j} elements and the old shape (${a.shape}) has ${b} elements. The new shape and old shape must have the same number of elements.`);const _e=h.texData.get(a.dataId);return _e.isPacked&&!isReshapeFree(a.shape,_)&&!(_e.texture!==null&&isReshapeFree(_e.shape,_))?packedReshape(a,_,h):(h.incRef(a.dataId),{dataId:a.dataId,shape:_,dtype:a.dtype})}const reshapeConfig={kernelName:Reshape$1,backendName:"webgl",kernelFunc:reshape};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MeanProgram{constructor(e,s){this.variableNames=["x"];const{windowSize:i,batchSize:a,inSize:d,outSize:h}=e;this.outputShape=[a,h];const b=Math.floor(i/4)*4,_=i%4;let j="sumValue += dot(values, ones);";if(s!=null){const g=1/s;j=`sumValue += dot(values * ${isInt(g)?g.toPrecision(2):g}, ones);`}let _e="";d%i>0&&(_e=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${_e}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        float sumValue = 0.0;

        for (int i = 0; i < ${b}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${j}
        }

        int inIdx = inOffset + ${b};
        if (${_===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${j}
        } else if (${_===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${j}
        } else if (${_===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${j}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReduceProgram{constructor(e,s){this.variableNames=["x"];const{windowSize:i,batchSize:a,inSize:d,outSize:h}=e;this.outputShape=[a,h];let b="0.0",_="";s==="prod"?b="1.0":s==="min"?(b="1.0 / 1e-20",_="min"):s==="max"&&(b="-1.0 / 1e-20",_="max");let j=`${s}(${s}(${s}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;s==="sum"?j="sumValue":s==="prod"?j="prodValue":s==="all"?j="allValue":s==="any"&&(j="anyValue");const _e=Math.floor(i/4)*4,g=i%4;let c=`
      if (${s==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${s==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${_}(values, minMaxValue);
        if (${s==="min"} || ${s==="max"}) {
          minMaxValue = ${_}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,$="vec4";s==="all"?(b="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,$="bvec4"):s==="any"&&(b="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,$="bvec4");let et="";d%i>0&&(et=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${et}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        vec4 minMaxValue = vec4(${b});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${_e}; i += 4) {
          int inIdx = inOffset + i;
          ${$} values = ${$}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${_e};
        if (${g===1}) {
          ${$} values = ${$}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${g===2}) {
          ${$} values = ${$}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${g===3}) {
          ${$} values = ${$}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${j});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReductionStages(o){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const s=e.length?e[e.length-1].outSize:o[1],i=computeOptimalWindowSize(s);e.push({inSize:s,windowSize:i,outSize:Math.ceil(s/i)})}return e}function reduce(o,e,s,i){const a=getReductionStages(o.shape);let d=o;for(let h=0;h<a.length;h++){const{inSize:b,windowSize:_,outSize:j}=a[h];let _e,g;s==="mean"?_e=h===0?new MeanProgram({windowSize:_,inSize:b,batchSize:o.shape[0],outSize:j},b):new MeanProgram({windowSize:_,inSize:b,batchSize:o.shape[0],outSize:j}):_e=new ReduceProgram({windowSize:_,inSize:b,batchSize:o.shape[0],outSize:j},s),g=d,d=i.runWebGLProgram(_e,[d],e),g.dataId!==o.dataId&&i.disposeIntermediateTensorInfo(g)}return d}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposeProgram{constructor(e,s){this.variableNames=["A"];const i=new Array(e.length);for(let h=0;h<i.length;h++)i[h]=e[s[h]];this.outputShape=i,this.rank=i.length;const a=getCoordsDataType(this.rank),d=getSwitchedCoords(s);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${d}));
    }
    `}}function getSwitchedCoords(o){const e=o.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const s=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],i=new Array(e);for(let a=0;a<o.length;a++)i[o[a]]=s[a];return i.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposePackedProgram{constructor(e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const i=new Array(e.length);for(let _e=0;_e<i.length;_e++)i[_e]=e[s[_e]];if(this.outputShape=i,this.rank=i.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=getCoordsDataType(this.rank),d=getVecChannels("rc",this.rank),h=new Array(this.rank);for(let _e=0;_e<s.length;_e++)h[s[_e]]=d[_e];const b=`vec2(${h.slice(-2).join()})`,_=`++${d[this.rank-1]} < ${i[this.rank-1]}`,j=`getChannel(getA(${h.join()}), ${b})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${j};
      if(${_}) {
        result[1] = ${j};
      }
      --${d[this.rank-1]};
      if(++${d[this.rank-2]} < ${i[this.rank-2]}) {
        result[2] = ${j};
        if(${_}) {
          result[3] = ${j};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl(o,e,s){const i=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TransposePackedProgram(o.shape,e):new TransposeProgram(o.shape,e);return s.runWebGLProgram(i,[o],o.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sumImpl(o,e,s,i){const a=e,d=o.shape.length,h=parseAxisParam(a,o.shape);let b=h;const _=getAxesPermutation(b,d),j=_!=null;let _e=o;j&&(_e=transposeImpl(o,_,i),b=getInnerMostAxes(b.length,d)),assertAxesAreInnerMostDims("sum",b,d);const[g,c]=computeOutAndReduceShapes(_e.shape,b);let $=g;s&&($=expandShapeToKeepDim(g,h));const et=sizeFromShape(c),nt=sizeFromShape(o.shape)/et,rt=reshape({inputs:{x:_e},attrs:{shape:[nt,et]},backend:i}),ot=sumOutType(o.dtype),st=reduce(rt,ot,"sum",i),it=reshape({inputs:{x:st},attrs:{shape:$},backend:i});return i.disposeIntermediateTensorInfo(rt),i.disposeIntermediateTensorInfo(st),j&&i.disposeIntermediateTensorInfo(_e),it}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i;return sumImpl(a,d,h,s)}const sumConfig={kernelName:Sum,backendName:"webgl",kernelFunc:sum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{perm:d}=i,h=s,b=a.shape.length,_=new Array(b);for(let _e=0;_e<_.length;_e++)_[_e]=a.shape[d[_e]];let j;if(h.shouldExecuteOnCPU([a])){const g=h.texData.get(a.dataId).values,c=transposeImplCPU(g,a.shape,a.dtype,d,_);j=h.makeTensorInfo(_,a.dtype);const $=h.texData.get(j.dataId);$.values=c}else j=transposeImpl(a,d,h);return j}const transposeConfig={kernelName:Transpose,backendName:"webgl",kernelFunc:transpose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MATMUL_SHARED_DIM_THRESHOLD=1e3;function batchMatMulImpl({a:o,b:e,transposeA:s,transposeB:i,backend:a,bias:d=null,preluActivationWeights:h=null,leakyreluAlpha:b=0,activation:_=null}){const j=o.shape.length,_e=e.shape.length,g=s?o.shape[j-2]:o.shape[j-1],c=i?e.shape[_e-1]:e.shape[_e-2],$=s?o.shape[j-1]:o.shape[j-2],et=i?e.shape[_e-2]:e.shape[_e-1],tt=o.shape.slice(0,-2),nt=e.shape.slice(0,-2),rt=sizeFromShape(tt),ot=sizeFromShape(nt),it=assertAndGetBroadcastShape(o.shape.slice(0,-2),e.shape.slice(0,-2)).concat([$,et]);assert$1(g===c,()=>`Error in matMul: inner shapes (${g}) and (${c}) of Tensors with shapes ${o.shape} and ${e.shape} and transposeA=${s} and transposeB=${i} must match.`);const at=s?[rt,g,$]:[rt,$,g],lt=i?[ot,et,c]:[ot,c,et],ut=reshape({inputs:{x:o},backend:a,attrs:{shape:at}}),ct=reshape({inputs:{x:e},backend:a,attrs:{shape:lt}}),pt=[ut,ct],ht=Math.max(rt,ot),yt=s?ut.shape[1]:ut.shape[2],xt=d!=null,ft=h!=null,wt=_==="leakyrelu",dt=_!=null?mapActivationToShaderProgram(_,!0):null,mt=xt||ft||wt||dt!=null;let bt;if(($===1||et===1)&&yt>MATMUL_SHARED_DIM_THRESHOLD&&mt===!1){let Tt=ut,Et=ct;s&&(Tt=transpose({inputs:{x:ut},backend:a,attrs:{perm:[0,2,1]}}),pt.push(Tt)),i&&(Et=transpose({inputs:{x:ct},backend:a,attrs:{perm:[0,2,1]}}),pt.push(Et));const Ct=et!==1,kt=et===1;let Dt=Tt;Ct&&(Dt=reshape({inputs:{x:Tt},backend:a,attrs:{shape:[ht,yt,1]}}),pt.push(Dt));const Rt=et===1?2:1;let Ot=Et;kt&&(Ot=reshape({inputs:{x:Et},backend:a,attrs:{shape:[ht,1,yt]}}),pt.push(Ot));const zt=multiply({inputs:{a:Dt,b:Ot},backend:a});bt=sum({inputs:{x:zt},backend:a,attrs:{axis:Rt,keepDims:!0}}),pt.push(zt)}else{const Tt=upcastType(o.dtype,e.dtype),Et=new MatMulPackedProgram(at,lt,[ht,$,et],s,i,xt,dt,ft,wt),Ct=[ut,ct];if(d!=null&&Ct.push(d),ft&&Ct.push(h),wt){const kt=a.makeTensorInfo([],"float32",createScalarValue(b,"float32"));Ct.push(kt),pt.push(kt)}bt=a.runWebGLProgram(Et,Ct,Tt)}const vt=reshape({inputs:{x:bt},backend:a,attrs:{shape:it}});pt.push(bt);for(const Tt of pt)a.disposeIntermediateTensorInfo(Tt);return vt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul(o){const{inputs:e,backend:s,attrs:i}=o,{a,b:d,bias:h,preluActivationWeights:b}=e,{transposeA:_,transposeB:j,activation:_e,leakyreluAlpha:g}=i;return batchMatMulImpl({a,b:d,transposeA:_,transposeB:j,backend:s,bias:h,preluActivationWeights:b,leakyreluAlpha:g,activation:_e})}const _fusedMatMulConfig={kernelName:_FusedMatMul,backendName:"webgl",kernelFunc:_fusedMatMul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ABS="return abs(x);";function abs(o){const{inputs:e,backend:s}=o,{x:i}=e;if(s.shouldExecuteOnCPU([i])&&i.dtype!=="complex64"){const d=s.texData.get(i.dataId),h=simpleAbsImplCPU(d.values);return s.makeTensorInfo(i.shape,i.dtype,h)}let a;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new UnaryOpPackedProgram(i.shape,ABS):a=new UnaryOpProgram(i.shape,ABS),s.runWebGLProgram(a,[i],i.dtype)}const absConfig={kernelName:Abs,backendName:"webgl",kernelFunc:abs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOS=CHECK_NAN_SNIPPET$1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,acos=unaryKernelFunc({opSnippet:ACOS}),acosConfig={kernelName:Acos,backendName:"webgl",kernelFunc:acos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOSH=CHECK_NAN_SNIPPET$1+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,acosh=unaryKernelFunc({opSnippet:ACOSH}),acoshConfig={kernelName:Acosh,backendName:"webgl",kernelFunc:acosh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ADD="return a + b;",addKernelFunc=binaryKernelFunc({opSnippet:ADD,packedOpSnippet:ADD,supportsComplex:!0,cpuKernelImpl:addImplCPU}),addConfig={kernelName:Add$1,backendName:"webgl",kernelFunc:addKernelFunc};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNProgram{constructor(e,s){this.outputShape=[],this.outputShape=e,this.variableNames=s.map((d,h)=>`T${h}`);const i=[];this.variableNames.forEach(d=>{i.push(`float v${d} = get${d}AtOutCoords();`)});const a=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${i.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNPackedProgram{constructor(e,s){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=s.map((d,h)=>`T${h}`);const i=[];this.variableNames.forEach(d=>{i.push(`vec4 v${d} = get${d}AtOutCoords();`)});const a=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${i.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN(o){const{inputs:e,backend:s}=o,i=e;if(i.length===1)return identity({inputs:{x:i[0]},backend:s});if(i.length>env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const _=Math.floor(i.length/2),j=addN({inputs:i.slice(0,_),backend:s}),_e=addN({inputs:i.slice(_),backend:s});return addN({inputs:[j,_e],backend:s})}const a=i.map(_=>_.dtype).reduce((_,j)=>upcastType(_,j)),d=i.map(_=>_.shape),b=env().getBool("WEBGL_PACK")?new AddNPackedProgram(i[0].shape,d):new AddNProgram(i[0].shape,d);return s.runWebGLProgram(b,i,a)}const addNConfig={kernelName:AddN,backendName:"webgl",kernelFunc:addN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i,b=a.shape.length,_=parseAxisParam(d,a.shape);let j=_;const _e=getAxesPermutation(j,b);let g=a;_e!=null&&(g=transpose({inputs:{x:a},backend:s,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,b)),assertAxesAreInnerMostDims("all",j,b);const[c,$]=computeOutAndReduceShapes(g.shape,j),et=sizeFromShape($),tt=reshape({inputs:{x:g},backend:s,attrs:{shape:[-1,et]}}),nt=reduce(tt,tt.dtype,"all",s);let rt;if(h){const ot=expandShapeToKeepDim(c,_);rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:ot}})}else rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:c}});return s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(nt),_e!=null&&s.disposeIntermediateTensorInfo(g),rt}const allConfig={kernelName:All,backendName:"webgl",kernelFunc:all};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i,b=a.shape.length,_=parseAxisParam(d,a.shape);let j=_;const _e=getAxesPermutation(j,b);let g=a;_e!=null&&(g=transpose({inputs:{x:a},backend:s,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,b)),assertAxesAreInnerMostDims("any",j,b);const[c,$]=computeOutAndReduceShapes(g.shape,j),et=sizeFromShape($),tt=reshape({inputs:{x:g},backend:s,attrs:{shape:[-1,et]}}),nt=reduce(tt,tt.dtype,"any",s);let rt;if(h){const ot=expandShapeToKeepDim(c,_);rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:ot}})}else rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:c}});return s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(nt),_e!=null&&s.disposeIntermediateTensorInfo(g),rt}const anyConfig={kernelName:Any,backendName:"webgl",kernelFunc:any};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxProgram{constructor(e,s,i){this.variableNames=["A"];const{windowSize:a,batchSize:d,outSize:h}=e;i||this.variableNames.push("bestIndicesA"),this.outputShape=[d,h];const b=s==="max"?">":"<",_=i?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${_};
          float candidate = getA(batch, inIdx);
          if (candidate ${b} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxPackedProgram{constructor(e,s,i,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,assert$1(e.length>2,()=>`Packed arg${i.charAt(0).toUpperCase()+i.slice(1)} supports only inputs with rank above 2.`);const d=e[e.length-1],h=Math.ceil(d/s);this.outputShape=e.slice(0,-1),h>1&&this.outputShape.push(h),a||this.variableNames.push("bestIndicesA");const b=this.outputShape,_=b.length,j=getCoordsDataType(_),_e=getChannels("coords",_);let g,c;if(h===1){c=_+1;const ct=getCoordsDataType(c);g=`
        ${ct} sourceLocR = ${ct}(${_e.join()}, 0);
        ++${_e[_-1]};
        ${ct} sourceLocG = ${ct}(${_e.join()}, 0);
        ++${_e[_-2]};
        ${ct} sourceLocA = ${ct}(${_e.join()}, 0);
        --${_e[_-1]};
        ${ct} sourceLocB = ${ct}(${_e.join()}, 0);
        --${_e[_-2]};`}else c=_,g=`
        ${j} sourceLocR = coords;
        ++${_e[_-1]};
        ${j} sourceLocG = coords;
        ++${_e[_-2]};
        ${j} sourceLocA = coords;
        --${_e[_-1]};
        ${j} sourceLocB = coords;
        --${_e[_-2]};`;const $=["x","y","z","w","u","v"].slice(0,c),et="."+$[c-1],tt=$.map(ct=>"int "+ct),nt=getChannels("sourceLocR",c-1).concat("inIdx.r"),rt=getChannels("sourceLocG",c-1).concat("inIdx.g"),ot=getChannels("sourceLocB",c-1).concat("inIdx.b"),st=getChannels("sourceLocA",c-1).concat("inIdx.a"),it=i==="max"?"greaterThan":"lessThan",at=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${nt.join()}),
                             getBestIndicesAChannel(${rt.join()}),
                             getBestIndicesAChannel(${ot.join()}),
                             getBestIndicesAChannel(${st.join()})));`,lt=`vec4(
            getAChannel(${nt.join()}),
            hasNextCol ? getAChannel(${rt.join()}) : 0.,
            hasNextRow ? getAChannel(${ot.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${st.join()}) : 0.)`,ut=a?"":`
      float getBestIndicesAChannel(${tt.join()}) {
        return getChannel(getBestIndicesA(${$.join()}),
                                          vec2(${$.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${tt.join()}) {
        return getChannel(getA(${$.join()}),
                               vec2(${$.slice(-2).join()}));
      }
      ${ut}
      void main() {
        ${j} coords = getOutputCoords();
        bool hasNextCol = ${_e[_-1]} < ${b[_-1]-1};
        bool hasNextRow = ${_e[_-2]} < ${b[_-2]-1};
        ${g}
        ivec4 srcIdx = ivec4(sourceLocR${et}, sourceLocG${et},
          sourceLocB${et}, sourceLocA${et}) * ${s};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${lt};

        for (int i = 0; i < ${s}; i++) {
          inIdx = srcIdx;
          ${at}
          vec4 candidate = ${lt};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${it}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argReduce(o,e,s,i=null){let a=e.shape[0],d=e.shape[1];i!=null&&(a=i.shape[0],d=i.shape[1]);const h=computeOptimalWindowSize(d),b={windowSize:h,inSize:d,batchSize:a,outSize:Math.ceil(d/h)},_=new ArgMinMaxProgram(b,s,i==null),j=[e];i!=null&&j.push(i);const _e=o.runWebGLProgram(_,j,"int32");if(_e.shape[1]===1)return _e;const g=argReduce(o,e,s,_e);return o.disposeIntermediateTensorInfo(_e),g}function argReducePacked(o,e,s,i=null){const a=i!=null?i.shape:e.shape,d=a[a.length-1],h=computeOptimalWindowSize(d),b=new ArgMinMaxPackedProgram(a,h,s,i==null),_=i==null?[e]:[e,i],j=o.runWebGLProgram(b,_,"int32");if(j.shape.length===e.shape.length){const _e=argReducePacked(o,e,s,j);return o.disposeIntermediateTensorInfo(j),_e}return j}function argMinMaxReduce(o,e,s,i){const a=[s];if(assertAxesAreInnerMostDims("arg"+i.charAt(0).toUpperCase()+i.slice(1),a,e.shape.length),!env().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const d=[],h=o.texData.get(e.dataId),b=h!==null&&h.isPacked;let _=e;b&&(_=o.unpackTensor(e),d.push(_));const[j,_e]=computeOutAndReduceShapes(_.shape,a),g=sizeFromShape(_e),c=reshape({inputs:{x:_},backend:o,attrs:{shape:[-1,g]}});d.push(c);const $=argReduce(o,c,i);d.push($);const et=reshape({inputs:{x:$},backend:o,attrs:{shape:j}});return d.forEach(tt=>o.disposeIntermediateTensorInfo(tt)),et}return argReducePacked(o,e,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d}=i;let h=parseAxisParam(d,a.shape);const b=getAxesPermutation(h,a.shape.length);let _=a;const j=[];b!=null&&(_=transpose({inputs:{x:a},backend:s,attrs:{perm:b}}),j.push(_),h=getInnerMostAxes(h.length,_.shape.length)),assertAxesAreInnerMostDims("argMax",[h[0]],_.shape.length);const _e=argMinMaxReduce(s,_,h[0],"max");return j.forEach(g=>s.disposeIntermediateTensorInfo(g)),_e}const argMaxConfig={kernelName:ArgMax,backendName:"webgl",kernelFunc:argMax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d}=i;let h=parseAxisParam(d,a.shape);const b=getAxesPermutation(h,a.shape.length);let _=a;const j=[];b!=null&&(_=transpose({inputs:{x:a},backend:s,attrs:{perm:b}}),j.push(_),h=getInnerMostAxes(h.length,_.shape.length)),assertAxesAreInnerMostDims("argMin",[h[0]],_.shape.length);const _e=argMinMaxReduce(s,_,h[0],"min");return j.forEach(g=>s.disposeIntermediateTensorInfo(g)),_e}const argMinConfig={kernelName:ArgMin,backendName:"webgl",kernelFunc:argMin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASIN=CHECK_NAN_SNIPPET$1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,asin=unaryKernelFunc({opSnippet:ASIN}),asinConfig={kernelName:Asin,backendName:"webgl",kernelFunc:asin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASINH=CHECK_NAN_SNIPPET$1+"return log(x + sqrt(x * x + 1.0));",asinh=unaryKernelFunc({opSnippet:ASINH}),asinhConfig={kernelName:Asinh,backendName:"webgl",kernelFunc:asinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN=CHECK_NAN_SNIPPET$1+`
  return atan(x);
`,atan=unaryKernelFunc({opSnippet:ATAN}),atanConfig={kernelName:Atan,backendName:"webgl",kernelFunc:atan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN2=CHECK_NAN_SNIPPET+`
  return atan(a, b);
`,ATAN2_PACKED=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,atan2=binaryKernelFunc({opSnippet:ATAN2,packedOpSnippet:ATAN2_PACKED}),atan2Config={kernelName:Atan2,backendName:"webgl",kernelFunc:atan2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATANH=CHECK_NAN_SNIPPET$1+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,atanh=unaryKernelFunc({opSnippet:ATANH}),atanhConfig={kernelName:Atanh,backendName:"webgl",kernelFunc:atanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pool2DProgram{constructor(e,s,i,a=!1,d=!1){if(this.variableNames=["x"],s==="avg"&&i)throw new Error("Cannot compute positions for average pool.");const h=e.filterWidth,b=e.strideHeight,_=e.strideWidth,j=e.dilationHeight,_e=e.dilationWidth,g=e.effectiveFilterHeight,c=e.effectiveFilterWidth,$=e.padInfo.top,et=e.padInfo.left;this.outputShape=e.outShape;const tt=s==="avg",nt=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,rt=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let ot="0.0";if(tt||(ot="-1.0 / 1e-20"),i){const ct=">=";this.userCode=`
        const ivec2 strides = ivec2(${b}, ${_});
        const ivec2 pads = ivec2(${$}, ${et});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${g};
              wR += ${j}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${_e}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${ct} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?d?nt:rt:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const st="max";let it=`${s}(${s}(${s}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;s==="avg"&&(it="avgValue / max(count, 1.0)");const at=Math.floor(h/4)*4,lt=h%4,ut=`
      if (${tt}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${st}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${b}, ${_});
      const ivec2 pads = ivec2(${$}, ${et});
      const float initializationValue = ${ot};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${ot});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${g};
            wR += ${j}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${at}; wC += 4) {
            int xC = xCCorner + wC * ${_e};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              getValue(batch, xR, xC + 2 * ${_e}, d),
              getValue(batch, xR, xC + 3 * ${_e}, d)
            );

            ${ut}
          }

          int xC = xCCorner + ${at};
          if (${lt===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${ut}
          } else if (${lt===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              initializationValue,
              initializationValue
            );

            ${ut}
          } else if (${lt===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${_e}, d),
              getValue(batch, xR, xC + 2 * ${_e}, d),
              initializationValue
            );

            ${ut}
          }
        }
        setOutput(${it});
      }
    `}}class Pool3DProgram{constructor(e,s,i,a=!1,d=!1){if(this.variableNames=["x"],s==="avg"&&i)throw new Error("Cannot compute positions for average pool.");const h=e.filterWidth,b=e.strideDepth,_=e.strideHeight,j=e.strideWidth,_e=e.dilationDepth,g=e.dilationHeight,c=e.dilationWidth,$=e.effectiveFilterDepth,et=e.effectiveFilterHeight,tt=e.effectiveFilterWidth,nt=e.padInfo.front,rt=e.padInfo.top,ot=e.padInfo.left;this.outputShape=e.outShape;const st=s==="avg";let it="0.0";if(st||(it="-1.0 / 1e-20"),i){const ht=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${b}, ${_}, ${j});
        const ivec3 pads = ivec3(${nt}, ${rt}, ${ot});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${$};
              wD += ${_e}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${et};
                wR += ${g}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${tt};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${ht} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?d?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${et} * ${tt} +
                      wR * ${tt} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const at="max";let lt=`${s}(${s}(${s}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;s==="avg"&&(lt="avgValue / max(count, 1.0)");const ut=Math.floor(h/4)*4,ct=h%4,pt=`
      if (${st}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${at}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${b}, ${_}, ${j});
      const ivec3 pads = ivec3(${nt}, ${rt}, ${ot});
      const float initializationValue = ${it};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${it});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${$};
            wD += ${_e}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${et};
            wR += ${g}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${ut}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${pt}
            }

            int xC = xCCorner + ${ut};
            if (${ct===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${pt}
            } else if (${ct===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${pt}
            } else if (${ct===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${pt}
            }
          }
        }
        setOutput(${lt});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e;assertNotComplex(a,"avgPool");const{filterSize:d,strides:h,pad:b,dimRoundingMode:_}=i,j=1;assert$1(eitherStridesOrDilationsAreOne(h,j),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${j}'`);const _e=computePool2DInfo(a.shape,d,h,j,b,_);if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))return identity({inputs:{x:a},backend:s});const g=new Pool2DProgram(_e,"avg",!1);return s.runWebGLProgram(g,[a],"float32")}const avgPoolConfig={kernelName:AvgPool,backendName:"webgl",kernelFunc:avgPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{filterSize:d,strides:h,pad:b,dimRoundingMode:_,dataFormat:j}=i,_e=[1,1,1],g=computePool3DInfo(a.shape,d,h,_e,b,_,j),c=new Pool3DProgram(g,"avg",!1);return s.runWebGLProgram(c,[a],"float32")}const avgPool3DConfig={kernelName:AvgPool3D,backendName:"webgl",kernelFunc:avgPool3D};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AvgPool2DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const s=e.filterHeight,i=e.filterWidth,a=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,b=e.dilationWidth,_=e.effectiveFilterHeight,j=e.effectiveFilterWidth,_e=_-1-e.padInfo.top,g=j-1-e.padInfo.left,c=1/(s*i);this.userCode=`
      const ivec2 pads = ivec2(${_e}, ${g});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${_};
            wR += ${h}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${j};
            wC+= ${b}) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class AvgPool3DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const s=e.filterDepth,i=e.filterHeight,a=e.filterWidth,d=e.strideDepth,h=e.strideHeight,b=e.strideWidth,_=e.dilationDepth,j=e.dilationHeight,_e=e.dilationWidth,g=e.effectiveFilterDepth,c=e.effectiveFilterHeight,$=e.effectiveFilterWidth,et=g-1-e.padInfo.front,tt=c-1-e.padInfo.top,nt=$-1-e.padInfo.left,rt=1/(s*i*a);this.userCode=`
      const ivec3 pads = ivec3(${et}, ${tt}, ${nt});
      const float avgMultiplier = float(${rt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${_}) {
          float dyD = float(dyDCorner + wD) / ${d}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${j}) {
            float dyR = float(dyRCorner + wR) / ${h}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${$};
                wC += ${_e}) {
              float dyC = float(dyCCorner + wC) / ${b}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,h=d,{filterSize:b,strides:_,pad:j,dimRoundingMode:_e}=i,g=[1,1,1],c=computePool3DInfo(h.shape,b,_,g,j,_e),$=new AvgPool3DBackpropProgram(c);return s.runWebGLProgram($,[a],h.dtype)}const avgPool3DGradConfig={kernelName:AvgPool3DGrad,backendName:"webgl",kernelFunc:avgPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,h=d;assertNotComplex([a,d],"avgPoolGrad");const{filterSize:b,strides:_,pad:j}=i,_e=computePool2DInfo(h.shape,b,_,1,j),g=new AvgPool2DBackpropProgram(_e);return s.runWebGLProgram(g,[a],h.dtype)}const avgPoolGradConfig={kernelName:AvgPoolGrad,backendName:"webgl",kernelFunc:avgPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul(o){const{inputs:e,backend:s,attrs:i}=o,{a,b:d}=e,{transposeA:h,transposeB:b}=i;return batchMatMulImpl({a,b:d,transposeA:h,transposeB:b,backend:s})}const batchMatMulConfig={kernelName:BatchMatMul,backendName:"webgl",kernelFunc:batchMatMul};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormProgram{constructor(e,s,i,a,d,h){this.outputShape=[],this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,s),assertAndGetBroadcastShape(e,i);let b="0.0";a!=null&&(assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),b="getOffsetAtOutCoords()");let _="1.0";d!=null&&(assertAndGetBroadcastShape(e,d),this.variableNames.push("scale"),_="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${b};
        float scale = ${_};
        float inv = scale * inversesqrt(variance + float(${h}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormPackedProgram{constructor(e,s,i,a,d,h){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,s),assertAndGetBroadcastShape(e,i);let b="vec4(0.0)";a!=null&&(assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),b="getOffsetAtOutCoords()");let _="vec4(1.0)";d!=null&&(assertAndGetBroadcastShape(e,d),this.variableNames.push("scale"),_="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${b};
        vec4 scale = ${_};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${h}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchNorm=({inputs:o,backend:e,attrs:s})=>{const{x:i,mean:a,variance:d,offset:h,scale:b}=o;assert$1(a.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(h==null||a.shape.length===h.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(b==null||a.shape.length===b.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:_}=s;_==null&&(_=.001);const j=[i,a,d];let _e=null;h!=null&&(_e=h.shape,j.push(h));let g=null;b!=null&&(g=b.shape,j.push(b));const c=env().getBool("WEBGL_PACK_NORMALIZATION")?new BatchNormPackedProgram(i.shape,a.shape,d.shape,_e,g,_):new BatchNormProgram(i.shape,a.shape,d.shape,_e,g,_);return e.runWebGLProgram(c,j,j[0].dtype)},batchNormConfig={kernelName:FusedBatchNorm,backendName:"webgl",kernelFunc:batchNorm};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SliceProgram{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const s=getCoordsDataType(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const i=getCoords$1(this.rank);let a;const d=e.map((h,b)=>`sourceLoc.${coords[b]} = start[${b}] + coords.${coords[b]};`);a=`
        ${s} sourceLoc;
        ${s} coords = getOutputCoords();
        ${d.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${i}));
      }
    `}}const coords=["x","y","z","w","u","v"];function getCoords$1(o){if(o===1)return"sourceLoc";if(o<=6)return coords.slice(0,o).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${o} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SlicePackedProgram{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=getCoordsDataType(this.rank),i=getChannels("coords",this.rank),a=getChannels("sourceLoc",this.rank),d=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,h=`getChannel(getSource(${a.join()}), ${d})`,b=`
      result.x = ${h};
      if (++${i[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${h};
        --${a[this.rank-1]};
      }
    `,_=this.rank===1?"":`
      --${i[this.rank-1]};
      if (++${i[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${h};
        if (++${i[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${h};
        }
      }
    `,j=this.rank<=4?`sourceLoc = coords +
            ${s}(${e.map((_e,g)=>`start[${g}]`).join()});`:e.map((_e,g)=>`${a[g]} = ${i[g]} + start[${g}];`).join(`
`);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        ${s} sourceLoc;
        ${j}
        vec4 result = vec4(0.);
        ${b}
        ${_}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shallowSlice(o,e,s,i){const a=i.texData.get(o.dataId),d=i.makeTensorInfo(s,o.dtype),h=i.texData.get(d.dataId);Object.assign(h,a),h.refCount=1,h.shape=s,h.dtype=o.dtype;let b=computeFlatOffset(e,computeStrides(o.shape));a.slice&&(b+=a.slice.flatOffset),h.slice={flatOffset:b,origDataId:a.slice&&a.slice.origDataId||o.dataId};const _=i.dataRefCount.get(h.slice.origDataId)||1;return i.dataRefCount.set(h.slice.origDataId,_+1),d}function slice(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{begin:d,size:h}=i,[b,_]=parseSliceParams(a,d,h);if(assertParamsValid(a,b,_),sizeFromShape(_)===0)return s.makeTensorInfo(_,a.dtype,[]);if(s.shouldExecuteOnCPU([a])||a.dtype==="string"){const g=s.texData.get(a.dataId),c=sliceImplCPU(g.values,b,_,a.shape,a.dtype);return s.makeTensorInfo(_,a.dtype,c)}const{isPacked:j}=s.texData.get(a.dataId),_e=isSliceContinous(a.shape,b,_);if(j||!_e){const g=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SlicePackedProgram(_):new SliceProgram(_),c=[b];return s.runWebGLProgram(g,[a],a.dtype,c)}return s.uploadToGPU(a.dataId),shallowSlice(a,b,_,s)}const sliceConfig={kernelName:Slice,backendName:"webgl",kernelFunc:slice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceND=o=>{const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockShape:d,crops:h}=i;assert$1(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const b=d.reduce((ot,st)=>ot*st),_=getReshaped(a.shape,d,b),j=getPermuted(_.length,d.length),_e=getReshapedPermuted(a.shape,d,b),g=getSliceBeginCoords(h,d.length),c=getSliceSize(_e,h,d.length),$=[],et=reshape({inputs:{x:a},backend:s,attrs:{shape:_}}),tt=transpose({inputs:{x:et},backend:s,attrs:{perm:j}}),nt=reshape({inputs:{x:tt},backend:s,attrs:{shape:_e}}),rt=slice({inputs:{x:nt},backend:s,attrs:{begin:g,size:c}});return $.push(et),$.push(tt),$.push(nt),$.forEach(ot=>s.disposeIntermediateTensorInfo(ot)),rt},batchToSpaceNDConfig={kernelName:BatchToSpaceND,backendName:"webgl",kernelFunc:batchToSpaceND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,weights:d}=e,{size:h}=i,b=s.readSync(a.dataId),_=s.readSync(d.dataId),j=bincountImplCPU(b,_,d.dtype,d.shape,h);return s.makeTensorInfo([h],d.dtype,j)}const bincountConfig={kernelName:Bincount,backendName:"webgl",kernelFunc:bincount};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BITWISEAND=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,BITWISEAND_UNPACKED=`
  return float(int(a.r) & int(b.r));
`;function bitwiseAnd(o){const{inputs:e,backend:s}=o,{a:i,b:a}=e,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS"),h=env().getNumber("WEBGL_VERSION");if(s.shouldExecuteOnCPU([i,a])||h===1){const _=s.texData.get(i.dataId).values,j=s.texData.get(a.dataId).values,[_e,g]=bitwiseAndImplCPU(i.shape,a.shape,_,j,i.dtype),c=s.makeTensorInfo(g,i.dtype),$=s.texData.get(c.dataId);return $.values=_e,c}let b;return d?b=new BinaryOpPackedProgram(BITWISEAND,i.shape,a.shape,!1):b=new BinaryOpProgram(BITWISEAND_UNPACKED,i.shape,a.shape),s.runWebGLProgram(b,[i,a],i.dtype)}const bitwiseAndConfig={kernelName:BitwiseAnd,backendName:"webgl",kernelFunc:bitwiseAnd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastArgs(o){const{inputs:e,backend:s}=o,{s0:i,s1:a}=e,d=s.readSync(i.dataId),h=s.readSync(a.dataId),b=assertAndGetBroadcastShape(Array.from(d),Array.from(h));return s.makeTensorInfo([b.length],"int32",Int32Array.from(b))}const broadcastArgsConfig={kernelName:BroadcastArgs,backendName:"webgl",kernelFunc:broadcastArgs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NOT_EQUAL="return float(a != b);",notEqual=binaryKernelFunc({opSnippet:NOT_EQUAL,cpuKernelImpl:notEqualImplCPU,dtype:"bool"}),notEqualConfig={kernelName:NotEqual,backendName:"webgl",kernelFunc:notEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real(o){const{inputs:e,backend:s}=o,{input:i}=e,a=s.texData.get(i.dataId);return identity({inputs:{x:a.complexTensorInfos.real},backend:s})}const realConfig={kernelName:Real,backendName:"webgl",kernelFunc:real};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO_INT="return float(int(x));";function int(o,e){const s=new UnaryOpProgram(o.shape,TO_INT),i=e.runWebGLProgram(s,[o],"int32");return{dataId:i.dataId,shape:i.shape,dtype:i.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{dtype:d}=i;if(d==="complex64"){if(a.dtype==="complex64")return identity({inputs:{x:a},backend:s});const h=zeros$1(a.shape),b=cast({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),_=complex({inputs:{real:b,imag:h},backend:s});return h.dispose(),s.disposeIntermediateTensorInfo(b),_}if(a.dtype==="complex64"){const h=real({inputs:{input:a},backend:s}),b=cast({inputs:{x:h},backend:s,attrs:{dtype:d}});return s.disposeIntermediateTensorInfo(h),b}if(!hasEncodingLoss(a.dtype,d)){const h=identity({inputs:{x:a},backend:s});return{dataId:h.dataId,shape:h.shape,dtype:d}}if(s.shouldExecuteOnCPU([a])){const h=s.texData.get(a.dataId).values,[b,_,j]=castImplCPU(h,a.shape,a.dtype,d);return s.makeTensorInfo(b,_,j)}if(d==="int32")return int(a,s);if(d==="bool"){const h=s.makeTensorInfo([],"bool",getTypedArrayFromDType("bool",1)),_=notEqual({inputs:{a,b:h},backend:s});return s.disposeIntermediateTensorInfo(h),_}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${d}`)}const castConfig={kernelName:Cast,backendName:"webgl",kernelFunc:cast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CEIL="return ceil(x);",ceil=unaryKernelFunc({opSnippet:CEIL,packedOpSnippet:CEIL,cpuKernelImpl:ceilImplCPU}),ceilConfig={kernelName:Ceil,backendName:"webgl",kernelFunc:ceil};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipProgram{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{clipValueMin:d,clipValueMax:h}=i;let b;env().getBool("WEBGL_PACK_CLIP")?b=new ClipPackedProgram(a.shape):b=new ClipProgram(a.shape);const _=[[d],[h]];return s.runWebGLProgram(b,[a],a.dtype,_)}const clipByValueConfig={kernelName:ClipByValue,backendName:"webgl",kernelFunc:clipByValue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ComplexAbsProgram{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeComplexComponentTensorInfo(o,e){return{dataId:e.dataId,dtype:e.dtype,shape:o.shape}}function complexAbs(o){const{inputs:e,backend:s}=o,{x:i}=e,a=s.texData.get(i.dataId),d=new ComplexAbsProgram(i.shape),h=[makeComplexComponentTensorInfo(i,a.complexTensorInfos.real),makeComplexComponentTensorInfo(i,a.complexTensorInfos.imag)];return s.runWebGLProgram(d,h,h[0].dtype)}const complexAbsConfig={kernelName:ComplexAbs,backendName:"webgl",kernelFunc:complexAbs};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatProgram{constructor(e){this.outputShape=[],this.outputShape=computeOutShape$1(e,1),this.variableNames=e.map((h,b)=>`T${b}`);const s=new Array(e.length-1);s[0]=e[0][1];for(let h=1;h<s.length;h++)s[h]=s[h-1]+e[h][1];const i=[`if (yC < ${s[0]}) setOutput(getT0(yR, yC));`];for(let h=1;h<s.length;h++){const b=s[h-1];i.push(`else if (yC < ${s[h]}) setOutput(getT${h}(yR, yC-${b}));`)}const a=s.length,d=s[s.length-1];i.push(`else setOutput(getT${a}(yR, yC-${d}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${i.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatPackedProgram{constructor(e,s){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=computeOutShape$1(e,s);const i=this.outputShape,a=i.length,d=getCoordsDataType(a),h=getChannels("coords",a),b=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((tt,nt)=>`T${nt}`);const _=new Array(e.length-1);_[0]=e[0][s];for(let tt=1;tt<_.length;tt++)_[tt]=_[tt-1]+e[tt][s];const j=b[s],_e=b.slice(-2),g=b.join();let c=`if (${j} < ${_[0]}) {
        return getChannel(
            getT0(${g}), vec2(${_e.join()}));
        }`;for(let tt=1;tt<_.length;tt++){const nt=_[tt-1];c+=`
        if (${j} < ${_[tt]}  && ${j} >= ${_[tt-1]}) {
          return getChannel(
            getT${tt}(${shiftedChannels(b,j,nt)}),
            vec2(${shiftedChannels(_e,j,nt)}));
        }`}const $=_.length,et=_[_.length-1];c+=`
        return getChannel(
          getT${$}(${shiftedChannels(b,j,et)}),
          vec2(${shiftedChannels(_e,j,et)}));`,this.userCode=`
      float getValue(${b.map(tt=>"int "+tt)}) {
        ${c}
      }

      void main() {
        ${d} coords = getOutputCoords();
        vec4 result = vec4(getValue(${h}), 0., 0., 0.);

        ${h[a-1]} = ${h[a-1]} + 1;
        if (${h[a-1]} < ${i[a-1]}) {
          result.g = getValue(${h});
        }

        ${h[a-2]} = ${h[a-2]} + 1;
        if (${h[a-2]} < ${i[a-2]}) {
          result.a = getValue(${h});
        }

        ${h[a-1]} = ${h[a-1]} - 1;
        if (${h[a-2]} < ${i[a-2]} &&
            ${h[a-1]} < ${i[a-1]}) {
          result.b = getValue(${h});
        }
        setOutput(result);
      }
    `}}function shiftedChannels(o,e,s){const i=o.indexOf(e);return o.map((d,h)=>h===i?`${d} - ${s}`:d).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag(o){const{inputs:e,backend:s}=o,{input:i}=e,a=s.texData.get(i.dataId);return identity({inputs:{x:a.complexTensorInfos.imag},backend:s})}const imagConfig={kernelName:Imag,backendName:"webgl",kernelFunc:imag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl(o,e,s){const i=o[0].dtype;if(i==="complex64"){const $=o.map(ot=>real({inputs:{input:ot},backend:s})),et=o.map(ot=>imag({inputs:{input:ot},backend:s})),tt=concatImpl($,e,s),nt=concatImpl(et,e,s),rt=complex({inputs:{real:tt,imag:nt},backend:s});return $.forEach(ot=>s.disposeIntermediateTensorInfo(ot)),et.forEach(ot=>s.disposeIntermediateTensorInfo(ot)),s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(nt),rt}let a=s.shouldExecuteOnCPU(o);if(i==="string"&&(a=!0),a){const $=o.map(it=>{const lt=[-1,sizeFromShape(it.shape.slice(e))];return reshape({inputs:{x:it},backend:s,attrs:{shape:lt}})}),et=$.map(it=>({vals:s.readSync(it.dataId),shape:it.shape})),tt=computeOutShape$1($.map(it=>it.shape),1),nt=$[0].shape[0]===1,rt=concatImplCPU(et,tt,i,nt),ot=computeOutShape$1(o.map(it=>it.shape),e),st=s.makeTensorInfo(ot,i,rt);return $.forEach(it=>s.disposeIntermediateTensorInfo(it)),st}const d=o.filter($=>sizeFromShape($.shape)>0),h=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&d[0].shape.length>1;if(d.length===1){const $=h?new UnaryOpProgram(o[0].shape,CLONE):new UnaryOpPackedProgram(o[0].shape,CLONE);return s.runWebGLProgram($,o,i)}const b=env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(d.length>b){const $=[];for(let tt=0;tt<d.length;tt+=b){const nt=d.slice(tt,tt+b);$.push(concatImpl(nt,e,s))}const et=concatImpl($,e,s);for(const tt of $)s.disposeIntermediateTensorInfo(tt);return et}if(h){const $=new ConcatPackedProgram(d.map(et=>et.shape),e);return s.runWebGLProgram($,d,i)}const{tensors2D:_,outShape:j}=computeTensors2D(d,e,s),_e=new ConcatProgram(_.map($=>$.shape)),g=s.runWebGLProgram(_e,_,i);_.forEach($=>s.disposeIntermediateTensorInfo($));const c=reshape({inputs:{x:g},attrs:{shape:j},backend:s});return s.disposeIntermediateTensorInfo(g),c}function computeTensors2D(o,e,s){const i=computeOutShape$1(o.map(d=>d.shape),e);return{tensors2D:o.map(d=>reshape({inputs:{x:d},attrs:{shape:[-1,sizeFromShape(d.shape.slice(e))]},backend:s})),outShape:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat(o){const{inputs:e,backend:s,attrs:i}=o,{axis:a}=i,d=parseAxisParam(a,e[0].shape)[0],h=e.map(j=>j.shape);assertParamsConsistent(h,d);const b=computeOutShape$1(e.map(j=>j.shape),d);if(sizeFromShape(b)===0)return s.makeTensorInfo(b,e[0].dtype,[]);const _=e.filter(j=>sizeFromShape(j.shape)>0);return _.length===1?identity({inputs:{x:_[0]},backend:s}):concatImpl(_,d,s)}const concatConfig={kernelName:Concat,backendName:"webgl",kernelFunc:concat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DProgram{constructor(e,s=!1,i=null,a=!1,d=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const h=e.padInfo.top,b=e.padInfo.left,_=e.strideHeight,j=e.strideWidth,_e=e.dilationHeight,g=e.dilationWidth,c=e.filterHeight,$=e.filterWidth,et=Math.floor(e.inChannels/4)*4,tt=e.inChannels%4,nt=e.dataFormat==="channelsLast",rt=nt?1:2,ot=nt?2:3,st=nt?3:1;let it="",at="";i&&(a?it=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:d?it=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:it=`
          float activation(float x) {
            ${i}
          }
        `,at="result = activation(result);");const lt=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${it}

      const ivec2 strides = ivec2(${_}, ${j});
      const ivec2 pads = ivec2(${h}, ${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${st}];

        ivec2 xRCCorner =
            ivec2(coords[${rt}], coords[${ot}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${_e};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${$}; wC++) {
            int xC = xCCorner + wC * ${g};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${et}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${nt}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${tt===1}) {

              if (${nt}) {
                dotProd +=
                    getX(batch, xR, xC, ${et}) *
                    getW(wR, wC, ${et}, d2);
              } else {
                dotProd +=
                    getX(batch, ${et}, xR, xC) *
                    getW(wR, wC, ${et}, d2);
              }

            } else if (${tt===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${et}, d2),
                getW(wR, wC, ${et} + 1, d2)
              );

              if (${nt}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${et}),
                  getX(batch, xR, xC, ${et} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${et}, xR, xC),
                  getX(batch, ${et} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${tt===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${et}, d2),
                getW(wR, wC, ${et} + 1, d2),
                getW(wR, wC, ${et} + 2, d2)
              );

              if (${nt}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${et}),
                  getX(batch, xR, xC, ${et} + 1),
                  getX(batch, xR, xC, ${et} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${et}, xR, xC),
                  getX(batch, ${et} + 1, xR, xC),
                  getX(batch, ${et} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${lt}
        ${at}
        setOutput(result);
      }
    `}}class Conv3DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left,d=e.strideDepth,h=e.strideHeight,b=e.strideWidth,_=e.dilationDepth,j=e.dilationHeight,_e=e.dilationWidth,g=e.filterDepth,c=e.filterHeight,$=e.filterWidth,et=Math.floor(e.inChannels/4)*4,tt=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${d}, ${h}, ${b});
      const ivec3 pads = ivec3(${s}, ${i}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${g}; wF++) {
          int xF = xFCorner + wF * ${_};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${j};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC++) {
              int xC = xCCorner + wC * ${_e};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${et}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${tt===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${et}) *
                  getW(wF, wR, wC, ${et}, d2);
              } else if (${tt===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${et}),
                  getX(batch, xF, xR, xC, ${et} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${et}, d2),
                  getW(wF, wR, wC, ${et} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${tt===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${et}),
                  getX(batch, xF, xR, xC, ${et} + 1),
                  getX(batch, xF, xR, xC, ${et} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${et}, d2),
                  getW(wF, wR, wC, ${et} + 1, d2),
                  getW(wF, wR, wC, ${et} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DPackedProgram{constructor(e,s=!1,i=null,a=!1,d=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const h=e.padInfo.left,b=e.strideWidth,_=e.dilationWidth,j=e.filterHeight,_e=e.filterWidth,g=_e;let c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let nt=0;nt<_e;nt++)c+=`
           vec4 xTexelC${nt*2};
           int xTexelC${nt*2}Ready;
           vec4 xTexelC${nt*2+1};
           int xTexelC${nt*2+1}Ready;
           vec4 xC${nt};`;c+=`
     for (int r = 0; r < ${j}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let nt=0;nt<_e;nt++)c+=`
           xTexelC${nt*2} = vec4(0.0);
           xTexelC${nt*2}Ready = 0;
           xTexelC${nt*2+1} = vec4(0.0);
           xTexelC${nt*2+1}Ready = 0;
           xC${nt} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let nt=0;nt<(g+1)/2;nt++){const rt=nt*2;if(c+=`
           xC = xCCorner + ${rt*_};
           `,b===1){if(rt<_e&&(h%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${rt}Ready == 0) {
                   xTexelC${rt} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${rt}.zw = vec2(0.0);
                   }
                   xTexelC${rt}Ready = 1;
                 }
               `,_===1&&rt>0?c+=`
                 xC${rt} = vec4(xTexelC${rt-2}.zw, xTexelC${rt}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${rt} = vec4(previous.zw, xTexelC${rt}.xy);
                   } else {
                     xC${rt} = vec4(0.0, 0.0, xTexelC${rt}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${rt}Ready == 0) {
                   xTexelC${rt} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${rt}.zw = vec2(0.0);
                   }
                   xTexelC${rt}Ready = 1;
                 }

                 xC${rt} = xTexelC${rt};
                 `,rt+1<_e)){const ot=h%2===0?nearestLargerEven(_):_;_%2===0&&h%2===1||_%2!==0&&h%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${ot};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${rt+1}Ready == 0) {
                     xTexelC${rt+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${rt+1}.zw = vec2(0.0);
                     }
                     xTexelC${rt+1}Ready = 1;
                   }
                   `,_>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${rt+1} = vec4(previous.zw, xTexelC${rt+1}.xy);
                     } else {
                      xC${rt+1} = vec4(0.0, 0.0, xTexelC${rt+1}.xy);
                     }
                     `:c+=`
                     xC${rt+1} = vec4(xTexelC${rt}.zw, xTexelC${rt+1}.xy);
                     `):ot===1?c+=`
                     xC${rt+1} = xTexelC${rt};
                     `:c+=`
                     xCOffset = xC + ${ot};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${rt+1}Ready == 0) {
                       xTexelC${rt+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${rt+1}.zw = vec2(0.0);
                       }
                       xTexelC${rt+1}Ready = 1;
                     }

                     xC${rt+1} = xTexelC${rt+1};
                     `}}else rt<_e&&(h%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${rt}Ready == 0) {
                   xTexelC${rt} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${rt}.zw = vec2(0.0);
                   }
                   xTexelC${rt}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${rt+1}Ready == 0) {
                   xTexelC${rt+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${rt+1}.zw = vec2(0.0);
                   }
                   xTexelC${rt+1}Ready = 1;
                 }

                 xC${rt} = vec4(xTexelC${rt}.zw, xTexelC${rt+1}.zw);
               `,rt+1<_e&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${rt+1} = vec4(xTexelC${rt+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${rt}Ready == 0) {
                   xTexelC${rt} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${rt}.zw = vec2(0.0);
                   }
                   xTexelC${rt}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${rt+1}Ready == 0) {
                   xTexelC${rt+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${rt+1}.zw = vec2(0.);
                   }
                   xTexelC${rt+1}Ready = 1;
                 }

                 xC${rt} = vec4(
                   xTexelC${rt}.xy, xTexelC${rt+1}.xy);
               `,rt+1<_e&&(c+=`
                   xC${rt+1} = vec4(xTexelC${rt}.zw, xTexelC${rt+1}.zw);
                 `)));rt<_e&&(c+=`
             wTexel = getW(r, ${rt}, d1, d2);
             dotProd += xC${rt}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${rt}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,rt+1<_e&&(c+=`
               wTexel = getW(r, ${rt+1}, d1, d2);
               dotProd += xC${rt+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${rt+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let $="",et="";i&&(a?$=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${i}
         }`:d?$=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${i}
         }`:$=`vec4 activation(vec4 x) {
           ${i}
         }`,et="result = activation(result);");const tt=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${$}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${tt}
         ${et}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im2ColPackedProgram{constructor(e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const{dataFormat:i}=s,a=getGlslDifferences(),d=i==="channelsLast",h=d?1:2,b=d?2:3,_=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let j="";for(let _e=0;_e<=1;_e++)for(let g=0;g<=1;g++)j+=`
          blockIndex = rc.z + ${g};
          pos = rc.y + ${_e};

          ${_}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${h}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${b}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${d}) {
                  innerDims = vec2(d1, ch);
                  result[${_e*2+g}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${_e*2+g}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${j}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getShapeForBatchMatMul(o,e){const s=o.length;return s>=3?e?[...o.slice(0,-3),o[s-3]*o[s-2],o[s-1]]:[...o.slice(0,-3),o[s-3],o[s-2]*o[s-1]]:!e&&s===1&&o[0]>1?[o[0],1]:null}function conv2dByMatMul({x:o,filter:e,convInfo:s,backend:i,bias:a=null,preluActivationWeights:d=null,leakyreluAlpha:h=0,activation:b=null}){const _=o.shape,j=i.texData.get(o.dataId),_e=s.inChannels,g=_[0]*_[1]*_[2],c=s.outChannels,$=s.dataFormat==="channelsLast",et=!1,tt=!1;let nt;const rt=[];if(d!=null){const it=getShapeForBatchMatMul(d.shape,$);it!=null&&(d=reshape({inputs:{x:d},backend:i,attrs:{shape:it}}),rt.push(d))}if(a!=null){const it=getShapeForBatchMatMul(a.shape,$);it!=null&&(a=reshape({inputs:{x:a},backend:i,attrs:{shape:it}}),rt.push(a))}if(!((g===1||c===1)&&_e>MATMUL_SHARED_DIM_THRESHOLD)&&j.isPacked&&$&&j.texture!=null&&_[2]%2!==0&&arraysEqual(j.shape.slice(-3),_.slice(-3))){const it=_[0]*_[1]*(_[2]+1),at={dataId:o.dataId,shape:[1,it,s.inChannels],dtype:o.dtype},lt=j.shape;j.shape=j.shape.slice(),j.shape[j.shape.length-2]++,assert$1(isReshapeFree(j.shape,at.shape),()=>`packed reshape ${j.shape} to ${at.shape} isn't free`);const ut=reshape({inputs:{x:e},backend:i,attrs:{shape:[1,s.inChannels,s.outChannels]}});rt.push(ut);const ct=batchMatMulImpl({a:at,b:ut,backend:i,transposeA:et,transposeB:tt,bias:a,activation:b,preluActivationWeights:d,leakyreluAlpha:h}),pt=i.texData.get(ct.dataId);assert$1(pt.isPacked,()=>"batchMatMul result is expected to be packed"),j.shape=lt,pt.shape=s.outShape,nt=identity({inputs:{x:ct},backend:i}),nt.shape=s.outShape,rt.push(ct)}else{const it=s.outHeight*s.outWidth,at=reshape({inputs:{x:o},backend:i,attrs:{shape:$?[s.batchSize,it,s.inChannels]:[s.batchSize,s.inChannels,it]}}),lt=reshape({inputs:{x:e},backend:i,attrs:{shape:[1,s.inChannels,s.outChannels]}}),ut=batchMatMulImpl({a:$?at:lt,b:$?lt:at,transposeA:!$,transposeB:tt,backend:i,bias:a,activation:b,preluActivationWeights:d,leakyreluAlpha:h});nt=reshape({inputs:{x:ut},backend:i,attrs:{shape:s.outShape}}),rt.push(at),rt.push(lt),rt.push(ut)}for(const it of rt)i.disposeIntermediateTensorInfo(it);return nt}function conv2dWithIm2Row({x:o,filter:e,convInfo:s,backend:i,bias:a=null,preluActivationWeights:d=null,leakyreluAlpha:h=0,activation:b=null}){const{filterWidth:_,filterHeight:j,inChannels:_e,outWidth:g,outHeight:c,dataFormat:$}=s,et=$==="channelsLast",tt=_*j*_e,nt=c*g,rt=[s.batchSize,tt,nt],ot=!0,st=!1,it=[];if(d!=null){const vt=getShapeForBatchMatMul(d.shape,et);vt!=null&&(d=reshape({inputs:{x:d},backend:i,attrs:{shape:vt}}),it.push(d))}if(a!=null){const vt=getShapeForBatchMatMul(a.shape,et);vt!=null&&(a=reshape({inputs:{x:a},backend:i,attrs:{shape:vt}}),it.push(a))}const at=reshape({inputs:{x:e},backend:i,attrs:{shape:[1,tt,sizeFromShape(e.shape)/tt]}});it.push(at);const lt=new Im2ColPackedProgram(rt,s),ut=[o.shape,[s.padInfo.top,s.padInfo.left],[s.strideHeight,s.strideWidth],[s.dilationHeight,s.dilationWidth],[s.inChannels],[s.filterWidth*s.inChannels],[s.outWidth]],ct=i.runWebGLProgram(lt,[o],"float32",ut),pt=reshape({inputs:{x:ct},backend:i,attrs:{shape:rt}});it.push(ct),it.push(pt);const ht=a!=null,yt=d!=null,xt=b==="leakyrelu",ft=b?mapActivationToShaderProgram(b,!0):null,wt=new MatMulPackedProgram(et?pt.shape:at.shape,et?at.shape:pt.shape,et?[s.batchSize,nt,s.outChannels]:[s.batchSize,s.outChannels,nt],ot,st,ht,ft,yt,xt),dt=et?[pt,at]:[at,pt];if(a&&dt.push(a),yt&&dt.push(d),xt){const vt=i.makeTensorInfo([],"float32",createScalarValue(h,"float32"));dt.push(vt),it.push(vt)}const mt=i.runWebGLProgram(wt,dt,"float32"),bt=reshape({inputs:{x:mt},backend:i,attrs:{shape:s.outShape}});it.push(mt);for(const vt of it)i.disposeIntermediateTensorInfo(vt);return bt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dataFormat:_,dilations:j,dimRoundingMode:_e}=i,g=convertConv2DDataFormat(_),c=computeConv2DInfo(a.shape,d.shape,h,j,b,_e,!1,g);let $;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))$=conv2dByMatMul({x:a,filter:d,convInfo:c,backend:s});else if(c.strideWidth<=2&&g==="channelsLast"&&env().getBool("WEBGL_EXP_CONV")){const tt=new Conv2DPackedProgram(c),nt=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];$=s.runWebGLProgram(tt,[a,d],"float32",nt)}else if(env().getBool("WEBGL_CONV_IM2COL"))$=conv2dWithIm2Row({x:a,filter:d,convInfo:c,backend:s});else{const tt=new Conv2DProgram(c);$=s.runWebGLProgram(tt,[a,d],"float32")}const et=reshape({inputs:{x:$},backend:s,attrs:{shape:c.outShape}});return s.disposeIntermediateTensorInfo($),et}const conv2DConfig={kernelName:Conv2D$1,backendName:"webgl",kernelFunc:conv2d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const s=e.strideHeight,i=e.strideWidth,a=e.padInfo.top,d=e.padInfo.left,h=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${s} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${i} - ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${h?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const s=e.filterHeight,i=e.filterWidth,a=e.strideHeight,d=e.strideWidth,h=e.dataFormat==="channelsLast",b=s-1-e.padInfo.top,_=i-1-e.padInfo.left,j=h?1:2,_e=h?2:3,g=h?3:1;this.userCode=`
      const ivec2 pads = ivec2(${b}, ${_});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${g}];

        ivec2 dyCorner = ivec2(coords[${j}], coords[${_e}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${s} - 1 - wR;

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${i} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${h}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,d=e.padInfo.front,h=e.padInfo.top,b=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${s} - ${d};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${i} - ${h};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${b};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const s=e.filterDepth,i=e.filterHeight,a=e.filterWidth,d=e.strideDepth,h=e.strideHeight,b=e.strideWidth,_=s-1-e.padInfo.front,j=i-1-e.padInfo.top,_e=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${_}, ${j}, ${_e});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${s}; wF++) {
          float dyF = float(dyFCorner + wF) / ${d}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${s} - 1 - wF;

          for (int wR = 0; wR < ${i}; wR++) {
            float dyR = float(dyRCorner + wR) / ${h}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${i} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${b}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,pad:b,dataFormat:_,dimRoundingMode:j,filterShape:_e}=i,g=convertConv2DDataFormat(_),c=computeConv2DInfo(a.shape,_e,h,1,b,j,!1,g),$=new Conv2DDerFilterProgram(c);return s.runWebGLProgram($,[a,d],"float32")}const conv2DBackpropFilterConfig={kernelName:Conv2DBackpropFilter,backendName:"webgl",kernelFunc:conv2DBackpropFilter};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerInputPackedProgram{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,a=s-1-e.padInfo.top,d=i-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${s}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${s} - 1 - wR;

          for (int wC = 0; wC < ${i}; wC++) {
            int wCPerm = ${i} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{inputShape:h,strides:b,pad:_,dataFormat:j,dimRoundingMode:_e}=i,g=convertConv2DDataFormat(j),c=computeConv2DInfo(h,d.shape,b,1,_,_e,!1,g);if(env().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&g==="channelsLast"){const $=[[c.strideHeight,c.strideWidth]],et=new Conv2DDerInputPackedProgram(c);return s.runWebGLProgram(et,[a,d],"float32",$)}else{const $=new Conv2DDerInputProgram(c);return s.runWebGLProgram($,[a,d],"float32")}}const conv2DBackpropInputConfig={kernelName:Conv2DBackpropInput,backendName:"webgl",kernelFunc:conv2DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dilations:_}=i,j=computeConv3DInfo(a.shape,d.shape,h,_,b),_e=new Conv3DProgram(j);return s.runWebGLProgram(_e,[a,d],"float32")}const conv3DConfig={kernelName:Conv3D$1,backendName:"webgl",kernelFunc:conv3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,pad:b,filterShape:_}=i,j=computeConv3DInfo(a.shape,_,h,1,b),_e=new Conv3DDerFilterProgram(j);return s.runWebGLProgram(_e,[a,d],"float32")}const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:conv3DBackpropFilterV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{pad:h,strides:b,inputShape:_}=i,j=computeConv3DInfo(_,d.shape,b,1,h),_e=new Conv3DDerInputProgram(j);return s.runWebGLProgram(_e,[a,d],"float32")}const conv3DBackpropInputConfig={kernelName:Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:conv3DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COS=CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,COS_PACKED=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${CHECK_NAN_SNIPPET_PACKED}
  return result;
`,cos=unaryKernelFunc({opSnippet:COS,packedOpSnippet:COS_PACKED}),cosConfig={kernelName:Cos,backendName:"webgl",kernelFunc:cos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COSH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cosh=unaryKernelFunc({opSnippet:COSH}),coshConfig={kernelName:Cosh,backendName:"webgl",kernelFunc:cosh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CropAndResizeProgram{constructor(e,s,i,a,d){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[h,b,_,j]=e,[_e]=s,[g,c]=i;this.outputShape=[_e,g,c,j];const $=a==="bilinear"?1:0,[et,tt]=[`${b-1}.0`,`${_-1}.0`],[nt,rt,ot]=g>1?[`${(b-1)/(g-1)}`,"(y2-y1) * height_ratio",`y1*${et} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${et}`],[st,it,at]=c>1?[`${(_-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${tt} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${tt}`];this.userCode=`
      const float height_ratio = float(${nt});
      const float width_ratio = float(${st});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${h}) {
          return;
        }

        float height_scale = ${rt};
        float width_scale = ${it};

        float in_y = ${ot};
        if( in_y < 0.0 || in_y > ${et} ) {
          setOutput(float(${d}));
          return;
        }
        float in_x = ${at};
        if( in_x < 0.0 || in_x > ${tt} ) {
          setOutput(float(${d}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${$} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cropAndResize=o=>{const{inputs:e,backend:s,attrs:i}=o,{image:a,boxes:d,boxInd:h}=e,{cropSize:b,method:_,extrapolationValue:j}=i,_e=new CropAndResizeProgram(a.shape,d.shape,b,_,j);return s.runWebGLProgram(_e,[a,d,h],"float32")},cropAndResizeConfig={kernelName:CropAndResize,backendName:"webgl",kernelFunc:cropAndResize};var CumOpType;(function(o){o.Prod="*",o.Sum="+"})(CumOpType||(CumOpType={}));class CumProgram{constructor(e,s,i,a){this.op=e,this.outputShape=s,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const d=this.outputShape.length,h=this.op===CumOpType.Prod?"1.0":"0.0",b=i?h:`getX(${getCoords(d,"coords",this.op)})`,_=this.outputShape[this.outputShape.length-1];let j="",_e="";i?(j=a?`end != ${_-1}`:"end != 0",_e=a?"end + 1":"end - 1"):(j=a?`end + pow2 < ${_}`:"end >= pow2",_e=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${getCoordsDataType(d)} coords = getOutputCoords();
        int end = ${getFinalCoord(d,"coords",this.op)};
        float val = ${b};
        int pow2 = int(pow(2.0, index));
        if (${j}) {
          int idx = ${_e};
          ${getFinalCoord(d,"coords",this.op)} = idx;
          val ${this.op}= getX(${getCoords(d,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function getCoords(o,e,s){if(o===1)return`${e}`;if(o===2)return`${e}.x, ${e}.y`;if(o===3)return`${e}.x, ${e}.y, ${e}.z`;if(o===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${s} for rank ${o} is not yet supported`)}function getFinalCoord(o,e,s){if(o===1)return`${e}`;if(o===2)return`${e}.y`;if(o===3)return`${e}.z`;if(o===4)return`${e}.w`;throw new Error(`Cumulative ${s} for rank ${o} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumImpl(o,e,s,i,a,d){const h=e.shape.length,b=getAxesPermutation([i],h);let _=e;b!=null&&(_=transpose({inputs:{x:e},backend:s,attrs:{perm:b}}));const j=getInnerMostAxes(1,h)[0];if(j!==h-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${i}`);const _e=_.shape[j];let g=identity({inputs:{x:_},backend:s});for(let c=0;c<=Math.ceil(Math.log2(_e))-1;c++){const $=new CumProgram(o,_.shape,!1,d),et=[[c]],tt=g;g=s.runWebGLProgram($,[g],g.dtype,et),s.disposeIntermediateTensorInfo(tt)}if(a){const c=new CumProgram(o,_.shape,a,d),$=g;g=s.runWebGLProgram(c,[g],g.dtype),s.disposeIntermediateTensorInfo($)}if(b!=null){const c=getUndoAxesPermutation(b),$=transpose({inputs:{x:g},backend:s,attrs:{perm:c}});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(_),$}return g}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,exclusive:h,reverse:b}=i;return cumImpl(CumOpType.Prod,a,s,d,h,b)}const cumprodConfig={kernelName:Cumprod,backendName:"webgl",kernelFunc:cumprod};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,exclusive:h,reverse:b}=i;return cumImpl(CumOpType.Sum,a,s,d,h,b)}const cumsumConfig={kernelName:Cumsum,backendName:"webgl",kernelFunc:cumsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,weights:d}=e,{size:h,binaryOutput:b}=i;if(a.shape.length===1){const _=s.readSync(a.dataId),j=s.readSync(d.dataId),_e=bincountImplCPU(_,j,d.dtype,d.shape,h);return s.makeTensorInfo([h],d.dtype,_e)}else if(a.shape.length===2){const _=s.bufferSync(a),j=s.bufferSync(d),_e=bincountReduceImplCPU(_,j,h,b);return s.makeTensorInfo(_e.shape,d.dtype,_e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const denseBincountConfig={kernelName:DenseBincount,backendName:"webgl",kernelFunc:denseBincount};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthToSpaceProgram{constructor(e,s,i){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=s,this.dataFormat=i,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${s};
      int offset_h = imod(h, ${s});
      int in_w = w / ${s};
      int offset_w = imod(w, ${s});
      int offset_d = (offset_h * ${s} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockSize:d,dataFormat:h}=i,b=a.shape[0],_=h==="NHWC"?a.shape[1]:a.shape[2],j=h==="NHWC"?a.shape[2]:a.shape[3],_e=h==="NHWC"?a.shape[3]:a.shape[1],g=_*d,c=j*d,$=_e/(d*d),et=h==="NHWC"?[b,g,c,$]:[b,$,g,c],tt=new DepthToSpaceProgram(et,d,h);return s.runWebGLProgram(tt,[a],a.dtype)}const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"webgl",kernelFunc:depthToSpace};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DProgram{constructor(e,s=!1,i=null,a=!1,d=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const h=e.filterHeight,b=e.filterWidth,_=e.outChannels/e.inChannels;let j="",_e="";i&&(a?j=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:d?j=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:j=`
          float activation(float x) {
            ${i}
          }
        `,_e="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${j}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${_};
        int q = d2 - d1 * ${_};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${g}
        ${_e}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConvPacked2DProgram{constructor(e,s=!1,i=null,a=!1,d=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const h=e.outChannels/e.inChannels,b=e.padInfo.left,_=e.strideWidth,j=e.dilationWidth,_e=e.filterHeight,g=e.filterWidth,c=g;let $=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let rt=0;rt<g;rt++)$+=`
          vec4 xTexelC${rt*2};
          int xTexelC${rt*2}Ready;
          vec4 xTexelC${rt*2+1};
          int xTexelC${rt*2+1}Ready;
          vec4 xC${rt};`;$+=`
    for (int r = 0; r < ${_e}; r++) {
      `;for(let rt=0;rt<g;rt++)$+=`
          xTexelC${rt*2} = vec4(0.0);
          xTexelC${rt*2}Ready = 0;
          xTexelC${rt*2+1} = vec4(0.0);
          xTexelC${rt*2+1}Ready = 0;
          xC${rt} = vec4(0.0);`;$+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let rt=0;rt<(c+1)/2;rt++){const ot=rt*2;if($+=`
          xC = xCCorner + ${ot*j};
          `,_===1){if(ot<g&&(b%2===1?($+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot}Ready == 0) {
                  xTexelC${ot} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${ot}.zw = vec2(0.0);
                  }
                  xTexelC${ot}Ready = 1;
                }
              `,j===1&&ot>0?$+=`
                xC${ot} = vec4(xTexelC${ot-2}.zw, xTexelC${ot}.xy);
                `:$+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${ot} = vec4(previous.zw, xTexelC${ot}.xy);
                  } else {
                    xC${ot} = vec4(0.0, 0.0, xTexelC${ot}.xy);
                  }
                  `):$+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${ot}Ready == 0) {
                  xTexelC${ot} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${ot}.zw = vec2(0.0);
                  }
                  xTexelC${ot}Ready = 1;
                }

                xC${ot} = xTexelC${ot};
                `,ot+1<g)){const st=b%2===0?nearestLargerEven(j):j;j%2===0&&b%2===1||j%2!==0&&b%2!==1?($+=`
                  xCOffset = xC + imod(pads[1], 2) + ${st};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                    xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${ot+1}.zw = vec2(0.0);
                    }
                    xTexelC${ot+1}Ready = 1;
                  }
                  `,j>1?$+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${ot+1} = vec4(previous.zw, xTexelC${ot+1}.xy);
                    } else {
                     xC${ot+1} = vec4(0.0, 0.0, xTexelC${ot+1}.xy);
                    }
                    `:$+=`
                    xC${ot+1} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.xy);
                    `):st===1?$+=`
                    xC${ot+1} = xTexelC${ot};
                    `:$+=`
                    xCOffset = xC + ${st};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                      xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${ot+1}.zw = vec2(0.0);
                      }
                      xTexelC${ot+1}Ready = 1;
                    }

                    xC${ot+1} = xTexelC${ot+1};
                    `}}else ot<g&&(b%2===1?($+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot}Ready == 0) {
                  xTexelC${ot} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${ot}.zw = vec2(0.0);
                  }
                  xTexelC${ot}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${ot+1}Ready == 0) {
                  xTexelC${ot+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${ot+1}.zw = vec2(0.0);
                  }
                  xTexelC${ot+1}Ready = 1;
                }

                xC${ot} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.zw);
              `,ot+1<g&&($+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${ot+1} = vec4(xTexelC${ot+1}.xy, final.xy);
                `)):($+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${ot}Ready == 0) {
                  xTexelC${ot} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${ot}.zw = vec2(0.0);
                  }
                  xTexelC${ot}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                  xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${ot+1}.zw = vec2(0.);
                  }
                  xTexelC${ot+1}Ready = 1;
                }

                xC${ot} = vec4(
                  xTexelC${ot}.xy, xTexelC${ot+1}.xy);
              `,ot+1<g&&($+=`
                  xC${ot+1} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.zw);
                `)));ot<g&&($+=`
            wTexel = getW(r, ${ot}, d1, q);
            dotProd += xC${ot} * vec4(wTexel.xz, wTexel.xz);
          `,ot+1<g&&($+=`
              wTexel = getW(r, ${ot+1}, d1, q);
              dotProd += xC${ot+1} * vec4(wTexel.xz, wTexel.xz);
            `))}$+=`
    }
  `,$+=`
      }
    `;let et="",tt="";i&&(a?et=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:d?et=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:et=`vec4 activation(vec4 x) {
          ${i}
        }`,tt="result = activation(result);");const nt=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${et}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${h};
        int q = d2 - d1 * ${h};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${$}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${nt}
        ${tt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dilations:_,dimRoundingMode:j}=i;let _e=_;_e==null&&(_e=[1,1]),assert$1(eitherStridesOrDilationsAreOne(h,_e),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${h} and dilations '${_e}'`);const g=computeConv2DInfo(a.shape,d.shape,h,_e,b,j,!0);let c;env().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1?c=new DepthwiseConvPacked2DProgram(g):c=new DepthwiseConv2DProgram(g);const $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]];return s.runWebGLProgram(c,[a,d],"float32",$)}const depthwiseConv2dNativeConfig={kernelName:DepthwiseConv2dNative,backendName:"webgl",kernelFunc:depthwiseConv2dNative};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const s=e.strideHeight,i=e.strideWidth,a=e.padInfo.top,d=e.padInfo.left,h=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${h} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${s} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${i} - ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DepthwiseConv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const s=e.filterHeight,i=e.filterWidth,a=e.strideHeight,d=e.strideWidth,h=s-1-e.padInfo.top,b=i-1-e.padInfo.left,_=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${h}, ${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${s}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${s} - 1 - wR;

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${i} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${_}; dm++) {
              int d2 = d1 * ${_} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,dy:d}=e,{strides:h,dilations:b,pad:_,dimRoundingMode:j,filterShape:_e}=i,g=computeConv2DInfo(a.shape,_e,h,b,_,j,!0),c=new DepthwiseConv2DDerFilterProgram(g);return s.runWebGLProgram(c,[a,d],"float32")}const depthwiseConv2dNativeBackpropFilterConfig={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,filter:d}=e,{strides:h,dilations:b,pad:_,dimRoundingMode:j,inputShape:_e}=i,g=computeConv2DInfo(_e,d.shape,h,b,_,j,!0),c=new DepthwiseConv2DDerInputProgram(g);return s.runWebGLProgram(c,[a,d],"float32")}const depthwiseConv2dNativeBackpropInputConfig={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropInput};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DiagProgram{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag(o){const{inputs:e,backend:s}=o,{x:i}=e,a=[...i.shape,...i.shape],d=sizeFromShape(i.shape),h=reshape({inputs:{x:i},backend:s,attrs:{shape:[d]}}),b=new DiagProgram(d),_=s.runWebGLProgram(b,[h],h.dtype),j=reshape({inputs:{x:_},backend:s,attrs:{shape:a}});return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(_),j}const diagConfig={kernelName:Diag,backendName:"webgl",kernelFunc:diag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dilation2DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:s,inWidth:i,padInfo:a,strideHeight:d,strideWidth:h,filterHeight:b,filterWidth:_,dilationHeight:j,dilationWidth:_e}=e,{top:g,left:c}=a;this.userCode=`
      const ivec2 strides = ivec2(${d}, ${h});
      const ivec2 pads = ivec2(${g}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${b}; h++) {
          int hIn = hBeg + h * ${j};

          if (hIn >= 0 && hIn < ${s}) {
            for (int w = 0; w < ${_}; w++) {
              int wIn = wBeg + w * ${_e};

              if (wIn >= 0 && wIn < ${i}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d}=e,{strides:h,pad:b,dilations:_}=i,j=computeDilation2DInfo(a.shape,d.shape,h,b,"NHWC",_);let _e;const g=new Dilation2DProgram(j);_e=s.runWebGLProgram(g,[a,d],"float32");const c=reshape({inputs:{x:_e},backend:s,attrs:{shape:j.outShape}});return s.disposeIntermediateTensorInfo(_e),c}const dilation2DConfig={kernelName:Dilation2D,backendName:"webgl",kernelFunc:dilation2D};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum(o){const{inputs:e,backend:s,attrs:i}=o,{equation:a}=i,d=e,{allDims:h,summedDims:b,idDims:_}=decodeEinsumEquation(a,d.length);checkEinsumDimSizes(h.length,_,d);const{path:j,steps:_e}=getEinsumComputePath(b,_),g=_e.length;let c=null,$=h.length;const et=[];for(let tt=0;tt<g;++tt){for(const nt of _e[tt]){const{permutationIndices:rt,expandDims:ot}=getEinsumPermutation($,_[nt]);let st;isIdentityPermutation(rt)?st=d[nt]:(st=transpose({inputs:{x:d[nt]},backend:s,attrs:{perm:rt}}),et.push(st));const it=st.shape.slice();for(let at=0;at<ot.length;++at)it.splice(ot[at],0,1);arraysEqual(st.shape,it)||(st=reshape({inputs:{x:st},backend:s,attrs:{shape:it}}),et.push(st)),c===null?c=st:(c=multiply({inputs:{a:st,b:c},backend:s}),et.push(c))}tt<g-1&&(j[tt]>=0&&(c=sum({inputs:{x:c},backend:s,attrs:{axis:j[tt]-(h.length-$),keepDims:!1}}),et.push(c)),$--)}for(const tt of et)tt!==c&&s.disposeIntermediateTensorInfo(tt);return c}const einsumConfig={kernelName:Einsum,backendName:"webgl",kernelFunc:einsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU="return (x >= 0.0) ? x : (exp(x) - 1.0);",ELU_PACKED=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,elu=unaryKernelFunc({opSnippet:ELU,packedOpSnippet:ELU_PACKED}),eluConfig={kernelName:Elu$1,backendName:"webgl",kernelFunc:elu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU_DER="return (b >= 0.0) ? a : a * (b + 1.0);",ELU_DER_PACKED=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,eluGrad=o=>{const{inputs:e,backend:s}=o,{dy:i,y:a}=e,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(ELU_DER_PACKED,i.shape,a.shape):new BinaryOpProgram(ELU_DER,i.shape,a.shape);return s.runWebGLProgram(d,[i,a],i.dtype)},eluGradConfig={kernelName:EluGrad,backendName:"webgl",kernelFunc:eluGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PACKED_EQUAL=`
  return vec4(equal(a, b));
`,EQUAL="return float(a == b);",equal=binaryKernelFunc({opSnippet:EQUAL,packedOpSnippet:PACKED_EQUAL,dtype:"bool",cpuKernelImpl:equalImplCPU}),equalConfig={kernelName:Equal,backendName:"webgl",kernelFunc:equal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ERF_P};
  float a1 = ${ERF_A1};
  float a2 = ${ERF_A2};
  float a3 = ${ERF_A3};
  float a4 = ${ERF_A4};
  float a5 = ${ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,erf=unaryKernelFunc({opSnippet:ERF}),erfConfig={kernelName:Erf,backendName:"webgl",kernelFunc:erf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXP=CHECK_NAN_SNIPPET_UNARY+`
  return exp(x);
`,EXP_PACKED=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,exp=unaryKernelFunc({opSnippet:EXP,packedOpSnippet:EXP_PACKED,cpuKernelImpl:expImplCPU,dtype:"float32"}),expConfig={kernelName:Exp,backendName:"webgl",kernelFunc:exp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims(o){const{inputs:e,attrs:s,backend:i}=o,{dim:a}=s,{input:d}=e,h=d.shape.length,b=d.shape.slice();let _=a;return a<0&&(assert$1(-(h+1)<=a,()=>`Axis must be in the interval [${-(h+1)}, ${h}]`),_=h+a+1),b.splice(_,0,1),reshape({inputs:{x:d},backend:i,attrs:{shape:b}})}const expandDimsConfig={kernelName:ExpandDims,backendName:"webgl",kernelFunc:expandDims};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXPM1="return exp(x) - 1.0;",expm1=unaryKernelFunc({opSnippet:EXPM1,packedOpSnippet:EXPM1,cpuKernelImpl:expm1ImplCPU}),expm1Config={kernelName:Expm1,backendName:"webgl",kernelFunc:expm1};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FFTProgram{constructor(e,s,i){this.variableNames=["real","imag"];const a=s[1];this.outputShape=s;const d=i?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,h=i?`${a}.0`:"1.0";let b;if(e==="real")b="return real * expR - imag * expI;";else if(e==="imag")b="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${d};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${b}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${h};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftImpl(o,e,s){const i=s.texData.get(o.dataId),a=sizeFromShape(o.shape),d=o.shape[o.shape.length-1],h=a/d,b=reshape({inputs:{x:o},backend:s,attrs:{shape:[h,d]}}),_=b.shape,j=new FFTProgram("real",_,e),_e=new FFTProgram("imag",_,e),g=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:_},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:_}],c=s.runWebGLProgram(j,g,"float32"),$=s.runWebGLProgram(_e,g,"float32"),et=complex({inputs:{real:c,imag:$},backend:s});s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($);const tt=reshape({inputs:{x:et},backend:s,attrs:{shape:o.shape}});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(et),tt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft(o){const{inputs:e,backend:s}=o,{input:i}=e;return fftImpl(i,!1,s)}const fftConfig={kernelName:FFT,backendName:"webgl",kernelFunc:fft};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FillProgram{constructor(e,s){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill(o){const{backend:e,attrs:s}=o,{shape:i,value:a}=s;let{dtype:d}=s;if(d=d||inferDtype(a),d==="string"){const h=getArrayFromDType(d,sizeFromShape(i));return h.fill(a),e.makeTensorInfo(i,d,h)}else{const h=new FillProgram(i,a),b=[[a]];return e.runWebGLProgram(h,[],d,b)}}const fillConfig={kernelName:Fill,backendName:"webgl",kernelFunc:fill};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FlipLeftRightProgram{constructor(e){this.variableNames=["Image"],this.outputShape=[];const s=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${s} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${s}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig={kernelName:FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:o,backend:e})=>{const{image:s}=o,i=e,a=new FlipLeftRightProgram(s.shape);return i.runWebGLProgram(a,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FLOOR="return floor(x);",floor=unaryKernelFunc({opSnippet:FLOOR,packedOpSnippet:FLOOR,cpuKernelImpl:floorImplCPU}),floorConfig={kernelName:Floor,backendName:"webgl",kernelFunc:floor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT_DIV=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,INT_DIV_PACKED=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,floorDiv=binaryKernelFunc({opSnippet:INT_DIV,packedOpSnippet:INT_DIV_PACKED,dtype:"int32"}),floorDivConfig={kernelName:FloorDiv,backendName:"webgl",kernelFunc:floorDiv};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsProgram{constructor(e){this.variableNames=["A"];const s=getGlslDifferences(),[i,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${i}.0);

        vec4 values = ${s.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=getGlslDifferences(),[i,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${i}.0);
            vec4 values = ${s.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fromPixelsConfig={kernelName:FromPixels,backendName:"webgl",kernelFunc:fromPixels};let fromPixels2DContext,willReadFrequently=env().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function fromPixels(o){const{inputs:e,backend:s,attrs:i}=o;let{pixels:a}=e;const{numChannels:d}=i,h=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,b=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[_,j]=h?[a.videoWidth,a.videoHeight]:[a.width,a.height],_e=[j,_],g=[j,_,d];if(b||h){const tt=env().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(fromPixels2DContext==null||tt!==willReadFrequently)&&(willReadFrequently=tt,fromPixels2DContext=document.createElement("canvas").getContext("2d",{willReadFrequently})),fromPixels2DContext.canvas.width=_,fromPixels2DContext.canvas.height=j,fromPixels2DContext.drawImage(a,0,0,_,j),a=fromPixels2DContext.canvas}const c=s.makeTensorInfo(_e,"int32");s.texData.get(c.dataId).usage=TextureUsage.PIXELS,s.gpgpu.uploadPixelDataToTexture(s.getTexture(c.dataId),a);const $=env().getBool("WEBGL_PACK")?new FromPixelsPackedProgram(g):new FromPixelsProgram(g),et=s.runWebGLProgram($,[c],"int32");return s.disposeData(c.dataId),et}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d,bias:h,preluActivationWeights:b}=e,{strides:_,pad:j,dataFormat:_e,dilations:g,dimRoundingMode:c,activation:$,leakyreluAlpha:et}=i,tt=convertConv2DDataFormat(_e),nt=computeConv2DInfo(a.shape,d.shape,_,g,j,c,!1,tt);let rt;const ot=[],st=h!=null,it=b!=null,at=$==="leakyrelu",lt=()=>{const ct=[a,d],pt=(ht,yt)=>{if(yt==="NCHW"&&ht.shape.length===1&&ht.shape[0]!==1){const xt=reshape({inputs:{x:ht},backend:s,attrs:{shape:[ht.shape[0],1,1]}});return ot.push(xt),xt}return ht};if(st&&ct.push(pt(h,_e)),it&&ct.push(pt(b,_e)),at){const ht=s.makeTensorInfo([],"float32",createScalarValue(et,"float32"));ct.push(ht),ot.push(ht)}return ct};if(nt.filterHeight===1&&nt.filterWidth===1&&nt.dilationHeight===1&&nt.dilationWidth===1&&nt.strideHeight===1&&nt.strideWidth===1&&(nt.padInfo.type==="SAME"||nt.padInfo.type==="VALID"))rt=conv2dByMatMul({x:a,filter:d,convInfo:nt,backend:s,bias:h,activation:$,preluActivationWeights:b,leakyreluAlpha:et});else if(nt.strideWidth<=2&&tt==="channelsLast"&&env().getBool("WEBGL_EXP_CONV")){const ct=$?mapActivationToShaderProgram($,!0):null,pt=new Conv2DPackedProgram(nt,st,ct,it,at),ht=[[nt.padInfo.top,nt.padInfo.left],[nt.strideHeight,nt.strideWidth],[nt.dilationHeight,nt.dilationWidth],[nt.inHeight,nt.inWidth]],yt=lt();rt=s.runWebGLProgram(pt,yt,"float32",ht)}else if(env().getBool("WEBGL_CONV_IM2COL"))rt=conv2dWithIm2Row({x:a,filter:d,convInfo:nt,backend:s,bias:h,activation:$,preluActivationWeights:b,leakyreluAlpha:et});else{const ct=$?mapActivationToShaderProgram($,!1):null,pt=new Conv2DProgram(nt,st,ct,it,at),ht=lt();rt=s.runWebGLProgram(pt,ht,"float32")}const ut=reshape({inputs:{x:rt},backend:s,attrs:{shape:nt.outShape}});return ot.push(rt),ot.forEach(ct=>s.disposeIntermediateTensorInfo(ct)),ut}const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"webgl",kernelFunc:fusedConv2d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,filter:d,bias:h,preluActivationWeights:b}=e,{strides:_,pad:j,dilations:_e,dimRoundingMode:g,activation:c,leakyreluAlpha:$}=i,et=[];let tt=_e;tt==null&&(tt=[1,1]),assert$1(eitherStridesOrDilationsAreOne(_,tt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${_} and dilations '${tt}'`);const nt=computeConv2DInfo(a.shape,d.shape,_,tt,j,g,!0),rt=env().getBool("WEBGL_PACK_DEPTHWISECONV")&&nt.strideWidth<=2&&nt.outChannels/nt.inChannels===1,ot=c?mapActivationToShaderProgram(c,rt):null,st=[a,d],it=h!=null,at=b!=null,lt=c==="leakyrelu";if(it&&st.push(h),at&&st.push(b),lt){const ht=s.makeTensorInfo([],"float32",createScalarValue($,"float32"));st.push(ht),et.push(ht)}let ut;rt?ut=new DepthwiseConvPacked2DProgram(nt,it,ot,at,lt):ut=new DepthwiseConv2DProgram(nt,it,ot,at,lt);const ct=[[nt.padInfo.top,nt.padInfo.left],[nt.strideHeight,nt.strideWidth],[nt.dilationHeight,nt.dilationWidth],[nt.inHeight,nt.inWidth]],pt=s.runWebGLProgram(ut,st,"float32",ct);return et.forEach(ht=>s.disposeIntermediateTensorInfo(ht)),pt}const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:fusedDepthwiseConv2D};class GatherNDProgram{constructor(e,s,i,a){this.sliceDim=e,this.strides=s,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=i;const d=getCoordsDataType(i.length);let h=`
    int index;`;for(let b=0;b<this.sliceDim;b++)h+=`
          index = round(getIndices(coords[0], ${b}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[b]};
          flattenIndex += index * ${this.strides[b]};`;this.userCode=`
         void main() {
          ${d} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${h}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd(o){const{inputs:e,backend:s}=o,{params:i,indices:a}=e,d=a.shape,h=d[d.length-1],b=sizeFromShape(i.shape),[_,j,_e,g]=prepareAndValidate(i,a),c=reshape({inputs:{x:a},backend:s,attrs:{shape:[j,h]}}),$=reshape({inputs:{x:i},backend:s,attrs:{shape:[sizeFromShape(i.shape)/_e,_e]}});if(s.shouldExecuteOnCPU([i,a])||i.dtype==="string"){const rt=s.readSync(a.dataId),ot=s.bufferSync(i),st=gatherNdImplCPU(rt,ot,i.dtype,j,h,_e,g,i.shape,b);return s.makeTensorInfo(_,i.dtype,st.values)}const et=new GatherNDProgram(h,g,[j,_e],i.shape),tt=s.runWebGLProgram(et,[$,c],$.dtype),nt=reshape({inputs:{x:tt},backend:s,attrs:{shape:_}});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(tt),nt}const gatherNdConfig={kernelName:GatherNd,backendName:"webgl",kernelFunc:gatherNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GatherProgram{constructor(e,s){this.variableNames=["A","indices"],this.outputShape=s,this.rank=s.length;const i=getCoordsDataType(this.rank),a=getSourceCoords$1(e);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function getSourceCoords$1(o,e){const s=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[];for(let a=0;a<o.length;a++)a===2?i.push("index"):i.push(`${s[a]}`);return i.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,indices:d}=e,{axis:h,batchDims:b}=i,_=parseAxisParam(h,a.shape)[0];if(env().get("DEBUG")){const ot=s.readSync(d.dataId),st=a.shape[_];for(let it=0;it<ot.length;++it){const at=ot[it];assert$1(at<=st-1&&at>=0,()=>`GatherV2: the index value ${at} is not in [0, ${st-1}]`)}}const j=collectGatherOpShapeInfo(a,d,_,b),_e=sizeFromShape(d.shape),g=[],c=reshape({inputs:{x:a},backend:s,attrs:{shape:[j.batchSize,j.outerSize,j.dimSize,j.sliceSize]}}),$=reshape({inputs:{x:d},backend:s,attrs:{shape:[j.batchSize,_e/j.batchSize]}});g.push(c),g.push($);const et=[j.batchSize,j.outerSize,_e/j.batchSize,j.sliceSize];if(s.shouldExecuteOnCPU([a,d])||a.dtype==="string"){const ot=s.bufferSync($),st=s.bufferSync(c),it=gatherV2ImplCPU(st,ot,et);return g.forEach(at=>s.disposeIntermediateTensorInfo(at)),s.makeTensorInfo(j.outputShape,it.dtype,it.values)}const tt=new GatherProgram(c.shape,et),nt=s.runWebGLProgram(tt,[c,$],c.dtype);g.push(nt);const rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:j.outputShape}});return g.forEach(ot=>s.disposeIntermediateTensorInfo(ot)),rt}const gatherV2Config={kernelName:GatherV2,backendName:"webgl",kernelFunc:gatherV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER="return float(a > b);",GREATER_PACKED=`
  return vec4(greaterThan(a, b));
`,greater=binaryKernelFunc({opSnippet:GREATER,packedOpSnippet:GREATER_PACKED,cpuKernelImpl:greaterImplCPU,dtype:"bool"}),greaterConfig={kernelName:Greater,backendName:"webgl",kernelFunc:greater};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER_EQUAL="return float(a >= b);",GREATER_EQUAL_PACKED=`
  return vec4(greaterThanEqual(a, b));
`,greaterEqual=binaryKernelFunc({opSnippet:GREATER_EQUAL,packedOpSnippet:GREATER_EQUAL_PACKED,dtype:"bool",cpuKernelImpl:greaterEqualImplCPU}),greaterEqualConfig={kernelName:GreaterEqual,backendName:"webgl",kernelFunc:greaterEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft(o){const{inputs:e,backend:s}=o,{input:i}=e;return fftImpl(i,!0,s)}const ifftConfig={kernelName:IFFT,backendName:"webgl",kernelFunc:ifft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_FINITE="return float(!isnan(x) && !isinf(x));",isFinite$1=unaryKernelFunc({opSnippet:IS_FINITE,dtype:"bool"}),isFiniteConfig={kernelName:IsFinite,backendName:"webgl",kernelFunc:isFinite$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_INF="return float(isinf(x));",isInf=unaryKernelFunc({opSnippet:IS_INF,dtype:"bool"}),isInfConfig={kernelName:IsInf,backendName:"webgl",kernelFunc:isInf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_NAN="return float(isnan(x));",isNaN$1=unaryKernelFunc({opSnippet:IS_NAN,dtype:"bool"}),isNaNConfig={kernelName:IsNan,backendName:"webgl",kernelFunc:isNaN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS="return float(a < b);",LESS_PACKED=`
  return vec4(lessThan(a, b));
`,less=binaryKernelFunc({opSnippet:LESS,packedOpSnippet:LESS_PACKED,cpuKernelImpl:lessImplCPU,dtype:"bool"}),lessConfig={kernelName:Less,backendName:"webgl",kernelFunc:less};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS_EQUAL="return float(a <= b);",LESS_EQUAL_PACKED=`
  return vec4(lessThanEqual(a, b));
`,lessEqual=binaryKernelFunc({opSnippet:LESS_EQUAL,packedOpSnippet:LESS_EQUAL_PACKED,cpuKernelImpl:lessEqualImplCPU,dtype:"bool"}),lessEqualConfig={kernelName:LessEqual,backendName:"webgl",kernelFunc:lessEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace(o){const{backend:e,attrs:s}=o,{start:i,stop:a,num:d}=s,h=linSpaceImplCPU(i,a,d);return e.makeTensorInfo([h.length],"float32",h)}const linSpaceConfig={kernelName:LinSpace,backendName:"webgl",kernelFunc:linSpace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG=CHECK_NAN_SNIPPET_UNARY+`
  return x < 0.0 ? 0./0. : log(x);
`,LOG_PACKED=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,log=unaryKernelFunc({opSnippet:LOG,packedOpSnippet:LOG_PACKED,cpuKernelImpl:logImplCPU}),logConfig={kernelName:Log,backendName:"webgl",kernelFunc:log};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG1P=CHECK_NAN_SNIPPET_UNARY+`
  return log(1.0 + x);
`,log1p=unaryKernelFunc({opSnippet:LOG1P}),log1pConfig={kernelName:Log1p,backendName:"webgl",kernelFunc:log1p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_AND="return float(a >= 1.0 && b >= 1.0);",LOGICAL_AND_PACKED=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,logicalAnd=binaryKernelFunc({opSnippet:LOGICAL_AND,packedOpSnippet:LOGICAL_AND_PACKED,dtype:"bool"}),logicalAndConfig={kernelName:LogicalAnd,backendName:"webgl",kernelFunc:logicalAnd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_NOT="return float(!(x >= 1.0));",logicalNot=unaryKernelFunc({opSnippet:LOGICAL_NOT}),logicalNotConfig={kernelName:LogicalNot,backendName:"webgl",kernelFunc:logicalNot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_OR="return float(a >= 1.0 || b >= 1.0);",LOGICAL_OR_PACKED=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,logicalOr=binaryKernelFunc({opSnippet:LOGICAL_OR,packedOpSnippet:LOGICAL_OR_PACKED,dtype:"bool"}),logicalOrConfig={kernelName:LogicalOr,backendName:"webgl",kernelFunc:logicalOr};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNProgram{constructor(e,s,i,a,d){this.variableNames=["x"],this.outputShape=[];const h=s,b=e[3]-1;this.outputShape=e;let _;const j=`float(${i}) + float(${a}) * sum`;d===.5?_=`inversesqrt(${j})`:d===1?_=`1.0/(${j})`:_=`exp(log(${j}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${h}; j <= ${h}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${b}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${_};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNPackedProgram{constructor(e,s,i,a,d){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const h=s,b=e[3]-1;this.outputShape=e;let _;const j=`float(${i}) + float(${a}) * sum`;d===.5?_=`inversesqrt(${j})`:d===1?_=`1.0/(${j})`:_=`exp(log(${j}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${h};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${h}; j <= ${h}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${b}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${_};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrn=o=>{const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{depthRadius:d,bias:h,alpha:b,beta:_}=i,j=env().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(a.shape,d,h,b,_):new LRNProgram(a.shape,d,h,b,_);return s.runWebGLProgram(j,[a],a.dtype)},LRNConfig={kernelName:LRN,backendName:"webgl",kernelFunc:lrn};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNGradProgram{constructor(e,s,i,a,d){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=s,this.bias=i,this.alpha=a,this.beta=d,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${s})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${s} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${i});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${d})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${d});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGrad=o=>{const{inputs:e,backend:s,attrs:i}=o,{x:a,y:d,dy:h}=e,{depthRadius:b,bias:_,alpha:j,beta:_e}=i,g=new LRNGradProgram(a.shape,b,_,j,_e);return s.runWebGLProgram(g,[a,d,h],a.dtype)},LRNGradConfig={kernelName:LRNGrad,backendName:"webgl",kernelFunc:lrnGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl(o,e,s,i){const a=sizeFromShape(e),h=sizeFromShape(o.shape)/a,b=reshape({inputs:{x:o},attrs:{shape:[h,a]},backend:i}),_=reduce(b,o.dtype,"max",i),j=reshape({inputs:{x:_},attrs:{shape:s},backend:i});return i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(_),j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{reductionIndices:d,keepDims:h}=i,b=a.shape.length,_=parseAxisParam(d,a.shape);let j=_;const _e=getAxesPermutation(j,b),g=_e!=null,c=s.shouldExecuteOnCPU([a]);let $=a;if(g){if(c){const st=s.texData.get($.dataId).values,it=new Array(b);for(let ut=0;ut<it.length;ut++)it[ut]=a.shape[_e[ut]];const at=transposeImplCPU(st,a.shape,a.dtype,_e,it);$=s.makeTensorInfo(it,a.dtype);const lt=s.texData.get($.dataId);lt.values=at}else $=transposeImpl(a,_e,s);j=getInnerMostAxes(j.length,b)}assertAxesAreInnerMostDims("max",j,b);const[et,tt]=computeOutAndReduceShapes($.shape,j);let nt=et;h&&(nt=expandShapeToKeepDim(et,_));let rt;if(c){const st=s.texData.get($.dataId).values,it=maxImplCPU(st,sizeFromShape(tt),nt,a.dtype);rt=s.makeTensorInfo(nt,a.dtype);const at=s.texData.get(rt.dataId);at.values=it}else rt=maxImpl($,tt,nt,s);return g&&s.disposeIntermediateTensorInfo($),rt}const maxConfig={kernelName:Max,backendName:"webgl",kernelFunc:max};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MAXIMUM=CHECK_NAN_SNIPPET+`
  return max(a, b);
`,MAXIMUM_PACKED=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,maximum=binaryKernelFunc({opSnippet:MAXIMUM,packedOpSnippet:MAXIMUM_PACKED,cpuKernelImpl:maximumImplCPU}),maximumConfig={kernelName:Maximum$1,backendName:"webgl",kernelFunc:maximum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e;assertNotComplex(a,"maxPool");const{filterSize:d,strides:h,pad:b,dimRoundingMode:_}=i,j=1;assert$1(eitherStridesOrDilationsAreOne(h,j),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${h} and dilations '${j}'`);const _e=computePool2DInfo(a.shape,d,h,j,b,_);if(_e.filterWidth===1&&_e.filterHeight===1&&arraysEqual(_e.inShape,_e.outShape))return identity({inputs:{x:a},backend:s});const g=new Pool2DProgram(_e,"max",!1);return s.runWebGLProgram(g,[a],a.dtype)}const maxPoolConfig={kernelName:MaxPool,backendName:"webgl",kernelFunc:maxPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{filterSize:d,strides:h,pad:b,dataFormat:_,dimRoundingMode:j}=i,_e=[1,1,1],g=computePool3DInfo(a.shape,d,h,_e,b,j,_),c=new Pool3DProgram(g,"max",!1);return s.runWebGLProgram(c,[a],a.dtype)}const maxPool3DConfig={kernelName:MaxPool3D,backendName:"webgl",kernelFunc:maxPool3d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MaxPool2DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const s=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,b=d-1-e.padInfo.top,_=h-1-e.padInfo.left,j=d*h-1;this.userCode=`
      const ivec2 pads = ivec2(${b}, ${_});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${h}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${j} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${h} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class MaxPool3DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,b=e.dilationWidth,_=e.effectiveFilterDepth,j=e.effectiveFilterHeight,_e=e.effectiveFilterWidth,g=_-1-e.padInfo.front,c=j-1-e.padInfo.top,$=_e-1-e.padInfo.left,et=_*j*_e-1;this.userCode=`
      const ivec3 pads = ivec3(${g}, ${c}, ${$});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${_};
           wD += ${d}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${j};
              wR += ${h}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${_e};
                wC += ${b}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${et} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${j} * ${_e} +
                  wR * ${_e} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d}=e,h=d,{filterSize:b,strides:_,pad:j,dimRoundingMode:_e}=i,g=[1,1,1],c=computePool3DInfo(h.shape,b,_,g,j,_e),$=new Pool3DProgram(c,"max",!0),et=s.runWebGLProgram($,[h],h.dtype),tt=new MaxPool3DBackpropProgram(c),nt=s.runWebGLProgram(tt,[a,et],h.dtype);return s.disposeIntermediateTensorInfo(et),nt}const maxPool3DGradConfig={kernelName:MaxPool3DGrad,backendName:"webgl",kernelFunc:maxPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad(o){const{inputs:e,backend:s,attrs:i}=o,{dy:a,input:d,output:h}=e,b=d;assertNotComplex([d,h],"maxPoolGrad");const{filterSize:_,strides:j,pad:_e,dimRoundingMode:g}=i,c=computePool2DInfo(b.shape,_,j,1,_e,g),$=!0,et=new Pool2DProgram(c,"max",$),tt=s.runWebGLProgram(et,[b],b.dtype),nt=new MaxPool2DBackpropProgram(c),rt=s.runWebGLProgram(nt,[a,tt],b.dtype);return s.disposeIntermediateTensorInfo(tt),rt}const maxPoolGradConfig={kernelName:MaxPoolGrad,backendName:"webgl",kernelFunc:maxPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl(o,e,s,i){let a=new Pool2DProgram(s,"max",!1);const d=i.runWebGLProgram(a,[o],"float32");a=new Pool2DProgram(s,"max",!0,!0,e);const h=i.runWebGLProgram(a,[o],"float32");return[d,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig={kernelName:MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{x:i}=o,{filterSize:a,strides:d,pad:h,includeBatchInIndex:b}=e,_=s;assert$1(i.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.shape.length}.`);const j=[1,1];assert$1(eitherStridesOrDilationsAreOne(d,j),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '${j}'`);const _e=computePool2DInfo(i.shape,a,d,j,h),[g,c]=maxPoolWithArgmaxImpl(i,b,_e,_);return[g,c]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanImpl(o,e,s,i){const a=sizeFromShape(e),h=sizeFromShape(o.shape)/a,b=reshape({inputs:{x:o},attrs:{shape:[h,a]},backend:i}),_=reduce(b,"float32","mean",i),j=reshape({inputs:{x:_},attrs:{shape:s},backend:i});return i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(_),j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanConfig={kernelName:Mean,backendName:"webgl",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{x:i}=o,{keepDims:a,axis:d}=e,h=s,b=i.shape.length,_=parseAxisParam(d,i.shape);let j=_;const _e=getAxesPermutation(j,b),g=_e!=null,c=h.shouldExecuteOnCPU([i]),$=[];let et=i;if(g){if(c){const it=h.texData.get(et.dataId).values,at=new Array(b);for(let ct=0;ct<at.length;ct++)at[ct]=i.shape[_e[ct]];const lt=transposeImplCPU(it,i.shape,i.dtype,_e,at);et=h.makeTensorInfo(at,i.dtype);const ut=h.texData.get(et.dataId);ut.values=lt}else et=transposeImpl(i,_e,h);$.push(et),j=getInnerMostAxes(j.length,b)}assertAxesAreInnerMostDims("sum",j,b);const[tt,nt]=computeOutAndReduceShapes(et.shape,j);let rt=tt;a&&(rt=expandShapeToKeepDim(tt,_));const ot=meanImpl(et,nt,rt,h);for(const st of $)h.disposeIntermediateTensorInfo(st);return ot}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i,b=a.shape.length,_=parseAxisParam(d,a.shape);let j=_;const _e=getAxesPermutation(j,b);let g=a;_e!=null&&(g=transpose({inputs:{x:a},backend:s,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,a.shape.length)),assertAxesAreInnerMostDims("min",j,b);const[c,$]=computeOutAndReduceShapes(g.shape,j),et=sizeFromShape($),tt=reshape({inputs:{x:g},backend:s,attrs:{shape:[-1,et]}}),nt=reduce(tt,tt.dtype,"min",s);let rt;if(h){const ot=expandShapeToKeepDim(c,_);rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:ot}})}else rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:c}});return s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(nt),_e!=null&&s.disposeIntermediateTensorInfo(g),rt}const minConfig={kernelName:Min,backendName:"webgl",kernelFunc:min};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MINIMUM=CHECK_NAN_SNIPPET+`
  return min(a, b);
`,MINIMUM_PACKED=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,minimum=binaryKernelFunc({opSnippet:MINIMUM,packedOpSnippet:MINIMUM_PACKED,cpuKernelImpl:minimumImplCPU}),minimumConfig={kernelName:Minimum$1,backendName:"webgl",kernelFunc:minimum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadProgram{constructor(e,s,i){this.variableNames=["x"],this.outputShape=s.map((_e,g)=>_e[0]+e[g]+_e[1]);const a=e.length,d=getCoordsDataType(a),h=s.map(_e=>_e[0]).join(","),b=s.map((_e,g)=>_e[0]+e[g]).join(","),_=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),j=i==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${h};
        int end = ${b};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${j};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${j};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${h});
      ${d} end = ${d}(${b});

      void main() {
        ${d} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${j};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${j};
          }
        }
        ${d} coords = outC - start;
        setOutput(getX(${_}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadPackedProgram{constructor(e,s,i){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.map((et,tt)=>et[0]+e[tt]+et[1]);const a=e.length,d=getCoordsDataType(a),h=s.map(et=>et[0]).join(","),b=s.map((et,tt)=>et[0]+e[tt]).join(","),_=getChannels("rc",a),j=getChannels("source",a),_e=`${_[a-1]} < ${this.outputShape[a-1]}`,g=a===1?"source":`vec2(${j.slice(-2).join()})`,c=i==="reflect"?0:1;let $="";if(a===1){const et=`
        ${d} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;$=`
        ${d} rc = outputLoc;
        ${et}
        result[0] = getChannel(getX(${j.join()}), ${g});
        ${_[a-1]} += 1;
        if(${_e}) {
          ${et}
          result[1] = getChannel(getX(${j.join()}), ${g});
        }
      `}else{const et=`
        ${d} source = rc;
        ${d} lt = ${d}(lessThan(source, start));
        ${d} gte = ${d}(greaterThanEqual(source, end));
        ${d} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;$=`
        ${d} rc = outputLoc;
        ${et}
        result[0] = getChannel(getX(${j.join()}), ${g});
        ${_[a-1]} += 1;
        if(${_e}) {
          ${et}
          result[1] = getChannel(getX(${j.join()}), ${g});
        }
        rc = outputLoc;
        ${_[a-2]} += 1;
        if(${_[a-2]} < ${this.outputShape[a-2]}) {
          ${et}
          result[2] = getChannel(getX(${j.join()}), ${g});
          ${_[a-1]} += 1;
          if(${_e}) {
            ${et}
            result[3] = getChannel(getX(${j.join()}), ${g});
          }
        }
      `}this.userCode=`
      const ${d} start = ${d}(${h});
      const ${d} end = ${d}(${b});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${$}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadKernelFunc=({inputs:o,backend:e,attrs:s})=>{const{x:i}=o,{paddings:a,mode:d}=s,h=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MirrorPadPackedProgram(i.shape,a,d):new MirrorPadProgram(i.shape,a,d);return e.runWebGLProgram(h,[i],i.dtype)},mirrorPadConfig={kernelName:MirrorPad,backendName:"webgl",kernelFunc:mirrorPadKernelFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MOD=`if (b == 0.0) return NAN;
  return mod(a, b);`,MOD_PACKED=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,mod=binaryKernelFunc({opSnippet:MOD,packedOpSnippet:MOD_PACKED}),modConfig={kernelName:Mod,backendName:"webgl",kernelFunc:mod};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MultinomialProgram{constructor(e,s,i){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,i],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${s-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${s-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DIV=`
if (a == b) {
  return 1.0;
};
return a / b;`,DIV_PACKED=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,realDiv=binaryKernelFunc({opSnippet:DIV,packedOpSnippet:DIV_PACKED,checkOutOfBounds:!0}),realDivConfig={kernelName:RealDiv,backendName:"webgl",kernelFunc:realDiv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SUB="return a - b;",sub=binaryKernelFunc({opSnippet:SUB,packedOpSnippet:SUB,supportsComplex:!0,cpuKernelImpl:subImplCPU}),subConfig={kernelName:Sub,backendName:"webgl",kernelFunc:sub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax(o){const{inputs:e,backend:s,attrs:i}=o,{logits:a}=e,{dim:d}=i,h=parseAxisParam([d],a.shape),b=max({inputs:{x:a},backend:s,attrs:{reductionIndices:h,keepDims:!1}}),_=expandShapeToKeepDim(b.shape,h),j=reshape({inputs:{x:b},backend:s,attrs:{shape:_}}),_e=sub({inputs:{a,b:j},backend:s}),g=exp({inputs:{x:_e},backend:s}),c=sum({inputs:{x:g},backend:s,attrs:{axis:h,keepDims:!1}}),$=reshape({inputs:{x:c},backend:s,attrs:{shape:_}}),et=realDiv({inputs:{a:g,b:$},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(_e),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo($),et}const softmaxConfig={kernelName:Softmax$2,backendName:"webgl",kernelFunc:softmax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial(o){const{inputs:e,backend:s,attrs:i}=o,{logits:a}=e,{numSamples:d,seed:h,normalized:b}=i,_=b?a:softmax({inputs:{logits:a},backend:s,attrs:{dim:a.shape.length-1}}),j=_.shape[0],_e=_.shape[1],g=new MultinomialProgram(j,_e,d),c=[[h]],$=s.runWebGLProgram(g,[_],"int32",c);return b||s.disposeIntermediateTensorInfo(_),$}const multinomialConfig={kernelName:Multinomial,backendName:"webgl",kernelFunc:multinomial};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEG=CHECK_NAN_SNIPPET$1+`
  return -x;
`,NEG_PACKED=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function neg(o){const{inputs:e,backend:s}=o,{x:i}=e;if(s.shouldExecuteOnCPU([i])){const d=s.texData.get(i.dataId),[h,b]=negImplCPU(d.values,i.shape,i.dtype);return s.makeTensorInfo(b,i.dtype,h)}let a;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new UnaryOpPackedProgram(i.shape,NEG_PACKED):a=new UnaryOpProgram(i.shape,NEG),s.runWebGLProgram(a,[i],i.dtype)}const negConfig={kernelName:Neg,backendName:"webgl",kernelFunc:neg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3(o){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_}=i,j=s.readSync(a.dataId),_e=s.readSync(d.dataId),{selectedIndices:g}=nonMaxSuppressionV3Impl(j,_e,h,b,_);return s.makeTensorInfo([g.length],"int32",new Int32Array(g))}const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"webgl",kernelFunc:nonMaxSuppressionV3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4(o){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_,padToMaxOutputSize:j}=i,_e=s.readSync(a.dataId),g=s.readSync(d.dataId),{selectedIndices:c,validOutputs:$}=nonMaxSuppressionV4Impl(_e,g,h,b,_,j);return[s.makeTensorInfo([c.length],"int32",new Int32Array(c)),s.makeTensorInfo([],"int32",new Int32Array([$]))]}const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"webgl",kernelFunc:nonMaxSuppressionV4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5(o){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:s,attrs:i}=o,{boxes:a,scores:d}=e,{maxOutputSize:h,iouThreshold:b,scoreThreshold:_,softNmsSigma:j}=i,_e=s.readSync(a.dataId),g=s.readSync(d.dataId),c=h,$=b,et=_,tt=j,{selectedIndices:nt,selectedScores:rt}=nonMaxSuppressionV5Impl(_e,g,c,$,et,tt);return[s.makeTensorInfo([nt.length],"int32",new Int32Array(nt)),s.makeTensorInfo([rt.length],"float32",new Float32Array(rt))]}const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"webgl",kernelFunc:nonMaxSuppressionV5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OneHotProgram{constructor(e,s,i,a){this.variableNames=["indices"],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${i}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHot=o=>{const{inputs:e,backend:s,attrs:i}=o,{indices:a}=e,{dtype:d,depth:h,onValue:b,offValue:_}=i,j=sizeFromShape(a.shape),_e=new OneHotProgram(j,h,b,_),g=reshape({inputs:{x:a},backend:s,attrs:{shape:[j]}}),c=s.runWebGLProgram(_e,[g],d);s.disposeIntermediateTensorInfo(g);const $=[...a.shape,h],et=reshape({inputs:{x:c},backend:s,attrs:{shape:$}});return s.disposeIntermediateTensorInfo(c),et},oneHotConfig={kernelName:OneHot,backendName:"webgl",kernelFunc:oneHot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike(o){const{inputs:e,backend:s}=o,{x:i}=e;if(i.dtype==="complex64"){const a=real({inputs:{input:i},backend:s}),d=zerosLike({inputs:{x:a},backend:s}),h=imag({inputs:{input:i},backend:s}),b=zerosLike({inputs:{x:h},backend:s}),_=complex({inputs:{real:d,imag:b},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),_}else return fill({attrs:{shape:i.shape,dtype:i.dtype,value:i.dtype==="string"?"":0},backend:s})}const zerosLikeConfig={kernelName:ZerosLike,backendName:"webgl",kernelFunc:zerosLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike(o){const{inputs:e,backend:s}=o,{x:i}=e;if(i.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(i.dtype==="complex64"){const a=real({inputs:{input:i},backend:s}),d=onesLike({inputs:{x:a},backend:s}),h=imag({inputs:{input:i},backend:s}),b=zerosLike({inputs:{x:h},backend:s}),_=complex({inputs:{real:d,imag:b},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),_}else return fill({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:s})}const onesLikeConfig={kernelName:OnesLike,backendName:"webgl",kernelFunc:onesLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack(o){const{inputs:e,backend:s,attrs:i}=o,{axis:a}=i;if(e.length===1)return expandDims({inputs:{input:e[0]},backend:s,attrs:{dim:a}});const d=e[0].shape,h=e[0].dtype;e.forEach(_e=>{assertShapesMatch(d,_e.shape,"All tensors passed to stack must have matching shapes"),assert$1(h===_e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const b=[],_=e.map(_e=>{const g=expandDims({inputs:{input:_e},backend:s,attrs:{dim:a}});return b.push(g),g}),j=concat({inputs:_,backend:s,attrs:{axis:a}});return b.forEach(_e=>s.disposeIntermediateTensorInfo(_e)),j}const packConfig={kernelName:Pack,backendName:"webgl",kernelFunc:pack};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadProgram{constructor(e,s,i){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=s.map((j,_e)=>j[0]+e[_e]+j[1]);const a=e.length,d=getCoordsDataType(a),h=s.map(j=>j[0]).join(","),b=s.map((j,_e)=>j[0]+e[_e]).join(","),_=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${h};
        int end = ${b};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${h});
      ${d} end = ${d}(${b});

      void main() {
        ${d} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${d} coords = outC - start;
          setOutput(getX(${_}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadPackedProgram{constructor(e,s,i){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=s.map((tt,nt)=>tt[0]+e[nt]+tt[1]);const a=e.length,d=getCoordsDataType(a),h=s.map(tt=>tt[0]).join(","),b=s.map((tt,nt)=>tt[0]+e[nt]).join(","),_=getChannels("rc",a),j=getChannels("source",a),_e=`${_[a-1]} < ${this.outputShape[a-1]}`,g=a===1?"source":`vec2(${j.slice(-2).join()})`,c=[`${d} rc = outputLoc;`,`${_[a-1]} += 1;
       if(${_e}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${_[a-2]} += 1;
       if(${_[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${_[a-1]} += 1;
         if(${_e}) {`],$=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let et="";for(let tt=0,nt=a===1?2:4;tt<nt;tt++)et+=`
        ${c[tt]}
        if (${$}) {
          result[${tt}] = float(value);
        } else {
          ${d} source = rc - start;
          result[${tt}] = getChannel(getX(${j.join()}), ${g});
        }
      `;et+=a===1?"} ":"}}",this.userCode=`
      const ${d} start = ${d}(${h});
      const ${d} end = ${d}(${b});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${et}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2=o=>{const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{paddings:d,constantValue:h}=i;if(sizeFromShape(a.shape)===0){const j=d.map((_e,g)=>_e[0]+a.shape[g]+_e[1]);return fill({backend:s,attrs:{shape:j,value:h,dtype:a.dtype}})}const b=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PadPackedProgram(a.shape,d,h):new PadProgram(a.shape,d,h),_=[[h]];return s.runWebGLProgram(b,[a],a.dtype,_)},padV2Config={kernelName:PadV2,backendName:"webgl",kernelFunc:padV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const POW=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,POW_PACKED=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,pow=binaryKernelFunc({opSnippet:POW,packedOpSnippet:POW_PACKED}),powConfig={kernelName:Pow,backendName:"webgl",kernelFunc:pow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{axis:d,keepDims:h}=i,b=a.shape.length,_=[],j=parseAxisParam(d,a.shape);let _e=j;const g=getAxesPermutation(_e,b);let c=a;g!=null&&(c=transpose({inputs:{x:a},backend:s,attrs:{perm:g}}),_e=getInnerMostAxes(_e.length,b),_.push(c)),assertAxesAreInnerMostDims("prod",_e,b);let $;if(s.shouldExecuteOnCPU([c])){const et=s.texData.get(c.dataId).values,{outVals:tt,outShape:nt,outDtype:rt}=prodImplCPU(c.shape,c.dtype,et,_e);$=s.makeTensorInfo(nt,rt,tt)}else{const[et,tt]=computeOutAndReduceShapes(c.shape,_e),nt=sizeFromShape(tt),rt=reshape({inputs:{x:c},backend:s,attrs:{shape:[-1,nt]}}),ot=sumOutType(a.dtype),st=reduce(rt,ot,"prod",s);$=reshape({inputs:{x:st},backend:s,attrs:{shape:et}}),_.push(rt),_.push(st)}if(h){_.push($);const et=expandShapeToKeepDim($.shape,j);$=reshape({inputs:{x:$},backend:s,attrs:{shape:et}})}return _.forEach(et=>s.disposeIntermediateTensorInfo(et)),$}const prodConfig={kernelName:Prod,backendName:"webgl",kernelFunc:prod};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedGather(o){const{inputs:e,backend:s,attrs:i}=o,{paramsNestedSplits:a,paramsDenseValues:d,indices:h}=e,{outputRaggedRank:b}=i,_=a.map(rt=>s.readSync(rt.dataId)),j=a.map(rt=>rt.shape),_e=s.readSync(d.dataId),g=s.readSync(h.dataId),[c,$,et]=raggedGatherImplCPU(_,j,_e,d.shape,d.dtype,g,h.shape,b),tt=c.map(rt=>s.makeTensorInfo([rt.length],"int32",rt)),nt=s.makeTensorInfo(et,d.dtype,$);return tt.concat([nt])}const raggedGatherConfig={kernelName:RaggedGather,backendName:"webgl",kernelFunc:raggedGather};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedRange(o){const{inputs:e,backend:s}=o,{starts:i,limits:a,deltas:d}=e,h=s.readSync(i.dataId),b=s.readSync(a.dataId),_=s.readSync(d.dataId),[j,_e]=raggedRangeImplCPU(h,i.shape,i.dtype,b,a.shape,_,d.shape),g=s.makeTensorInfo([j.length],"int32",j),c=s.makeTensorInfo([_e.length],i.dtype,_e);return[g,c]}const raggedRangeConfig={kernelName:RaggedRange,backendName:"webgl",kernelFunc:raggedRange};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedTensorToTensor(o){const{inputs:e,backend:s,attrs:i}=o,{shape:a,values:d,defaultValue:h,rowPartitionTensors:b}=e,{rowPartitionTypes:_}=i,j=s.readSync(a.dataId),_e=s.readSync(d.dataId),g=s.readSync(h.dataId),c=b.map(nt=>s.readSync(nt.dataId)),$=b.map(nt=>nt.shape),[et,tt]=raggedTensorToTensorImplCPU(j,a.shape,_e,d.shape,d.dtype,g,h.shape,c,$,_);return s.makeTensorInfo(et,d.dtype,tt)}const raggedTensorToTensorConfig={kernelName:RaggedTensorToTensor,backendName:"webgl",kernelFunc:raggedTensorToTensor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const range=o=>{const{backend:e,attrs:s}=o,{start:i,stop:a,step:d,dtype:h}=s,b=rangeImplCPU(i,a,d,h);return e.makeTensorInfo([b.length],h,b)},rangeConfig={kernelName:Range,backendName:"webgl",kernelFunc:range};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RECIPROCAL="return 1.0 / x;",reciprocal=unaryKernelFunc({opSnippet:RECIPROCAL}),reciprocalConfig={kernelName:Reciprocal,backendName:"webgl",kernelFunc:reciprocal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : x;
`,RELU_PACKED=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu=unaryKernelFunc({opSnippet:RELU,packedOpSnippet:RELU_PACKED}),reluConfig={kernelName:Relu$1,backendName:"webgl",kernelFunc:relu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU6=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RELU6_PACKED=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu6=unaryKernelFunc({opSnippet:RELU6,packedOpSnippet:RELU6_PACKED}),relu6Config={kernelName:Relu6$1,backendName:"webgl",kernelFunc:relu6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearProgram{constructor(e,s,i,a,d){this.variableNames=["A"],this.outputShape=[];const[h,b,_,j]=e;this.outputShape=[h,s,i,j];const _e=[a&&s>1?b-1:b,a&&i>1?_-1:_],g=[a&&s>1?s-1:s,a&&i>1?i-1:i];let c;d?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${_e[0]/g[0]},
          ${_e[1]/g[1]});
      const vec2 inputShapeRC = vec2(${b}.0, ${_}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearPackedProgram{constructor(e,s,i,a,d){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[h,b,_,j]=e;this.outputShape=[h,s,i,j];const _e=[a&&s>1?b-1:b,a&&i>1?_-1:_],g=[a&&s>1?s-1:s,a&&i>1?i-1:i];let c;d?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${_e[0]/g[0]},
          ${_e[1]/g[1]},
          ${_e[1]/g[1]});
      const vec3 inputShapeRC = vec3(${b}.0, ${_}.0,
                                     ${_}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${j-1};
        bool hasNextRow = coords.z < ${i-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear(o){const{inputs:e,backend:s,attrs:i}=o,{images:a}=e,{alignCorners:d,halfPixelCenters:h,size:b}=i,[_,j]=b,_e=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(a.shape,_,j,d,h):new ResizeBilinearProgram(a.shape,_,j,d,h);return s.runWebGLProgram(_e,[a],"float32")}const resizeBilinearConfig={kernelName:ResizeBilinear,backendName:"webgl",kernelFunc:resizeBilinear};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearBackpropProgram{constructor(e,s,i){this.variableNames=["dy"],this.outputShape=[],this.outputShape=s;const[,a,d]=s,[,h,b]=e,_=[i&&h>1?a-1:a,i&&b>1?d-1:d],j=[i&&h>1?h-1:h,i&&b>1?b-1:b],_e=_[0]/j[0],g=_[1]/j[1],c=1/_e,$=1/g,et=Math.ceil(c)*2+2,tt=Math.ceil($)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${_e});
        const float widthScale = float(${g});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${$});

        const int winHeight = int(${et});
        const int winWidth = int(${tt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${h}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${b}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${d-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad(o){const{inputs:e,backend:s,attrs:i}=o,{images:a,dy:d}=e,{alignCorners:h}=i,b=new ResizeBilinearBackpropProgram(d.shape,a.shape,h);return s.runWebGLProgram(b,[d],d.dtype)}const resizeBilinearGradConfig={kernelName:ResizeBilinearGrad,backendName:"webgl",kernelFunc:resizeBilinearGrad};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborProgram{constructor(e,s,i,a,d){this.variableNames=["A"],this.outputShape=[];const[h,b,_,j]=e;this.outputShape=[h,s,i,j];const _e=[a&&s>1?b-1:b,a&&i>1?_-1:_],g=[a&&s>1?s-1:s,a&&i>1?i-1:i],c=a?"0.5":"0.0";let $;d?$="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":$="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${_e[0]/g[0]},
          ${_e[1]/g[1]});
      const vec2 inputShapeRC = vec2(${b}.0, ${_}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${$};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborPackedProgram{constructor(e,s,i,a,d){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[h,b,_,j]=e;this.outputShape=[h,s,i,j];const _e=[a&&s>1?b-1:b,a&&i>1?_-1:_],g=[a&&s>1?s-1:s,a&&i>1?i-1:i],c=a?"0.5":"0.0";let $;d?$="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":$="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${_e[0]/g[0]},
          ${_e[1]/g[1]},
          ${_e[1]/g[1]});
      const vec3 inputShapeRC = vec3(${b}.0, ${_}.0,
                                     ${_}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${$};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${j-1};
        bool hasNextRow = coords.z < ${i-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor(o){const{inputs:e,backend:s,attrs:i}=o,{images:a}=e,{alignCorners:d,halfPixelCenters:h,size:b}=i,[_,j]=b,_e=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeNearestNeighborPackedProgram(a.shape,_,j,d,h):new ResizeNearestNeighborProgram(a.shape,_,j,d,h);return s.runWebGLProgram(_e,[a],a.dtype)}const resizeNearestNeighborConfig={kernelName:ResizeNearestNeighbor,backendName:"webgl",kernelFunc:resizeNearestNeighbor};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeigborBackpropProgram{constructor(e,s,i){this.variableNames=["dy"],this.outputShape=[],this.outputShape=s;const[,a,d]=s,[,h,b]=e,_=[i&&h>1?a-1:a,i&&b>1?d-1:d],j=[i&&h>1?h-1:h,i&&b>1?b-1:b],_e=_[0]/j[0],g=_[1]/j[1],c=1/_e,$=1/g,et=Math.ceil(c)*2+2,tt=Math.ceil($)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${_e});
        const float widthScale = float(${g});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${$});

        const int winHeight = int(${et});
        const int winWidth = int(${tt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${h}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${b}) {
              continue;
            }

            float sourceFracRow =
              float(${_[0]}) *
                (float(dyR) / float(${j[0]}));

            float sourceFracCol =
                float(${_[1]}) *
                  (float(dyC) / float(${j[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${i} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${d}) - 1),
                ${i} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad(o){const{inputs:e,backend:s,attrs:i}=o,{images:a,dy:d}=e,{alignCorners:h}=i,b=new ResizeNearestNeigborBackpropProgram(d.shape,a.shape,h);return s.runWebGLProgram(b,[d],d.dtype)}const resizeNearestNeighborGradConfig={kernelName:ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:resizeNearestNeighborGrad};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReverseProgram{constructor(e,s){this.variableNames=["x"];const i=e.length;if(i>4)throw new Error(`WebGL backend: Reverse of rank-${i} tensor is not yet supported`);if(this.outputShape=e,i===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const a=b=>s.indexOf(b)!==-1&&e[b]!==1?`${e[b]} - coords[${b}] - 1`:`coords[${b}]`,d=e.map((b,_)=>a(_)).join(","),h=getCoordsDataType(i);this.userCode=`
      void main() {
        ${h} coords = getOutputCoords();
        setOutput(getX(${d}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReversePackedProgram{constructor(e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const i=e.length;if(i>4)throw new Error(`WebGL backend: Reverse of rank-${i} tensor is not yet supported`);this.outputShape=e;const a=getChannels("rc",i),d=`${a[i-1]} + 1 < ${this.outputShape[i-1]}`,h=`${a[i-2]} + 1 < ${this.outputShape[i-2]}`,b=getCoordsDataType(i);i===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${d}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${b} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${_(a.slice())};
          if(${d}){
            result.g = ${j(a.slice())};
          }
          if(${h}) {
            result.b = ${_e(a.slice())};
            if(${d}) {
              result.a = ${g(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function _(et){return c(et)}function j(et){return et[i-1]="("+et[i-1]+" + 1)",c(et)}function _e(et){return et[i-2]="("+et[i-2]+" + 1)",c(et)}function g(et){return et[i-1]="("+et[i-1]+" + 1)",et[i-2]="("+et[i-2]+" + 1)",c(et)}function c(et){const tt=e.map((ot,st)=>$(st,et)),nt=tt.join(","),rt=tt.slice(-2).join(",");return`getChannel(getX(${nt}), vec2(${rt}))`}function $(et,tt){return s.indexOf(et)!==-1&&e[et]!==1?`${e[et]} - ${tt[et]} - 1`:`${tt[et]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{dims:d}=i,h=a.shape.length,b=parseAxisParam(d,a.shape);if(h===0)return identity({inputs:{x:a},backend:s});const _=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ReversePackedProgram(a.shape,b):new ReverseProgram(a.shape,b);return s.runWebGLProgram(_,[a],a.dtype)}const reverseConfig={kernelName:Reverse,backendName:"webgl",kernelFunc:reverse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RotateProgram{constructor(e,s){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const i=e[1],a=e[2];this.outputShape=e;let d="";typeof s=="number"?d=`float outputValue = ${s.toFixed(2)};`:d=`
        vec3 fill = vec3(${s.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${d}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${i}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:o,attrs:e,backend:s})=>{const{image:i}=o,{radians:a,fillValue:d,center:h}=e,b=s,_=new RotateProgram(i.shape,d),[j,_e]=getImageCenter(h,i.shape[1],i.shape[2]),g=[[j,_e,Math.sin(a),Math.cos(a)]];return b.runWebGLProgram(_,[i],i.dtype,g)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ROUND=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,round=unaryKernelFunc({opSnippet:ROUND}),roundConfig={kernelName:Round,backendName:"webgl",kernelFunc:round};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RSQRT="return inversesqrt(x);",rsqrt=unaryKernelFunc({opSnippet:RSQRT,cpuKernelImpl:rsqrtImplCPU}),rsqrtConfig={kernelName:Rsqrt,backendName:"webgl",kernelFunc:rsqrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterProgram{constructor(e,s,i,a,d,h,b=!0,_=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=h;const j=getCoordsDataType(d.length),_e=getCoordsDataType(h.length);let g="";i===1?g="i":i===2&&(g="i, j");const c=`getIndices(${g})`;let $="";a===1?$="i":a===2&&($="i, coords[1]");const et=`getUpdates(${$})`;let tt="";_&&(tt="coords[0], coords[1]");const nt=`getDefaultValue(${tt})`,rt=s>1?"strides[j]":"strides";this.userCode=`
        ${j} strides = ${j}(${d});

        void main() {
          ${_e} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${s}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${rt};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${et};
              found = true;
            }
          }
          setOutput(mix(${nt}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterPackedProgram{constructor(e,s,i,a,d,h,b=!0,_=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=h;const j=getCoordsDataType(d.length),_e=getCoordsDataType(h.length);let g="";i===1?g="i":i===2&&(g="i, j");const c=`getIndices(${g})`;let $="";a===1?$="i":a===2&&($="i, coords[1]");const et=`getUpdates(${$})`;let tt="";_&&(tt="coords[0], coords[1]");const nt=`getDefaultValue(${tt})`,rt=s>1?"strides[j]":"strides",ot=s>1?"strides[j + 1]":"strides";this.userCode=`
        ${j} strides = ${j}(${d});

        void main() {
          ${_e} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${s}; j+=2) {
              ivec4 index = round(${c});
              flattenedIndex += index.xz * ${rt};
              if (j + 1 < ${s}) {
                flattenedIndex += index.yw * ${ot};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${et};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${nt}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd(o){const{inputs:e,backend:s,attrs:i}=o,{indices:a,updates:d}=e,{shape:h}=i,{sliceRank:b,numUpdates:_,sliceSize:j,strides:_e,outputSize:g}=calculateShapes(d,a,h),c=[g/j,j];if(g===0)return s.makeTensorInfo(h,a.dtype);const $=reshape({inputs:{x:a},backend:s,attrs:{shape:[_,b]}}),et=reshape({inputs:{x:d},backend:s,attrs:{shape:[_,j]}}),tt=s.makeTensorInfo([],"float32",new Float32Array([0]));let nt;env().getBool("WEBGL_PACK")?nt=new ScatterPackedProgram(_,b,$.shape.length,et.shape.length,_e,c):nt=new ScatterProgram(_,b,$.shape.length,et.shape.length,_e,c);const rt=s.runWebGLProgram(nt,[et,$,tt],et.dtype),ot=reshape({inputs:{x:rt},backend:s,attrs:{shape:h}});return s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(rt),s.disposeIntermediateTensorInfo(tt),ot}const scatterNdConfig={kernelName:ScatterNd,backendName:"webgl",kernelFunc:scatterNd};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SearchSortedProgram{constructor(e,s,i,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,i];const d="while (left < right) {",h=`for (int i = 0; i < ${Math.ceil(Math.log2(s+1))}; ++i) { if (left >= right) break;`,b=env().getNumber("WEBGL_VERSION")===2?d:h,_=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${b}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${_} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function searchSorted(o){const{inputs:e,backend:s,attrs:i}=o,{sortedSequence:a,values:d}=e,{side:h}=i,b=new SearchSortedProgram(a.shape[0],a.shape[1],d.shape[1],h),_=[[a.shape[1]]];return s.runWebGLProgram(b,[a,d],"int32",_)}const searchSortedConfig={kernelName:SearchSorted,backendName:"webgl",kernelFunc:searchSorted};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SelectProgram{constructor(e,s,i){this.variableNames=["c","a","b"],this.outputShape=s;let a,d;if(i>4)throw Error(`Where for rank ${i} is not yet supported`);if(i===1)d="resRC",a="resRC";else{const b=["resRC.x","resRC.y","resRC.z","resRC.w"],_=[],j=[];for(let _e=0;_e<s.length;_e++)j.push(`${b[_e]}`),_e<e&&_.push(`${b[_e]}`);a=_.join(),d=j.join()}const h=getCoordsDataType(i);this.userCode=`
      void main() {
        ${h} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${d}));
        } else {
          setOutput(getB(${d}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select(o){const{inputs:e,backend:s}=o,{condition:i,t:a,e:d}=e,h=new SelectProgram(i.shape.length,a.shape,a.shape.length);return s.runWebGLProgram(h,[i,a,d],upcastType(a.dtype,d.dtype))}const selectConfig={kernelName:Select,backendName:"webgl",kernelFunc:select};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${SELU_SCALEALPHA};
  float scale = ${SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,selu=unaryKernelFunc({opSnippet:SELU}),seluConfig={kernelName:Selu$1,backendName:"webgl",kernelFunc:selu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGMOID=CHECK_NAN_SNIPPET_UNARY+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,SIGMOID_PACKED=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sigmoid=unaryKernelFunc({opSnippet:SIGMOID,packedOpSnippet:SIGMOID_PACKED,cpuKernelImpl:sigmoidImplCPU}),sigmoidConfig={kernelName:Sigmoid$1,backendName:"webgl",kernelFunc:sigmoid};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGN=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sign=unaryKernelFunc({opSnippet:SIGN}),signConfig={kernelName:Sign,backendName:"webgl",kernelFunc:sign};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIN=CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,SIN_PACKED=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${CHECK_NAN_SNIPPET_PACKED}
  return result;
`,sin=unaryKernelFunc({opSnippet:SIN,packedOpSnippet:SIN_PACKED}),sinConfig={kernelName:Sin,backendName:"webgl",kernelFunc:sin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SINH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sinh=unaryKernelFunc({opSnippet:SINH}),sinhConfig={kernelName:Sinh,backendName:"webgl",kernelFunc:sinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SOFTPLUS=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,softplus=unaryKernelFunc({opSnippet:SOFTPLUS}),softplusConfig={kernelName:Softplus$1,backendName:"webgl",kernelFunc:softplus};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchND=o=>{const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{blockShape:d,paddings:h}=i;assert$1(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const b=d.reduce((rt,ot)=>rt*ot),_=[[0,0]];_.push(...h);for(let rt=1+d.length;rt<a.shape.length;++rt)_.push([0,0]);const j=[],_e=padV2({inputs:{x:a},backend:s,attrs:{paddings:_,constantValue:0}}),g=getReshaped(_e.shape,d,b,!1),c=getPermuted(g.length,d.length,!1),$=getReshapedPermuted(_e.shape,d,b,!1),et=reshape({inputs:{x:_e},backend:s,attrs:{shape:g}}),tt=transpose({inputs:{x:et},backend:s,attrs:{perm:c}}),nt=reshape({inputs:{x:tt},backend:s,attrs:{shape:$}});return j.push(_e),j.push(et),j.push(tt),j.forEach(rt=>s.disposeIntermediateTensorInfo(rt)),nt},spaceToBatchNDConfig={kernelName:SpaceToBatchND,backendName:"webgl",kernelFunc:spaceToBatchND};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRows(o){const{inputs:e,backend:s}=o,{indices:i,values:a,denseShape:d,defaultValue:h}=e;if(d.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${d.shape}`);if(i.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${i.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(h.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${h.shape}`);const b=s.readSync(i.dataId),_=s.readSync(a.dataId),j=s.readSync(d.dataId),_e=s.readSync(h.dataId)[0],[g,c,$,et,tt]=sparseFillEmptyRowsImplCPU(b,i.shape,i.dtype,_,a.dtype,j,_e);return[s.makeTensorInfo(c,i.dtype,g),s.makeTensorInfo([c[0]],a.dtype,$),s.makeTensorInfo([et.length],"bool",new Uint8Array(et.map(nt=>Number(nt)))),s.makeTensorInfo([tt.length],i.dtype,new Int32Array(tt))]}const sparseFillEmptyRowsConfig={kernelName:SparseFillEmptyRows,backendName:"webgl",kernelFunc:sparseFillEmptyRows};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshape(o){const{inputs:e,backend:s}=o,{inputIndices:i,inputShape:a,newShape:d}=e;if(i.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${i.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(d.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${d.shape}`);const h=Array.from(s.readSync(a.dataId)),b=s.readSync(i.dataId),_=Array.from(s.readSync(d.dataId)),[j,_e,g]=sparseReshapeImplCPU(b,i.shape,i.dtype,h,_);return[s.makeTensorInfo(_e,i.dtype,j),s.makeTensorInfo([g.length],d.dtype,new Int32Array(g))]}const sparseReshapeConfig={kernelName:SparseReshape,backendName:"webgl",kernelFunc:sparseReshape};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentMean(o){const{inputs:e,backend:s}=o,{data:i,indices:a,segmentIds:d}=e;if(i.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${d.shape}`);const h=s.readSync(i.dataId),b=s.readSync(a.dataId),_=s.readSync(d.dataId),[j,_e]=sparseSegmentReductionImplCPU(h,i.shape,i.dtype,b,_,!0);return s.makeTensorInfo(_e,i.dtype,j)}const sparseSegmentMeanConfig={kernelName:SparseSegmentMean,backendName:"webgl",kernelFunc:sparseSegmentMean};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentSum(o){const{inputs:e,backend:s}=o,{data:i,indices:a,segmentIds:d}=e;if(i.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${d.shape}`);const h=s.readSync(i.dataId),b=s.readSync(a.dataId),_=s.readSync(d.dataId),[j,_e]=sparseSegmentReductionImplCPU(h,i.shape,i.dtype,b,_);return s.makeTensorInfo(_e,i.dtype,j)}const sparseSegmentSumConfig={kernelName:SparseSegmentSum,backendName:"webgl",kernelFunc:sparseSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense(o){const{inputs:e,backend:s,attrs:i}=o,{sparseIndices:a,sparseValues:d,defaultValue:h}=e,{outputShape:b}=i,{sliceRank:_,numUpdates:j,sliceSize:_e,strides:g,outputSize:c}=calculateShapes(d,a,b),$=!1;if(d.dtype==="string"){const rt=s.bufferSync(a),ot=s.bufferSync(d),st=decodeString(s.readSync(h.dataId)[0]),it=scatterImplCPU(rt,ot,b,c,_e,j,_,g,st,$);return s.makeTensorInfo(b,it.dtype,it.values)}const et=new ScatterProgram(j,_,a.shape.length,d.shape.length,g,[c,1],$),tt=s.runWebGLProgram(et,[d,a,h],d.dtype),nt=reshape({inputs:{x:tt},backend:s,attrs:{shape:b}});return s.disposeIntermediateTensorInfo(tt),nt}const sparseToDenseConfig={kernelName:SparseToDense,backendName:"webgl",kernelFunc:sparseToDense};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{numOrSizeSplits:d,axis:h}=i,b=parseAxisParam(h,a.shape)[0],_=prepareSplitSize(a,d,b),j=a.shape.length,_e=new Array(j).fill(0),g=a.shape.slice();return _.map(c=>{const $=[...g];$[b]=c;const et=slice({inputs:{x:a},backend:s,attrs:{begin:_e,size:$}});return _e[b]+=c,et})}const splitVConfig={kernelName:SplitV,backendName:"webgl",kernelFunc:splitV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQRT="return sqrt(x);",sqrt=unaryKernelFunc({opSnippet:SQRT,packedOpSnippet:SQRT,cpuKernelImpl:sqrtImplCPU}),sqrtConfig={kernelName:Sqrt,backendName:"webgl",kernelFunc:sqrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARE="return x * x;",square=unaryKernelFunc({opSnippet:SQUARE}),squareConfig={kernelName:Square,backendName:"webgl",kernelFunc:square};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARED_DIFFERENCE="return (a - b) * (a - b);",squaredDifference=binaryKernelFunc({opSnippet:SQUARED_DIFFERENCE,packedOpSnippet:SQUARED_DIFFERENCE}),squaredDifferenceConfig={kernelName:SquaredDifference,backendName:"webgl",kernelFunc:squaredDifference};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function staticRegexReplace(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const d=s.readSync(a.dataId),h=fromUint8ToStringArray(d),b=staticRegexReplaceImplCPU(h,"string",i);return s.makeTensorInfo(a.shape,"string",b)}const staticRegexReplaceConfig={kernelName:StaticRegexReplace,backendName:"webgl",kernelFunc:staticRegexReplace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step({inputs:o,attrs:e,backend:s}){const{x:i}=o,a=CHECK_NAN_SNIPPET$1+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,d=new UnaryOpProgram(i.shape,a);return s.runWebGLProgram(d,[i],i.dtype)}const stepConfig={kernelName:Step,backendName:"webgl",kernelFunc:step};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StridedSliceProgram{constructor(e,s,i){this.variableNames=["x"],this.outputShape=i;const a=i.length,d=getCoordsDataType(i.length),h=getCoordsDataType(i.length);let b="";if(a===1)b="coords * strides + begin";else{let _=0;b=i.map((j,_e)=>(_++,i.length===1?`coords * strides[${_e}] + begin[${_e}]`:`coords[${_-1}] * strides[${_e}] + begin[${_e}]`)).join(",")}this.userCode=`
      ${d} begin = ${d}(${e});
      ${d} strides = ${d}(${s});

      void main() {
        ${h} coords = getOutputCoords();
        setOutput(getX(${b}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{begin:d,end:h,strides:b,beginMask:_,endMask:j,ellipsisMask:_e,newAxisMask:g,shrinkAxisMask:c}=i,{finalShapeSparse:$,finalShape:et,isIdentity:tt,sliceDim0:nt,isSimpleSlice:rt,begin:ot,end:st,strides:it}=sliceInfo(a.shape,d,h,b,_,j,_e,g,c);let at;if(tt)at=reshape({inputs:{x:a},backend:s,attrs:{shape:et}});else if(nt||rt){assert$1(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const ut=computeOutShape$2(ot,st,it),ct=slice({inputs:{x:a},backend:s,attrs:{begin:ot,size:ut}});at=reshape({inputs:{x:ct},backend:s,attrs:{shape:et}}),s.disposeIntermediateTensorInfo(ct)}else if(s.shouldExecuteOnCPU([a])){const ct=s.readSync(a.dataId),pt=buffer(a.shape,a.dtype,ct),ht=stridedSliceImplCPU($,pt,it,ot);at=s.makeTensorInfo(et,a.dtype,ht.values)}else{const ct=new StridedSliceProgram(ot,it,$);at=s.runWebGLProgram(ct,[a],a.dtype)}const lt=reshape({inputs:{x:at},backend:s,attrs:{shape:et}});return s.disposeIntermediateTensorInfo(at),lt}const stridedSliceConfig={kernelName:StridedSlice,backendName:"webgl",kernelFunc:stridedSlice};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringNGrams(o){const{inputs:e,backend:s,attrs:i}=o,{separator:a,nGramWidths:d,leftPad:h,rightPad:b,padWidth:_,preserveShortSequences:j}=i,{data:_e,dataSplits:g}=e,c=s.readSync(_e.dataId),$=s.readSync(g.dataId),[et,tt]=stringNGramsImplCPU(c,$,a,d,h,b,_,j);return[s.makeTensorInfo([et.length],"string",et),s.makeTensorInfo(g.shape,"int32",tt)]}const stringNGramsConfig={kernelName:StringNGrams,backendName:"webgl",kernelFunc:stringNGrams};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringSplit(o){const{inputs:e,backend:s,attrs:i}=o,{skipEmpty:a}=i,{input:d,delimiter:h}=e;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(d.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${d.shape}`);if(h.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${h.shape}`);const b=s.readSync(d.dataId),_=s.readSync(h.dataId)[0],[j,_e,g]=stringSplitImplCPU(b,_,a),c=_e.length;return[s.makeTensorInfo([c,2],"int32",j),s.makeTensorInfo([c],"string",_e),s.makeTensorInfo([2],"int32",new Int32Array(g))]}const stringSplitConfig={kernelName:StringSplit,backendName:"webgl",kernelFunc:stringSplit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFast(o){const{inputs:e,backend:s,attrs:i}=o,{numBuckets:a}=i,{input:d}=e;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const h=s.readSync(d.dataId),b=stringToHashBucketFastImplCPU(h,a);return s.makeTensorInfo(d.shape,"int32",b)}const stringToHashBucketFastConfig={kernelName:StringToHashBucketFast,backendName:"webgl",kernelFunc:stringToHashBucketFast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAN="return tan(x);",tan=unaryKernelFunc({opSnippet:TAN}),tanConfig={kernelName:Tan,backendName:"webgl",kernelFunc:tan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TANH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,tanh=unaryKernelFunc({opSnippet:TANH}),tanhConfig={kernelName:Tanh$1,backendName:"webgl",kernelFunc:tanh};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensorScatterUpdate(o){const{inputs:e,backend:s,attrs:i}=o,{tensor:a,indices:d,updates:h}=e,{sliceRank:b,numUpdates:_,sliceSize:j,strides:_e,outputSize:g}=calculateShapes(h,d,a.shape),c=[g/j,j];if(g===0)return s.makeTensorInfo(a.shape,d.dtype);const $=reshape({inputs:{x:d},backend:s,attrs:{shape:[_,b]}}),et=reshape({inputs:{x:h},backend:s,attrs:{shape:[_,j]}}),tt=reshape({inputs:{x:a},backend:s,attrs:{shape:c}}),nt=new ScatterProgram(_,b,$.shape.length,et.shape.length,_e,c,!1,!0),rt=s.runWebGLProgram(nt,[et,$,tt],tt.dtype),ot=reshape({inputs:{x:rt},backend:s,attrs:{shape:a.shape}});return s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(tt),s.disposeIntermediateTensorInfo(rt),ot}const tensorScatterUpdateConfig={kernelName:TensorScatterUpdate,backendName:"webgl",kernelFunc:tensorScatterUpdate};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TileProgram{constructor(e,s){this.variableNames=["A"];const i=new Array(e.length);for(let h=0;h<i.length;h++)i[h]=e[h]*s[h];this.outputShape=i,this.rank=i.length;const a=getCoordsDataType(this.rank),d=getSourceCoords(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${d}));
      }
    `}}function getSourceCoords(o){const e=o.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${o[0]})`;const s=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],i=[];for(let a=0;a<o.length;a++)i.push(`imod(${s[a]}, ${o[a]})`);return i.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{reps:d}=i;if(a.dtype==="string"||a.shape.length>5){const _=s.readSync(a.dataId),j=a.dtype==="string"?_.map(c=>decodeString(c)):_,_e=buffer(a.shape,a.dtype,j),g=tileImplCPU(_e,d);return s.makeTensorInfo(g.shape,g.dtype,g.values)}const h=new TileProgram(a.shape,d);return s.runWebGLProgram(h,[a],a.dtype)}const tileConfig={kernelName:Tile,backendName:"webgl",kernelFunc:tile};class SwapProgram{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class MergeProgram{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function disposeIntermediateTensorInfoOrNull(o,e){e!==null&&o.disposeIntermediateTensorInfo(e)}function roundUpToPow2(o){let e=1;for(;e<o;)e*=2;return e}function topK(o){const{inputs:e,backend:s,attrs:i}=o,{x:a}=e,{k:d,sorted:h}=i,b=env().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),_=env().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),j=a.shape,_e=j[j.length-1];if(s.shouldExecuteOnCPU([a])||_e<b||d>_){const ht=s.readSync(a.dataId),[yt,xt]=topKImplCPU(ht,j,a.dtype,d,h);return[s.makeTensorInfo(yt.shape,yt.dtype,yt.values),s.makeTensorInfo(xt.shape,xt.dtype,xt.values)]}if(d===0)return j[j.length-1]=0,[s.makeTensorInfo(j,a.dtype,[]),s.makeTensorInfo(j,"int32",[])];if(_e===1)return[a,fill({attrs:{shape:j,dtype:"int32",value:0},backend:s})];const g=s.texData.get(a.dataId),c=g!==null&&g.isPacked,$=c?s.unpackTensor(a):a,tt=sizeFromShape(j)/_e,nt=reshape({inputs:{x:$},attrs:{shape:[tt,_e]},backend:s});c&&disposeIntermediateTensorInfoOrNull(s,$);const rt=roundUpToPow2(d),ot=roundUpToPow2(_e);let st=null;const it=()=>st===null?[nt,nt]:[nt,st],at=(ht,yt,xt)=>{const ft=it(),wt=new SwapProgram(xt),mt=[[_e],[st===null?1:0],[Number.NEGATIVE_INFINITY],[ht],[yt]],bt=st;st=s.runWebGLProgram(wt,ft,"int32",mt),disposeIntermediateTensorInfoOrNull(s,bt)};for(let ht=1;ht<rt;ht*=2){const yt=ht*2;for(let xt=ht;xt>=1;xt/=2)at(yt,xt,[tt,ot])}for(let ht=ot;ht>rt;ht/=2){const yt=it(),xt=new MergeProgram([tt,ht/2]),wt=[[_e],[st===null?1:0],[rt]],dt=st;st=s.runWebGLProgram(xt,yt,"int32",wt),disposeIntermediateTensorInfoOrNull(s,dt);const mt=rt/2,bt=mt*2;for(let vt=mt;vt>=1;vt/=2)at(bt,vt,st.shape)}let lt=st;st=slice({inputs:{x:st},backend:s,attrs:{begin:0,size:[tt,d]}}),disposeIntermediateTensorInfoOrNull(s,lt);let ut=gatherV2({inputs:{x:nt,indices:st},backend:s,attrs:{axis:1,batchDims:1}});disposeIntermediateTensorInfoOrNull(s,nt);const ct=j.slice(0,-1);ct.push(d),lt=st,st=reshape({inputs:{x:st},attrs:{shape:ct},backend:s}),disposeIntermediateTensorInfoOrNull(s,lt);const pt=ut;return ut=reshape({inputs:{x:ut},attrs:{shape:ct},backend:s}),disposeIntermediateTensorInfoOrNull(s,pt),[ut,st]}const topKConfig={kernelName:TopK,backendName:"webgl",kernelFunc:topK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransformProgram{constructor(e,s,i,a,d,h){this.variableNames=["Image","Transforms"],this.outputShape=h;const b=i==="nearest"?1:2;let _;switch(a){case"constant":_=1;break;case"reflect":_=2;break;case"wrap":_=3;break;case"nearest":_=4;break;default:_=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${_} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${_} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${_} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${s}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${d});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${d});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${s}));
                float mapY = mapCoord(inY, float(${e}));

                if (${b} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform(o){const{inputs:e,backend:s,attrs:i}=o,{image:a,transforms:d}=e,{interpolation:h,fillMode:b,fillValue:_,outputShape:j}=i,[_e,g,c,$]=a.shape,[et,tt]=j??[g,c],nt=[_e,et,tt,$],rt=new TransformProgram(g,c,h,b,_,nt);return s.runWebGLProgram(rt,[a,d],"float32")}const transformConfig={kernelName:Transform,backendName:"webgl",kernelFunc:transform};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique(o){const{inputs:e,attrs:s,backend:i}=o,{axis:a}=s,{x:d}=e;assertNotComplex(d,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const h=i.readSync(d.dataId),{outputValues:b,outputShape:_,indices:j}=uniqueImplCPU(h,a,d.shape,d.dtype);return[i.makeTensorInfo(_,d.dtype,b),i.makeTensorInfo([j.length],"int32",j)]}const uniqueConfig={kernelName:Unique,backendName:"webgl",kernelFunc:unique};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack(o){const{inputs:e,backend:s,attrs:i}=o,{value:a}=e;let{axis:d}=i;d<0&&(d+=a.shape.length);const h=a,b=h.shape.length,_=a.shape[d],j=new Array(b-1);let _e=0;for(let tt=0;tt<b;tt++)tt!==d&&(j[_e++]=h.shape[tt]);const g=[],c=new Array(b).fill(0),$=h.shape.slice();$[d]=1;const et=new Array(_);for(let tt=0;tt<et.length;tt++){c[d]=tt;const nt=slice({inputs:{x:h},backend:s,attrs:{begin:c,size:$}}),rt=reshape({inputs:{x:nt},backend:s,attrs:{shape:j}});et[tt]=rt,g.push(nt)}return g.forEach(tt=>s.disposeIntermediateTensorInfo(tt)),et}const unpackConfig={kernelName:Unpack,backendName:"webgl",kernelFunc:unpack};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SegmentOpProgram{constructor(e,s){this.variableNames=["x","segmentIds"];const i=e.windowSize,a=e.batchSize,d=e.inSize,h=e.numSegments,b=h*Math.ceil(d/i);this.outputShape=[a,b];const _="0.0",j="sumValue",_e=Math.floor(i/4)*4,g=i%4,c=`
        sumValue += dot(values, segFilter);
    `;let $="";d%i>0&&($=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `);let et="";d%i>0&&(et=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${_};

      float getValue(int batch, int inIdx) {
        ${$}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${et}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${h})) * float(${i}));
        int currentSeg = int(mod(float(outIdx), float(${h})));

        float sumValue = 0.0;

        for (int i = 0; i < ${_e}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${_e};
        if (${g===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${g===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${g===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${j});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum(o){const{inputs:e,backend:s,attrs:i}=o,{x:a,segmentIds:d}=e,{numSegments:h}=i,b=a.shape.length,_=[];let j=0;const _e=getAxesPermutation([j],b);let g=a;_e!=null&&(g=transpose({inputs:{x:a},backend:s,attrs:{perm:_e}}),_.push(g),j=getInnerMostAxes(1,b)[0]);const c=computeOutShape(g.shape,j,h),$=sizeFromShape([g.shape[j]]),et=reshape({inputs:{x:g},backend:s,attrs:{shape:[-1,$]}});_.push(et);const tt=sumOutType(a.dtype),nt=(it,at,lt,ut,ct)=>{const pt=it.shape[0],ht=it.shape[1],yt=segOpComputeOptimalWindowSize(ht,ct),xt={windowSize:yt,inSize:ht,batchSize:pt,numSegments:ct},ft=new SegmentOpProgram(xt,at),wt=s.compileAndRun(ft,[it,lt],ut);if(_.push(wt),wt.shape[1]===ct)return wt;const dt=range({backend:s,attrs:{start:0,stop:ct,step:1,dtype:"float32"}}),mt=tile({inputs:{x:dt},backend:s,attrs:{reps:[ht/yt]}});return _.push(dt),_.push(mt),nt(wt,at,mt,ut,ct)},rt=nt(et,"unsortedSegmentSum",d,tt,h),ot=reshape({inputs:{x:rt},backend:s,attrs:{shape:c}});let st=ot;if(_e!=null){_.push(ot);const it=getUndoAxesPermutation(_e);st=transpose({inputs:{x:st},backend:s,attrs:{perm:it}})}return _.forEach(it=>s.disposeIntermediateTensorInfo(it)),st}const unsortedSegmentSumConfig={kernelName:UnsortedSegmentSum,backendName:"webgl",kernelFunc:unsortedSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs=[_fusedMatMulConfig,absConfig,acosConfig,acoshConfig,addConfig,addNConfig,allConfig,anyConfig,argMaxConfig,argMinConfig,asinConfig,asinhConfig,atanConfig,atan2Config,atanhConfig,avgPoolConfig,avgPool3DConfig,avgPool3DGradConfig,avgPoolGradConfig,batchMatMulConfig,batchNormConfig,batchToSpaceNDConfig,bincountConfig,bitwiseAndConfig,broadcastArgsConfig,castConfig,ceilConfig,clipByValueConfig,complexConfig,complexAbsConfig,concatConfig,conv2DConfig,conv2DBackpropFilterConfig,conv2DBackpropInputConfig,conv3DConfig,conv3DBackpropFilterV2Config,conv3DBackpropInputConfig,cosConfig,coshConfig,cropAndResizeConfig,cumprodConfig,cumsumConfig,denseBincountConfig,depthToSpaceConfig,depthwiseConv2dNativeConfig,depthwiseConv2dNativeBackpropFilterConfig,depthwiseConv2dNativeBackpropInputConfig,diagConfig,dilation2DConfig,einsumConfig,eluConfig,eluGradConfig,equalConfig,erfConfig,expConfig,expandDimsConfig,expm1Config,fftConfig,fillConfig,flipLeftRightConfig,floorConfig,floorDivConfig,fromPixelsConfig,fusedConv2DConfig,fusedDepthwiseConv2DConfig,gatherNdConfig,gatherV2Config,greaterConfig,greaterEqualConfig,identityConfig,ifftConfig,imagConfig,isFiniteConfig,isInfConfig,isNaNConfig,leakyReluConfig,lessConfig,lessEqualConfig,linSpaceConfig,logConfig,log1pConfig,logicalAndConfig,logicalNotConfig,logicalOrConfig,LRNConfig,LRNGradConfig,maxConfig,maximumConfig,maxPoolConfig,maxPool3DConfig,maxPool3DGradConfig,maxPoolGradConfig,maxPoolWithArgmaxConfig,meanConfig,minConfig,minimumConfig,mirrorPadConfig,modConfig,multinomialConfig,multiplyConfig,negConfig,nonMaxSuppressionV3Config,nonMaxSuppressionV4Config,nonMaxSuppressionV5Config,notEqualConfig,oneHotConfig,onesLikeConfig,packConfig,padV2Config,powConfig,preluConfig,prodConfig,raggedGatherConfig,raggedRangeConfig,raggedTensorToTensorConfig,rangeConfig,realConfig,realDivConfig,reciprocalConfig,reluConfig,relu6Config,reshapeConfig,resizeBilinearConfig,resizeBilinearGradConfig,resizeNearestNeighborConfig,resizeNearestNeighborGradConfig,reverseConfig,rotateWithOffsetConfig,roundConfig,rsqrtConfig,scatterNdConfig,searchSortedConfig,selectConfig,seluConfig,sigmoidConfig,signConfig,sinConfig,sinhConfig,sliceConfig,softmaxConfig,softplusConfig,spaceToBatchNDConfig,sparseFillEmptyRowsConfig,sparseReshapeConfig,sparseSegmentMeanConfig,sparseSegmentSumConfig,sparseToDenseConfig,splitVConfig,sqrtConfig,squareConfig,squaredDifferenceConfig,staticRegexReplaceConfig,stepConfig,stridedSliceConfig,stringNGramsConfig,stringSplitConfig,stringToHashBucketFastConfig,subConfig,sumConfig,tanConfig,tanhConfig,tensorScatterUpdateConfig,tileConfig,topKConfig,transformConfig,transposeConfig,uniqueConfig,unpackConfig,unsortedSegmentSumConfig,zerosLikeConfig];for(const o of kernelConfigs)registerKernel(o);const decoderModelPath="/models/sam_vit_b_01ec64.decoder.onnx",encoderModelPath="/models/sam_vit_b_01ec64.encoder.preprocess.quant.onnx";function SegmentationComponent(){const[o,e]=reactExports.useState("-"),[s,i]=reactExports.useState(),a=reactExports.useRef(null),[d,h]=reactExports.useState(null),[b,_]=reactExports.useState(),j=a.current,_e=j==null?void 0:j.getContext("2d");function g(rt){var st;const ot=(st=rt.target.files)==null?void 0:st[0];if(ot){const it=URL.createObjectURL(ot);c(it)}}function c(rt){const ot=new Image;ot.onload=()=>tt(rt),ot.src=rt}const $=reactExports.useCallback((rt,ot)=>{!j||!b||!_e||(_e.clearRect(0,0,j.width,j.height),j.width=b.width,j.height=b.height,_e.putImageData(b,0,0),rt&&ot&&(_e.fillStyle="green",_e.fillRect(rt,ot,10,10)))},[j,_e,b]);reactExports.useEffect(()=>{$()},[$,b]);const et=reactExports.useCallback(async rt=>{if(!j||!_e||!d)return;const ot=j.getBoundingClientRect(),st=rt.clientX-ot.left,it=rt.clientY-ot.top;console.log("Point input :",st,it),e(`Point (${st}, ${it}). Downloading the decoder model if needed and generating mask...`),console.log("Canvas dimensions:",j.width,j.height),$(st,it);const at=new ort_minExports.Tensor(new Float32Array([st,it,0,0]),[1,2,2]),lt=new ort_minExports.Tensor(new Float32Array([0,-1]),[1,2]),ut=new ort_minExports.Tensor(new Float32Array(256*256),[1,1,256,256]),ct=new ort_minExports.Tensor(new Float32Array([0]),[1]),pt=new ort_minExports.Tensor(new Float32Array([j.height,j.width]),[2]),ht={image_embeddings:d,point_coords:at,point_labels:lt,mask_input:ut,has_mask_input:ct,orig_im_size:pt},yt=await ort_minExports.InferenceSession.create(decoderModelPath);console.log("Decoder session",yt),console.log("Generating mask...");const xt=Date.now(),ft=await yt.run(ht);console.log("Generated mask:",ft);const wt=ft.masks.toImageData();_e.globalAlpha=.5;const dt=await createImageBitmap(wt);console.log("imageBitmap",dt.width,dt.height),_e.drawImage(dt,0,0),i(ft);const mt=Date.now();console.log(`Generating masks took : ${(mt-xt)/1e3} seconds`),e("Mask generated. Click on the image to generate a new mask")},[j,_e,$,d]),tt=reactExports.useCallback(async rt=>{const ot=new Image;ot.src=rt,e(`Image size ${ot.width}x${ot.height}. Downloading the encoder model if not cached and generating embedding...`);const st=Date.now(),it=ot.height,at=ot.width;let lt,ut;it>at?(lt=1024,ut=Math.round(at/it*1024)):(ut=1024,lt=Math.round(it/at*1024));const pt=(await ort_minExports.Tensor.fromImage(ot,{resizedHeight:lt,resizedWidth:ut})).toImageData();let ht=await ort_minExports.Tensor.fromImage(pt);_(ht.toImageData());let yt=tensor(ht.data,ht.dims);yt=yt.reshape([3,lt,ut]),yt=yt.transpose([1,2,0]).mul(255),yt=yt.pad([[0,1024-lt],[0,1024-ut],[0,0]]),ht=new ort_minExports.Tensor(yt.dataSync(),yt.shape),console.log("Resized image tensor",ht.dims);const xt=Date.now();console.log(`Image preprocessing took : ${(xt-st)/1e3} seconds`);const ft=Date.now(),wt=await ort_minExports.InferenceSession.create(encoderModelPath),dt=Date.now();console.log("Encoder Session",wt),console.log(`Creating encoder session took : ${(dt-ft)/1e3} seconds`);const mt={input_image:ht};console.log("Generating image embedding...");const bt=Date.now(),vt=await wt.run(mt);console.log("Encoding result:",vt),h(vt.image_embeddings);const Tt=Date.now();console.log(`Generating image embedding took : ${(Tt-bt)/1e3} seconds`),e(`Embedding generated in : ${(Tt-bt)/1e3} seconds. Click on the image to generate a mask`)},[]);function nt(){return s?(console.log(s.iou_predictions),jsxRuntimeExports.jsxs("div",{children:[jsxRuntimeExports.jsx("div",{className:"text-xl pl-2 pt-2",children:"Masks :"}),jsxRuntimeExports.jsxs("div",{children:["Data : ",s.masks.data.slice(0,20).toString()]}),jsxRuntimeExports.jsxs("div",{children:["Size : ",s.masks.size]}),jsxRuntimeExports.jsxs("div",{children:["Dims : ",s.masks.dims.toString()]}),jsxRuntimeExports.jsx("div",{className:"text-xl pl-2 pt-2",children:"Low resolution masks :"}),jsxRuntimeExports.jsxs("div",{children:["Data : ",s.low_res_masks.data.slice(0,20).toString()]}),jsxRuntimeExports.jsxs("div",{children:["Size : ",s.low_res_masks.size]}),jsxRuntimeExports.jsxs("div",{children:["Dims : ",s.low_res_masks.dims.toString()]}),jsxRuntimeExports.jsx("div",{className:"text-xl pl-2 pt-2",children:"IoU predictions :"}),jsxRuntimeExports.jsxs("div",{children:["Data : ",s.iou_predictions.data.toString()]}),jsxRuntimeExports.jsxs("div",{children:["Size : ",s.iou_predictions.size]}),jsxRuntimeExports.jsxs("div",{children:["Dims : ",s.iou_predictions.dims.toString()]})]})):jsxRuntimeExports.jsx("div",{children:"-"})}return jsxRuntimeExports.jsxs("div",{className:"w-screen px-10 flex flex-col",children:[jsxRuntimeExports.jsx("div",{className:"p-5 text-5xl",children:"Segment Anything with tfjs and ort"}),jsxRuntimeExports.jsx("div",{className:"p-3",children:jsxRuntimeExports.jsx("input",{type:"file",onChange:g})}),jsxRuntimeExports.jsxs("div",{className:"p-3",children:[jsxRuntimeExports.jsx("div",{className:"text-2xl",children:"Status :"}),jsxRuntimeExports.jsx("div",{children:o})]}),jsxRuntimeExports.jsx("div",{className:"p-3",children:jsxRuntimeExports.jsx("canvas",{ref:a,onClick:et})}),jsxRuntimeExports.jsxs("div",{className:"p-3",children:[jsxRuntimeExports.jsx("div",{className:"text-2xl",children:"Generated masks :"}),jsxRuntimeExports.jsx("div",{className:"",children:nt()})]})]})}function App(){return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment,{children:jsxRuntimeExports.jsx(SegmentationComponent,{})})}client.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(React.StrictMode,{children:jsxRuntimeExports.jsx(App,{})}));
